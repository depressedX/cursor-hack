
syntax = "proto3";

package aiserver.v1;

import "utils.proto";
import "tools.proto";

// 因为还不能检测是否依赖这个 proto 文件，所以先手动 import 一下
import "google/protobuf/timestamp.proto";



      
service AiProjectService {

  rpc AiProjectAgentInit(AiProjectAgentInitRequest) returns (AiProjectClarificationResponse);

  rpc AiProjectClarification(AiProjectClarificationRequest) returns (AiProjectClarificationResponse);

  rpc AiProjectPlan(AiProjectAgentPlanRequest) returns (AiProjectAgentPlanResponse);

  rpc AiProjectPlanFeedback(AiProjectPlanFeedbackRequest) returns (AiProjectPlanFeedbackResponse);

  rpc AiProjectBreakdown(AiProjectBreakdownRequest) returns (AiProjectBreakdownResponse);

  rpc AiProjectBreakdownFeedback(AiProjectBreakdownFeedbackRequest) returns (AiProjectBreakdownFeedbackResponse);

  rpc AiProjectStep(AiProjectStepRequest) returns (AiProjectStepResponseWrapped);

  rpc AiProjectStepFeedback(AiProjectStepFeedbackRequest) returns (AiProjectStepFeedbackResponseWrapped);
}


enum AiProjectStepType {
  AI_PROJECT_STEP_TYPE_UNSPECIFIED = 0;
  AI_PROJECT_STEP_TYPE_READ_WRITE_FILE = 1;
  AI_PROJECT_STEP_TYPE_RUN_TERM = 2;
  AI_PROJECT_STEP_TYPE_CREATE_RM_FILES = 3;
}



message AiProjectAgentInitRequest {
  ModelDetails model_details = 1;
  string prompt = 2;
  
}
  


message MessagePayload {
  string full_user_message = 1;
  string full_bot_message = 2;
  
}
  


message AiProjectClarification {
  string output = 1;
  string thought = 2;
  MessagePayload message_payload = 3;
  
}
  


message AiProjectClarificationRequest {
  ModelDetails model_details = 1;
  string clarification_response = 2;
  PureMessage previous_messages = 3;
  
}
  


message AiProjectClarificationResponse {
  AiProjectClarification clarification = 1;
  bool repeat_clarification = 2;
  
}
  


message AiProjectAgentPlanRequest {
  ModelDetails model_details = 1;
  PureMessage previous_messages = 3;
  
}
  


message AiProjectAgentPlanResponse {
  string thought = 1;
  string output = 2;
  MessagePayload message_payload = 3;
  
}
  


message AiProjectPlanFeedbackRequest {
  ModelDetails model_details = 1;
  PureMessage previous_messages = 2;
  string feedback_or_progress = 3;
  bool force_move_to_next_step = 4;
  
}
  


message AiProjectPlanFeedbackResponse {
  AiProjectAgentPlanResponse revised_plan = 1;
  bool repeat_feedback = 2;
  
}
  


message AiProjectBreakdownRequest {
  ModelDetails model_details = 1;
  string description = 2;
  string spec = 3;
  
}
  


message AiProjectBreakdownResponse {
  string thought = 1;
  Step step = 2;
  MessagePayload message_payload = 3;
  
  message Step {
    int32 step_number = 1;
    string step_description = 2;
    AiProjectStepType step_type = 3;
    
  }
    
}
  


message AiProjectBreakdownFeedbackRequest {
  ModelDetails model_details = 1;
  PureMessage previous_messages = 2;
  string feedback_or_progress = 3;
  bool force_move_to_next_step = 4;
  
}
  


message AiProjectBreakdownFeedbackResponse {
  AiProjectBreakdownResponse revised_breakdown = 1;
  bool repeat_feedback = 2;
  
}
  


message AiProjectStepRequest {
  ModelDetails model_details = 1;
  string step_description = 2;
  string project_plan = 3;
  string project_breakdown = 4;
  AiProjectStepType step_type = 5;
  ShellType shell_type = 6;
  
}
  


message AiProjectStepResponse {
  string thought = 1;
  string output = 2;
  MessagePayload message_payload = 3;
  StepPayload step_payload = 5;
  AiProjectStepType step_type = 4;
  
  message WriteCode {
    string filename = 1;
    
  }
    
  
  
  message ReviseCode {
    string thought = 1;
    
  }
    
  
  
  message RunTerm {
    string command_batch_uuid = 1;
    string command = 2;
    string response = 3;
    string text = 4;
    
  }
    
  
  
  message CreatingFiles {
    string filename = 1;
    string directory = 2;
    
  }
    
  
  
  message Nothing {
    
  }
    
  
  
  message StepPayload {
    WriteCode write_code = 5;
    RunTerm run_term = 6;
    CreatingFiles creating_files = 7;
    ReviseCode revise_code = 8;
    
  }
    
}
  


message AiProjectStepResponseWrapped {
  AiProjectStepResponse real_response = 1;
  string background_task_uuid = 2;
  
}
  


message AiProjectStepFeedbackRequest {
  ModelDetails model_details = 1;
  string step_description = 2;
  string project_plan = 3;
  string project_breakdown = 4;
  AiProjectStepType step_type = 5;
  ShellType shell_type = 6;
  PureMessage previous_feedback_messages = 7;
  bool force_move_to_next_step = 8;
  ModifyCodePayload modify_code_payload = 9;
  
  message ModifyCodePayload {
    string files_to_modify = 1;
    string feedback_text = 2;
    
  }
    
}
  


message AiProjectStepFeedbackResponse {
  AiProjectStepResponse response_from_feedback = 1;
  bool repeat_feedback = 2;
  
}
  


message AiProjectStepFeedbackResponseWrapped {
  AiProjectStepFeedbackResponse real_response = 1;
  string background_task_uuid = 2;
  
}
  


message AiProjectAgentWriteCode {
  string code = 2;
  string path = 3;
  MessagePayload message_payload = 4;
  
}
  

