/*!--------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/ var Ef = function (
	t,
	e,
) {
	return (
		(Ef =
			Object.setPrototypeOf ||
			({ __proto__: [] } instanceof Array &&
				function (i, s) {
					i.__proto__ = s;
				}) ||
			function (i, s) {
				for (var r in s)
					Object.prototype.hasOwnProperty.call(s, r) && (i[r] = s[r]);
			}),
		Ef(t, e)
	);
};
export function __extends(t, e) {
	if (typeof e != "function" && e !== null)
		throw new TypeError(
			"Class extends value " + String(e) + " is not a constructor or null",
		);
	Ef(t, e);
	function i() {
		this.constructor = t;
	}
	t.prototype =
		e === null ? Object.create(e) : ((i.prototype = e.prototype), new i());
}
export var __assign = function () {
	return (
		(__assign =
			Object.assign ||
			function (e) {
				for (var i, s = 1, r = arguments.length; s < r; s++) {
					i = arguments[s];
					for (var n in i)
						Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
				}
				return e;
			}),
		__assign.apply(this, arguments)
	);
};
export function __rest(t, e) {
	var i = {};
	for (var s in t)
		Object.prototype.hasOwnProperty.call(t, s) &&
			e.indexOf(s) < 0 &&
			(i[s] = t[s]);
	if (t != null && typeof Object.getOwnPropertySymbols == "function")
		for (var r = 0, s = Object.getOwnPropertySymbols(t); r < s.length; r++)
			e.indexOf(s[r]) < 0 &&
				Object.prototype.propertyIsEnumerable.call(t, s[r]) &&
				(i[s[r]] = t[s[r]]);
	return i;
}
export function __decorate(t, e, i, s) {
	var r = arguments.length,
		n =
			r < 3 ? e : s === null ? (s = Object.getOwnPropertyDescriptor(e, i)) : s,
		o;
	if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
		n = Reflect.decorate(t, e, i, s);
	else
		for (var a = t.length - 1; a >= 0; a--)
			(o = t[a]) && (n = (r < 3 ? o(n) : r > 3 ? o(e, i, n) : o(e, i)) || n);
	return r > 3 && n && Object.defineProperty(e, i, n), n;
}
export function __param(t, e) {
	return function (i, s) {
		e(i, s, t);
	};
}
export function __esDecorate(t, e, i, s, r, n) {
	function o(y) {
		if (y !== void 0 && typeof y != "function")
			throw new TypeError("Function expected");
		return y;
	}
	for (
		var a = s.kind,
			c = a === "getter" ? "get" : a === "setter" ? "set" : "value",
			l = !e && t ? (s.static ? t : t.prototype) : null,
			u = e || (l ? Object.getOwnPropertyDescriptor(l, s.name) : {}),
			d,
			f = !1,
			p = i.length - 1;
		p >= 0;
		p--
	) {
		var v = {};
		for (var g in s) v[g] = g === "access" ? {} : s[g];
		for (var g in s.access) v.access[g] = s.access[g];
		v.addInitializer = function (y) {
			if (f)
				throw new TypeError(
					"Cannot add initializers after decoration has completed",
				);
			n.push(o(y || null));
		};
		var b = (0, i[p])(a === "accessor" ? { get: u.get, set: u.set } : u[c], v);
		if (a === "accessor") {
			if (b === void 0) continue;
			if (b === null || typeof b != "object")
				throw new TypeError("Object expected");
			(d = o(b.get)) && (u.get = d),
				(d = o(b.set)) && (u.set = d),
				(d = o(b.init)) && r.unshift(d);
		} else (d = o(b)) && (a === "field" ? r.unshift(d) : (u[c] = d));
	}
	l && Object.defineProperty(l, s.name, u), (f = !0);
}
export function __runInitializers(t, e, i) {
	for (var s = arguments.length > 2, r = 0; r < e.length; r++)
		i = s ? e[r].call(t, i) : e[r].call(t);
	return s ? i : void 0;
}
export function __propKey(t) {
	return typeof t == "symbol" ? t : "".concat(t);
}
export function __setFunctionName(t, e, i) {
	return (
		typeof e == "symbol" &&
			(e = e.description ? "[".concat(e.description, "]") : ""),
		Object.defineProperty(t, "name", {
			configurable: !0,
			value: i ? "".concat(i, " ", e) : e,
		})
	);
}
export function __metadata(t, e) {
	if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
		return Reflect.metadata(t, e);
}
export function __awaiter(t, e, i, s) {
	function r(n) {
		return n instanceof i
			? n
			: new i(function (o) {
					o(n);
				});
	}
	return new (i || (i = Promise))(function (n, o) {
		function a(u) {
			try {
				l(s.next(u));
			} catch (d) {
				o(d);
			}
		}
		function c(u) {
			try {
				l(s.throw(u));
			} catch (d) {
				o(d);
			}
		}
		function l(u) {
			u.done ? n(u.value) : r(u.value).then(a, c);
		}
		l((s = s.apply(t, e || [])).next());
	});
}
export function __generator(t, e) {
	var i = {
			label: 0,
			sent: function () {
				if (n[0] & 1) throw n[1];
				return n[1];
			},
			trys: [],
			ops: [],
		},
		s,
		r,
		n,
		o;
	return (
		(o = { next: a(0), throw: a(1), return: a(2) }),
		typeof Symbol == "function" &&
			(o[Symbol.iterator] = function () {
				return this;
			}),
		o
	);
	function a(l) {
		return function (u) {
			return c([l, u]);
		};
	}
	function c(l) {
		if (s) throw new TypeError("Generator is already executing.");
		for (; o && ((o = 0), l[0] && (i = 0)), i; )
			try {
				if (
					((s = 1),
					r &&
						(n =
							l[0] & 2
								? r.return
								: l[0]
									? r.throw || ((n = r.return) && n.call(r), 0)
									: r.next) &&
						!(n = n.call(r, l[1])).done)
				)
					return n;
				switch (((r = 0), n && (l = [l[0] & 2, n.value]), l[0])) {
					case 0:
					case 1:
						n = l;
						break;
					case 4:
						return i.label++, { value: l[1], done: !1 };
					case 5:
						i.label++, (r = l[1]), (l = [0]);
						continue;
					case 7:
						(l = i.ops.pop()), i.trys.pop();
						continue;
					default:
						if (
							((n = i.trys),
							!(n = n.length > 0 && n[n.length - 1]) &&
								(l[0] === 6 || l[0] === 2))
						) {
							i = 0;
							continue;
						}
						if (l[0] === 3 && (!n || (l[1] > n[0] && l[1] < n[3]))) {
							i.label = l[1];
							break;
						}
						if (l[0] === 6 && i.label < n[1]) {
							(i.label = n[1]), (n = l);
							break;
						}
						if (n && i.label < n[2]) {
							(i.label = n[2]), i.ops.push(l);
							break;
						}
						n[2] && i.ops.pop(), i.trys.pop();
						continue;
				}
				l = e.call(t, i);
			} catch (u) {
				(l = [6, u]), (r = 0);
			} finally {
				s = n = 0;
			}
		if (l[0] & 5) throw l[1];
		return { value: l[0] ? l[1] : void 0, done: !0 };
	}
}
export var __createBinding = Object.create
	? function (t, e, i, s) {
			s === void 0 && (s = i);
			var r = Object.getOwnPropertyDescriptor(e, i);
			(!r || ("get" in r ? !e.__esModule : r.writable || r.configurable)) &&
				(r = {
					enumerable: !0,
					get: function () {
						return e[i];
					},
				}),
				Object.defineProperty(t, s, r);
		}
	: function (t, e, i, s) {
			s === void 0 && (s = i), (t[s] = e[i]);
		};
export function __exportStar(t, e) {
	for (var i in t)
		i !== "default" &&
			!Object.prototype.hasOwnProperty.call(e, i) &&
			__createBinding(e, t, i);
}
export function __values(t) {
	var e = typeof Symbol == "function" && Symbol.iterator,
		i = e && t[e],
		s = 0;
	if (i) return i.call(t);
	if (t && typeof t.length == "number")
		return {
			next: function () {
				return (
					t && s >= t.length && (t = void 0), { value: t && t[s++], done: !t }
				);
			},
		};
	throw new TypeError(
		e ? "Object is not iterable." : "Symbol.iterator is not defined.",
	);
}
export function __read(t, e) {
	var i = typeof Symbol == "function" && t[Symbol.iterator];
	if (!i) return t;
	var s = i.call(t),
		r,
		n = [],
		o;
	try {
		for (; (e === void 0 || e-- > 0) && !(r = s.next()).done; ) n.push(r.value);
	} catch (a) {
		o = { error: a };
	} finally {
		try {
			r && !r.done && (i = s.return) && i.call(s);
		} finally {
			if (o) throw o.error;
		}
	}
	return n;
}
export function __spread() {
	for (var t = [], e = 0; e < arguments.length; e++)
		t = t.concat(__read(arguments[e]));
	return t;
}
export function __spreadArrays() {
	for (var t = 0, e = 0, i = arguments.length; e < i; e++)
		t += arguments[e].length;
	for (var s = Array(t), r = 0, e = 0; e < i; e++)
		for (var n = arguments[e], o = 0, a = n.length; o < a; o++, r++)
			s[r] = n[o];
	return s;
}
export function __spreadArray(t, e, i) {
	if (i || arguments.length === 2)
		for (var s = 0, r = e.length, n; s < r; s++)
			(n || !(s in e)) &&
				(n || (n = Array.prototype.slice.call(e, 0, s)), (n[s] = e[s]));
	return t.concat(n || Array.prototype.slice.call(e));
}
export function __await(t) {
	return this instanceof __await ? ((this.v = t), this) : new __await(t);
}
export function __asyncGenerator(t, e, i) {
	if (!Symbol.asyncIterator)
		throw new TypeError("Symbol.asyncIterator is not defined.");
	var s = i.apply(t, e || []),
		r,
		n = [];
	return (
		(r = {}),
		a("next"),
		a("throw"),
		a("return", o),
		(r[Symbol.asyncIterator] = function () {
			return this;
		}),
		r
	);
	function o(p) {
		return function (v) {
			return Promise.resolve(v).then(p, d);
		};
	}
	function a(p, v) {
		s[p] &&
			((r[p] = function (g) {
				return new Promise(function (b, y) {
					n.push([p, g, b, y]) > 1 || c(p, g);
				});
			}),
			v && (r[p] = v(r[p])));
	}
	function c(p, v) {
		try {
			l(s[p](v));
		} catch (g) {
			f(n[0][3], g);
		}
	}
	function l(p) {
		p.value instanceof __await
			? Promise.resolve(p.value.v).then(u, d)
			: f(n[0][2], p);
	}
	function u(p) {
		c("next", p);
	}
	function d(p) {
		c("throw", p);
	}
	function f(p, v) {
		p(v), n.shift(), n.length && c(n[0][0], n[0][1]);
	}
}
export function __asyncDelegator(t) {
	var e, i;
	return (
		(e = {}),
		s("next"),
		s("throw", function (r) {
			throw r;
		}),
		s("return"),
		(e[Symbol.iterator] = function () {
			return this;
		}),
		e
	);
	function s(r, n) {
		e[r] = t[r]
			? function (o) {
					return (i = !i)
						? { value: __await(t[r](o)), done: !1 }
						: n
							? n(o)
							: o;
				}
			: n;
	}
}
export function __asyncValues(t) {
	if (!Symbol.asyncIterator)
		throw new TypeError("Symbol.asyncIterator is not defined.");
	var e = t[Symbol.asyncIterator],
		i;
	return e
		? e.call(t)
		: ((t = typeof __values == "function" ? __values(t) : t[Symbol.iterator]()),
			(i = {}),
			s("next"),
			s("throw"),
			s("return"),
			(i[Symbol.asyncIterator] = function () {
				return this;
			}),
			i);
	function s(n) {
		i[n] =
			t[n] &&
			function (o) {
				return new Promise(function (a, c) {
					(o = t[n](o)), r(a, c, o.done, o.value);
				});
			};
	}
	function r(n, o, a, c) {
		Promise.resolve(c).then(function (l) {
			n({ value: l, done: a });
		}, o);
	}
}
export function __makeTemplateObject(t, e) {
	return (
		Object.defineProperty
			? Object.defineProperty(t, "raw", { value: e })
			: (t.raw = e),
		t
	);
}
var tE = Object.create
	? function (t, e) {
			Object.defineProperty(t, "default", { enumerable: !0, value: e });
		}
	: function (t, e) {
			t.default = e;
		};
export function __importStar(t) {
	if (t && t.__esModule) return t;
	var e = {};
	if (t != null)
		for (var i in t)
			i !== "default" &&
				Object.prototype.hasOwnProperty.call(t, i) &&
				__createBinding(e, t, i);
	return tE(e, t), e;
}
export function __importDefault(t) {
	return t && t.__esModule ? t : { default: t };
}
export function __classPrivateFieldGet(t, e, i, s) {
	if (i === "a" && !s)
		throw new TypeError("Private accessor was defined without a getter");
	if (typeof e == "function" ? t !== e || !s : !e.has(t))
		throw new TypeError(
			"Cannot read private member from an object whose class did not declare it",
		);
	return i === "m" ? s : i === "a" ? s.call(t) : s ? s.value : e.get(t);
}
export function __classPrivateFieldSet(t, e, i, s, r) {
	if (s === "m") throw new TypeError("Private method is not writable");
	if (s === "a" && !r)
		throw new TypeError("Private accessor was defined without a setter");
	if (typeof e == "function" ? t !== e || !r : !e.has(t))
		throw new TypeError(
			"Cannot write private member to an object whose class did not declare it",
		);
	return s === "a" ? r.call(t, i) : r ? (r.value = i) : e.set(t, i), i;
}
export function __classPrivateFieldIn(t, e) {
	if (e === null || (typeof e != "object" && typeof e != "function"))
		throw new TypeError("Cannot use 'in' operator on non-object");
	return typeof t == "function" ? e === t : t.has(e);
}
export function __addDisposableResource(t, e, i) {
	if (e != null) {
		if (typeof e != "object" && typeof e != "function")
			throw new TypeError("Object expected.");
		var s, r;
		if (i) {
			if (!Symbol.asyncDispose)
				throw new TypeError("Symbol.asyncDispose is not defined.");
			s = e[Symbol.asyncDispose];
		}
		if (s === void 0) {
			if (!Symbol.dispose)
				throw new TypeError("Symbol.dispose is not defined.");
			(s = e[Symbol.dispose]), i && (r = s);
		}
		if (typeof s != "function") throw new TypeError("Object not disposable.");
		r &&
			(s = function () {
				try {
					r.call(this);
				} catch (n) {
					return Promise.reject(n);
				}
			}),
			t.stack.push({ value: e, dispose: s, async: i });
	} else i && t.stack.push({ async: !0 });
	return e;
}
var iE =
	typeof SuppressedError == "function"
		? SuppressedError
		: function (t, e, i) {
				var s = new Error(i);
				return (
					(s.name = "SuppressedError"), (s.error = t), (s.suppressed = e), s
				);
			};
export function __disposeResources(t) {
	function e(s) {
		(t.error = t.hasError
			? new iE(s, t.error, "An error was suppressed during disposal.")
			: s),
			(t.hasError = !0);
	}
	function i() {
		for (; t.stack.length; ) {
			var s = t.stack.pop();
			try {
				var r = s.dispose && s.dispose.call(s.value);
				if (s.async)
					return Promise.resolve(r).then(i, function (n) {
						return e(n), i();
					});
			} catch (n) {
				e(n);
			}
		}
		if (t.hasError) throw t.error;
	}
	return i();
}
export default {
	__extends,
	__assign,
	__rest,
	__decorate,
	__param,
	__metadata,
	__awaiter,
	__generator,
	__createBinding,
	__exportStar,
	__values,
	__read,
	__spread,
	__spreadArrays,
	__spreadArray,
	__await,
	__asyncGenerator,
	__asyncDelegator,
	__asyncValues,
	__makeTemplateObject,
	__importStar,
	__importDefault,
	__classPrivateFieldGet,
	__classPrivateFieldSet,
	__classPrivateFieldIn,
	__addDisposableResource,
	__disposeResources,
};
var sE = Object.create,
	b0 = Object.defineProperty,
	rE = Object.getOwnPropertyDescriptor,
	Sf = Object.getOwnPropertyNames,
	nE = Object.getPrototypeOf,
	oE = Object.prototype.hasOwnProperty,
	m = (t, e) =>
		function () {
			return t && (e = (0, t[Sf(t)[0]])((t = 0))), e;
		},
	aE = (t, e) =>
		function () {
			return e || (0, t[Sf(t)[0]])((e = { exports: {} }).exports, e), e.exports;
		},
	cE = (t, e, i, s) => {
		if ((e && typeof e == "object") || typeof e == "function")
			for (let r of Sf(e))
				!oE.call(t, r) &&
					r !== i &&
					b0(t, r, {
						get: () => e[r],
						enumerable: !(s = rE(e, r)) || s.enumerable,
					});
		return t;
	},
	E0 = (t, e, i) => (
		(i = t != null ? sE(nE(t)) : {}),
		cE(
			e || !t || !t.__esModule
				? b0(i, "default", { value: t, enumerable: !0 })
				: i,
			t,
		)
	);
function kf(t) {
	const e = [];
	typeof t == "number" && e.push("code/timeOrigin", t);
	function i(r, n) {
		e.push(r, n?.startTime ?? Date.now());
	}
	function s() {
		const r = [];
		for (let n = 0; n < e.length; n += 2)
			r.push({ name: e[n], startTime: e[n + 1] });
		return r;
	}
	return { mark: i, getMarks: s };
}
function lE() {
	if (
		typeof performance == "object" &&
		typeof performance.mark == "function" &&
		!performance.nodeTiming
	)
		return typeof performance.timeOrigin != "number" && !performance.timing
			? kf()
			: {
					mark(t, e) {
						performance.mark(t, e);
					},
					getMarks() {
						let t = performance.timeOrigin;
						typeof t != "number" &&
							(t =
								performance.timing.navigationStart ||
								performance.timing.redirectStart ||
								performance.timing.fetchStart);
						const e = [{ name: "code/timeOrigin", startTime: Math.round(t) }];
						for (const i of performance.getEntriesByType("mark"))
							e.push({ name: i.name, startTime: Math.round(t + i.startTime) });
						return e;
					},
				};
	if (typeof process == "object") {
		const t = performance?.timeOrigin;
		return kf(t);
	} else return console.trace("perf-util loaded in UNKNOWN environment"), kf();
}
function uE(t) {
	return (
		t.MonacoPerformanceMarks || (t.MonacoPerformanceMarks = lE()),
		t.MonacoPerformanceMarks
	);
}
var xf,
	Fe,
	Df,
	qs = m({
		"out-build/vs/base/common/performance.js"() {
			"use strict";
			(xf = uE(globalThis)), (Fe = xf.mark), (Df = xf.getMarks);
		},
	}),
	S0 = aE({
		"node_modules/minimist/index.js"(t, e) {
			e.exports = function (n, o) {
				o || (o = {});
				var a = { bools: {}, strings: {}, unknownFn: null };
				typeof o.unknown == "function" && (a.unknownFn = o.unknown),
					typeof o.boolean == "boolean" && o.boolean
						? (a.allBools = !0)
						: []
								.concat(o.boolean)
								.filter(Boolean)
								.forEach(function (W) {
									a.bools[W] = !0;
								});
				var c = {};
				Object.keys(o.alias || {}).forEach(function (W) {
					(c[W] = [].concat(o.alias[W])),
						c[W].forEach(function (ye) {
							c[ye] = [W].concat(
								c[W].filter(function (at) {
									return ye !== at;
								}),
							);
						});
				}),
					[]
						.concat(o.string)
						.filter(Boolean)
						.forEach(function (W) {
							(a.strings[W] = !0), c[W] && (a.strings[c[W]] = !0);
						});
				var l = o.default || {},
					u = { _: [] };
				Object.keys(a.bools).forEach(function (W) {
					p(W, l[W] === void 0 ? !1 : l[W]);
				});
				var d = [];
				n.indexOf("--") !== -1 &&
					((d = n.slice(n.indexOf("--") + 1)),
					(n = n.slice(0, n.indexOf("--"))));
				function f(W, ye) {
					return (
						(a.allBools && /^--[^=]+$/.test(ye)) ||
						a.strings[W] ||
						a.bools[W] ||
						c[W]
					);
				}
				function p(W, ye, at) {
					if (!(at && a.unknownFn && !f(W, at) && a.unknownFn(at) === !1)) {
						var ue = !a.strings[W] && s(ye) ? Number(ye) : ye;
						v(u, W.split("."), ue),
							(c[W] || []).forEach(function (Jt) {
								v(u, Jt.split("."), ue);
							});
					}
				}
				function v(W, ye, at) {
					for (var ue = W, Jt = 0; Jt < ye.length - 1; Jt++) {
						var L = ye[Jt];
						if (r(ue, L)) return;
						ue[L] === void 0 && (ue[L] = {}),
							(ue[L] === Object.prototype ||
								ue[L] === Number.prototype ||
								ue[L] === String.prototype) &&
								(ue[L] = {}),
							ue[L] === Array.prototype && (ue[L] = []),
							(ue = ue[L]);
					}
					var L = ye[ye.length - 1];
					r(ue, L) ||
						((ue === Object.prototype ||
							ue === Number.prototype ||
							ue === String.prototype) &&
							(ue = {}),
						ue === Array.prototype && (ue = []),
						ue[L] === void 0 || a.bools[L] || typeof ue[L] == "boolean"
							? (ue[L] = at)
							: Array.isArray(ue[L])
								? ue[L].push(at)
								: (ue[L] = [ue[L], at]));
				}
				function g(W) {
					return c[W].some(function (ye) {
						return a.bools[ye];
					});
				}
				for (var b = 0; b < n.length; b++) {
					var y = n[b];
					if (/^--.+=/.test(y)) {
						var k = y.match(/^--([^=]+)=([\s\S]*)$/),
							I = k[1],
							C = k[2];
						a.bools[I] && (C = C !== "false"), p(I, C, y);
					} else if (/^--no-.+/.test(y)) {
						var I = y.match(/^--no-(.+)/)[1];
						p(I, !1, y);
					} else if (/^--.+/.test(y)) {
						var I = y.match(/^--(.+)/)[1],
							_ = n[b + 1];
						_ !== void 0 &&
						!/^-/.test(_) &&
						!a.bools[I] &&
						!a.allBools &&
						(!c[I] || !g(I))
							? (p(I, _, y), b++)
							: /^(true|false)$/.test(_)
								? (p(I, _ === "true", y), b++)
								: p(I, a.strings[I] ? "" : !0, y);
					} else if (/^-[^-]+/.test(y)) {
						for (
							var K = y.slice(1, -1).split(""), se = !1, xe = 0;
							xe < K.length;
							xe++
						) {
							var _ = y.slice(xe + 2);
							if (_ === "-") {
								p(K[xe], _, y);
								continue;
							}
							if (/[A-Za-z]/.test(K[xe]) && /=/.test(_)) {
								p(K[xe], _.split("=")[1], y), (se = !0);
								break;
							}
							if (/[A-Za-z]/.test(K[xe]) && /-?\d+(\.\d*)?(e-?\d+)?$/.test(_)) {
								p(K[xe], _, y), (se = !0);
								break;
							}
							if (K[xe + 1] && K[xe + 1].match(/\W/)) {
								p(K[xe], y.slice(xe + 2), y), (se = !0);
								break;
							} else p(K[xe], a.strings[K[xe]] ? "" : !0, y);
						}
						var I = y.slice(-1)[0];
						!se &&
							I !== "-" &&
							(n[b + 1] &&
							!/^(-|--)[^-]/.test(n[b + 1]) &&
							!a.bools[I] &&
							(!c[I] || !g(I))
								? (p(I, n[b + 1], y), b++)
								: n[b + 1] && /^(true|false)$/.test(n[b + 1])
									? (p(I, n[b + 1] === "true", y), b++)
									: p(I, a.strings[I] ? "" : !0, y));
					} else if (
						((!a.unknownFn || a.unknownFn(y) !== !1) &&
							u._.push(a.strings._ || !s(y) ? y : Number(y)),
						o.stopEarly)
					) {
						u._.push.apply(u._, n.slice(b + 1));
						break;
					}
				}
				return (
					Object.keys(l).forEach(function (W) {
						i(u, W.split(".")) ||
							(v(u, W.split("."), l[W]),
							(c[W] || []).forEach(function (ye) {
								v(u, ye.split("."), l[W]);
							}));
					}),
					o["--"]
						? ((u["--"] = new Array()),
							d.forEach(function (W) {
								u["--"].push(W);
							}))
						: d.forEach(function (W) {
								u._.push(W);
							}),
					u
				);
			};
			function i(n, o) {
				var a = n;
				o.slice(0, -1).forEach(function (l) {
					a = a[l] || {};
				});
				var c = o[o.length - 1];
				return c in a;
			}
			function s(n) {
				return typeof n == "number" || /^0x[0-9a-f]+$/i.test(n)
					? !0
					: /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(n);
			}
			function r(n, o) {
				return (
					(o === "constructor" && typeof n[o] == "function") ||
					o === "__proto__"
				);
			}
		},
	});
function hE(t) {
	return t.replace(x0, function (e, i, s, r, n, o) {
		if (r) return "";
		if (n) {
			const a = n.length;
			return n[a - 1] ===
				`
`
				? n[a - 2] === "\r"
					? `\r
`
					: `
`
				: "";
		} else return o ? e.substring(1) : e;
	});
}
function k0(t) {
	const e = hE(t);
	try {
		return JSON.parse(e);
	} catch {
		const s = e.replace(/,\s*([}\]])/g, "$1");
		return JSON.parse(s);
	}
}
var x0,
	D0 = m({
		"out-build/vs/base/common/jsonc.js"() {
			"use strict";
			x0 =
				/("[^"\\]*(?:\\.[^"\\]*)*")|('[^'\\]*(?:\\.[^'\\]*)*')|(\/\*[^\/\*]*(?:(?:\*|\/)[^\/\*]*)*?\*\/)|(\/{2,}.*?(?:(?:\r?\n)|$))|(,\s*[}\]])/g;
		},
	});
import * as P0 from "os";
import * as ur from "path";
function $0(t, e) {
	const i = dE(t, e),
		s = [i];
	return ur.isAbsolute(i) || s.unshift(A0), ur.resolve(...s);
}
function dE(t, e) {
	process.env.VSCODE_DEV && (e = "code-oss-dev");
	const i = process.env.VSCODE_PORTABLE;
	if (i) return ur.join(i, "user-data");
	let s = process.env.VSCODE_APPDATA;
	if (s) return ur.join(s, e);
	const r = t["user-data-dir"];
	if (r) return r;
	switch (process.platform) {
		case "win32":
			if (((s = process.env.APPDATA), !s)) {
				const n = process.env.USERPROFILE;
				if (typeof n != "string")
					throw new Error(
						"Windows: Unexpected undefined %USERPROFILE% environment variable",
					);
				s = ur.join(n, "AppData", "Roaming");
			}
			break;
		case "darwin":
			s = ur.join(P0.homedir(), "Library", "Application Support");
			break;
		case "linux":
			s = process.env.XDG_CONFIG_HOME || ur.join(P0.homedir(), ".config");
			break;
		default:
			throw new Error("Platform not supported");
	}
	return ur.join(s, e);
}
var A0,
	I0 = m({
		"out-build/vs/platform/environment/node/userDataPath.js"() {
			"use strict";
			A0 = process.env.VSCODE_CWD || process.cwd();
		},
	});
function fE() {
	const t = C0();
	return t ? Array.from(t) : [];
}
function C0() {
	return process.uncHostAllowlist;
}
function da(t) {
	if (process.platform !== "win32") return;
	const e = C0();
	if (e)
		if (typeof t == "string") e.add(t.toLowerCase());
		else for (const i of pE(t)) da(i);
}
function pE(t) {
	const e = new Set();
	if (Array.isArray(t)) for (const i of t) typeof i == "string" && e.add(i);
	return Array.from(e);
}
function _0(t) {
	if (typeof t != "string") return;
	const e = ["\\\\.\\UNC\\", "\\\\?\\UNC\\", "\\\\"];
	let i;
	for (const s of e) {
		if (t.indexOf(s) !== 0) continue;
		const n = t.indexOf("\\", s.length);
		if (n === -1) continue;
		const o = t.substring(s.length, n);
		if (o) {
			i = o;
			break;
		}
	}
	return i;
}
function mE() {
	process.platform === "win32" && (process.restrictUNCAccess = !1);
}
function gE() {
	return process.platform !== "win32" ? !0 : process.restrictUNCAccess === !1;
}
var fa = m({
	"out-build/vs/base/node/unc.js"() {
		"use strict";
	},
});
function Kt() {
	return globalThis._CURSOR_SENTRY;
}
function wE() {
	return {
		send: function (e) {
			const i = Kt().buffer;
			return i.length < 64 && i.push(e), Promise.resolve({ statusCode: 200 });
		},
		flush: function (e) {
			return Promise.resolve(!0);
		},
	};
}
function vE() {
	return {
		send: function (t) {
			return Kt().enabled
				? Kt().transport.send(t)
				: Promise.resolve({ statusCode: 200 });
		},
		flush: function (t) {
			return Kt().transport.flush(t);
		},
	};
}
function yE() {
	return function (t) {
		return t.attributes?.["sentry.sample_rate"] === void 0 ? 0 : 1;
	};
}
function bE() {
	return {
		defaultIntegrations: [],
		dsn: R0,
		parentSpanIsAlwaysRootSpan: !0,
		tracesSampler: yE(),
		transport: vE,
	};
}
var R0,
	pa = m({
		"out-build/vs/platform/tracing/common/global.js"() {
			"use strict";
			(R0 =
				"https://80ec2259ebfad12d8aa2afe6eb4f6dd5@metrics.cursor.sh/4508016051945472"),
				globalThis._CURSOR_SENTRY === void 0 &&
					(globalThis._CURSOR_SENTRY = {
						buffer: [],
						enabled: !0,
						loggerSampleRate: 1,
						sentry: void 0,
						tracesSampleRate: 0.01,
						profilesSampleRate: 0,
						jsonStringifySampleRate: 0,
						transport: wE(),
					});
		},
	});
function Pf() {
	return globalThis._VSCODE_NLS_MESSAGES;
}
function Al() {
	return globalThis._VSCODE_NLS_LANGUAGE;
}
var O0 = m({
	"out-build/vs/nls.messages.js"() {
		"use strict";
	},
});
function Il(t, e) {
	let i;
	return (
		e.length === 0
			? (i = t)
			: (i = t.replace(/\{(\d+)\}/g, (s, r) => {
					const n = r[0],
						o = e[n];
					let a = s;
					return (
						typeof o == "string"
							? (a = o)
							: (typeof o == "number" ||
									typeof o == "boolean" ||
									o === void 0 ||
									o === null) &&
								(a = String(o)),
						a
					);
				})),
		F0 && (i = "\uFF3B" + i.replace(/[aouei]/g, "$&$&") + "\uFF3D"),
		i
	);
}
function w(t, e, ...i) {
	return Il(typeof t == "number" ? L0(t, e) : e, i);
}
function L0(t, e) {
	const i = Pf()?.[t];
	if (typeof i != "string") {
		if (typeof e == "string") return e;
		throw new Error(`!!! NLS MISSING: ${t} !!!`);
	}
	return i;
}
function M0(t, e, ...i) {
	let s;
	typeof t == "number" ? (s = L0(t, e)) : (s = e);
	const r = Il(s, i);
	return { value: r, original: e === s ? r : Il(e, i) };
}
var F0,
	ve = m({
		"out-build/vs/nls.js"() {
			"use strict";
			O0(),
				O0(),
				(F0 =
					Al() === "pseudo" ||
					(typeof document < "u" &&
						document.location &&
						typeof document.location.hash == "string" &&
						document.location.hash.indexOf("pseudo=true") >= 0));
		},
	});
function N0(t) {
	switch (t) {
		case 0:
			return "Web";
		case 1:
			return "Mac";
		case 2:
			return "Linux";
		case 3:
			return "Windows";
	}
}
function EE(t) {
	return parseFloat(t) >= 20;
}
var Ur,
	Bn,
	zn,
	Hn,
	$f,
	Af,
	Cl,
	W0,
	If,
	Cf,
	j0,
	ma,
	ga,
	_f,
	Rf,
	fs,
	ps,
	ki,
	Of,
	T0,
	U0,
	wa,
	T,
	N,
	Ee,
	Lf,
	Mf,
	hr,
	q0,
	B0,
	z0,
	va,
	Qi,
	qi,
	H0,
	Ff,
	V0,
	G0,
	J0,
	Ri,
	Nf,
	X0,
	K0,
	Y0,
	SE,
	z = m({
		"out-build/vs/base/common/platform.js"() {
			"use strict";
			if (
				(ve(),
				(Ur = "en"),
				(Bn = !1),
				(zn = !1),
				(Hn = !1),
				($f = !1),
				(Af = !1),
				(Cl = !1),
				(W0 = !1),
				(If = !1),
				(Cf = !1),
				(j0 = !1),
				(ma = void 0),
				(ga = Ur),
				(_f = Ur),
				(Rf = void 0),
				(fs = void 0),
				(ps = globalThis),
				(ki = void 0),
				typeof ps.vscode < "u" && typeof ps.vscode.process < "u"
					? (ki = ps.vscode.process)
					: typeof process < "u" &&
						typeof process?.versions?.node == "string" &&
						(ki = process),
				(Of = typeof ki?.versions?.electron == "string"),
				(T0 = Of && ki?.type === "renderer"),
				typeof ki == "object")
			) {
				(Bn = ki.platform === "win32"),
					(zn = ki.platform === "darwin"),
					(Hn = ki.platform === "linux"),
					($f = Hn && !!ki.env.SNAP && !!ki.env.SNAP_REVISION),
					(W0 = Of),
					(Cf = !!ki.env.CI || !!ki.env.BUILD_ARTIFACTSTAGINGDIRECTORY),
					(ma = Ur),
					(ga = Ur);
				const t = ki.env.VSCODE_NLS_CONFIG;
				if (t)
					try {
						const e = JSON.parse(t);
						(ma = e.userLocale),
							(_f = e.osLocale),
							(ga = e.resolvedLanguage || Ur),
							(Rf = e.languagePack?.translationsConfigFile);
					} catch {}
				Af = !0;
			} else
				typeof navigator == "object" && !T0
					? ((fs = navigator.userAgent),
						(Bn = fs.indexOf("Windows") >= 0),
						(zn = fs.indexOf("Macintosh") >= 0),
						(If =
							(fs.indexOf("Macintosh") >= 0 ||
								fs.indexOf("iPad") >= 0 ||
								fs.indexOf("iPhone") >= 0) &&
							!!navigator.maxTouchPoints &&
							navigator.maxTouchPoints > 0),
						(Hn = fs.indexOf("Linux") >= 0),
						(j0 = fs?.indexOf("Mobi") >= 0),
						(Cl = !0),
						(ga = Al() || Ur),
						(ma = navigator.language.toLowerCase()),
						(_f = ma))
					: console.error("Unable to resolve platform.");
			(function (t) {
				(t[(t.Web = 0)] = "Web"),
					(t[(t.Mac = 1)] = "Mac"),
					(t[(t.Linux = 2)] = "Linux"),
					(t[(t.Windows = 3)] = "Windows");
			})(U0 || (U0 = {})),
				(wa = 0),
				zn ? (wa = 1) : Bn ? (wa = 3) : Hn && (wa = 2),
				(T = Bn),
				(N = zn),
				(Ee = Hn),
				(Lf = $f),
				(Mf = Af),
				(hr = Cl),
				(q0 = Cl && typeof ps.importScripts == "function"),
				(B0 = q0 ? ps.origin : void 0),
				(z0 = Cf),
				(va = wa),
				(Qi = fs),
				(qi = ga),
				(function (t) {
					function e() {
						return qi;
					}
					t.value = e;
					function i() {
						return qi.length === 2
							? qi === "en"
							: qi.length >= 3
								? qi[0] === "e" && qi[1] === "n" && qi[2] === "-"
								: !1;
					}
					t.isDefaultVariant = i;
					function s() {
						return qi === "en";
					}
					t.isDefault = s;
				})(H0 || (H0 = {})),
				(Ff = Rf),
				(V0 = typeof ps.postMessage == "function" && !ps.importScripts),
				(G0 = (() => {
					if (V0) {
						const t = [];
						ps.addEventListener("message", (i) => {
							if (i.data && i.data.vscodeScheduleAsyncWork)
								for (let s = 0, r = t.length; s < r; s++) {
									const n = t[s];
									if (n.id === i.data.vscodeScheduleAsyncWork) {
										t.splice(s, 1), n.callback();
										return;
									}
								}
						});
						let e = 0;
						return (i) => {
							const s = ++e;
							t.push({ id: s, callback: i }),
								ps.postMessage({ vscodeScheduleAsyncWork: s }, "*");
						};
					}
					return (t) => setTimeout(t);
				})()),
				(function (t) {
					(t[(t.Windows = 1)] = "Windows"),
						(t[(t.Macintosh = 2)] = "Macintosh"),
						(t[(t.Linux = 3)] = "Linux");
				})(J0 || (J0 = {})),
				(Ri = zn || If ? 2 : Bn ? 1 : 3),
				(Nf = !!(Qi && Qi.indexOf("Chrome") >= 0)),
				(X0 = !!(Qi && Qi.indexOf("Firefox") >= 0)),
				(K0 = !!(!Nf && Qi && Qi.indexOf("Safari") >= 0)),
				(Y0 = !!(Qi && Qi.indexOf("Edg/") >= 0)),
				(SE = !!(Qi && Qi.indexOf("Android") >= 0));
		},
	});
function kE(t, e, i = 0, s = t.length) {
	let r = i,
		n = s;
	for (; r < n; ) {
		const o = Math.floor((r + n) / 2);
		e(t[o]) ? (r = o + 1) : (n = o);
	}
	return r - 1;
}
function xE(t, e, i = 0, s = t.length) {
	let r = i,
		n = s;
	for (; r < n; ) {
		const o = Math.floor((r + n) / 2);
		e(t[o]) ? (n = o) : (r = o + 1);
	}
	return r;
}
var DE,
	PE = m({
		"out-build/vs/base/common/arraysFind.js"() {
			"use strict";
			DE = class w3 {
				static {
					this.assertInvariants = !1;
				}
				constructor(e) {
					(this.e = e), (this.c = 0);
				}
				findLastMonotonous(e) {
					if (w3.assertInvariants) {
						if (this.d) {
							for (const s of this.e)
								if (this.d(s) && !e(s))
									throw new Error(
										"MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.",
									);
						}
						this.d = e;
					}
					const i = kE(this.e, e, this.c);
					return (this.c = i + 1), i === -1 ? void 0 : this.e[i];
				}
			};
		},
	});
function Q0(t) {
	Wf.setUnexpectedErrorHandler(t);
}
function $E(t) {
	if (!t || typeof t != "object") return !1;
	const e = t;
	return e.code === "EPIPE" && e.syscall?.toUpperCase() === "WRITE";
}
function Ot(t) {
	_l(t) || Wf.onUnexpectedError(t);
}
function _l(t) {
	return t instanceof ai
		? !0
		: t instanceof Error && t.name === ya && t.message === ya;
}
function Vn() {
	const t = new Error(ya);
	return (t.name = t.message), t;
}
function Z0(t) {
	return t ? new Error(`Illegal state: ${t}`) : new Error("Illegal state");
}
function Bi(t) {
	return t
		? t.message
			? t.message
			: t.stack
				? t.stack.split(`
`)[0]
				: String(t)
		: "Error";
}
var ew,
	Wf,
	ya,
	ai,
	Rl,
	Bs,
	Ae = m({
		"out-build/vs/base/common/errors.js"() {
			"use strict";
			(ew = class {
				constructor() {
					(this.b = []),
						(this.a = function (t) {
							setTimeout(() => {
								throw t.stack
									? Bs.isErrorNoTelemetry(t)
										? new Bs(
												t.message +
													`

` +
													t.stack,
											)
										: new Error(
												t.message +
													`

` +
													t.stack,
											)
									: t;
							}, 0);
						});
				}
				addListener(t) {
					return (
						this.b.push(t),
						() => {
							this.d(t);
						}
					);
				}
				c(t) {
					this.b.forEach((e) => {
						e(t);
					});
				}
				d(t) {
					this.b.splice(this.b.indexOf(t), 1);
				}
				setUnexpectedErrorHandler(t) {
					this.a = t;
				}
				getUnexpectedErrorHandler() {
					return this.a;
				}
				onUnexpectedError(t) {
					this.a(t), this.c(t);
				}
				onUnexpectedExternalError(t) {
					this.a(t);
				}
			}),
				(Wf = new ew()),
				(ya = "Canceled"),
				(ai = class extends Error {
					constructor() {
						super(ya), (this.name = this.message);
					}
				}),
				(Rl = class extends Error {
					constructor() {
						super(...arguments), (this.isExpected = !0);
					}
				}),
				(Bs = class a0 extends Error {
					constructor(e) {
						super(e), (this.name = "CodeExpectedError");
					}
					static fromError(e) {
						if (e instanceof a0) return e;
						const i = new a0();
						return (i.message = e.message), (i.stack = e.stack), i;
					}
					static isErrorNoTelemetry(e) {
						return e.name === "CodeExpectedError";
					}
				});
		},
	});
function ba(t, e, i = (s, r) => s === r) {
	if (t === e) return !0;
	if (!t || !e || t.length !== e.length) return !1;
	for (let s = 0, r = t.length; s < r; s++) if (!i(t[s], e[s])) return !1;
	return !0;
}
function AE(t, e, i) {
	if (i === 0) return [];
	const s = t.slice(0, i).sort(e);
	return IE(t, e, s, i, t.length), s;
}
function IE(t, e, i, s, r) {
	for (const n = i.length; s < r; s++) {
		const o = t[s];
		if (e(o, i[n - 1]) < 0) {
			i.pop();
			const a = xE(i, (c) => e(o, c) < 0);
			i.splice(a, 0, o);
		}
	}
}
function Dt(t) {
	return t.filter((e) => !!e);
}
function Zi(t, e = (i) => i) {
	const i = new Set();
	return t.filter((s) => {
		const r = e(s);
		return i.has(r) ? !1 : (i.add(r), !0);
	});
}
function tw(t, e) {
	return t.push(e), () => CE(t, e);
}
function CE(t, e) {
	const i = t.indexOf(e);
	if (i > -1) return t.splice(i, 1), e;
}
function iw(t, e) {
	let i;
	if (typeof e == "number") {
		let s = e;
		i = () => {
			const r = Math.sin(s++) * 179426549;
			return r - Math.floor(r);
		};
	} else i = Math.random;
	for (let s = t.length - 1; s > 0; s -= 1) {
		const r = Math.floor(i() * (s + 1)),
			n = t[s];
		(t[s] = t[r]), (t[r] = n);
	}
}
function _E(t) {
	return t[Math.floor(Math.random() * t.length)];
}
function RE(t, e) {
	return (i, s) => e(t(i), t(s));
}
var jf,
	sw,
	OE,
	Ut = m({
		"out-build/vs/base/common/arrays.js"() {
			"use strict";
			PE(),
				Ae(),
				(function (t) {
					function e(n) {
						return n < 0;
					}
					t.isLessThan = e;
					function i(n) {
						return n <= 0;
					}
					t.isLessThanOrEqual = i;
					function s(n) {
						return n > 0;
					}
					t.isGreaterThan = s;
					function r(n) {
						return n === 0;
					}
					(t.isNeitherLessOrGreaterThan = r),
						(t.greaterThan = 1),
						(t.lessThan = -1),
						(t.neitherLessOrGreaterThan = 0);
				})(jf || (jf = {})),
				(sw = (t, e) => t - e),
				(OE = class af {
					static {
						this.empty = new af((e) => {});
					}
					constructor(e) {
						this.iterate = e;
					}
					forEach(e) {
						this.iterate((i) => (e(i), !0));
					}
					toArray() {
						const e = [];
						return this.iterate((i) => (e.push(i), !0)), e;
					}
					filter(e) {
						return new af((i) => this.iterate((s) => (e(s) ? i(s) : !0)));
					}
					map(e) {
						return new af((i) => this.iterate((s) => i(e(s))));
					}
					some(e) {
						let i = !1;
						return this.iterate((s) => ((i = e(s)), !i)), i;
					}
					findFirst(e) {
						let i;
						return this.iterate((s) => (e(s) ? ((i = s), !1) : !0)), i;
					}
					findLast(e) {
						let i;
						return this.iterate((s) => (e(s) && (i = s), !0)), i;
					}
					findLastMaxBy(e) {
						let i,
							s = !0;
						return (
							this.iterate(
								(r) => (
									(s || jf.isGreaterThan(e(r, i))) && ((s = !1), (i = r)), !0
								),
							),
							i
						);
					}
				});
		},
	});
function LE(t, e) {
	const i = Object.create(null);
	for (const s of t) {
		const r = e(s);
		let n = i[r];
		n || (n = i[r] = []), n.push(s);
	}
	return i;
}
var rw,
	ME,
	nw = m({
		"out-build/vs/base/common/collections.js"() {
			"use strict";
			ME = class {
				static {
					rw = Symbol.toStringTag;
				}
				constructor(t, e) {
					(this.b = e), (this.a = new Map()), (this[rw] = "SetWithKey");
					for (const i of t) this.add(i);
				}
				get size() {
					return this.a.size;
				}
				add(t) {
					const e = this.b(t);
					return this.a.set(e, t), this;
				}
				delete(t) {
					return this.a.delete(this.b(t));
				}
				has(t) {
					return this.a.has(this.b(t));
				}
				*entries() {
					for (const t of this.a.values()) yield [t, t];
				}
				keys() {
					return this.values();
				}
				*values() {
					for (const t of this.a.values()) yield t;
				}
				clear() {
					this.a.clear();
				}
				forEach(t, e) {
					this.a.forEach((i) => t.call(e, i, i, this));
				}
				[Symbol.iterator]() {
					return this.values();
				}
			};
		},
	});
function Ol(t, e) {
	const i = this;
	let s = !1,
		r;
	return function () {
		if (s) return r;
		if (((s = !0), e))
			try {
				r = t.apply(i, arguments);
			} finally {
				e();
			}
		else r = t.apply(i, arguments);
		return r;
	};
}
var Ll = m({
	"out-build/vs/base/common/functional.js"() {
		"use strict";
	},
});
function FE(t) {
	const e = [];
	return (
		t.forEach((i, s) => {
			e.push(`${s} => ${i}`);
		}),
		`Map(${t.size}) {${e.join(", ")}}`
	);
}
function NE(t) {
	const e = [];
	return (
		t.forEach((i) => {
			e.push(i);
		}),
		`Set(${t.size}) {${e.join(", ")}}`
	);
}
function WE(t) {
	return Array.isArray(t);
}
var ow,
	aw,
	cw,
	lw,
	qt,
	uw,
	hw,
	dw,
	fw,
	Ea,
	pw,
	xi = m({
		"out-build/vs/base/common/map.js"() {
			"use strict";
			(lw = class {
				constructor(t, e) {
					(this.uri = t), (this.value = e);
				}
			}),
				(qt = class pl {
					static {
						this.c = (e) => e.toString();
					}
					constructor(e, i) {
						if (((this[ow] = "ResourceMap"), e instanceof pl))
							(this.d = new Map(e.d)), (this.e = i ?? pl.c);
						else if (WE(e)) {
							(this.d = new Map()), (this.e = i ?? pl.c);
							for (const [s, r] of e) this.set(s, r);
						} else (this.d = new Map()), (this.e = e ?? pl.c);
					}
					set(e, i) {
						return this.d.set(this.e(e), new lw(e, i)), this;
					}
					get(e) {
						return this.d.get(this.e(e))?.value;
					}
					has(e) {
						return this.d.has(this.e(e));
					}
					get size() {
						return this.d.size;
					}
					clear() {
						this.d.clear();
					}
					delete(e) {
						return this.d.delete(this.e(e));
					}
					forEach(e, i) {
						typeof i < "u" && (e = e.bind(i));
						for (const [s, r] of this.d) e(r.value, r.uri, this);
					}
					*values() {
						for (const e of this.d.values()) yield e.value;
					}
					*keys() {
						for (const e of this.d.values()) yield e.uri;
					}
					*entries() {
						for (const e of this.d.values()) yield [e.uri, e.value];
					}
					*[((ow = Symbol.toStringTag), Symbol.iterator)]() {
						for (const [, e] of this.d) yield [e.uri, e.value];
					}
				}),
				(uw = class {
					constructor(t, e) {
						(this[aw] = "ResourceSet"),
							!t || typeof t == "function"
								? (this.c = new qt(t))
								: ((this.c = new qt(e)), t.forEach(this.add, this));
					}
					get size() {
						return this.c.size;
					}
					add(t) {
						return this.c.set(t, t), this;
					}
					clear() {
						this.c.clear();
					}
					delete(t) {
						return this.c.delete(t);
					}
					forEach(t, e) {
						this.c.forEach((i, s) => t.call(e, s, s, this));
					}
					has(t) {
						return this.c.has(t);
					}
					entries() {
						return this.c.entries();
					}
					keys() {
						return this.c.keys();
					}
					values() {
						return this.c.keys();
					}
					[((aw = Symbol.toStringTag), Symbol.iterator)]() {
						return this.keys();
					}
				}),
				(function (t) {
					(t[(t.None = 0)] = "None"),
						(t[(t.AsOld = 1)] = "AsOld"),
						(t[(t.AsNew = 2)] = "AsNew");
				})(hw || (hw = {})),
				(dw = class {
					constructor() {
						(this[cw] = "LinkedMap"),
							(this.c = new Map()),
							(this.d = void 0),
							(this.e = void 0),
							(this.f = 0),
							(this.g = 0);
					}
					clear() {
						this.c.clear(),
							(this.d = void 0),
							(this.e = void 0),
							(this.f = 0),
							this.g++;
					}
					isEmpty() {
						return !this.d && !this.e;
					}
					get size() {
						return this.f;
					}
					get first() {
						return this.d?.value;
					}
					get last() {
						return this.e?.value;
					}
					has(t) {
						return this.c.has(t);
					}
					get(t, e = 0) {
						const i = this.c.get(t);
						if (i) return e !== 0 && this.m(i, e), i.value;
					}
					set(t, e, i = 0) {
						let s = this.c.get(t);
						if (s) (s.value = e), i !== 0 && this.m(s, i);
						else {
							switch (
								((s = { key: t, value: e, next: void 0, previous: void 0 }), i)
							) {
								case 0:
									this.k(s);
									break;
								case 1:
									this.j(s);
									break;
								case 2:
									this.k(s);
									break;
								default:
									this.k(s);
									break;
							}
							this.c.set(t, s), this.f++;
						}
						return this;
					}
					delete(t) {
						return !!this.remove(t);
					}
					remove(t) {
						const e = this.c.get(t);
						if (e) return this.c.delete(t), this.l(e), this.f--, e.value;
					}
					shift() {
						if (!this.d && !this.e) return;
						if (!this.d || !this.e) throw new Error("Invalid list");
						const t = this.d;
						return this.c.delete(t.key), this.l(t), this.f--, t.value;
					}
					forEach(t, e) {
						const i = this.g;
						let s = this.d;
						for (; s; ) {
							if (
								(e ? t.bind(e)(s.value, s.key, this) : t(s.value, s.key, this),
								this.g !== i)
							)
								throw new Error("LinkedMap got modified during iteration.");
							s = s.next;
						}
					}
					keys() {
						const t = this,
							e = this.g;
						let i = this.d;
						const s = {
							[Symbol.iterator]() {
								return s;
							},
							next() {
								if (t.g !== e)
									throw new Error("LinkedMap got modified during iteration.");
								if (i) {
									const r = { value: i.key, done: !1 };
									return (i = i.next), r;
								} else return { value: void 0, done: !0 };
							},
						};
						return s;
					}
					values() {
						const t = this,
							e = this.g;
						let i = this.d;
						const s = {
							[Symbol.iterator]() {
								return s;
							},
							next() {
								if (t.g !== e)
									throw new Error("LinkedMap got modified during iteration.");
								if (i) {
									const r = { value: i.value, done: !1 };
									return (i = i.next), r;
								} else return { value: void 0, done: !0 };
							},
						};
						return s;
					}
					entries() {
						const t = this,
							e = this.g;
						let i = this.d;
						const s = {
							[Symbol.iterator]() {
								return s;
							},
							next() {
								if (t.g !== e)
									throw new Error("LinkedMap got modified during iteration.");
								if (i) {
									const r = { value: [i.key, i.value], done: !1 };
									return (i = i.next), r;
								} else return { value: void 0, done: !0 };
							},
						};
						return s;
					}
					[((cw = Symbol.toStringTag), Symbol.iterator)]() {
						return this.entries();
					}
					h(t) {
						if (t >= this.size) return;
						if (t === 0) {
							this.clear();
							return;
						}
						let e = this.d,
							i = this.size;
						for (; e && i > t; ) this.c.delete(e.key), (e = e.next), i--;
						(this.d = e), (this.f = i), e && (e.previous = void 0), this.g++;
					}
					i(t) {
						if (t >= this.size) return;
						if (t === 0) {
							this.clear();
							return;
						}
						let e = this.e,
							i = this.size;
						for (; e && i > t; ) this.c.delete(e.key), (e = e.previous), i--;
						(this.e = e), (this.f = i), e && (e.next = void 0), this.g++;
					}
					j(t) {
						if (!this.d && !this.e) this.e = t;
						else if (this.d) (t.next = this.d), (this.d.previous = t);
						else throw new Error("Invalid list");
						(this.d = t), this.g++;
					}
					k(t) {
						if (!this.d && !this.e) this.d = t;
						else if (this.e) (t.previous = this.e), (this.e.next = t);
						else throw new Error("Invalid list");
						(this.e = t), this.g++;
					}
					l(t) {
						if (t === this.d && t === this.e)
							(this.d = void 0), (this.e = void 0);
						else if (t === this.d) {
							if (!t.next) throw new Error("Invalid list");
							(t.next.previous = void 0), (this.d = t.next);
						} else if (t === this.e) {
							if (!t.previous) throw new Error("Invalid list");
							(t.previous.next = void 0), (this.e = t.previous);
						} else {
							const e = t.next,
								i = t.previous;
							if (!e || !i) throw new Error("Invalid list");
							(e.previous = i), (i.next = e);
						}
						(t.next = void 0), (t.previous = void 0), this.g++;
					}
					m(t, e) {
						if (!this.d || !this.e) throw new Error("Invalid list");
						if (!(e !== 1 && e !== 2)) {
							if (e === 1) {
								if (t === this.d) return;
								const i = t.next,
									s = t.previous;
								t === this.e
									? ((s.next = void 0), (this.e = s))
									: ((i.previous = s), (s.next = i)),
									(t.previous = void 0),
									(t.next = this.d),
									(this.d.previous = t),
									(this.d = t),
									this.g++;
							} else if (e === 2) {
								if (t === this.e) return;
								const i = t.next,
									s = t.previous;
								t === this.d
									? ((i.previous = void 0), (this.d = i))
									: ((i.previous = s), (s.next = i)),
									(t.next = void 0),
									(t.previous = this.e),
									(this.e.next = t),
									(this.e = t),
									this.g++;
							}
						}
					}
					toJSON() {
						const t = [];
						return (
							this.forEach((e, i) => {
								t.push([i, e]);
							}),
							t
						);
					}
					fromJSON(t) {
						this.clear();
						for (const [e, i] of t) this.set(e, i);
					}
				}),
				(fw = class extends dw {
					constructor(t, e = 1) {
						super(), (this.n = t), (this.o = Math.min(Math.max(0, e), 1));
					}
					get limit() {
						return this.n;
					}
					set limit(t) {
						(this.n = t), this.p();
					}
					get ratio() {
						return this.o;
					}
					set ratio(t) {
						(this.o = Math.min(Math.max(0, t), 1)), this.p();
					}
					get(t, e = 2) {
						return super.get(t, e);
					}
					peek(t) {
						return super.get(t, 0);
					}
					set(t, e) {
						return super.set(t, e, 2), this;
					}
					p() {
						this.size > this.n && this.q(Math.round(this.n * this.o));
					}
				}),
				(Ea = class extends fw {
					constructor(t, e = 1) {
						super(t, e);
					}
					q(t) {
						this.h(t);
					}
					set(t, e) {
						return super.set(t, e), this.p(), this;
					}
				}),
				(pw = class {
					constructor() {
						this.c = new Map();
					}
					add(t, e) {
						let i = this.c.get(t);
						i || ((i = new Set()), this.c.set(t, i)), i.add(e);
					}
					delete(t, e) {
						const i = this.c.get(t);
						i && (i.delete(e), i.size === 0 && this.c.delete(t));
					}
					forEach(t, e) {
						const i = this.c.get(t);
						i && i.forEach(e);
					}
					get(t) {
						const e = this.c.get(t);
						return e || new Set();
					}
				});
		},
	}),
	qr,
	Ml = m({
		"out-build/vs/base/common/iterator.js"() {
			"use strict";
			(function (t) {
				function e(C) {
					return (
						C && typeof C == "object" && typeof C[Symbol.iterator] == "function"
					);
				}
				t.is = e;
				const i = Object.freeze([]);
				function s() {
					return i;
				}
				t.empty = s;
				function* r(C) {
					yield C;
				}
				t.single = r;
				function n(C) {
					return e(C) ? C : r(C);
				}
				t.wrap = n;
				function o(C) {
					return C || i;
				}
				t.from = o;
				function* a(C) {
					for (let _ = C.length - 1; _ >= 0; _--) yield C[_];
				}
				t.reverse = a;
				function c(C) {
					return !C || C[Symbol.iterator]().next().done === !0;
				}
				t.isEmpty = c;
				function l(C) {
					return C[Symbol.iterator]().next().value;
				}
				t.first = l;
				function u(C, _) {
					let K = 0;
					for (const se of C) if (_(se, K++)) return !0;
					return !1;
				}
				t.some = u;
				function d(C, _) {
					for (const K of C) if (_(K)) return K;
				}
				t.find = d;
				function* f(C, _) {
					for (const K of C) _(K) && (yield K);
				}
				t.filter = f;
				function* p(C, _) {
					let K = 0;
					for (const se of C) yield _(se, K++);
				}
				t.map = p;
				function* v(C, _) {
					let K = 0;
					for (const se of C) yield* _(se, K++);
				}
				t.flatMap = v;
				function* g(...C) {
					for (const _ of C) yield* _;
				}
				t.concat = g;
				function b(C, _, K) {
					let se = K;
					for (const xe of C) se = _(se, xe);
					return se;
				}
				t.reduce = b;
				function* y(C, _, K = C.length) {
					for (
						_ < -C.length && (_ = 0),
							_ < 0 && (_ += C.length),
							K < 0 ? (K += C.length) : K > C.length && (K = C.length);
						_ < K;
						_++
					)
						yield C[_];
				}
				t.slice = y;
				function k(C, _ = Number.POSITIVE_INFINITY) {
					const K = [];
					if (_ === 0) return [K, C];
					const se = C[Symbol.iterator]();
					for (let xe = 0; xe < _; xe++) {
						const W = se.next();
						if (W.done) return [K, t.empty()];
						K.push(W.value);
					}
					return [
						K,
						{
							[Symbol.iterator]() {
								return se;
							},
						},
					];
				}
				t.consume = k;
				async function I(C) {
					const _ = [];
					for await (const K of C) _.push(K);
					return Promise.resolve(_);
				}
				t.asyncToArray = I;
			})(qr || (qr = {}));
		},
	});
function jE(t) {
	Br = t;
}
function Sa(t) {
	return Br?.trackDisposable(t), t;
}
function ka(t) {
	Br?.markAsDisposed(t);
}
function xa(t, e) {
	Br?.setParent(t, e);
}
function TE(t, e) {
	if (Br) for (const i of t) Br.setParent(i, e);
}
function UE(t) {
	return (
		typeof t == "object" &&
		t !== null &&
		typeof t.dispose == "function" &&
		t.dispose.length === 0
	);
}
function vt(t) {
	if (qr.is(t)) {
		const e = [];
		for (const i of t)
			if (i)
				try {
					i.dispose();
				} catch (s) {
					e.push(s);
				}
		if (e.length === 1) throw e[0];
		if (e.length > 1)
			throw new AggregateError(
				e,
				"Encountered errors while disposing of store",
			);
		return Array.isArray(t) ? [] : t;
	} else if (t) return t.dispose(), t;
}
function qE(...t) {
	const e = ke(() => vt(t));
	return TE(t, e), e;
}
function ke(t) {
	const e = Sa({
		dispose: Ol(() => {
			ka(e), t();
		}),
	});
	return e;
}
var mw,
	Br,
	BE,
	De,
	j,
	zr,
	Tf,
	F = m({
		"out-build/vs/base/common/lifecycle.js"() {
			"use strict";
			if (
				(Ut(),
				nw(),
				xi(),
				Ll(),
				Ml(),
				(mw = !1),
				(Br = null),
				(BE = class v3 {
					constructor() {
						this.b = new Map();
					}
					static {
						this.a = 0;
					}
					c(e) {
						let i = this.b.get(e);
						return (
							i ||
								((i = {
									parent: null,
									source: null,
									isSingleton: !1,
									value: e,
									idx: v3.a++,
								}),
								this.b.set(e, i)),
							i
						);
					}
					trackDisposable(e) {
						const i = this.c(e);
						i.source || (i.source = new Error().stack);
					}
					setParent(e, i) {
						const s = this.c(e);
						s.parent = i;
					}
					markAsDisposed(e) {
						this.b.delete(e);
					}
					markAsSingleton(e) {
						this.c(e).isSingleton = !0;
					}
					f(e, i) {
						const s = i.get(e);
						if (s) return s;
						const r = e.parent ? this.f(this.c(e.parent), i) : e;
						return i.set(e, r), r;
					}
					getTrackedDisposables() {
						const e = new Map();
						return [...this.b.entries()]
							.filter(([, s]) => s.source !== null && !this.f(s, e).isSingleton)
							.flatMap(([s]) => s);
					}
					computeLeakingDisposables(e = 10, i) {
						let s;
						if (i) s = i;
						else {
							const c = new Map(),
								l = [...this.b.values()].filter(
									(d) => d.source !== null && !this.f(d, c).isSingleton,
								);
							if (l.length === 0) return;
							const u = new Set(l.map((d) => d.value));
							if (
								((s = l.filter((d) => !(d.parent && u.has(d.parent)))),
								s.length === 0)
							)
								throw new Error("There are cyclic diposable chains!");
						}
						if (!s) return;
						function r(c) {
							function l(d, f) {
								for (
									;
									d.length > 0 &&
									f.some((p) =>
										typeof p == "string" ? p === d[0] : d[0].match(p),
									);
								)
									d.shift();
							}
							const u = c.source
								.split(`
`)
								.map((d) => d.trim().replace("at ", ""))
								.filter((d) => d !== "");
							return (
								l(u, [
									"Error",
									/^trackDisposable \(.*\)$/,
									/^DisposableTracker.trackDisposable \(.*\)$/,
								]),
								u.reverse()
							);
						}
						const n = new pw();
						for (const c of s) {
							const l = r(c);
							for (let u = 0; u <= l.length; u++)
								n.add(
									l.slice(0, u).join(`
`),
									c,
								);
						}
						s.sort(RE((c) => c.idx, sw));
						let o = "",
							a = 0;
						for (const c of s.slice(0, e)) {
							a++;
							const l = r(c),
								u = [];
							for (let d = 0; d < l.length; d++) {
								let f = l[d];
								f = `(shared with ${
									n.get(
										l.slice(0, d + 1).join(`
`),
									).size
								}/${s.length} leaks) at ${f}`;
								const v = n.get(
										l.slice(0, d).join(`
`),
									),
									g = LE(
										[...v].map((b) => r(b)[d]),
										(b) => b,
									);
								delete g[l[d]];
								for (const [b, y] of Object.entries(g))
									u.unshift(
										`    - stacktraces of ${y.length} other leaks continue with ${b}`,
									);
								u.unshift(f);
							}
							o += `


==================== Leaking disposable ${a}/${s.length}: ${c.value.constructor.name} ====================
${u.join(`
`)}
============================================================

`;
						}
						return (
							s.length > e &&
								(o += `


... and ${s.length - e} more leaking disposables

`),
							{ leaks: s, details: o }
						);
					}
				}),
				mw)
			) {
				const t = "__is_disposable_tracked__";
				jE(
					new (class {
						trackDisposable(e) {
							const i = new Error("Potentially leaked disposable").stack;
							setTimeout(() => {
								e[t] || console.log(i);
							}, 3e3);
						}
						setParent(e, i) {
							if (e && e !== j.None)
								try {
									e[t] = !0;
								} catch {}
						}
						markAsDisposed(e) {
							if (e && e !== j.None)
								try {
									e[t] = !0;
								} catch {}
						}
						markAsSingleton(e) {}
					})(),
				);
			}
			(De = class y3 {
				static {
					this.DISABLE_DISPOSED_WARNING = !1;
				}
				constructor() {
					(this.f = new Set()), (this.g = !1), Sa(this);
				}
				dispose() {
					this.g || (ka(this), (this.g = !0), this.clear());
				}
				get isDisposed() {
					return this.g;
				}
				clear() {
					if (this.f.size !== 0)
						try {
							vt(this.f);
						} finally {
							this.f.clear();
						}
				}
				add(e) {
					if (!e) return e;
					if (e === this)
						throw new Error("Cannot register a disposable on itself!");
					return (
						xa(e, this),
						this.g
							? y3.DISABLE_DISPOSED_WARNING ||
								console.warn(
									new Error(
										"Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!",
									).stack,
								)
							: this.f.add(e),
						e
					);
				}
				delete(e) {
					if (e) {
						if (e === this)
							throw new Error("Cannot dispose a disposable on itself!");
						this.f.delete(e), e.dispose();
					}
				}
				deleteAndLeak(e) {
					e && this.f.has(e) && (this.f.delete(e), xa(e, null));
				}
			}),
				(j = class {
					static {
						this.None = Object.freeze({ dispose() {} });
					}
					constructor() {
						(this.B = new De()), Sa(this), xa(this.B, this);
					}
					dispose() {
						ka(this), this.B.dispose();
					}
					D(t) {
						if (t === this)
							throw new Error("Cannot register a disposable on itself!");
						return this.B.add(t);
					}
				}),
				(zr = class {
					constructor() {
						(this.b = !1), Sa(this);
					}
					get value() {
						return this.b ? void 0 : this.a;
					}
					set value(t) {
						this.b ||
							t === this.a ||
							(this.a?.dispose(), t && xa(t, this), (this.a = t));
					}
					clear() {
						this.value = void 0;
					}
					dispose() {
						(this.b = !0), ka(this), this.a?.dispose(), (this.a = void 0);
					}
					clearAndLeak() {
						const t = this.a;
						return (this.a = void 0), t && xa(t, null), t;
					}
				}),
				(Tf = class {
					constructor() {
						(this.a = new Map()), (this.b = !1), Sa(this);
					}
					dispose() {
						ka(this), (this.b = !0), this.clearAndDisposeAll();
					}
					clearAndDisposeAll() {
						if (this.a.size)
							try {
								vt(this.a.values());
							} finally {
								this.a.clear();
							}
					}
					has(t) {
						return this.a.has(t);
					}
					get size() {
						return this.a.size;
					}
					get(t) {
						return this.a.get(t);
					}
					set(t, e, i = !1) {
						this.b &&
							console.warn(
								new Error(
									"Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!",
								).stack,
							),
							i || this.a.get(t)?.dispose(),
							this.a.set(t, e);
					}
					deleteAndDispose(t) {
						this.a.get(t)?.dispose(), this.a.delete(t);
					}
					deleteAndLeak(t) {
						const e = this.a.get(t);
						return this.a.delete(t), e;
					}
					keys() {
						return this.a.keys();
					}
					values() {
						return this.a.values();
					}
					[Symbol.iterator]() {
						return this.a[Symbol.iterator]();
					}
				});
		},
	}),
	Qe,
	Uf,
	gw = m({
		"out-build/vs/base/common/linkedList.js"() {
			"use strict";
			(Qe = class cf {
				static {
					this.Undefined = new cf(void 0);
				}
				constructor(e) {
					(this.element = e),
						(this.next = cf.Undefined),
						(this.prev = cf.Undefined);
				}
			}),
				(Uf = class {
					constructor() {
						(this.a = Qe.Undefined), (this.b = Qe.Undefined), (this.c = 0);
					}
					get size() {
						return this.c;
					}
					get first() {
						return this.a;
					}
					isEmpty() {
						return this.a === Qe.Undefined;
					}
					clear() {
						let t = this.a;
						for (; t !== Qe.Undefined; ) {
							const e = t.next;
							(t.prev = Qe.Undefined), (t.next = Qe.Undefined), (t = e);
						}
						(this.a = Qe.Undefined), (this.b = Qe.Undefined), (this.c = 0);
					}
					unshift(t) {
						return this.d(t, !1);
					}
					push(t) {
						return this.d(t, !0);
					}
					d(t, e) {
						const i = new Qe(t);
						if (this.a === Qe.Undefined) (this.a = i), (this.b = i);
						else if (e) {
							const r = this.b;
							(this.b = i), (i.prev = r), (r.next = i);
						} else {
							const r = this.a;
							(this.a = i), (i.next = r), (r.prev = i);
						}
						this.c += 1;
						let s = !1;
						return () => {
							s || ((s = !0), this.e(i));
						};
					}
					shift() {
						if (this.a !== Qe.Undefined) {
							const t = this.a.element;
							return this.e(this.a), t;
						}
					}
					pop() {
						if (this.b !== Qe.Undefined) {
							const t = this.b.element;
							return this.e(this.b), t;
						}
					}
					remove(t) {
						this.e(t);
					}
					e(t) {
						if (t.prev !== Qe.Undefined && t.next !== Qe.Undefined) {
							const e = t.prev;
							(e.next = t.next), (t.next.prev = e);
						} else
							t.prev === Qe.Undefined && t.next === Qe.Undefined
								? ((this.a = Qe.Undefined), (this.b = Qe.Undefined))
								: t.next === Qe.Undefined
									? ((this.b = this.b.prev), (this.b.next = Qe.Undefined))
									: t.prev === Qe.Undefined &&
										((this.a = this.a.next), (this.a.prev = Qe.Undefined));
						this.c -= 1;
					}
					*[Symbol.iterator]() {
						let t = this.a;
						for (; t !== Qe.Undefined; ) yield t.element, (t = t.next);
					}
				});
		},
	}),
	ww,
	Hr,
	Gn = m({
		"out-build/vs/base/common/stopwatch.js"() {
			"use strict";
			(ww =
				globalThis.performance &&
				typeof globalThis.performance.now == "function"),
				(Hr = class b3 {
					static create(e) {
						return new b3(e);
					}
					constructor(e) {
						(this.c =
							ww && e === !1
								? Date.now
								: globalThis.performance.now.bind(globalThis.performance)),
							(this.a = this.c()),
							(this.b = -1);
					}
					stop() {
						this.b = this.c();
					}
					reset() {
						(this.a = this.c()), (this.b = -1);
					}
					elapsed() {
						return this.b !== -1 ? this.b - this.a : this.c() - this.a;
					}
				});
		},
	}),
	vw,
	qf,
	yw,
	x,
	bw,
	Bf,
	Ew,
	Fl,
	Sw,
	kw,
	xw,
	Da,
	Dw,
	Pw,
	Nl,
	$,
	$w,
	Wl,
	Aw,
	zf,
	q = m({
		"out-build/vs/base/common/event.js"() {
			"use strict";
			if (
				(nw(),
				Ae(),
				Ll(),
				F(),
				gw(),
				Gn(),
				(vw = !1),
				(qf = !1),
				(yw = !1),
				(function (t) {
					t.None = () => j.None;
					function e(L) {
						if (yw) {
							const { onDidAddListener: O } = L,
								V = Fl.create();
							let U = 0;
							L.onDidAddListener = () => {
								++U === 2 &&
									(console.warn(
										"snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here",
									),
									V.print()),
									O?.();
							};
						}
					}
					function i(L, O) {
						return p(L, () => {}, 0, void 0, !0, void 0, O);
					}
					t.defer = i;
					function s(L) {
						return (O, V = null, U) => {
							let te = !1,
								fe;
							return (
								(fe = L(
									($e) => {
										if (!te)
											return fe ? fe.dispose() : (te = !0), O.call(V, $e);
									},
									null,
									U,
								)),
								te && fe.dispose(),
								fe
							);
						};
					}
					t.once = s;
					function r(L, O) {
						return t.once(t.filter(L, O));
					}
					t.onceIf = r;
					function n(L, O, V) {
						return d(
							(U, te = null, fe) => L(($e) => U.call(te, O($e)), null, fe),
							V,
						);
					}
					t.map = n;
					function o(L, O, V) {
						return d(
							(U, te = null, fe) =>
								L(
									($e) => {
										O($e), U.call(te, $e);
									},
									null,
									fe,
								),
							V,
						);
					}
					t.forEach = o;
					function a(L, O, V) {
						return d(
							(U, te = null, fe) =>
								L(($e) => O($e) && U.call(te, $e), null, fe),
							V,
						);
					}
					t.filter = a;
					function c(L) {
						return L;
					}
					t.signal = c;
					function l(...L) {
						return (O, V = null, U) => {
							const te = qE(...L.map((fe) => fe(($e) => O.call(V, $e))));
							return f(te, U);
						};
					}
					t.any = l;
					function u(L, O, V, U) {
						let te = V;
						return n(L, (fe) => ((te = O(te, fe)), te), U);
					}
					t.reduce = u;
					function d(L, O) {
						let V;
						const U = {
							onWillAddFirstListener() {
								V = L(te.fire, te);
							},
							onDidRemoveLastListener() {
								V?.dispose();
							},
						};
						O || e(U);
						const te = new $(U);
						return O?.add(te), te.event;
					}
					function f(L, O) {
						return O instanceof Array ? O.push(L) : O && O.add(L), L;
					}
					function p(L, O, V = 100, U = !1, te = !1, fe, $e) {
						let st,
							dt,
							js,
							Wr = 0,
							Ts;
						const Un = {
							leakWarningThreshold: fe,
							onWillAddFirstListener() {
								st = L((Sl) => {
									Wr++,
										(dt = O(dt, Sl)),
										U && !js && (hs.fire(dt), (dt = void 0)),
										(Ts = () => {
											const kl = dt;
											(dt = void 0),
												(js = void 0),
												(!U || Wr > 1) && hs.fire(kl),
												(Wr = 0);
										}),
										typeof V == "number"
											? (clearTimeout(js), (js = setTimeout(Ts, V)))
											: js === void 0 && ((js = 0), queueMicrotask(Ts));
								});
							},
							onWillRemoveListener() {
								te && Wr > 0 && Ts?.();
							},
							onDidRemoveLastListener() {
								(Ts = void 0), st.dispose();
							},
						};
						$e || e(Un);
						const hs = new $(Un);
						return $e?.add(hs), hs.event;
					}
					t.debounce = p;
					function v(L, O = 0, V) {
						return t.debounce(
							L,
							(U, te) => (U ? (U.push(te), U) : [te]),
							O,
							void 0,
							!0,
							void 0,
							V,
						);
					}
					t.accumulate = v;
					function g(L, O = (U, te) => U === te, V) {
						let U = !0,
							te;
						return a(
							L,
							(fe) => {
								const $e = U || !O(fe, te);
								return (U = !1), (te = fe), $e;
							},
							V,
						);
					}
					t.latch = g;
					function b(L, O, V) {
						return [t.filter(L, O, V), t.filter(L, (U) => !O(U), V)];
					}
					t.split = b;
					function y(L, O = !1, V = [], U) {
						let te = V.slice(),
							fe = L((dt) => {
								te ? te.push(dt) : st.fire(dt);
							});
						U && U.add(fe);
						const $e = () => {
								te?.forEach((dt) => st.fire(dt)), (te = null);
							},
							st = new $({
								onWillAddFirstListener() {
									fe || ((fe = L((dt) => st.fire(dt))), U && U.add(fe));
								},
								onDidAddFirstListener() {
									te && (O ? setTimeout($e) : $e());
								},
								onDidRemoveLastListener() {
									fe && fe.dispose(), (fe = null);
								},
							});
						return U && U.add(st), st.event;
					}
					t.buffer = y;
					function k(L, O) {
						return (U, te, fe) => {
							const $e = O(new C());
							return L(
								function (st) {
									const dt = $e.evaluate(st);
									dt !== I && U.call(te, dt);
								},
								void 0,
								fe,
							);
						};
					}
					t.chain = k;
					const I = Symbol("HaltChainable");
					class C {
						constructor() {
							this.f = [];
						}
						map(O) {
							return this.f.push(O), this;
						}
						forEach(O) {
							return this.f.push((V) => (O(V), V)), this;
						}
						filter(O) {
							return this.f.push((V) => (O(V) ? V : I)), this;
						}
						reduce(O, V) {
							let U = V;
							return this.f.push((te) => ((U = O(U, te)), U)), this;
						}
						latch(O = (V, U) => V === U) {
							let V = !0,
								U;
							return (
								this.f.push((te) => {
									const fe = V || !O(te, U);
									return (V = !1), (U = te), fe ? te : I;
								}),
								this
							);
						}
						evaluate(O) {
							for (const V of this.f) if (((O = V(O)), O === I)) break;
							return O;
						}
					}
					function _(L, O, V = (U) => U) {
						const U = (...st) => $e.fire(V(...st)),
							te = () => L.on(O, U),
							fe = () => L.removeListener(O, U),
							$e = new $({
								onWillAddFirstListener: te,
								onDidRemoveLastListener: fe,
							});
						return $e.event;
					}
					t.fromNodeEventEmitter = _;
					function K(L, O, V = (U) => U) {
						const U = (...st) => $e.fire(V(...st)),
							te = () => L.addEventListener(O, U),
							fe = () => L.removeEventListener(O, U),
							$e = new $({
								onWillAddFirstListener: te,
								onDidRemoveLastListener: fe,
							});
						return $e.event;
					}
					t.fromDOMEventEmitter = K;
					function se(L) {
						return new Promise((O) => s(L)(O));
					}
					t.toPromise = se;
					function xe(L) {
						const O = new $();
						return (
							L.then(
								(V) => {
									O.fire(V);
								},
								() => {
									O.fire(void 0);
								},
							).finally(() => {
								O.dispose();
							}),
							O.event
						);
					}
					t.fromPromise = xe;
					function W(L, O) {
						return L((V) => O.fire(V));
					}
					t.forward = W;
					function ye(L, O, V) {
						return O(V), L((U) => O(U));
					}
					t.runAndSubscribe = ye;
					class at {
						constructor(O, V) {
							(this._observable = O), (this.f = 0), (this.g = !1);
							const U = {
								onWillAddFirstListener: () => {
									O.addObserver(this), this._observable.reportChanges();
								},
								onDidRemoveLastListener: () => {
									O.removeObserver(this);
								},
							};
							V || e(U), (this.emitter = new $(U)), V && V.add(this.emitter);
						}
						beginUpdate(O) {
							this.f++;
						}
						handlePossibleChange(O) {}
						handleChange(O, V) {
							this.g = !0;
						}
						endUpdate(O) {
							this.f--,
								this.f === 0 &&
									(this._observable.reportChanges(),
									this.g &&
										((this.g = !1), this.emitter.fire(this._observable.get())));
						}
					}
					function ue(L, O) {
						return new at(L, O).emitter.event;
					}
					t.fromObservable = ue;
					function Jt(L) {
						return (O, V, U) => {
							let te = 0,
								fe = !1;
							const $e = {
								beginUpdate() {
									te++;
								},
								endUpdate() {
									te--,
										te === 0 &&
											(L.reportChanges(), fe && ((fe = !1), O.call(V)));
								},
								handlePossibleChange() {},
								handleChange() {
									fe = !0;
								},
							};
							L.addObserver($e), L.reportChanges();
							const st = {
								dispose() {
									L.removeObserver($e);
								},
							};
							return (
								U instanceof De ? U.add(st) : Array.isArray(U) && U.push(st), st
							);
						};
					}
					t.fromObservableLight = Jt;
				})(x || (x = {})),
				(bw = class c0 {
					static {
						this.all = new Set();
					}
					static {
						this.f = 0;
					}
					constructor(e) {
						(this.listenerCount = 0),
							(this.invocationCount = 0),
							(this.elapsedOverall = 0),
							(this.durations = []),
							(this.name = `${e}_${c0.f++}`),
							c0.all.add(this);
					}
					start(e) {
						(this.g = new Hr()), (this.listenerCount = e);
					}
					stop() {
						if (this.g) {
							const e = this.g.elapsed();
							this.durations.push(e),
								(this.elapsedOverall += e),
								(this.invocationCount += 1),
								(this.g = void 0);
						}
					}
				}),
				(Bf = -1),
				(Ew = class E3 {
					static {
						this.f = 1;
					}
					constructor(e, i, s = (E3.f++).toString(16).padStart(3, "0")) {
						(this.j = e), (this.threshold = i), (this.name = s), (this.h = 0);
					}
					dispose() {
						this.g?.clear();
					}
					check(e, i) {
						const s = this.threshold;
						if (s <= 0 || i < s) return;
						this.g || (this.g = new Map());
						const r = this.g.get(e.value) || 0;
						if ((this.g.set(e.value, r + 1), (this.h -= 1), this.h <= 0)) {
							this.h = s * 0.5;
							const [n, o] = this.getMostFrequentStack(),
								a = `[${this.name}] potential listener LEAK detected, having ${i} listeners already. MOST frequent listener (${o}):`;
							console.warn(a), console.warn(n);
							const c = new Sw(a, n);
							this.j(c);
						}
						return () => {
							const n = this.g.get(e.value) || 0;
							this.g.set(e.value, n - 1);
						};
					}
					getMostFrequentStack() {
						if (!this.g) return;
						let e,
							i = 0;
						for (const [s, r] of this.g)
							(!e || i < r) && ((e = [s, r]), (i = r));
						return e;
					}
				}),
				(Fl = class S3 {
					static create() {
						const e = new Error();
						return new S3(e.stack ?? "");
					}
					constructor(e) {
						this.value = e;
					}
					print() {
						console.warn(
							this.value
								.split(`
`)
								.slice(2)
								.join(`
`),
						);
					}
				}),
				(Sw = class extends Error {
					constructor(t, e) {
						super(t), (this.name = "ListenerLeakError"), (this.stack = e);
					}
				}),
				(kw = class extends Error {
					constructor(t, e) {
						super(t), (this.name = "ListenerRefusalError"), (this.stack = e);
					}
				}),
				(xw = 0),
				(Da = class {
					constructor(t) {
						(this.value = t), (this.id = xw++);
					}
				}),
				(Dw = 2),
				(Pw = (t, e) => {
					if (t instanceof Da) e(t);
					else
						for (let i = 0; i < t.length; i++) {
							const s = t[i];
							s && e(s);
						}
				}),
				vw)
			) {
				const t = [];
				setInterval(() => {
					t.length !== 0 &&
						(console.warn(
							"[LEAKING LISTENERS] GC'ed these listeners that were NOT yet disposed:",
						),
						console.warn(
							t.join(`
`),
						),
						(t.length = 0));
				}, 3e3),
					(Nl = new FinalizationRegistry((e) => {
						typeof e == "string" && t.push(e);
					}));
			}
			($ = class {
				constructor(t) {
					(this.z = 0),
						(this.f = t),
						(this.g =
							Bf > 0 || this.f?.leakWarningThreshold
								? new Ew(
										t?.onListenerError ?? Ot,
										this.f?.leakWarningThreshold ?? Bf,
									)
								: void 0),
						(this.j = this.f?._profName ? new bw(this.f._profName) : void 0),
						(this.w = this.f?.deliveryQueue);
				}
				dispose() {
					if (!this.m) {
						if (
							((this.m = !0),
							this.w?.current === this && this.w.reset(),
							this.u)
						) {
							if (qf) {
								const t = this.u;
								queueMicrotask(() => {
									Pw(t, (e) => e.stack?.print());
								});
							}
							(this.u = void 0), (this.z = 0);
						}
						this.f?.onDidRemoveLastListener?.(), this.g?.dispose();
					}
				}
				get event() {
					return (
						(this.q ??= (t, e, i) => {
							if (this.g && this.z > this.g.threshold ** 2) {
								const a = `[${this.g.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this.z} vs ${this.g.threshold})`;
								console.warn(a);
								const c = this.g.getMostFrequentStack() ?? [
										"UNKNOWN stack",
										-1,
									],
									l = new kw(
										`${a}. HINT: Stack shows most frequent listener (${c[1]}-times)`,
										c[0],
									);
								return (this.f?.onListenerError || Ot)(l), j.None;
							}
							if (this.m) return j.None;
							e && (t = t.bind(e));
							const s = new Da(t);
							let r, n;
							this.g &&
								this.z >= Math.ceil(this.g.threshold * 0.2) &&
								((s.stack = Fl.create()),
								(r = this.g.check(s.stack, this.z + 1))),
								qf && (s.stack = n ?? Fl.create()),
								this.u
									? this.u instanceof Da
										? ((this.w ??= new $w()), (this.u = [this.u, s]))
										: this.u.push(s)
									: (this.f?.onWillAddFirstListener?.(this),
										(this.u = s),
										this.f?.onDidAddFirstListener?.(this)),
								this.f?.onDidAddListener?.(this),
								this.z++;
							const o = ke(() => {
								Nl?.unregister(o), r?.(), this.A(s);
							});
							if (
								(i instanceof De ? i.add(o) : Array.isArray(i) && i.push(o), Nl)
							) {
								const a = new Error().stack
										.split(`
`)
										.slice(2, 3)
										.join(`
`)
										.trim(),
									c =
										/(file:|vscode-file:\/\/vscode-app)?(\/[^:]*:\d+:\d+)/.exec(
											a,
										);
								Nl.register(o, c?.[2] ?? a, o);
							}
							return o;
						}),
						this.q
					);
				}
				A(t) {
					if ((this.f?.onWillRemoveListener?.(this), !this.u)) return;
					if (this.z === 1) {
						(this.u = void 0),
							this.f?.onDidRemoveLastListener?.(this),
							(this.z = 0);
						return;
					}
					const e = this.u,
						i = e.indexOf(t);
					if (i === -1)
						throw (
							(console.log("disposed?", this.m),
							console.log("size?", this.z),
							console.log("arr?", JSON.stringify(this.u)),
							new Error("Attempted to dispose unknown listener"))
						);
					this.z--, (e[i] = void 0);
					const s = this.w.current === this;
					if (this.z * Dw <= e.length) {
						let r = 0;
						for (let n = 0; n < e.length; n++)
							e[n]
								? (e[r++] = e[n])
								: s &&
									r < this.w.end &&
									(this.w.end--, r < this.w.i && this.w.i--);
						e.length = r;
					}
				}
				B(t, e) {
					if (!t) return;
					const i = this.f?.onListenerError || Ot;
					if (!i) {
						t.value(e);
						return;
					}
					try {
						t.value(e);
					} catch (s) {
						i(s);
					}
				}
				C(t) {
					const e = t.current.u;
					for (; t.i < t.end; ) this.B(e[t.i++], t.value);
					t.reset();
				}
				fire(t) {
					if (
						(this.w?.current && (this.C(this.w), this.j?.stop()),
						this.j?.start(this.z),
						this.u)
					)
						if (this.u instanceof Da) this.B(this.u, t);
						else {
							const e = this.w;
							e.enqueue(this, t, this.u.length), this.C(e);
						}
					this.j?.stop();
				}
				hasListeners() {
					return this.z > 0;
				}
			}),
				($w = class {
					constructor() {
						(this.i = -1), (this.end = 0);
					}
					enqueue(t, e, i) {
						(this.i = 0), (this.end = i), (this.current = t), (this.value = e);
					}
					reset() {
						(this.i = this.end), (this.current = void 0), (this.value = void 0);
					}
				}),
				(Wl = class extends $ {
					get isPaused() {
						return this.h !== 0;
					}
					constructor(t) {
						super(t), (this.h = 0), (this.s = new Uf()), (this.t = t?.merge);
					}
					pause() {
						this.h++;
					}
					resume() {
						if (this.h !== 0 && --this.h === 0)
							if (this.t) {
								if (this.s.size > 0) {
									const t = Array.from(this.s);
									this.s.clear(), super.fire(this.t(t));
								}
							} else
								for (; !this.h && this.s.size !== 0; )
									super.fire(this.s.shift());
					}
					fire(t) {
						this.z && (this.h !== 0 ? this.s.push(t) : super.fire(t));
					}
				}),
				(Aw = class {
					constructor() {
						(this.g = !1),
							(this.h = []),
							(this.f = new $({
								onWillAddFirstListener: () => this.j(),
								onDidRemoveLastListener: () => this.k(),
							}));
					}
					get event() {
						return this.f.event;
					}
					add(t) {
						const e = { event: t, listener: null };
						return (
							this.h.push(e),
							this.g && this.m(e),
							ke(
								Ol(() => {
									this.g && this.o(e);
									const s = this.h.indexOf(e);
									this.h.splice(s, 1);
								}),
							)
						);
					}
					j() {
						(this.g = !0), this.h.forEach((t) => this.m(t));
					}
					k() {
						(this.g = !1), this.h.forEach((t) => this.o(t));
					}
					m(t) {
						t.listener = t.event((e) => this.f.fire(e));
					}
					o(t) {
						t.listener?.dispose(), (t.listener = null);
					}
					dispose() {
						this.f.dispose();
						for (const t of this.h) t.listener?.dispose();
						this.h = [];
					}
				}),
				(zf = class {
					constructor() {
						(this.f = !1),
							(this.g = x.None),
							(this.h = j.None),
							(this.j = new $({
								onDidAddFirstListener: () => {
									(this.f = !0), (this.h = this.g(this.j.fire, this.j));
								},
								onDidRemoveLastListener: () => {
									(this.f = !1), this.h.dispose();
								},
							})),
							(this.event = this.j.event);
					}
					set input(t) {
						(this.g = t),
							this.f && (this.h.dispose(), (this.h = t(this.j.fire, this.j)));
					}
					dispose() {
						this.h.dispose(), this.j.dispose();
					}
				});
		},
	});
function mt(t) {
	return typeof t == "string";
}
function Lt(t) {
	return (
		typeof t == "object" &&
		t !== null &&
		!Array.isArray(t) &&
		!(t instanceof RegExp) &&
		!(t instanceof Date)
	);
}
function zE(t) {
	const e = Object.getPrototypeOf(Uint8Array);
	return typeof t == "object" && t instanceof e;
}
function jl(t) {
	return typeof t == "number" && !isNaN(t);
}
function Iw(t) {
	return t === !0 || t === !1;
}
function zs(t) {
	return typeof t > "u";
}
function Yt(t) {
	return zs(t) || t === null;
}
function HE(t, e) {
	if (!t)
		throw new Error(e ? `Unexpected type, expected '${e}'` : "Unexpected type");
}
function Pa(t) {
	if (Yt(t)) throw new Error("Assertion Failed: argument is undefined or null");
	return t;
}
function Hf(t) {
	if (!Lt(t)) return !1;
	for (const e in t) if (_w.call(t, e)) return !1;
	return !0;
}
function Cw(t) {
	return typeof t == "function";
}
function jF(t) {
	return t;
}
var _w,
	Ie = m({
		"out-build/vs/base/common/types.js"() {
			"use strict";
			_w = Object.prototype.hasOwnProperty;
		},
	}),
	Vr,
	Tl,
	ms,
	Di,
	Vf,
	Rw,
	gs = m({
		"out-build/vs/base/common/process.js"() {
			"use strict";
			if (
				(z(),
				(Tl = globalThis.vscode),
				typeof Tl < "u" && typeof Tl.process < "u")
			) {
				const t = Tl.process;
				Vr = {
					get platform() {
						return t.platform;
					},
					get arch() {
						return t.arch;
					},
					get env() {
						return t.env;
					},
					cwd() {
						return t.cwd();
					},
				};
			} else
				typeof process < "u" && typeof process?.versions?.node == "string"
					? (Vr = {
							get platform() {
								return process.platform;
							},
							get arch() {
								return process.arch;
							},
							get env() {
								return process.env;
							},
							cwd() {
								return process.env.VSCODE_CWD || process.cwd();
							},
						})
					: (Vr = {
							get platform() {
								return T ? "win32" : N ? "darwin" : "linux";
							},
							get arch() {},
							get env() {
								return {};
							},
							cwd() {
								return "/";
							},
						});
			(ms = Vr.cwd), (Di = Vr.env), (Vf = Vr.platform), (Rw = Vr.arch);
		},
	});
function VE(t, e) {
	if (t === null || typeof t != "object") throw new Jf(e, "Object", t);
}
function lt(t, e) {
	if (typeof t != "string") throw new Jf(e, "string", t);
}
function pe(t) {
	return t === Pt || t === ci;
}
function Gf(t) {
	return t === Pt;
}
function dr(t) {
	return (t >= Lw && t <= Fw) || (t >= Mw && t <= Nw);
}
function Ul(t, e, i, s) {
	let r = "",
		n = 0,
		o = -1,
		a = 0,
		c = 0;
	for (let l = 0; l <= t.length; ++l) {
		if (l < t.length) c = t.charCodeAt(l);
		else {
			if (s(c)) break;
			c = Pt;
		}
		if (s(c)) {
			if (!(o === l - 1 || a === 1))
				if (a === 2) {
					if (
						r.length < 2 ||
						n !== 2 ||
						r.charCodeAt(r.length - 1) !== Hs ||
						r.charCodeAt(r.length - 2) !== Hs
					) {
						if (r.length > 2) {
							const u = r.lastIndexOf(i);
							u === -1
								? ((r = ""), (n = 0))
								: ((r = r.slice(0, u)), (n = r.length - 1 - r.lastIndexOf(i))),
								(o = l),
								(a = 0);
							continue;
						} else if (r.length !== 0) {
							(r = ""), (n = 0), (o = l), (a = 0);
							continue;
						}
					}
					e && ((r += r.length > 0 ? `${i}..` : ".."), (n = 2));
				} else
					r.length > 0
						? (r += `${i}${t.slice(o + 1, l)}`)
						: (r = t.slice(o + 1, l)),
						(n = l - o - 1);
			(o = l), (a = 0);
		} else c === Hs && a !== -1 ? ++a : (a = -1);
	}
	return r;
}
function GE(t) {
	return t ? `${t[0] === "." ? "" : "."}${t}` : "";
}
function Ow(t, e) {
	VE(e, "pathObject");
	const i = e.dir || e.root,
		s = e.base || `${e.name || ""}${GE(e.ext)}`;
	return i ? (i === e.root ? `${i}${s}` : `${i}${t}${s}`) : s;
}
var Lw,
	Mw,
	Fw,
	Nw,
	Hs,
	Pt,
	ci,
	Vs,
	Ww,
	Jf,
	li,
	ze,
	jw,
	oe,
	ui,
	Gr,
	M,
	zi,
	Tw,
	Ke,
	Te,
	ql,
	JE,
	XE,
	KE,
	Bt,
	Bl,
	ge = m({
		"out-build/vs/base/common/path.js"() {
			"use strict";
			gs(),
				(Lw = 65),
				(Mw = 97),
				(Fw = 90),
				(Nw = 122),
				(Hs = 46),
				(Pt = 47),
				(ci = 92),
				(Vs = 58),
				(Ww = 63),
				(Jf = class extends Error {
					constructor(t, e, i) {
						let s;
						typeof e == "string" && e.indexOf("not ") === 0
							? ((s = "must not be"), (e = e.replace(/^not /, "")))
							: (s = "must be");
						const r = t.indexOf(".") !== -1 ? "property" : "argument";
						let n = `The "${t}" ${r} ${s} of type ${e}`;
						(n += `. Received type ${typeof i}`),
							super(n),
							(this.code = "ERR_INVALID_ARG_TYPE");
					}
				}),
				(li = Vf === "win32"),
				(ze = {
					resolve(...t) {
						let e = "",
							i = "",
							s = !1;
						for (let r = t.length - 1; r >= -1; r--) {
							let n;
							if (r >= 0) {
								if (((n = t[r]), lt(n, `paths[${r}]`), n.length === 0))
									continue;
							} else
								e.length === 0
									? (n = ms())
									: ((n = Di[`=${e}`] || ms()),
										(n === void 0 ||
											(n.slice(0, 2).toLowerCase() !== e.toLowerCase() &&
												n.charCodeAt(2) === ci)) &&
											(n = `${e}\\`));
							const o = n.length;
							let a = 0,
								c = "",
								l = !1;
							const u = n.charCodeAt(0);
							if (o === 1) pe(u) && ((a = 1), (l = !0));
							else if (pe(u))
								if (((l = !0), pe(n.charCodeAt(1)))) {
									let d = 2,
										f = d;
									for (; d < o && !pe(n.charCodeAt(d)); ) d++;
									if (d < o && d !== f) {
										const p = n.slice(f, d);
										for (f = d; d < o && pe(n.charCodeAt(d)); ) d++;
										if (d < o && d !== f) {
											for (f = d; d < o && !pe(n.charCodeAt(d)); ) d++;
											(d === o || d !== f) &&
												((c = `\\\\${p}\\${n.slice(f, d)}`), (a = d));
										}
									}
								} else a = 1;
							else
								dr(u) &&
									n.charCodeAt(1) === Vs &&
									((c = n.slice(0, 2)),
									(a = 2),
									o > 2 && pe(n.charCodeAt(2)) && ((l = !0), (a = 3)));
							if (c.length > 0)
								if (e.length > 0) {
									if (c.toLowerCase() !== e.toLowerCase()) continue;
								} else e = c;
							if (s) {
								if (e.length > 0) break;
							} else if (
								((i = `${n.slice(a)}\\${i}`), (s = l), l && e.length > 0)
							)
								break;
						}
						return (
							(i = Ul(i, !s, "\\", pe)), s ? `${e}\\${i}` : `${e}${i}` || "."
						);
					},
					normalize(t) {
						lt(t, "path");
						const e = t.length;
						if (e === 0) return ".";
						let i = 0,
							s,
							r = !1;
						const n = t.charCodeAt(0);
						if (e === 1) return Gf(n) ? "\\" : t;
						if (pe(n))
							if (((r = !0), pe(t.charCodeAt(1)))) {
								let a = 2,
									c = a;
								for (; a < e && !pe(t.charCodeAt(a)); ) a++;
								if (a < e && a !== c) {
									const l = t.slice(c, a);
									for (c = a; a < e && pe(t.charCodeAt(a)); ) a++;
									if (a < e && a !== c) {
										for (c = a; a < e && !pe(t.charCodeAt(a)); ) a++;
										if (a === e) return `\\\\${l}\\${t.slice(c)}\\`;
										a !== c && ((s = `\\\\${l}\\${t.slice(c, a)}`), (i = a));
									}
								}
							} else i = 1;
						else
							dr(n) &&
								t.charCodeAt(1) === Vs &&
								((s = t.slice(0, 2)),
								(i = 2),
								e > 2 && pe(t.charCodeAt(2)) && ((r = !0), (i = 3)));
						let o = i < e ? Ul(t.slice(i), !r, "\\", pe) : "";
						return (
							o.length === 0 && !r && (o = "."),
							o.length > 0 && pe(t.charCodeAt(e - 1)) && (o += "\\"),
							s === void 0 ? (r ? `\\${o}` : o) : r ? `${s}\\${o}` : `${s}${o}`
						);
					},
					isAbsolute(t) {
						lt(t, "path");
						const e = t.length;
						if (e === 0) return !1;
						const i = t.charCodeAt(0);
						return (
							pe(i) ||
							(e > 2 && dr(i) && t.charCodeAt(1) === Vs && pe(t.charCodeAt(2)))
						);
					},
					join(...t) {
						if (t.length === 0) return ".";
						let e, i;
						for (let n = 0; n < t.length; ++n) {
							const o = t[n];
							lt(o, "path"),
								o.length > 0 && (e === void 0 ? (e = i = o) : (e += `\\${o}`));
						}
						if (e === void 0) return ".";
						let s = !0,
							r = 0;
						if (typeof i == "string" && pe(i.charCodeAt(0))) {
							++r;
							const n = i.length;
							n > 1 &&
								pe(i.charCodeAt(1)) &&
								(++r, n > 2 && (pe(i.charCodeAt(2)) ? ++r : (s = !1)));
						}
						if (s) {
							for (; r < e.length && pe(e.charCodeAt(r)); ) r++;
							r >= 2 && (e = `\\${e.slice(r)}`);
						}
						return ze.normalize(e);
					},
					relative(t, e) {
						if ((lt(t, "from"), lt(e, "to"), t === e)) return "";
						const i = ze.resolve(t),
							s = ze.resolve(e);
						if (
							i === s ||
							((t = i.toLowerCase()), (e = s.toLowerCase()), t === e)
						)
							return "";
						let r = 0;
						for (; r < t.length && t.charCodeAt(r) === ci; ) r++;
						let n = t.length;
						for (; n - 1 > r && t.charCodeAt(n - 1) === ci; ) n--;
						const o = n - r;
						let a = 0;
						for (; a < e.length && e.charCodeAt(a) === ci; ) a++;
						let c = e.length;
						for (; c - 1 > a && e.charCodeAt(c - 1) === ci; ) c--;
						const l = c - a,
							u = o < l ? o : l;
						let d = -1,
							f = 0;
						for (; f < u; f++) {
							const v = t.charCodeAt(r + f);
							if (v !== e.charCodeAt(a + f)) break;
							v === ci && (d = f);
						}
						if (f !== u) {
							if (d === -1) return s;
						} else {
							if (l > u) {
								if (e.charCodeAt(a + f) === ci) return s.slice(a + f + 1);
								if (f === 2) return s.slice(a + f);
							}
							o > u &&
								(t.charCodeAt(r + f) === ci ? (d = f) : f === 2 && (d = 3)),
								d === -1 && (d = 0);
						}
						let p = "";
						for (f = r + d + 1; f <= n; ++f)
							(f === n || t.charCodeAt(f) === ci) &&
								(p += p.length === 0 ? ".." : "\\..");
						return (
							(a += d),
							p.length > 0
								? `${p}${s.slice(a, c)}`
								: (s.charCodeAt(a) === ci && ++a, s.slice(a, c))
						);
					},
					toNamespacedPath(t) {
						if (typeof t != "string" || t.length === 0) return t;
						const e = ze.resolve(t);
						if (e.length <= 2) return t;
						if (e.charCodeAt(0) === ci) {
							if (e.charCodeAt(1) === ci) {
								const i = e.charCodeAt(2);
								if (i !== Ww && i !== Hs) return `\\\\?\\UNC\\${e.slice(2)}`;
							}
						} else if (
							dr(e.charCodeAt(0)) &&
							e.charCodeAt(1) === Vs &&
							e.charCodeAt(2) === ci
						)
							return `\\\\?\\${e}`;
						return t;
					},
					dirname(t) {
						lt(t, "path");
						const e = t.length;
						if (e === 0) return ".";
						let i = -1,
							s = 0;
						const r = t.charCodeAt(0);
						if (e === 1) return pe(r) ? t : ".";
						if (pe(r)) {
							if (((i = s = 1), pe(t.charCodeAt(1)))) {
								let a = 2,
									c = a;
								for (; a < e && !pe(t.charCodeAt(a)); ) a++;
								if (a < e && a !== c) {
									for (c = a; a < e && pe(t.charCodeAt(a)); ) a++;
									if (a < e && a !== c) {
										for (c = a; a < e && !pe(t.charCodeAt(a)); ) a++;
										if (a === e) return t;
										a !== c && (i = s = a + 1);
									}
								}
							}
						} else
							dr(r) &&
								t.charCodeAt(1) === Vs &&
								((i = e > 2 && pe(t.charCodeAt(2)) ? 3 : 2), (s = i));
						let n = -1,
							o = !0;
						for (let a = e - 1; a >= s; --a)
							if (pe(t.charCodeAt(a))) {
								if (!o) {
									n = a;
									break;
								}
							} else o = !1;
						if (n === -1) {
							if (i === -1) return ".";
							n = i;
						}
						return t.slice(0, n);
					},
					basename(t, e) {
						e !== void 0 && lt(e, "suffix"), lt(t, "path");
						let i = 0,
							s = -1,
							r = !0,
							n;
						if (
							(t.length >= 2 &&
								dr(t.charCodeAt(0)) &&
								t.charCodeAt(1) === Vs &&
								(i = 2),
							e !== void 0 && e.length > 0 && e.length <= t.length)
						) {
							if (e === t) return "";
							let o = e.length - 1,
								a = -1;
							for (n = t.length - 1; n >= i; --n) {
								const c = t.charCodeAt(n);
								if (pe(c)) {
									if (!r) {
										i = n + 1;
										break;
									}
								} else
									a === -1 && ((r = !1), (a = n + 1)),
										o >= 0 &&
											(c === e.charCodeAt(o)
												? --o === -1 && (s = n)
												: ((o = -1), (s = a)));
							}
							return (
								i === s ? (s = a) : s === -1 && (s = t.length), t.slice(i, s)
							);
						}
						for (n = t.length - 1; n >= i; --n)
							if (pe(t.charCodeAt(n))) {
								if (!r) {
									i = n + 1;
									break;
								}
							} else s === -1 && ((r = !1), (s = n + 1));
						return s === -1 ? "" : t.slice(i, s);
					},
					extname(t) {
						lt(t, "path");
						let e = 0,
							i = -1,
							s = 0,
							r = -1,
							n = !0,
							o = 0;
						t.length >= 2 &&
							t.charCodeAt(1) === Vs &&
							dr(t.charCodeAt(0)) &&
							(e = s = 2);
						for (let a = t.length - 1; a >= e; --a) {
							const c = t.charCodeAt(a);
							if (pe(c)) {
								if (!n) {
									s = a + 1;
									break;
								}
								continue;
							}
							r === -1 && ((n = !1), (r = a + 1)),
								c === Hs
									? i === -1
										? (i = a)
										: o !== 1 && (o = 1)
									: i !== -1 && (o = -1);
						}
						return i === -1 ||
							r === -1 ||
							o === 0 ||
							(o === 1 && i === r - 1 && i === s + 1)
							? ""
							: t.slice(i, r);
					},
					format: Ow.bind(null, "\\"),
					parse(t) {
						lt(t, "path");
						const e = { root: "", dir: "", base: "", ext: "", name: "" };
						if (t.length === 0) return e;
						const i = t.length;
						let s = 0,
							r = t.charCodeAt(0);
						if (i === 1)
							return pe(r)
								? ((e.root = e.dir = t), e)
								: ((e.base = e.name = t), e);
						if (pe(r)) {
							if (((s = 1), pe(t.charCodeAt(1)))) {
								let d = 2,
									f = d;
								for (; d < i && !pe(t.charCodeAt(d)); ) d++;
								if (d < i && d !== f) {
									for (f = d; d < i && pe(t.charCodeAt(d)); ) d++;
									if (d < i && d !== f) {
										for (f = d; d < i && !pe(t.charCodeAt(d)); ) d++;
										d === i ? (s = d) : d !== f && (s = d + 1);
									}
								}
							}
						} else if (dr(r) && t.charCodeAt(1) === Vs) {
							if (i <= 2) return (e.root = e.dir = t), e;
							if (((s = 2), pe(t.charCodeAt(2)))) {
								if (i === 3) return (e.root = e.dir = t), e;
								s = 3;
							}
						}
						s > 0 && (e.root = t.slice(0, s));
						let n = -1,
							o = s,
							a = -1,
							c = !0,
							l = t.length - 1,
							u = 0;
						for (; l >= s; --l) {
							if (((r = t.charCodeAt(l)), pe(r))) {
								if (!c) {
									o = l + 1;
									break;
								}
								continue;
							}
							a === -1 && ((c = !1), (a = l + 1)),
								r === Hs
									? n === -1
										? (n = l)
										: u !== 1 && (u = 1)
									: n !== -1 && (u = -1);
						}
						return (
							a !== -1 &&
								(n === -1 || u === 0 || (u === 1 && n === a - 1 && n === o + 1)
									? (e.base = e.name = t.slice(o, a))
									: ((e.name = t.slice(o, n)),
										(e.base = t.slice(o, a)),
										(e.ext = t.slice(n, a)))),
							o > 0 && o !== s ? (e.dir = t.slice(0, o - 1)) : (e.dir = e.root),
							e
						);
					},
					sep: "\\",
					delimiter: ";",
					win32: null,
					posix: null,
				}),
				(jw = (() => {
					if (li) {
						const t = /\\/g;
						return () => {
							const e = ms().replace(t, "/");
							return e.slice(e.indexOf("/"));
						};
					}
					return () => ms();
				})()),
				(oe = {
					resolve(...t) {
						let e = "",
							i = !1;
						for (let s = t.length - 1; s >= -1 && !i; s--) {
							const r = s >= 0 ? t[s] : jw();
							lt(r, `paths[${s}]`),
								r.length !== 0 &&
									((e = `${r}/${e}`), (i = r.charCodeAt(0) === Pt));
						}
						return (
							(e = Ul(e, !i, "/", Gf)), i ? `/${e}` : e.length > 0 ? e : "."
						);
					},
					normalize(t) {
						if ((lt(t, "path"), t.length === 0)) return ".";
						const e = t.charCodeAt(0) === Pt,
							i = t.charCodeAt(t.length - 1) === Pt;
						return (
							(t = Ul(t, !e, "/", Gf)),
							t.length === 0
								? e
									? "/"
									: i
										? "./"
										: "."
								: (i && (t += "/"), e ? `/${t}` : t)
						);
					},
					isAbsolute(t) {
						return lt(t, "path"), t.length > 0 && t.charCodeAt(0) === Pt;
					},
					join(...t) {
						if (t.length === 0) return ".";
						let e;
						for (let i = 0; i < t.length; ++i) {
							const s = t[i];
							lt(s, "path"),
								s.length > 0 && (e === void 0 ? (e = s) : (e += `/${s}`));
						}
						return e === void 0 ? "." : oe.normalize(e);
					},
					relative(t, e) {
						if (
							(lt(t, "from"),
							lt(e, "to"),
							t === e || ((t = oe.resolve(t)), (e = oe.resolve(e)), t === e))
						)
							return "";
						const i = 1,
							s = t.length,
							r = s - i,
							n = 1,
							o = e.length - n,
							a = r < o ? r : o;
						let c = -1,
							l = 0;
						for (; l < a; l++) {
							const d = t.charCodeAt(i + l);
							if (d !== e.charCodeAt(n + l)) break;
							d === Pt && (c = l);
						}
						if (l === a)
							if (o > a) {
								if (e.charCodeAt(n + l) === Pt) return e.slice(n + l + 1);
								if (l === 0) return e.slice(n + l);
							} else
								r > a &&
									(t.charCodeAt(i + l) === Pt ? (c = l) : l === 0 && (c = 0));
						let u = "";
						for (l = i + c + 1; l <= s; ++l)
							(l === s || t.charCodeAt(l) === Pt) &&
								(u += u.length === 0 ? ".." : "/..");
						return `${u}${e.slice(n + c)}`;
					},
					toNamespacedPath(t) {
						return t;
					},
					dirname(t) {
						if ((lt(t, "path"), t.length === 0)) return ".";
						const e = t.charCodeAt(0) === Pt;
						let i = -1,
							s = !0;
						for (let r = t.length - 1; r >= 1; --r)
							if (t.charCodeAt(r) === Pt) {
								if (!s) {
									i = r;
									break;
								}
							} else s = !1;
						return i === -1
							? e
								? "/"
								: "."
							: e && i === 1
								? "//"
								: t.slice(0, i);
					},
					basename(t, e) {
						e !== void 0 && lt(e, "ext"), lt(t, "path");
						let i = 0,
							s = -1,
							r = !0,
							n;
						if (e !== void 0 && e.length > 0 && e.length <= t.length) {
							if (e === t) return "";
							let o = e.length - 1,
								a = -1;
							for (n = t.length - 1; n >= 0; --n) {
								const c = t.charCodeAt(n);
								if (c === Pt) {
									if (!r) {
										i = n + 1;
										break;
									}
								} else
									a === -1 && ((r = !1), (a = n + 1)),
										o >= 0 &&
											(c === e.charCodeAt(o)
												? --o === -1 && (s = n)
												: ((o = -1), (s = a)));
							}
							return (
								i === s ? (s = a) : s === -1 && (s = t.length), t.slice(i, s)
							);
						}
						for (n = t.length - 1; n >= 0; --n)
							if (t.charCodeAt(n) === Pt) {
								if (!r) {
									i = n + 1;
									break;
								}
							} else s === -1 && ((r = !1), (s = n + 1));
						return s === -1 ? "" : t.slice(i, s);
					},
					extname(t) {
						lt(t, "path");
						let e = -1,
							i = 0,
							s = -1,
							r = !0,
							n = 0;
						for (let o = t.length - 1; o >= 0; --o) {
							const a = t.charCodeAt(o);
							if (a === Pt) {
								if (!r) {
									i = o + 1;
									break;
								}
								continue;
							}
							s === -1 && ((r = !1), (s = o + 1)),
								a === Hs
									? e === -1
										? (e = o)
										: n !== 1 && (n = 1)
									: e !== -1 && (n = -1);
						}
						return e === -1 ||
							s === -1 ||
							n === 0 ||
							(n === 1 && e === s - 1 && e === i + 1)
							? ""
							: t.slice(e, s);
					},
					format: Ow.bind(null, "/"),
					parse(t) {
						lt(t, "path");
						const e = { root: "", dir: "", base: "", ext: "", name: "" };
						if (t.length === 0) return e;
						const i = t.charCodeAt(0) === Pt;
						let s;
						i ? ((e.root = "/"), (s = 1)) : (s = 0);
						let r = -1,
							n = 0,
							o = -1,
							a = !0,
							c = t.length - 1,
							l = 0;
						for (; c >= s; --c) {
							const u = t.charCodeAt(c);
							if (u === Pt) {
								if (!a) {
									n = c + 1;
									break;
								}
								continue;
							}
							o === -1 && ((a = !1), (o = c + 1)),
								u === Hs
									? r === -1
										? (r = c)
										: l !== 1 && (l = 1)
									: r !== -1 && (l = -1);
						}
						if (o !== -1) {
							const u = n === 0 && i ? 1 : n;
							r === -1 || l === 0 || (l === 1 && r === o - 1 && r === n + 1)
								? (e.base = e.name = t.slice(u, o))
								: ((e.name = t.slice(u, r)),
									(e.base = t.slice(u, o)),
									(e.ext = t.slice(r, o)));
						}
						return n > 0 ? (e.dir = t.slice(0, n - 1)) : i && (e.dir = "/"), e;
					},
					sep: "/",
					delimiter: ":",
					win32: null,
					posix: null,
				}),
				(oe.win32 = ze.win32 = ze),
				(oe.posix = ze.posix = oe),
				(ui = li ? ze.normalize : oe.normalize),
				(Gr = li ? ze.isAbsolute : oe.isAbsolute),
				(M = li ? ze.join : oe.join),
				(zi = li ? ze.resolve : oe.resolve),
				(Tw = li ? ze.relative : oe.relative),
				(Ke = li ? ze.dirname : oe.dirname),
				(Te = li ? ze.basename : oe.basename),
				(ql = li ? ze.extname : oe.extname),
				(JE = li ? ze.format : oe.format),
				(XE = li ? ze.parse : oe.parse),
				(KE = li ? ze.toNamespacedPath : oe.toNamespacedPath),
				(Bt = li ? ze.sep : oe.sep),
				(Bl = li ? ze.delimiter : oe.delimiter);
		},
	});
function YE(t, e) {
	if (!t.scheme && e)
		throw new Error(
			`[UriError]: Scheme is missing: {scheme: "", authority: "${t.authority}", path: "${t.path}", query: "${t.query}", fragment: "${t.fragment}"}`,
		);
	if (t.scheme && !Bw.test(t.scheme))
		throw new Error("[UriError]: Scheme contains illegal characters.");
	if (t.path) {
		if (t.authority) {
			if (!zw.test(t.path))
				throw new Error(
					'[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character',
				);
		} else if (Hw.test(t.path))
			throw new Error(
				'[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")',
			);
	}
}
function QE(t, e) {
	return !t && !e ? "file" : t;
}
function ZE(t, e) {
	switch (t) {
		case "https":
		case "http":
		case "file":
			e ? e[0] !== Hi && (e = Hi + e) : (e = Hi);
			break;
	}
	return e;
}
function Uw(t, e, i) {
	let s,
		r = -1;
	for (let n = 0; n < t.length; n++) {
		const o = t.charCodeAt(n);
		if (
			(o >= 97 && o <= 122) ||
			(o >= 65 && o <= 90) ||
			(o >= 48 && o <= 57) ||
			o === 45 ||
			o === 46 ||
			o === 95 ||
			o === 126 ||
			(e && o === 47) ||
			(i && o === 91) ||
			(i && o === 93) ||
			(i && o === 58)
		)
			r !== -1 && ((s += encodeURIComponent(t.substring(r, n))), (r = -1)),
				s !== void 0 && (s += t.charAt(n));
		else {
			s === void 0 && (s = t.substr(0, n));
			const a = Yf[o];
			a !== void 0
				? (r !== -1 && ((s += encodeURIComponent(t.substring(r, n))), (r = -1)),
					(s += a))
				: r === -1 && (r = n);
		}
	}
	return (
		r !== -1 && (s += encodeURIComponent(t.substring(r))), s !== void 0 ? s : t
	);
}
function eS(t) {
	let e;
	for (let i = 0; i < t.length; i++) {
		const s = t.charCodeAt(i);
		s === 35 || s === 63
			? (e === void 0 && (e = t.substr(0, i)), (e += Yf[s]))
			: e !== void 0 && (e += t[i]);
	}
	return e !== void 0 ? e : t;
}
function zl(t, e) {
	let i;
	return (
		t.authority && t.path.length > 1 && t.scheme === "file"
			? (i = `//${t.authority}${t.path}`)
			: t.path.charCodeAt(0) === 47 &&
					((t.path.charCodeAt(1) >= 65 && t.path.charCodeAt(1) <= 90) ||
						(t.path.charCodeAt(1) >= 97 && t.path.charCodeAt(1) <= 122)) &&
					t.path.charCodeAt(2) === 58
				? e
					? (i = t.path.substr(1))
					: (i = t.path[1].toLowerCase() + t.path.substr(2))
				: (i = t.path),
		T && (i = i.replace(/\//g, "\\")),
		i
	);
}
function Xf(t, e) {
	const i = e ? eS : Uw;
	let s = "",
		{ scheme: r, authority: n, path: o, query: a, fragment: c } = t;
	if (
		(r && ((s += r), (s += ":")),
		(n || r === "file") && ((s += Hi), (s += Hi)),
		n)
	) {
		let l = n.indexOf("@");
		if (l !== -1) {
			const u = n.substr(0, l);
			(n = n.substr(l + 1)),
				(l = u.lastIndexOf(":")),
				l === -1
					? (s += i(u, !1, !1))
					: ((s += i(u.substr(0, l), !1, !1)),
						(s += ":"),
						(s += i(u.substr(l + 1), !1, !0))),
				(s += "@");
		}
		(n = n.toLowerCase()),
			(l = n.lastIndexOf(":")),
			l === -1
				? (s += i(n, !1, !0))
				: ((s += i(n.substr(0, l), !1, !0)), (s += n.substr(l)));
	}
	if (o) {
		if (o.length >= 3 && o.charCodeAt(0) === 47 && o.charCodeAt(2) === 58) {
			const l = o.charCodeAt(1);
			l >= 65 &&
				l <= 90 &&
				(o = `/${String.fromCharCode(l + 32)}:${o.substr(3)}`);
		} else if (o.length >= 2 && o.charCodeAt(1) === 58) {
			const l = o.charCodeAt(0);
			l >= 65 &&
				l <= 90 &&
				(o = `${String.fromCharCode(l + 32)}:${o.substr(2)}`);
		}
		s += i(o, !0, !1);
	}
	return (
		a && ((s += "?"), (s += i(a, !1, !1))),
		c && ((s += "#"), (s += e ? c : Uw(c, !1, !1))),
		s
	);
}
function qw(t) {
	try {
		return decodeURIComponent(t);
	} catch {
		return t.length > 3 ? t.substr(0, 3) + qw(t.substr(3)) : t;
	}
}
function Hl(t) {
	return t.match(Qf) ? t.replace(Qf, (e) => qw(e)) : t;
}
var Bw,
	zw,
	Hw,
	Ue,
	Hi,
	Vw,
	P,
	Kf,
	Jr,
	Yf,
	Qf,
	ie = m({
		"out-build/vs/base/common/uri.js"() {
			"use strict";
			ge(),
				z(),
				(Bw = /^\w[\w\d+.-]*$/),
				(zw = /^\//),
				(Hw = /^\/\//),
				(Ue = ""),
				(Hi = "/"),
				(Vw = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/),
				(P = class lf {
					static isUri(e) {
						return e instanceof lf
							? !0
							: e
								? typeof e.authority == "string" &&
									typeof e.fragment == "string" &&
									typeof e.path == "string" &&
									typeof e.query == "string" &&
									typeof e.scheme == "string" &&
									typeof e.fsPath == "string" &&
									typeof e.with == "function" &&
									typeof e.toString == "function"
								: !1;
					}
					constructor(e, i, s, r, n, o = !1) {
						typeof e == "object"
							? ((this.scheme = e.scheme || Ue),
								(this.authority = e.authority || Ue),
								(this.path = e.path || Ue),
								(this.query = e.query || Ue),
								(this.fragment = e.fragment || Ue))
							: ((this.scheme = QE(e, o)),
								(this.authority = i || Ue),
								(this.path = ZE(this.scheme, s || Ue)),
								(this.query = r || Ue),
								(this.fragment = n || Ue),
								YE(this, o));
					}
					get fsPath() {
						return zl(this, !1);
					}
					with(e) {
						if (!e) return this;
						let { scheme: i, authority: s, path: r, query: n, fragment: o } = e;
						return (
							i === void 0 ? (i = this.scheme) : i === null && (i = Ue),
							s === void 0 ? (s = this.authority) : s === null && (s = Ue),
							r === void 0 ? (r = this.path) : r === null && (r = Ue),
							n === void 0 ? (n = this.query) : n === null && (n = Ue),
							o === void 0 ? (o = this.fragment) : o === null && (o = Ue),
							i === this.scheme &&
							s === this.authority &&
							r === this.path &&
							n === this.query &&
							o === this.fragment
								? this
								: new Jr(i, s, r, n, o)
						);
					}
					static parse(e, i = !1) {
						const s = Vw.exec(e);
						return s
							? new Jr(
									s[2] || Ue,
									Hl(s[4] || Ue),
									Hl(s[5] || Ue),
									Hl(s[7] || Ue),
									Hl(s[9] || Ue),
									i,
								)
							: new Jr(Ue, Ue, Ue, Ue, Ue);
					}
					static file(e) {
						let i = Ue;
						if ((T && (e = e.replace(/\\/g, Hi)), e[0] === Hi && e[1] === Hi)) {
							const s = e.indexOf(Hi, 2);
							s === -1
								? ((i = e.substring(2)), (e = Hi))
								: ((i = e.substring(2, s)), (e = e.substring(s) || Hi));
						}
						return new Jr("file", i, e, Ue, Ue);
					}
					static from(e, i) {
						return new Jr(
							e.scheme,
							e.authority,
							e.path,
							e.query,
							e.fragment,
							i,
						);
					}
					static joinPath(e, ...i) {
						if (!e.path)
							throw new Error(
								"[UriError]: cannot call joinPath on URI without path",
							);
						let s;
						return (
							T && e.scheme === "file"
								? (s = lf.file(ze.join(zl(e, !0), ...i)).path)
								: (s = oe.join(e.path, ...i)),
							e.with({ path: s })
						);
					}
					toString(e = !1) {
						return Xf(this, e);
					}
					toJSON() {
						return this;
					}
					static revive(e) {
						if (e) {
							if (e instanceof lf) return e;
							{
								const i = new Jr(e);
								return (
									(i._formatted = e.external ?? null),
									(i._fsPath = e._sep === Kf ? (e.fsPath ?? null) : null),
									i
								);
							}
						} else return e;
					}
					[Symbol.for("debug.description")]() {
						return `URI(${this.toString()})`;
					}
				}),
				(Kf = T ? 1 : void 0),
				(Jr = class extends P {
					constructor() {
						super(...arguments),
							(this._formatted = null),
							(this._fsPath = null);
					}
					get fsPath() {
						return this._fsPath || (this._fsPath = zl(this, !1)), this._fsPath;
					}
					toString(t = !1) {
						return t
							? Xf(this, !0)
							: (this._formatted || (this._formatted = Xf(this, !1)),
								this._formatted);
					}
					toJSON() {
						const t = { $mid: 1 };
						return (
							this._fsPath && ((t.fsPath = this._fsPath), (t._sep = Kf)),
							this._formatted && (t.external = this._formatted),
							this.path && (t.path = this.path),
							this.scheme && (t.scheme = this.scheme),
							this.authority && (t.authority = this.authority),
							this.query && (t.query = this.query),
							this.fragment && (t.fragment = this.fragment),
							t
						);
					}
				}),
				(Yf = {
					58: "%3A",
					47: "%2F",
					63: "%3F",
					35: "%23",
					91: "%5B",
					93: "%5D",
					64: "%40",
					33: "%21",
					36: "%24",
					38: "%26",
					39: "%27",
					40: "%28",
					41: "%29",
					42: "%2A",
					43: "%2B",
					44: "%2C",
					59: "%3B",
					61: "%3D",
					32: "%20",
				}),
				(Qf = /(%[0-9A-Za-z][0-9A-Za-z])+/g);
		},
	});
function tS(t, e, i) {
	e[es.DI_TARGET] === e
		? e[es.DI_DEPENDENCIES].push({ id: t, index: i })
		: ((e[es.DI_DEPENDENCIES] = [{ id: t, index: i }]), (e[es.DI_TARGET] = e));
}
function B(t) {
	if (es.serviceIds.has(t)) return es.serviceIds.get(t);
	const e = function (i, s, r) {
		if (arguments.length !== 3)
			throw new Error(
				"@IServiceName-decorator can only be used to decorate a parameter",
			);
		tS(e, i, r);
	};
	return (e.toString = () => t), es.serviceIds.set(t, e), e;
}
function TF(t) {
	return t;
}
var es,
	ws,
	Y = m({
		"out-build/vs/platform/instantiation/common/instantiation.js"() {
			"use strict";
			(function (t) {
				(t.serviceIds = new Map()),
					(t.DI_TARGET = "$di$target"),
					(t.DI_DEPENDENCIES = "$di$dependencies");
				function e(i) {
					return i[t.DI_DEPENDENCIES] || [];
				}
				t.getServiceDependencies = e;
			})(es || (es = {})),
				(ws = B("instantiationService"));
		},
	});
function Zf(t) {
	return (
		t &&
		typeof t == "object" &&
		(!t.overrideIdentifier || typeof t.overrideIdentifier == "string") &&
		(!t.resource || t.resource instanceof P)
	);
}
function iS(t) {
	return (
		t &&
		typeof t == "object" &&
		(!t.overrideIdentifiers || Array.isArray(t.overrideIdentifiers)) &&
		!t.overrideIdentifier &&
		(!t.resource || t.resource instanceof P)
	);
}
function ep(t, e) {
	const i = Object.create(null);
	for (const s in t) Gw(i, s, t[s], e);
	return i;
}
function Gw(t, e, i, s) {
	const r = e.split("."),
		n = r.pop();
	let o = t;
	for (let a = 0; a < r.length; a++) {
		const c = r[a];
		let l = o[c];
		switch (typeof l) {
			case "undefined":
				l = o[c] = Object.create(null);
				break;
			case "object":
				if (l === null) {
					s(`Ignoring ${e} as ${r.slice(0, a + 1).join(".")} is null`);
					return;
				}
				break;
			default:
				s(
					`Ignoring ${e} as ${r.slice(0, a + 1).join(".")} is ${JSON.stringify(l)}`,
				);
				return;
		}
		o = l;
	}
	if (typeof o == "object" && o !== null)
		try {
			o[n] = i;
		} catch {
			s(`Ignoring ${e} as ${r.join(".")} is ${JSON.stringify(o)}`);
		}
	else s(`Ignoring ${e} as ${r.join(".")} is ${JSON.stringify(o)}`);
}
function sS(t, e) {
	const i = e.split(".");
	Jw(t, i);
}
function Jw(t, e) {
	const i = e.shift();
	if (e.length === 0) {
		delete t[i];
		return;
	}
	if (Object.keys(t).indexOf(i) !== -1) {
		const s = t[i];
		typeof s == "object" &&
			!Array.isArray(s) &&
			(Jw(s, e), Object.keys(s).length === 0 && delete t[i]);
	}
}
function Vl(t, e, i) {
	function s(o, a) {
		let c = o;
		for (const l of a) {
			if (typeof c != "object" || c === null) return;
			c = c[l];
		}
		return c;
	}
	const r = e.split("."),
		n = s(t, r);
	return typeof n > "u" ? i : n;
}
function rS(t) {
	return t.replace(/[\[\]]/g, "");
}
var He,
	Xw,
	Ve = m({
		"out-build/vs/platform/configuration/common/configuration.js"() {
			"use strict";
			Ie(),
				ie(),
				Y(),
				(He = B("configurationService")),
				(function (t) {
					(t[(t.APPLICATION = 1)] = "APPLICATION"),
						(t[(t.USER = 2)] = "USER"),
						(t[(t.USER_LOCAL = 3)] = "USER_LOCAL"),
						(t[(t.USER_REMOTE = 4)] = "USER_REMOTE"),
						(t[(t.WORKSPACE = 5)] = "WORKSPACE"),
						(t[(t.WORKSPACE_FOLDER = 6)] = "WORKSPACE_FOLDER"),
						(t[(t.DEFAULT = 7)] = "DEFAULT"),
						(t[(t.MEMORY = 8)] = "MEMORY");
				})(Xw || (Xw = {}));
		},
	});
function nS(t) {
	let e = !1;
	const i = new Map(),
		s = new Map();
	if (
		(oS(t, (u) => {
			if (t === u) return !0;
			const d = JSON.stringify(u);
			if (d.length < 30) return !0;
			const f = i.get(d);
			if (!f) {
				const p = { schemas: [u] };
				return i.set(d, p), s.set(u, p), !0;
			}
			return f.schemas.push(u), s.set(u, f), (e = !0), !1;
		}),
		i.clear(),
		!e)
	)
		return JSON.stringify(t);
	let n = "$defs";
	for (; t.hasOwnProperty(n); ) n += "_";
	const o = [];
	function a(u) {
		return JSON.stringify(u, (d, f) => {
			if (f !== u) {
				const p = s.get(f);
				if (p && p.schemas.length > 1)
					return (
						p.id || ((p.id = `_${o.length}`), o.push(p.schemas[0])),
						{ $ref: `#/${n}/${p.id}` }
					);
			}
			return f;
		});
	}
	const c = a(t),
		l = [];
	for (let u = 0; u < o.length; u++) l.push(`"_${u}":${a(o[u])}`);
	return l.length
		? `${c.substring(0, c.length - 1)},"${n}":{${l.join(",")}}}`
		: c;
}
function Jn(t) {
	return typeof t == "object" && t !== null;
}
function oS(t, e) {
	if (!t || typeof t != "object") return;
	const i = (...c) => {
			for (const l of c) Jn(l) && o.push(l);
		},
		s = (...c) => {
			for (const l of c)
				if (Jn(l))
					for (const u in l) {
						const d = l[u];
						Jn(d) && o.push(d);
					}
		},
		r = (...c) => {
			for (const l of c)
				if (Array.isArray(l)) for (const u of l) Jn(u) && o.push(u);
		},
		n = (c) => {
			if (Array.isArray(c)) for (const l of c) Jn(l) && o.push(l);
			else Jn(c) && o.push(c);
		},
		o = [t];
	let a = o.pop();
	for (; a; )
		e(a) &&
			(i(
				a.additionalItems,
				a.additionalProperties,
				a.not,
				a.contains,
				a.propertyNames,
				a.if,
				a.then,
				a.else,
				a.unevaluatedItems,
				a.unevaluatedProperties,
			),
			s(
				a.definitions,
				a.$defs,
				a.properties,
				a.patternProperties,
				a.dependencies,
				a.dependentSchemas,
			),
			r(a.anyOf, a.allOf, a.oneOf, a.prefixItems),
			n(a.items)),
			(a = o.pop());
}
var aS = m({
	"out-build/vs/base/common/jsonSchema.js"() {
		"use strict";
	},
});
function tp(t, e) {
	if (!t) throw new Error(e ? `Assertion failed (${e})` : "Assertion Failed");
}
var cS = m({
		"out-build/vs/base/common/assert.js"() {
			"use strict";
			Ae();
		},
	}),
	Kw,
	zt,
	Gs = m({
		"out-build/vs/platform/registry/common/platform.js"() {
			"use strict";
			cS(),
				Ie(),
				(Kw = class {
					constructor() {
						this.a = new Map();
					}
					add(t, e) {
						tp(mt(t)),
							tp(Lt(e)),
							tp(!this.a.has(t), "There is already an extension with this id"),
							this.a.set(t, e);
					}
					knows(t) {
						return this.a.has(t);
					}
					as(t) {
						return this.a.get(t) || null;
					}
				}),
				(zt = new Kw());
		},
	});
function lS(t) {
	return t.length > 0 && t.charAt(t.length - 1) === "#"
		? t.substring(0, t.length - 1)
		: t;
}
var ip,
	Yw,
	Qw,
	uS = m({
		"out-build/vs/platform/jsonschemas/common/jsonContributionRegistry.js"() {
			"use strict";
			q(),
				aS(),
				Gs(),
				(ip = { JSONContribution: "base.contributions.json" }),
				(Yw = class {
					constructor() {
						(this.b = new $()),
							(this.onDidChangeSchema = this.b.event),
							(this.a = {});
					}
					registerSchema(t, e) {
						(this.a[lS(t)] = e), this.b.fire(t);
					}
					notifySchemaChanged(t) {
						this.b.fire(t);
					}
					getSchemaContributions() {
						return { schemas: this.a };
					}
					getSchemaContent(t) {
						const e = this.a[t];
						return e ? nS(e) : void 0;
					}
					hasSchemaContent(t) {
						return !!this.a[t];
					}
				}),
				(Qw = new Yw()),
				zt.add(ip.JSONContribution, Qw);
		},
	});
function $a(t) {
	const e = [];
	if (vs.test(t)) {
		let i = rp.exec(t);
		for (; i?.length; ) {
			const s = i[1].trim();
			s && e.push(s), (i = rp.exec(t));
		}
	}
	return Zi(e);
}
function hS(t) {
	return t.reduce((e, i) => `${e}[${i}]`, "");
}
function dS(t) {
	switch (Array.isArray(t) ? t[0] : t) {
		case "boolean":
			return !1;
		case "integer":
		case "number":
			return 0;
		case "string":
			return "";
		case "array":
			return [];
		case "object":
			return {};
		default:
			return null;
	}
}
function fS(t, e) {
	return t.trim()
		? vs.test(t)
			? w(1706, null, t)
			: La.getConfigurationProperties()[t] !== void 0
				? w(1707, null, t)
				: e.policy?.name &&
						La.getPolicyConfigurations().get(e.policy?.name) !== void 0
					? w(
							1708,
							null,
							t,
							e.policy?.name,
							La.getPolicyConfigurations().get(e.policy?.name),
						)
					: null
		: w(1705, null);
}
var Zw,
	Pi,
	ev,
	Aa,
	Ia,
	Ca,
	_a,
	Ra,
	Xn,
	fr,
	Oa,
	tv,
	sp,
	rp,
	pr,
	vs,
	La,
	Xr = m({
		"out-build/vs/platform/configuration/common/configurationRegistry.js"() {
			"use strict";
			Ut(),
				q(),
				Ie(),
				ve(),
				Ve(),
				uS(),
				Gs(),
				(function (t) {
					(t.Multiline = "multilineText"), (t.Singleline = "singlelineText");
				})(Zw || (Zw = {})),
				(Pi = { Configuration: "base.contributions.configuration" }),
				(function (t) {
					(t[(t.APPLICATION = 1)] = "APPLICATION"),
						(t[(t.MACHINE = 2)] = "MACHINE"),
						(t[(t.WINDOW = 3)] = "WINDOW"),
						(t[(t.RESOURCE = 4)] = "RESOURCE"),
						(t[(t.LANGUAGE_OVERRIDABLE = 5)] = "LANGUAGE_OVERRIDABLE"),
						(t[(t.MACHINE_OVERRIDABLE = 6)] = "MACHINE_OVERRIDABLE");
				})(ev || (ev = {})),
				(Aa = { properties: {}, patternProperties: {} }),
				(Ia = { properties: {}, patternProperties: {} }),
				(Ca = { properties: {}, patternProperties: {} }),
				(_a = { properties: {}, patternProperties: {} }),
				(Ra = { properties: {}, patternProperties: {} }),
				(Xn = { properties: {}, patternProperties: {} }),
				(fr = "vscode://schemas/settings/resourceLanguage"),
				(Oa = zt.as(ip.JSONContribution)),
				(tv = class {
					constructor() {
						(this.a = []),
							(this.i = new Set()),
							(this.j = new $()),
							(this.onDidSchemaChange = this.j.event),
							(this.k = new $()),
							(this.onDidUpdateConfiguration = this.k.event),
							(this.b = new Map()),
							(this.c = {
								id: "defaultOverrides",
								title: w(1699, null),
								properties: {},
							}),
							(this.d = [this.c]),
							(this.h = {
								properties: {},
								patternProperties: {},
								additionalProperties: !0,
								allowTrailingCommas: !0,
								allowComments: !0,
							}),
							(this.e = {}),
							(this.f = new Map()),
							(this.g = {}),
							Oa.registerSchema(fr, this.h),
							this.z();
					}
					registerConfiguration(t, e = !0) {
						this.registerConfigurations([t], e);
					}
					registerConfigurations(t, e = !0) {
						const i = new Set();
						this.r(t, e, i),
							Oa.registerSchema(fr, this.h),
							this.j.fire(),
							this.k.fire({ properties: i });
					}
					deregisterConfigurations(t) {
						const e = new Set();
						this.s(t, e),
							Oa.registerSchema(fr, this.h),
							this.j.fire(),
							this.k.fire({ properties: e });
					}
					updateConfigurations({ add: t, remove: e }) {
						const i = new Set();
						this.s(e, i),
							this.r(t, !1, i),
							Oa.registerSchema(fr, this.h),
							this.j.fire(),
							this.k.fire({ properties: i });
					}
					registerDefaultConfigurations(t) {
						const e = new Set();
						this.l(t, e),
							this.j.fire(),
							this.k.fire({ properties: e, defaultsOverrides: !0 });
					}
					l(t, e) {
						this.a.push(...t);
						const i = [];
						for (const { overrides: s, source: r } of t)
							for (const n in s) {
								e.add(n);
								const o =
										this.b.get(n) ??
										this.b.set(n, { configurationDefaultOverrides: [] }).get(n),
									a = s[n];
								if (
									(o.configurationDefaultOverrides.push({
										value: a,
										source: r,
									}),
									vs.test(n))
								) {
									const c = this.o(
										n,
										a,
										r,
										o.configurationDefaultOverrideValue,
									);
									if (!c) continue;
									(o.configurationDefaultOverrideValue = c),
										this.n(n, c, r),
										i.push(...$a(n));
								} else {
									const c = this.p(
										n,
										a,
										r,
										o.configurationDefaultOverrideValue,
									);
									if (!c) continue;
									o.configurationDefaultOverrideValue = c;
									const l = this.e[n];
									l && (this.A(n, l), this.w(n, l));
								}
							}
						this.q(i);
					}
					deregisterDefaultConfigurations(t) {
						const e = new Set();
						this.m(t, e),
							this.j.fire(),
							this.k.fire({ properties: e, defaultsOverrides: !0 });
					}
					m(t, e) {
						for (const i of t) {
							const s = this.a.indexOf(i);
							s !== -1 && this.a.splice(s, 1);
						}
						for (const { overrides: i, source: s } of t)
							for (const r in i) {
								const n = this.b.get(r);
								if (!n) continue;
								const o = n.configurationDefaultOverrides.findIndex((a) =>
									s ? a.source?.id === s.id : a.value === i[r],
								);
								if (o !== -1) {
									if (
										(n.configurationDefaultOverrides.splice(o, 1),
										n.configurationDefaultOverrides.length === 0 &&
											this.b.delete(r),
										vs.test(r))
									) {
										let a;
										for (const c of n.configurationDefaultOverrides)
											a = this.o(r, c.value, c.source, a);
										a && !Hf(a.value)
											? ((n.configurationDefaultOverrideValue = a),
												this.n(r, a, s))
											: (this.b.delete(r),
												delete this.e[r],
												delete this.c.properties[r]);
									} else {
										let a;
										for (const l of n.configurationDefaultOverrides)
											a = this.p(r, l.value, l.source, a);
										n.configurationDefaultOverrideValue = a;
										const c = this.e[r];
										c && (this.A(r, c), this.w(r, c));
									}
									e.add(r);
								}
							}
						this.y();
					}
					n(t, e, i) {
						const s = {
							type: "object",
							default: e.value,
							description: w(1700, null, rS(t)),
							$ref: fr,
							defaultDefaultValue: e.value,
							source: i,
							defaultValueSource: i,
						};
						(this.e[t] = s), (this.c.properties[t] = s);
					}
					o(t, e, i, s) {
						const r = s?.value || {},
							n = s?.source ?? new Map();
						if (!(n instanceof Map)) {
							console.error("objectConfigurationSources is not a Map");
							return;
						}
						for (const o of Object.keys(e)) {
							const a = e[o];
							if (Lt(a) && (zs(r[o]) || Lt(r[o]))) {
								if (((r[o] = { ...(r[o] ?? {}), ...a }), i))
									for (const l in a) n.set(`${o}.${l}`, i);
							} else (r[o] = a), i ? n.set(o, i) : n.delete(o);
						}
						return { value: r, source: n };
					}
					p(t, e, i, s) {
						const r = this.e[t],
							n = s?.value ?? r?.defaultDefaultValue;
						let o = i;
						if (
							Lt(e) &&
							((r !== void 0 && r.type === "object") ||
								(r === void 0 && (zs(n) || Lt(n))))
						) {
							if (((o = s?.source ?? new Map()), !(o instanceof Map))) {
								console.error("defaultValueSource is not a Map");
								return;
							}
							for (const c in e) i && o.set(`${t}.${c}`, i);
							e = { ...(Lt(n) ? n : {}), ...e };
						}
						return { value: e, source: o };
					}
					deltaConfiguration(t) {
						let e = !1;
						const i = new Set();
						t.removedDefaults && (this.m(t.removedDefaults, i), (e = !0)),
							t.addedDefaults && (this.l(t.addedDefaults, i), (e = !0)),
							t.removedConfigurations && this.s(t.removedConfigurations, i),
							t.addedConfigurations && this.r(t.addedConfigurations, !1, i),
							this.j.fire(),
							this.k.fire({ properties: i, defaultsOverrides: e });
					}
					notifyConfigurationSchemaUpdated(...t) {
						this.j.fire();
					}
					registerOverrideIdentifiers(t) {
						this.q(t), this.j.fire();
					}
					q(t) {
						for (const e of t) this.i.add(e);
						this.y();
					}
					r(t, e, i) {
						t.forEach((s) => {
							this.u(s, e, s.extensionInfo, s.restrictedProperties, void 0, i),
								this.d.push(s),
								this.v(s);
						});
					}
					s(t, e) {
						const i = (s) => {
							if (s.properties)
								for (const r in s.properties) {
									e.add(r);
									const n = this.e[r];
									n?.policy?.name && this.f.delete(n.policy.name),
										delete this.e[r],
										this.x(r, s.properties[r]);
								}
							s.allOf?.forEach((r) => i(r));
						};
						for (const s of t) {
							i(s);
							const r = this.d.indexOf(s);
							r !== -1 && this.d.splice(r, 1);
						}
					}
					u(t, e = !0, i, s, r = 3, n) {
						r = Yt(t.scope) ? r : t.scope;
						const o = t.properties;
						if (o)
							for (const c in o) {
								const l = o[c];
								if (e && fS(c, l)) {
									delete o[c];
									continue;
								}
								if (
									((l.source = i),
									(l.defaultDefaultValue = o[c].default),
									this.A(c, l),
									vs.test(c)
										? (l.scope = void 0)
										: ((l.scope = Yt(l.scope) ? r : l.scope),
											(l.restricted = Yt(l.restricted)
												? !!s?.includes(c)
												: l.restricted)),
									o[c].hasOwnProperty("included") && !o[c].included)
								) {
									(this.g[c] = o[c]), delete o[c];
									continue;
								} else
									(this.e[c] = o[c]),
										o[c].policy?.name && this.f.set(o[c].policy.name, c);
								!o[c].deprecationMessage &&
									o[c].markdownDeprecationMessage &&
									(o[c].deprecationMessage = o[c].markdownDeprecationMessage),
									n.add(c);
							}
						const a = t.allOf;
						if (a) for (const c of a) this.u(c, e, i, s, r, n);
					}
					getConfigurations() {
						return this.d;
					}
					getConfigurationProperties() {
						return this.e;
					}
					getPolicyConfigurations() {
						return this.f;
					}
					getExcludedConfigurationProperties() {
						return this.g;
					}
					getRegisteredDefaultConfigurations() {
						return [...this.a];
					}
					getConfigurationDefaultsOverrides() {
						const t = new Map();
						for (const [e, i] of this.b)
							i.configurationDefaultOverrideValue &&
								t.set(e, i.configurationDefaultOverrideValue);
						return t;
					}
					v(t) {
						const e = (i) => {
							const s = i.properties;
							if (s) for (const n in s) this.w(n, s[n]);
							i.allOf?.forEach(e);
						};
						e(t);
					}
					w(t, e) {
						switch (((Aa.properties[t] = e), e.scope)) {
							case 1:
								Ia.properties[t] = e;
								break;
							case 2:
								Ca.properties[t] = e;
								break;
							case 6:
								_a.properties[t] = e;
								break;
							case 3:
								Ra.properties[t] = e;
								break;
							case 4:
								Xn.properties[t] = e;
								break;
							case 5:
								(Xn.properties[t] = e), (this.h.properties[t] = e);
								break;
						}
					}
					x(t, e) {
						switch ((delete Aa.properties[t], e.scope)) {
							case 1:
								delete Ia.properties[t];
								break;
							case 2:
								delete Ca.properties[t];
								break;
							case 6:
								delete _a.properties[t];
								break;
							case 3:
								delete Ra.properties[t];
								break;
							case 4:
							case 5:
								delete Xn.properties[t], delete this.h.properties[t];
								break;
						}
					}
					y() {
						for (const t of this.i.values()) {
							const e = `[${t}]`,
								i = {
									type: "object",
									description: w(1701, null),
									errorMessage: w(1702, null),
									$ref: fr,
								};
							this.A(e, i),
								(Aa.properties[e] = i),
								(Ia.properties[e] = i),
								(Ca.properties[e] = i),
								(_a.properties[e] = i),
								(Ra.properties[e] = i),
								(Xn.properties[e] = i);
						}
					}
					z() {
						const t = {
							type: "object",
							description: w(1703, null),
							errorMessage: w(1704, null),
							$ref: fr,
						};
						(Aa.patternProperties[pr] = t),
							(Ia.patternProperties[pr] = t),
							(Ca.patternProperties[pr] = t),
							(_a.patternProperties[pr] = t),
							(Ra.patternProperties[pr] = t),
							(Xn.patternProperties[pr] = t),
							this.j.fire();
					}
					A(t, e) {
						const i = this.b.get(t)?.configurationDefaultOverrideValue;
						let s, r;
						i &&
							(!e.disallowConfigurationDefault || !i.source) &&
							((s = i.value), (r = i.source)),
							zs(s) && ((s = e.defaultDefaultValue), (r = void 0)),
							zs(s) && (s = dS(e.type)),
							(e.default = s),
							(e.defaultValueSource = r);
					}
				}),
				(sp = "\\[([^\\]]+)\\]"),
				(rp = new RegExp(sp, "g")),
				(pr = `^(${sp})+$`),
				(vs = new RegExp(pr)),
				(La = new tv()),
				zt.add(Pi.Configuration, La);
		},
	}),
	iv,
	pS = m({
		"out-build/vs/platform/update/common/update.config.contribution.js"() {
			"use strict";
			z(),
				ve(),
				Xr(),
				Gs(),
				(iv = zt.as(Pi.Configuration)),
				iv.registerConfiguration({
					id: "update",
					order: 15,
					title: w(2476, null),
					type: "object",
					properties: {
						"update.mode": {
							type: "string",
							enum: ["none", "manual", "start", "default"],
							default: "default",
							scope: 1,
							description: w(2477, null),
							tags: ["usesOnlineServices"],
							enumDescriptions: [
								w(2478, null),
								w(2479, null),
								w(2480, null),
								w(2481, null),
							],
							policy: { name: "UpdateMode", minimumVersion: "1.67" },
						},
						"update.channel": {
							type: "string",
							default: "default",
							scope: 1,
							description: w(2482, null),
							deprecationMessage: w(2483, null, "update.mode"),
						},
						"update.enableWindowsBackgroundUpdates": {
							type: "boolean",
							default: !0,
							scope: 1,
							title: w(2484, null),
							description: w(2485, null),
							included: T && !hr,
						},
						"update.showReleaseNotes": {
							type: "boolean",
							default: !0,
							scope: 1,
							description: w(2486, null),
							tags: ["usesOnlineServices"],
						},
					},
				});
		},
	}),
	np,
	Ge,
	Ma,
	ts,
	Mt = m({
		"out-build/vs/base/common/cancellation.js"() {
			"use strict";
			q(),
				(np = Object.freeze(function (t, e) {
					const i = setTimeout(t.bind(e), 0);
					return {
						dispose() {
							clearTimeout(i);
						},
					};
				})),
				(function (t) {
					function e(i) {
						return i === t.None || i === t.Cancelled || i instanceof Ma
							? !0
							: !i || typeof i != "object"
								? !1
								: typeof i.isCancellationRequested == "boolean" &&
									typeof i.onCancellationRequested == "function";
					}
					(t.isCancellationToken = e),
						(t.None = Object.freeze({
							isCancellationRequested: !1,
							onCancellationRequested: x.None,
						})),
						(t.Cancelled = Object.freeze({
							isCancellationRequested: !0,
							onCancellationRequested: np,
						}));
				})(Ge || (Ge = {})),
				(Ma = class {
					constructor() {
						(this.a = !1), (this.b = null);
					}
					cancel() {
						this.a ||
							((this.a = !0), this.b && (this.b.fire(void 0), this.dispose()));
					}
					get isCancellationRequested() {
						return this.a;
					}
					get onCancellationRequested() {
						return this.a ? np : (this.b || (this.b = new $()), this.b.event);
					}
					dispose() {
						this.b && (this.b.dispose(), (this.b = null));
					}
				}),
				(ts = class {
					constructor(t) {
						(this.f = void 0),
							(this.g = void 0),
							(this.g = t && t.onCancellationRequested(this.cancel, this));
					}
					get token() {
						return this.f || (this.f = new Ma()), this.f;
					}
					cancel() {
						this.f
							? this.f instanceof Ma && this.f.cancel()
							: (this.f = Ge.Cancelled);
					}
					dispose(t = !1) {
						t && this.cancel(),
							this.g?.dispose(),
							this.f
								? this.f instanceof Ma && this.f.dispose()
								: (this.f = Ge.None);
					}
				});
		},
	});
function mS(t) {
	return t;
}
var sv,
	gS = m({
		"out-build/vs/base/common/cache.js"() {
			"use strict";
			Mt(),
				(sv = class {
					constructor(t, e) {
						(this.a = void 0),
							(this.b = void 0),
							typeof t == "function"
								? ((this.c = t), (this.d = mS))
								: ((this.c = e), (this.d = t.getCacheKey));
					}
					get(t) {
						const e = this.d(t);
						return this.b !== e && ((this.b = e), (this.a = this.c(t))), this.a;
					}
				});
		},
	}),
	mr,
	Fa = m({
		"out-build/vs/base/common/lazy.js"() {
			"use strict";
			mr = class {
				constructor(t) {
					(this.d = t), (this.a = !1);
				}
				get hasValue() {
					return this.a;
				}
				get value() {
					if (!this.a)
						try {
							this.b = this.d();
						} catch (t) {
							this.c = t;
						} finally {
							this.a = !0;
						}
					if (this.c) throw this.c;
					return this.b;
				}
				get rawValue() {
					return this.b;
				}
			};
		},
	});
function wS(t) {
	return !t || typeof t != "string" ? !0 : t.trim().length === 0;
}
function Na(t) {
	return t.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g, "\\$&");
}
function rv(t, e = " ") {
	const i = nv(t, e);
	return Kr(i, e);
}
function nv(t, e) {
	if (!t || !e) return t;
	const i = e.length;
	if (i === 0 || t.length === 0) return t;
	let s = 0;
	for (; t.indexOf(e, s) === s; ) s = s + i;
	return t.substring(s);
}
function Kr(t, e) {
	if (!t || !e) return t;
	const i = e.length,
		s = t.length;
	if (i === 0 || s === 0) return t;
	let r = s,
		n = -1;
	for (; (n = t.lastIndexOf(e, r - 1)), !(n === -1 || n + i !== r); ) {
		if (n === 0) return "";
		r = n;
	}
	return t.substring(0, r);
}
function op(t, e) {
	return t < e ? -1 : t > e ? 1 : 0;
}
function ap(t, e, i = 0, s = t.length, r = 0, n = e.length) {
	for (; i < s && r < n; i++, r++) {
		const c = t.charCodeAt(i),
			l = e.charCodeAt(r);
		if (c < l) return -1;
		if (c > l) return 1;
	}
	const o = s - i,
		a = n - r;
	return o < a ? -1 : o > a ? 1 : 0;
}
function cp(t, e) {
	return Wa(t, e, 0, t.length, 0, e.length);
}
function Wa(t, e, i = 0, s = t.length, r = 0, n = e.length) {
	for (; i < s && r < n; i++, r++) {
		let c = t.charCodeAt(i),
			l = e.charCodeAt(r);
		if (c === l) continue;
		if (c >= 128 || l >= 128)
			return ap(t.toLowerCase(), e.toLowerCase(), i, s, r, n);
		ov(c) && (c -= 32), ov(l) && (l -= 32);
		const u = c - l;
		if (u !== 0) return u;
	}
	const o = s - i,
		a = n - r;
	return o < a ? -1 : o > a ? 1 : 0;
}
function ov(t) {
	return t >= 97 && t <= 122;
}
function av(t) {
	return t >= 65 && t <= 90;
}
function gr(t, e) {
	return t.length === e.length && Wa(t, e) === 0;
}
function Gl(t, e) {
	const i = e.length;
	return e.length > t.length ? !1 : Wa(t, e, 0, i) === 0;
}
function vS(t) {
	return 55296 <= t && t <= 56319;
}
function cv(t) {
	return 56320 <= t && t <= 57343;
}
function yS(t, e) {
	return ((t - 55296) << 10) + (e - 56320) + 65536;
}
function bS() {
	return JSON.parse(
		"[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]",
	);
}
var ES,
	lv,
	SS,
	uv,
	kS,
	xS,
	Ft = m({
		"out-build/vs/base/common/strings.js"() {
			"use strict";
			gS(),
				Fa(),
				(ES = "\uFEFF"),
				(function (t) {
					(t[(t.Other = 0)] = "Other"),
						(t[(t.Prepend = 1)] = "Prepend"),
						(t[(t.CR = 2)] = "CR"),
						(t[(t.LF = 3)] = "LF"),
						(t[(t.Control = 4)] = "Control"),
						(t[(t.Extend = 5)] = "Extend"),
						(t[(t.Regional_Indicator = 6)] = "Regional_Indicator"),
						(t[(t.SpacingMark = 7)] = "SpacingMark"),
						(t[(t.L = 8)] = "L"),
						(t[(t.V = 9)] = "V"),
						(t[(t.T = 10)] = "T"),
						(t[(t.LV = 11)] = "LV"),
						(t[(t.LVT = 12)] = "LVT"),
						(t[(t.ZWJ = 13)] = "ZWJ"),
						(t[(t.Extended_Pictographic = 14)] = "Extended_Pictographic");
				})(lv || (lv = {})),
				(SS = class ml {
					static {
						this.c = null;
					}
					static getInstance() {
						return ml.c || (ml.c = new ml()), ml.c;
					}
					constructor() {
						this.d = bS();
					}
					getGraphemeBreakType(e) {
						if (e < 32) return e === 10 ? 3 : e === 13 ? 2 : 4;
						if (e < 127) return 0;
						const i = this.d,
							s = i.length / 3;
						let r = 1;
						for (; r <= s; )
							if (e < i[3 * r]) r = 2 * r;
							else if (e > i[3 * r + 1]) r = 2 * r + 1;
							else return i[3 * r + 2];
						return 0;
					}
				}),
				(function (t) {
					(t[(t.zwj = 8205)] = "zwj"),
						(t[(t.emojiVariantSelector = 65039)] = "emojiVariantSelector"),
						(t[(t.enclosingKeyCap = 8419)] = "enclosingKeyCap");
				})(uv || (uv = {})),
				(kS = class gl {
					static {
						this.c = new mr(() =>
							JSON.parse(
								'{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}',
							),
						);
					}
					static {
						this.d = new sv({ getCacheKey: JSON.stringify }, (e) => {
							function i(u) {
								const d = new Map();
								for (let f = 0; f < u.length; f += 2) d.set(u[f], u[f + 1]);
								return d;
							}
							function s(u, d) {
								const f = new Map(u);
								for (const [p, v] of d) f.set(p, v);
								return f;
							}
							function r(u, d) {
								if (!u) return d;
								const f = new Map();
								for (const [p, v] of u) d.has(p) && f.set(p, v);
								return f;
							}
							const n = this.c.value;
							let o = e.filter((u) => !u.startsWith("_") && u in n);
							o.length === 0 && (o = ["_default"]);
							let a;
							for (const u of o) {
								const d = i(n[u]);
								a = r(a, d);
							}
							const c = i(n._common),
								l = s(c, a);
							return new gl(l);
						});
					}
					static getInstance(e) {
						return gl.d.get(Array.from(e));
					}
					static {
						this.e = new mr(() =>
							Object.keys(gl.c.value).filter((e) => !e.startsWith("_")),
						);
					}
					static getLocales() {
						return gl.e.value;
					}
					constructor(e) {
						this.f = e;
					}
					isAmbiguous(e) {
						return this.f.has(e);
					}
					containsAmbiguousCharacter(e) {
						for (let i = 0; i < e.length; i++) {
							const s = e.codePointAt(i);
							if (typeof s == "number" && this.isAmbiguous(s)) return !0;
						}
						return !1;
					}
					getPrimaryConfusable(e) {
						return this.f.get(e);
					}
					getConfusableCodePoints() {
						return new Set(this.f.keys());
					}
				}),
				(xS = class wl {
					static c() {
						return JSON.parse(
							"[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]",
						);
					}
					static {
						this.d = void 0;
					}
					static e() {
						return this.d || (this.d = new Set(wl.c())), this.d;
					}
					static isInvisibleCharacter(e) {
						return wl.e().has(e);
					}
					static containsInvisibleCharacter(e) {
						for (let i = 0; i < e.length; i++) {
							const s = e.codePointAt(i);
							if (typeof s == "number" && wl.isInvisibleCharacter(s)) return !0;
						}
						return !1;
					}
					static get codePoints() {
						return wl.e();
					}
				});
		},
	});
function wr(t) {
	return t === 47 || t === 92;
}
function Kn(t) {
	return t.replace(/[\\/]/g, oe.sep);
}
function DS(t) {
	return (
		t.indexOf("/") === -1 && (t = Kn(t)),
		/^[a-zA-Z]:(\/|$)/.test(t) && (t = "/" + t),
		t
	);
}
function hv(t, e = oe.sep) {
	if (!t) return "";
	const i = t.length,
		s = t.charCodeAt(0);
	if (wr(s)) {
		if (wr(t.charCodeAt(1)) && !wr(t.charCodeAt(2))) {
			let n = 3;
			const o = n;
			for (; n < i && !wr(t.charCodeAt(n)); n++);
			if (o !== n && !wr(t.charCodeAt(n + 1))) {
				for (n += 1; n < i; n++)
					if (wr(t.charCodeAt(n)))
						return t.slice(0, n + 1).replace(/[\\/]/g, e);
			}
		}
		return e;
	} else if (lp(s) && t.charCodeAt(1) === 58)
		return wr(t.charCodeAt(2)) ? t.slice(0, 2) + e : t.slice(0, 2);
	let r = t.indexOf("://");
	if (r !== -1) {
		for (r += 3; r < i; r++) if (wr(t.charCodeAt(r))) return t.slice(0, r + 1);
	}
	return "";
}
function PS(t) {
	if (!T || !t || t.length < 5) return !1;
	let e = t.charCodeAt(0);
	if (e !== 92 || ((e = t.charCodeAt(1)), e !== 92)) return !1;
	let i = 2;
	const s = i;
	for (; i < t.length && ((e = t.charCodeAt(i)), e !== 92); i++);
	return !(s === i || ((e = t.charCodeAt(i + 1)), isNaN(e) || e === 92));
}
function $S(t, e = T) {
	const i = e ? mv : gv;
	return !(
		!t ||
		t.length === 0 ||
		/^\s+$/.test(t) ||
		((i.lastIndex = 0), i.test(t)) ||
		(e && wv.test(t)) ||
		t === "." ||
		t === ".." ||
		(e && t[t.length - 1] === ".") ||
		(e && t.length !== t.trim().length) ||
		t.length > 255
	);
}
function Jl(t, e, i) {
	const s = t === e;
	return !i || s ? s : !t || !e ? !1 : gr(t, e);
}
function ja(t, e, i, s = Bt) {
	if (t === e) return !0;
	if (!t || !e || e.length > t.length) return !1;
	if (i) {
		if (!Gl(t, e)) return !1;
		if (e.length === t.length) return !0;
		let n = e.length;
		return e.charAt(e.length - 1) === s && n--, t.charAt(n) === s;
	}
	return e.charAt(e.length - 1) !== s && (e += s), t.indexOf(e) === 0;
}
function lp(t) {
	return (t >= 65 && t <= 90) || (t >= 97 && t <= 122);
}
function dv(t, e) {
	return (
		T && t.endsWith(":") && (t += Bt),
		Gr(t) || (t = M(e, t)),
		(t = ui(t)),
		fv(t)
	);
}
function fv(t) {
	return (
		T
			? ((t = Kr(t, Bt)), t.endsWith(":") && (t += Bt))
			: ((t = Kr(t, Bt)), t || (t = Bt)),
		t
	);
}
function AS(t) {
	const e = ui(t);
	return T
		? t.length > 3
			? !1
			: pv(e) && (t.length === 2 || e.charCodeAt(2) === 92)
		: e === oe.sep;
}
function pv(t, e = T) {
	return e ? lp(t.charCodeAt(0)) && t.charCodeAt(1) === 58 : !1;
}
function Xl(t) {
	const e = t.split(":");
	let i, s, r;
	for (const n of e) {
		const o = Number(n);
		jl(o)
			? s === void 0
				? (s = o)
				: r === void 0 && (r = o)
			: (i = i ? [i, n].join(":") : n);
	}
	if (!i)
		throw new Error("Format for `--goto` should be: `FILE:LINE(:COLUMN)`");
	return {
		path: i,
		line: s !== void 0 ? s : void 0,
		column: r !== void 0 ? r : s !== void 0 ? 1 : void 0,
	};
}
function Ta(t, e, i = 8) {
	let s = "";
	for (let n = 0; n < i; n++) {
		let o;
		n === 0 && T && !e && (i === 3 || i === 4) ? (o = yv) : (o = vv),
			(s += o.charAt(Math.floor(Math.random() * o.length)));
	}
	let r;
	return e ? (r = `${e}-${s}`) : (r = s), t ? M(t, r) : r;
}
var mv,
	gv,
	wv,
	vv,
	yv,
	hi = m({
		"out-build/vs/base/common/extpath.js"() {
			"use strict";
			ge(),
				z(),
				Ft(),
				Ie(),
				(mv = /[\\/:\*\?"<>\|]/g),
				(gv = /[/]/g),
				(wv = /^(con|prn|aux|clock\$|nul|lpt[0-9]|com[0-9])(\.(.*?))?$/i),
				(vv = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),
				(yv = "BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789");
		},
	});
function IS(t, e) {
	return P.isUri(t) ? gr(t.scheme, e) : Gl(t, e + ":");
}
function CS(t, ...e) {
	return e.some((i) => IS(t, i));
}
function _S(t, e) {
	return oe.join(e ?? "/", `${t.quality ?? "oss"}-${t.commit ?? "dev"}`);
}
var R,
	bv,
	Ev,
	up,
	Ua,
	Sv,
	$t,
	qa,
	Ce = m({
		"out-build/vs/base/common/network.js"() {
			"use strict";
			Ae(),
				z(),
				Ft(),
				ie(),
				ge(),
				(function (t) {
					(t.inMemory = "inmemory"),
						(t.vscode = "vscode"),
						(t.internal = "private"),
						(t.walkThrough = "walkThrough"),
						(t.walkThroughSnippet = "walkThroughSnippet"),
						(t.http = "http"),
						(t.https = "https"),
						(t.file = "file"),
						(t.mailto = "mailto"),
						(t.untitled = "untitled"),
						(t.data = "data"),
						(t.command = "command"),
						(t.vscodeRemote = "vscode-remote"),
						(t.vscodeRemoteResource = "vscode-remote-resource"),
						(t.vscodeManagedRemoteResource = "vscode-managed-remote-resource"),
						(t.vscodeUserData = "vscode-userdata"),
						(t.vscodeCustomEditor = "vscode-custom-editor"),
						(t.vscodeNotebook = "vscode-notebook"),
						(t.vscodeNotebookCell = "vscode-notebook-cell"),
						(t.vscodeNotebookCellMetadata = "vscode-notebook-cell-metadata"),
						(t.vscodeNotebookCellMetadataDiff =
							"vscode-notebook-cell-metadata-diff"),
						(t.vscodeNotebookCellOutput = "vscode-notebook-cell-output"),
						(t.vscodeNotebookCellOutputDiff =
							"vscode-notebook-cell-output-diff"),
						(t.vscodeNotebookMetadata = "vscode-notebook-metadata"),
						(t.vscodeInteractiveInput = "vscode-interactive-input"),
						(t.vscodeSettings = "vscode-settings"),
						(t.vscodeWorkspaceTrust = "vscode-workspace-trust"),
						(t.vscodeTerminal = "vscode-terminal"),
						(t.vscodeChatCodeBlock = "vscode-chat-code-block"),
						(t.vscodeChatCodeCompareBlock = "vscode-chat-code-compare-block"),
						(t.vscodeChatSesssion = "vscode-chat-editor"),
						(t.webviewPanel = "webview-panel"),
						(t.vscodeWebview = "vscode-webview"),
						(t.extension = "extension"),
						(t.aiChat = "cursor.aichat"),
						(t.notepad = "cursor.notepad"),
						(t.contextObject = "cursor.context-object"),
						(t.composer = "cursor.composer"),
						(t.aiSettings = "cursor.aisettings"),
						(t.tinderDiffEditor = "cursor.tinderdiffeditor"),
						(t.aiReader = "cursor.aireader"),
						(t.vscodeFileResource = "vscode-file"),
						(t.tmp = "tmp"),
						(t.vsls = "vsls"),
						(t.vscodeSourceControl = "vscode-scm"),
						(t.commentsInput = "comment"),
						(t.codeSetting = "code-setting"),
						(t.cursorDev = "cursor-dev"),
						(t.outputChannel = "output"),
						(t.accessibleView = "accessible-view"),
						(t.backgroundComposer = "cursor.backgroundcomposer"),
						(t.bugbot = "cursor.bugbot");
				})(R || (R = {})),
				(bv = "tkn"),
				(Ev = class {
					constructor() {
						(this.a = Object.create(null)),
							(this.b = Object.create(null)),
							(this.c = Object.create(null)),
							(this.d = "http"),
							(this.e = null),
							(this.f = "/");
					}
					setPreferredWebSchema(t) {
						this.d = t;
					}
					setDelegate(t) {
						this.e = t;
					}
					setServerRootPath(t, e) {
						this.f = _S(t, e);
					}
					getServerRootPath() {
						return this.f;
					}
					get g() {
						return oe.join(this.f, R.vscodeRemoteResource);
					}
					set(t, e, i) {
						(this.a[t] = e), (this.b[t] = i);
					}
					setConnectionToken(t, e) {
						this.c[t] = e;
					}
					getPreferredWebSchema() {
						return this.d;
					}
					rewrite(t) {
						if (this.e)
							try {
								return this.e(t);
							} catch (o) {
								return Ot(o), t;
							}
						const e = t.authority;
						let i = this.a[e];
						i &&
							i.indexOf(":") !== -1 &&
							i.indexOf("[") === -1 &&
							(i = `[${i}]`);
						const s = this.b[e],
							r = this.c[e];
						let n = `path=${encodeURIComponent(t.path)}`;
						return (
							typeof r == "string" && (n += `&${bv}=${encodeURIComponent(r)}`),
							P.from({
								scheme: hr ? this.d : R.vscodeRemoteResource,
								authority: `${i}:${s}`,
								path: this.g,
								query: n,
							})
						);
					}
				}),
				(up = new Ev()),
				(Ua = "vscode-app"),
				(Sv = class uf {
					static {
						this.a = Ua;
					}
					asBrowserUri(e) {
						const i = this.b(e);
						return this.uriToBrowserUri(i);
					}
					uriToBrowserUri(e) {
						return e.scheme === R.vscodeRemote
							? up.rewrite(e)
							: e.scheme === R.file &&
									(Mf || B0 === `${R.vscodeFileResource}://${uf.a}`)
								? e.with({
										scheme: R.vscodeFileResource,
										authority: e.authority || uf.a,
										query: null,
										fragment: null,
									})
								: e;
					}
					asFileUri(e) {
						const i = this.b(e);
						return this.uriToFileUri(i);
					}
					uriToFileUri(e) {
						return e.scheme === R.vscodeFileResource
							? e.with({
									scheme: R.file,
									authority: e.authority !== uf.a ? e.authority : null,
									query: null,
									fragment: null,
								})
							: e;
					}
					b(e, i) {
						if (P.isUri(e)) return e;
						if (globalThis._VSCODE_FILE_ROOT) {
							const s = globalThis._VSCODE_FILE_ROOT;
							if (/^\w[\w\d+.-]*:\/\//.test(s))
								return P.joinPath(P.parse(s, !0), e);
							const r = M(s, e);
							return P.file(r);
						}
						return P.parse(i.toUrl(e));
					}
				}),
				($t = new Sv()),
				(function (t) {
					const e = new Map([
						["1", { "Cross-Origin-Opener-Policy": "same-origin" }],
						["2", { "Cross-Origin-Embedder-Policy": "require-corp" }],
						[
							"3",
							{
								"Cross-Origin-Opener-Policy": "same-origin",
								"Cross-Origin-Embedder-Policy": "require-corp",
							},
						],
					]);
					t.CoopAndCoep = Object.freeze(e.get("3"));
					const i = "vscode-coi";
					function s(n) {
						let o;
						typeof n == "string"
							? (o = new URL(n).searchParams)
							: n instanceof URL
								? (o = n.searchParams)
								: P.isUri(n) && (o = new URL(n.toString(!0)).searchParams);
						const a = o?.get(i);
						if (a) return e.get(a);
					}
					t.getHeadersFromQuery = s;
					function r(n, o, a) {
						if (!globalThis.crossOriginIsolated) return;
						const c = o && a ? "3" : a ? "2" : "1";
						n instanceof URLSearchParams ? n.set(i, c) : (n[i] = c);
					}
					t.addSearchParam = r;
				})(qa || (qa = {}));
		},
	});
function $i(t) {
	return zl(t, !0);
}
var Ba,
	Se,
	Ze,
	hp,
	dp,
	fp,
	RS,
	OS,
	ys,
	kv,
	xv,
	he,
	pp,
	LS,
	MS,
	Dv,
	di,
	mp,
	Pv,
	FS,
	$v,
	rt = m({
		"out-build/vs/base/common/resources.js"() {
			"use strict";
			hi(),
				Ce(),
				ge(),
				z(),
				Ft(),
				ie(),
				(Ba = class {
					constructor(t) {
						this.a = t;
					}
					compare(t, e, i = !1) {
						return t === e
							? 0
							: op(this.getComparisonKey(t, i), this.getComparisonKey(e, i));
					}
					isEqual(t, e, i = !1) {
						return t === e
							? !0
							: !t || !e
								? !1
								: this.getComparisonKey(t, i) === this.getComparisonKey(e, i);
					}
					getComparisonKey(t, e = !1) {
						return t
							.with({
								path: this.a(t) ? t.path.toLowerCase() : void 0,
								fragment: e ? null : void 0,
							})
							.toString();
					}
					ignorePathCasing(t) {
						return this.a(t);
					}
					isEqualOrParent(t, e, i = !1) {
						if (t.scheme === e.scheme) {
							if (t.scheme === R.file)
								return (
									ja($i(t), $i(e), this.a(t)) &&
									t.query === e.query &&
									(i || t.fragment === e.fragment)
								);
							if (di(t.authority, e.authority))
								return (
									ja(t.path, e.path, this.a(t), "/") &&
									t.query === e.query &&
									(i || t.fragment === e.fragment)
								);
						}
						return !1;
					}
					joinPath(t, ...e) {
						return P.joinPath(t, ...e);
					}
					basenameOrAuthority(t) {
						return ys(t) || t.authority;
					}
					basename(t) {
						return oe.basename(t.path);
					}
					extname(t) {
						return oe.extname(t.path);
					}
					dirname(t) {
						if (t.path.length === 0) return t;
						let e;
						return (
							t.scheme === R.file
								? (e = P.file(Ke($i(t))).path)
								: ((e = oe.dirname(t.path)),
									t.authority &&
										e.length &&
										e.charCodeAt(0) !== 47 &&
										(console.error(
											`dirname("${t.toString})) resulted in a relative path`,
										),
										(e = "/"))),
							t.with({ path: e })
						);
					}
					normalizePath(t) {
						if (!t.path.length) return t;
						let e;
						return (
							t.scheme === R.file
								? (e = P.file(ui($i(t))).path)
								: (e = oe.normalize(t.path)),
							t.with({ path: e })
						);
					}
					relativePath(t, e) {
						if (t.scheme !== e.scheme || !di(t.authority, e.authority)) return;
						if (t.scheme === R.file) {
							const r = Tw($i(t), $i(e));
							return T ? Kn(r) : r;
						}
						let i = t.path || "/";
						const s = e.path || "/";
						if (this.a(t)) {
							let r = 0;
							for (
								const n = Math.min(i.length, s.length);
								r < n &&
								!(
									i.charCodeAt(r) !== s.charCodeAt(r) &&
									i.charAt(r).toLowerCase() !== s.charAt(r).toLowerCase()
								);
								r++
							);
							i = s.substr(0, r) + i.substr(r);
						}
						return oe.relative(i, s);
					}
					resolvePath(t, e) {
						if (t.scheme === R.file) {
							const i = P.file(zi($i(t), e));
							return t.with({ authority: i.authority, path: i.path });
						}
						return (e = DS(e)), t.with({ path: oe.resolve(t.path, e) });
					}
					isAbsolutePath(t) {
						return !!t.path && t.path[0] === "/";
					}
					isEqualAuthority(t, e) {
						return t === e || (t !== void 0 && e !== void 0 && gr(t, e));
					}
					hasTrailingPathSeparator(t, e = Bt) {
						if (t.scheme === R.file) {
							const i = $i(t);
							return i.length > hv(i).length && i[i.length - 1] === e;
						} else {
							const i = t.path;
							return (
								i.length > 1 &&
								i.charCodeAt(i.length - 1) === 47 &&
								!/^[a-zA-Z]:(\/$|\\$)/.test(t.fsPath)
							);
						}
					}
					removeTrailingPathSeparator(t, e = Bt) {
						return mp(t, e)
							? t.with({ path: t.path.substr(0, t.path.length - 1) })
							: t;
					}
					addTrailingPathSeparator(t, e = Bt) {
						let i = !1;
						if (t.scheme === R.file) {
							const s = $i(t);
							i =
								s !== void 0 &&
								s.length === hv(s).length &&
								s[s.length - 1] === e;
						} else {
							e = "/";
							const s = t.path;
							i = s.length === 1 && s.charCodeAt(s.length - 1) === 47;
						}
						return !i && !mp(t, e) ? t.with({ path: t.path + "/" }) : t;
					}
				}),
				(Se = new Ba(() => !1)),
				(Ze = new Ba((t) => (t.scheme === R.file ? !Ee : !0))),
				(hp = new Ba((t) => !0)),
				(dp = Se.isEqual.bind(Se)),
				(fp = Se.isEqualOrParent.bind(Se)),
				(RS = Se.getComparisonKey.bind(Se)),
				(OS = Se.basenameOrAuthority.bind(Se)),
				(ys = Se.basename.bind(Se)),
				(kv = Se.extname.bind(Se)),
				(xv = Se.dirname.bind(Se)),
				(he = Se.joinPath.bind(Se)),
				(pp = Se.normalizePath.bind(Se)),
				(LS = Se.relativePath.bind(Se)),
				(MS = Se.resolvePath.bind(Se)),
				(Dv = Se.isAbsolutePath.bind(Se)),
				(di = Se.isEqualAuthority.bind(Se)),
				(mp = Se.hasTrailingPathSeparator.bind(Se)),
				(Pv = Se.removeTrailingPathSeparator.bind(Se)),
				(FS = Se.addTrailingPathSeparator.bind(Se)),
				(function (t) {
					(t.META_DATA_LABEL = "label"),
						(t.META_DATA_DESCRIPTION = "description"),
						(t.META_DATA_SIZE = "size"),
						(t.META_DATA_MIME = "mime");
					function e(i) {
						const s = new Map();
						i.path
							.substring(i.path.indexOf(";") + 1, i.path.lastIndexOf(";"))
							.split(";")
							.forEach((o) => {
								const [a, c] = o.split(":");
								a && c && s.set(a, c);
							});
						const n = i.path.substring(0, i.path.indexOf(";"));
						return n && s.set(t.META_DATA_MIME, n), s;
					}
					t.parseMetaData = e;
				})($v || ($v = {}));
		},
	}),
	Av,
	NS = m({
		"out-build/vs/base/common/symbols.js"() {
			"use strict";
			Av = Symbol("MicrotaskDelay");
		},
	});
function gp(t) {
	return !!t && typeof t.then == "function";
}
function Yn(t) {
	const e = new ts(),
		i = t(e.token),
		s = new Promise((r, n) => {
			const o = e.token.onCancellationRequested(() => {
				o.dispose(), n(new ai());
			});
			Promise.resolve(i).then(
				(a) => {
					o.dispose(), e.dispose(), r(a);
				},
				(a) => {
					o.dispose(), e.dispose(), n(a);
				},
			);
		});
	return new (class {
		cancel() {
			e.cancel(), e.dispose();
		}
		then(r, n) {
			return s.then(r, n);
		}
		catch(r) {
			return this.then(void 0, r);
		}
		finally(r) {
			return s.finally(r);
		}
	})();
}
function WS() {
	let t, e;
	return {
		promise: new Promise((s, r) => {
			(t = s), (e = r);
		}),
		resolve: t,
		reject: e,
	};
}
function Ai(t, e) {
	return e
		? new Promise((i, s) => {
				const r = setTimeout(() => {
						n.dispose(), i();
					}, t),
					n = e.onCancellationRequested(() => {
						clearTimeout(r), n.dispose(), s(new ai());
					});
			})
		: Yn((i) => Ai(t, i));
}
function jS(t, e = 0, i) {
	const s = setTimeout(() => {
			t(), i && r.dispose();
		}, e),
		r = ke(() => {
			clearTimeout(s), i?.deleteAndLeak(r);
		});
	return i?.add(r), r;
}
function TS(t, e = (s) => !!s, i = null) {
	let s = 0;
	const r = t.length,
		n = () => {
			if (s >= r) return Promise.resolve(i);
			const o = t[s++];
			return Promise.resolve(o()).then((c) =>
				e(c) ? Promise.resolve(c) : n(),
			);
		};
	return n();
}
async function US(t, e, i) {
	let s;
	for (let r = 0; r < i; r++)
		try {
			return await t();
		} catch (n) {
			(s = n), await Ai(e);
		}
	throw s;
}
var wp,
	Iv,
	Cv,
	vp,
	Js,
	za,
	_v,
	Qn,
	yp,
	bs,
	Rv,
	Ov,
	bp,
	Kl,
	Lv,
	Mv,
	Fv,
	Xs,
	Nt,
	Nv,
	qS,
	ae = m({
		"out-build/vs/base/common/async.js"() {
			"use strict";
			Mt(),
				Ae(),
				q(),
				F(),
				rt(),
				z(),
				NS(),
				Fa(),
				(wp = class {
					constructor() {
						(this.f = !1), (this.a = null), (this.b = null), (this.d = null);
					}
					queue(t) {
						if (this.f)
							return Promise.reject(new Error("Throttler is disposed"));
						if (this.a) {
							if (((this.d = t), !this.b)) {
								const e = () => {
									if (((this.b = null), this.f)) return;
									const i = this.queue(this.d);
									return (this.d = null), i;
								};
								this.b = new Promise((i) => {
									this.a.then(e, e).then(i);
								});
							}
							return new Promise((e, i) => {
								this.b.then(e, i);
							});
						}
						return (
							(this.a = t()),
							new Promise((e, i) => {
								this.a.then(
									(s) => {
										(this.a = null), e(s);
									},
									(s) => {
										(this.a = null), i(s);
									},
								);
							})
						);
					}
					dispose() {
						this.f = !0;
					}
				}),
				(Iv = (t, e) => {
					let i = !0;
					const s = setTimeout(() => {
						(i = !1), e();
					}, t);
					return {
						isTriggered: () => i,
						dispose: () => {
							clearTimeout(s), (i = !1);
						},
					};
				}),
				(Cv = (t) => {
					let e = !0;
					return (
						queueMicrotask(() => {
							e && ((e = !1), t());
						}),
						{
							isTriggered: () => e,
							dispose: () => {
								e = !1;
							},
						}
					);
				}),
				(vp = class {
					constructor(t) {
						(this.defaultDelay = t),
							(this.a = null),
							(this.b = null),
							(this.d = null),
							(this.f = null),
							(this.g = null);
					}
					trigger(t, e = this.defaultDelay) {
						(this.g = t),
							this.h(),
							this.b ||
								(this.b = new Promise((s, r) => {
									(this.d = s), (this.f = r);
								}).then(() => {
									if (((this.b = null), (this.d = null), this.g)) {
										const s = this.g;
										return (this.g = null), s();
									}
								}));
						const i = () => {
							(this.a = null), this.d?.(null);
						};
						return (this.a = e === Av ? Cv(i) : Iv(e, i)), this.b;
					}
					isTriggered() {
						return !!this.a?.isTriggered();
					}
					cancel() {
						this.h(), this.b && (this.f?.(new ai()), (this.b = null));
					}
					h() {
						this.a?.dispose(), (this.a = null);
					}
					dispose() {
						this.cancel();
					}
				}),
				(Js = class {
					constructor(t) {
						(this.a = new vp(t)), (this.b = new wp());
					}
					trigger(t, e) {
						return this.a.trigger(() => this.b.queue(t), e);
					}
					isTriggered() {
						return this.a.isTriggered();
					}
					cancel() {
						this.a.cancel();
					}
					dispose() {
						this.a.dispose(), this.b.dispose();
					}
				}),
				(za = class {
					constructor() {
						(this.a = !1),
							(this.b = new Promise((t, e) => {
								this.d = t;
							}));
					}
					isOpen() {
						return this.a;
					}
					open() {
						(this.a = !0), this.d(!0);
					}
					wait() {
						return this.b;
					}
				}),
				(_v = class {
					constructor(t) {
						(this.a = 0),
							(this.b = !1),
							(this.f = t),
							(this.g = []),
							(this.d = 0),
							(this.h = new $());
					}
					whenIdle() {
						return this.size > 0
							? x.toPromise(this.onDrained)
							: Promise.resolve();
					}
					get onDrained() {
						return this.h.event;
					}
					get size() {
						return this.a;
					}
					queue(t) {
						if (this.b) throw new Error("Object has been disposed");
						return (
							this.a++,
							new Promise((e, i) => {
								this.g.push({ factory: t, c: e, e: i }), this.j();
							})
						);
					}
					j() {
						for (; this.g.length && this.d < this.f; ) {
							const t = this.g.shift();
							this.d++;
							const e = t.factory();
							e.then(t.c, t.e),
								e.then(
									() => this.k(),
									() => this.k(),
								);
						}
					}
					k() {
						this.b ||
							(this.d--,
							--this.a === 0 && this.h.fire(),
							this.g.length > 0 && this.j());
					}
					clear() {
						if (this.b) throw new Error("Object has been disposed");
						(this.g.length = 0), (this.a = this.d);
					}
					dispose() {
						(this.b = !0), (this.g.length = 0), (this.a = 0), this.h.dispose();
					}
				}),
				(Qn = class extends _v {
					constructor() {
						super(1);
					}
				}),
				(yp = class {
					constructor() {
						(this.a = new Map()),
							(this.b = new Set()),
							(this.d = void 0),
							(this.f = 0);
					}
					async whenDrained() {
						if (this.g()) return;
						const t = new Xs();
						return this.b.add(t), t.p;
					}
					g() {
						for (const [, t] of this.a) if (t.size > 0) return !1;
						return !0;
					}
					queueSize(t, e = Se) {
						const i = e.getComparisonKey(t);
						return this.a.get(i)?.size ?? 0;
					}
					queueFor(t, e, i = Se) {
						const s = i.getComparisonKey(t);
						let r = this.a.get(s);
						if (!r) {
							r = new Qn();
							const n = this.f++,
								o = x.once(r.onDrained)(() => {
									r?.dispose(),
										this.a.delete(s),
										this.h(),
										this.d?.deleteAndDispose(n),
										this.d?.size === 0 && (this.d.dispose(), (this.d = void 0));
								});
							this.d || (this.d = new Tf()), this.d.set(n, o), this.a.set(s, r);
						}
						return r.queue(e);
					}
					h() {
						this.g() && this.j();
					}
					j() {
						for (const t of this.b) t.complete();
						this.b.clear();
					}
					dispose() {
						for (const [, t] of this.a) t.dispose();
						this.a.clear(), this.j(), this.d?.dispose();
					}
				}),
				(bs = class {
					constructor(t, e) {
						(this.b = -1),
							(this.a = t),
							(this.d = e),
							(this.f = this.g.bind(this));
					}
					dispose() {
						this.cancel(), (this.a = null);
					}
					cancel() {
						this.isScheduled() && (clearTimeout(this.b), (this.b = -1));
					}
					schedule(t = this.d) {
						this.cancel(), (this.b = setTimeout(this.f, t));
					}
					get delay() {
						return this.d;
					}
					set delay(t) {
						this.d = t;
					}
					isScheduled() {
						return this.b !== -1;
					}
					flush() {
						this.isScheduled() && (this.cancel(), this.h());
					}
					g() {
						(this.b = -1), this.a && this.h();
					}
					h() {
						this.a?.();
					}
				}),
				(Rv = class extends bs {
					constructor(t, e) {
						super(t, e), (this.j = []);
					}
					work(t) {
						this.j.push(t), this.isScheduled() || this.schedule();
					}
					h() {
						const t = this.j;
						(this.j = []), this.a?.(t);
					}
					dispose() {
						(this.j = []), super.dispose();
					}
				}),
				(Ov = class extends j {
					constructor(t, e) {
						super(),
							(this.h = t),
							(this.j = e),
							(this.a = []),
							(this.b = this.D(new zr())),
							(this.f = !1),
							(this.g = 0);
					}
					get pending() {
						return this.a.length;
					}
					work(t) {
						if (this.f) return !1;
						if (typeof this.h.maxBufferedWork == "number") {
							if (this.b.value) {
								if (this.pending + t.length > this.h.maxBufferedWork) return !1;
							} else if (
								this.pending + t.length - this.h.maxWorkChunkSize >
								this.h.maxBufferedWork
							)
								return !1;
						}
						for (const i of t) this.a.push(i);
						const e = Date.now() - this.g;
						return (
							!this.b.value &&
							(!this.h.waitThrottleDelayBetweenWorkUnits ||
								e >= this.h.throttleDelay)
								? this.m()
								: !this.b.value &&
									this.h.waitThrottleDelayBetweenWorkUnits &&
									this.q(Math.max(this.h.throttleDelay - e, 0)),
							!0
						);
					}
					m() {
						(this.g = Date.now()),
							this.j(this.a.splice(0, this.h.maxWorkChunkSize)),
							this.a.length > 0 && this.q();
					}
					q(t = this.h.throttleDelay) {
						(this.b.value = new bs(() => {
							this.b.clear(), this.m();
						}, t)),
							this.b.value.schedule();
					}
					dispose() {
						super.dispose(), (this.f = !0);
					}
				}),
				(function () {
					typeof globalThis.requestIdleCallback != "function" ||
					typeof globalThis.cancelIdleCallback != "function"
						? (Kl = (t, e, i) => {
								G0(() => {
									if (s) return;
									const r = Date.now() + 15;
									e(
										Object.freeze({
											didTimeout: !0,
											timeRemaining() {
												return Math.max(0, r - Date.now());
											},
										}),
									);
								});
								let s = !1;
								return {
									dispose() {
										s || (s = !0);
									},
								};
							})
						: (Kl = (t, e, i) => {
								const s = t.requestIdleCallback(
									e,
									typeof i == "number" ? { timeout: i } : void 0,
								);
								let r = !1;
								return {
									dispose() {
										r || ((r = !0), t.cancelIdleCallback(s));
									},
								};
							}),
						(bp = (t, e) => Kl(globalThis, t, e));
				})(),
				(Lv = class {
					constructor(t, e) {
						(this.g = !1),
							(this.d = () => {
								try {
									this.j = e();
								} catch (i) {
									this.l = i;
								} finally {
									this.g = !0;
								}
							}),
							(this.f = Kl(t, () => this.d()));
					}
					dispose() {
						this.f.dispose();
					}
					get value() {
						if ((this.g || (this.f.dispose(), this.d()), this.l)) throw this.l;
						return this.j;
					}
					get isInitialized() {
						return this.g;
					}
				}),
				(Mv = class extends Lv {
					constructor(t) {
						super(globalThis, t);
					}
				}),
				(function (t) {
					(t[(t.Resolved = 0)] = "Resolved"),
						(t[(t.Rejected = 1)] = "Rejected");
				})(Fv || (Fv = {})),
				(Xs = class {
					get isRejected() {
						return this.d?.outcome === 1;
					}
					get isResolved() {
						return this.d?.outcome === 0;
					}
					get isSettled() {
						return !!this.d;
					}
					get value() {
						return this.d?.outcome === 0 ? this.d?.value : void 0;
					}
					constructor() {
						this.p = new Promise((t, e) => {
							(this.a = t), (this.b = e);
						});
					}
					complete(t) {
						return new Promise((e) => {
							this.a(t), (this.d = { outcome: 0, value: t }), e();
						});
					}
					error(t) {
						return new Promise((e) => {
							this.b(t), (this.d = { outcome: 1, value: t }), e();
						});
					}
					cancel() {
						return this.error(new ai());
					}
				}),
				(function (t) {
					async function e(s) {
						let r;
						const n = await Promise.all(
							s.map((o) =>
								o.then(
									(a) => a,
									(a) => {
										r || (r = a);
									},
								),
							),
						);
						if (typeof r < "u") throw r;
						return n;
					}
					t.settled = e;
					function i(s) {
						return new Promise(async (r, n) => {
							try {
								await s(r, n);
							} catch (o) {
								n(o);
							}
						});
					}
					t.withAsyncBody = i;
				})(Nt || (Nt = {})),
				(function (t) {
					(t[(t.Initial = 0)] = "Initial"),
						(t[(t.DoneOK = 1)] = "DoneOK"),
						(t[(t.DoneError = 2)] = "DoneError");
				})(Nv || (Nv = {})),
				(qS = class Ti {
					static fromArray(e) {
						return new Ti((i) => {
							i.emitMany(e);
						});
					}
					static fromPromise(e) {
						return new Ti(async (i) => {
							i.emitMany(await e);
						});
					}
					static fromPromisesResolveOrder(e) {
						return new Ti(async (i) => {
							await Promise.all(e.map(async (s) => i.emitOne(await s)));
						});
					}
					static merge(e) {
						return new Ti(async (i) => {
							await Promise.all(
								e.map(async (s) => {
									for await (const r of s) i.emitOne(r);
								}),
							);
						});
					}
					static {
						this.EMPTY = Ti.fromArray([]);
					}
					constructor(e, i) {
						(this.a = 0),
							(this.b = []),
							(this.d = null),
							(this.f = i),
							(this.g = new $()),
							queueMicrotask(async () => {
								const s = {
									emitOne: (r) => this.h(r),
									emitMany: (r) => this.j(r),
									reject: (r) => this.l(r),
								};
								try {
									await Promise.resolve(e(s)), this.k();
								} catch (r) {
									this.l(r);
								} finally {
									(s.emitOne = void 0),
										(s.emitMany = void 0),
										(s.reject = void 0);
								}
							});
					}
					[Symbol.asyncIterator]() {
						let e = 0;
						return {
							next: async () => {
								do {
									if (this.a === 2) throw this.d;
									if (e < this.b.length)
										return { done: !1, value: this.b[e++] };
									if (this.a === 1) return { done: !0, value: void 0 };
									await x.toPromise(this.g.event);
								} while (!0);
							},
							return: async () => (this.f?.(), { done: !0, value: void 0 }),
						};
					}
					static map(e, i) {
						return new Ti(async (s) => {
							for await (const r of e) s.emitOne(i(r));
						});
					}
					map(e) {
						return Ti.map(this, e);
					}
					static filter(e, i) {
						return new Ti(async (s) => {
							for await (const r of e) i(r) && s.emitOne(r);
						});
					}
					filter(e) {
						return Ti.filter(this, e);
					}
					static coalesce(e) {
						return Ti.filter(e, (i) => !!i);
					}
					coalesce() {
						return Ti.coalesce(this);
					}
					static async toPromise(e) {
						const i = [];
						for await (const s of e) i.push(s);
						return i;
					}
					toPromise() {
						return Ti.toPromise(this);
					}
					h(e) {
						this.a === 0 && (this.b.push(e), this.g.fire());
					}
					j(e) {
						this.a === 0 && ((this.b = this.b.concat(e)), this.g.fire());
					}
					k() {
						this.a === 0 && ((this.a = 1), this.g.fire());
					}
					l(e) {
						this.a === 0 && ((this.a = 2), (this.d = e), this.g.fire());
					}
				});
		},
	});
function Ep(t, e) {
	return e && (t.stack || t.stacktrace)
		? w(110, null, jv(t), Wv(t.stack) || Wv(t.stacktrace))
		: jv(t);
}
function Wv(t) {
	return Array.isArray(t)
		? t.join(`
`)
		: t;
}
function jv(t) {
	return t.code === "ERR_UNC_HOST_NOT_ALLOWED"
		? `${t.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`
		: typeof t.code == "string" &&
				typeof t.errno == "number" &&
				typeof t.syscall == "string"
			? w(111, null, t.message)
			: t.message || w(112, null);
}
function Es(t = null, e = !1) {
	if (!t) return w(113, null);
	if (Array.isArray(t)) {
		const i = Dt(t),
			s = Es(i[0], e);
		return i.length > 1 ? w(114, null, s, i.length) : s;
	}
	if (mt(t)) return t;
	if (t.detail) {
		const i = t.detail;
		if (i.error) return Ep(i.error, e);
		if (i.exception) return Ep(i.exception, e);
	}
	return t.stack ? Ep(t, e) : t.message ? t.message : w(115, null);
}
var Yr = m({
	"out-build/vs/base/common/errorMessage.js"() {
		"use strict";
		Ut(), Ie(), ve();
	},
});
function Zn(t, e) {
	const { os: i, tildify: s, relative: r } = e;
	if (r) {
		const a = BS(t, r, i);
		if (typeof a == "string") return a;
	}
	let n = t.fsPath;
	if (
		(i === 1 && !T
			? (n = n.replace(/\//g, "\\"))
			: i !== 1 && T && (n = n.replace(/\\/g, "/")),
		i !== 1 && s?.userHome)
	) {
		const a = s.userHome.fsPath;
		let c;
		t.scheme !== s.userHome.scheme &&
		t.path[0] === oe.sep &&
		t.path[1] !== oe.sep
			? (c = s.userHome.with({ path: t.path }).fsPath)
			: (c = n),
			(n = zS(c, a, i));
	}
	return (i === 1 ? ze : oe).normalize(Sp(n, i === 1));
}
function BS(t, e, i) {
	const s = i === 1 ? ze : oe,
		r = i === 3 ? Se : hp,
		n = e.getWorkspace(),
		o = n.folders.at(0);
	if (!o) return;
	t.scheme !== o.uri.scheme &&
		t.path[0] === oe.sep &&
		t.path[1] !== oe.sep &&
		(t = o.uri.with({ path: t.path }));
	const a = e.getWorkspaceFolder(t);
	if (!a) return;
	let c;
	if (
		(r.isEqual(a.uri, t) ? (c = "") : (c = r.relativePath(a.uri, t) ?? ""),
		c && (c = s.normalize(c)),
		n.folders.length > 1 && !e.noPrefix)
	) {
		const l = a.name ? a.name : r.basenameOrAuthority(a.uri);
		c = c ? `${l} \u2022 ${c}` : l;
	}
	return c;
}
function Sp(t, e = T) {
	return pv(t, e) ? t.charAt(0).toUpperCase() + t.slice(1) : t;
}
function zS(t, e, i = Ri) {
	if (i === 1 || !t || !e) return t;
	let s = Yl.original === e ? Yl.normalized : void 0;
	s ||
		((s = e),
		T && (s = Kn(s)),
		(s = `${Kr(s, oe.sep)}${oe.sep}`),
		(Yl = { original: e, normalized: s }));
	let r = t;
	return (
		T && (r = Kn(r)),
		(i === 3 ? r.startsWith(s) : Gl(r, s)) ? `~/${r.substr(s.length)}` : t
	);
}
function HS(t, e) {
	return N || e
		? t.replace(/\(&&\w\)|&&/g, "").replace(/&/g, N ? "&" : "&&")
		: t.replace(/&&|&/g, (i) => (i === "&" ? "&&" : "&"));
}
function Tv(t, e) {
	return N || e
		? t.replace(/\(&&\w\)|&&/g, "")
		: T
			? t.replace(/&&|&/g, (i) => (i === "&" ? "&&" : "&"))
			: t.replace(/&&/g, "_");
}
function VS(t) {
	if (t.endsWith("]")) {
		const e = t.lastIndexOf(" [", t.length - 2);
		if (e !== -1) {
			const i = Uv(t.substring(0, e)),
				s = t.substring(e);
			return { name: i.name + s, parentPath: i.parentPath };
		}
	}
	return Uv(t);
}
function Uv(t) {
	const e = t.indexOf("/") !== -1 ? oe : ze,
		i = e.basename(t),
		s = e.dirname(t);
	return i.length ? { name: i, parentPath: s } : { name: s, parentPath: "" };
}
var Yl,
	qv,
	vr = m({
		"out-build/vs/base/common/labels.js"() {
			"use strict";
			hi(),
				ge(),
				z(),
				rt(),
				Ft(),
				(Yl = Object.create(null)),
				(function (t) {
					(t[(t.TEXT = 0)] = "TEXT"),
						(t[(t.VARIABLE = 1)] = "VARIABLE"),
						(t[(t.SEPARATOR = 2)] = "SEPARATOR");
				})(qv || (qv = {}));
		},
	});
function eo(t) {
	return GS(t, "NFC", Bv);
}
function GS(t, e, i) {
	if (!t) return t;
	const s = i.get(t);
	if (s) return s;
	let r;
	return zv.test(t) ? (r = t.normalize(e)) : (r = t), i.set(t, r), r;
}
var Bv,
	JS,
	zv,
	Ql = m({
		"out-build/vs/base/common/normalization.js"() {
			"use strict";
			xi(), (Bv = new Ea(1e4)), (JS = new Ea(1e4)), (zv = /[^\u0000-\u0080]/);
		},
	});
import * as Me from "fs";
import { tmpdir as XS } from "os";
import { promisify as Ha } from "util";
async function Hv(t, e = Qr.UNLINK, i) {
	if (AS(t)) throw new Error("rimraf - will refuse to recursively delete root");
	return e === Qr.UNLINK ? kp(t) : KS(t, i);
}
async function KS(t, e = Ta(XS())) {
	try {
		try {
			await Me.promises.rename(t, e);
		} catch (i) {
			return i.code === "ENOENT" ? void 0 : kp(t);
		}
		kp(e).catch((i) => {});
	} catch (i) {
		if (i.code !== "ENOENT") throw i;
	}
}
async function kp(t) {
	return Me.promises.rm(t, { recursive: !0, force: !0, maxRetries: 3 });
}
async function Zl(t, e) {
	return QS(await (e ? YS(t) : Me.promises.readdir(t)));
}
async function YS(t) {
	try {
		return await Me.promises.readdir(t, { withFileTypes: !0 });
	} catch (s) {
		console.warn("[node.js fs] readdir with filetypes failed with error: ", s);
	}
	const e = [],
		i = await Zl(t);
	for (const s of i) {
		let r = !1,
			n = !1,
			o = !1;
		try {
			const a = await Me.promises.lstat(M(t, s));
			(r = a.isFile()), (n = a.isDirectory()), (o = a.isSymbolicLink());
		} catch (a) {
			console.warn(
				"[node.js fs] unexpected error from lstat after readdir: ",
				a,
			);
		}
		e.push({
			name: s,
			isFile: () => r,
			isDirectory: () => n,
			isSymbolicLink: () => o,
		});
	}
	return e;
}
function QS(t) {
	return t.map((e) =>
		typeof e == "string"
			? N
				? eo(e)
				: e
			: ((e.name = N ? eo(e.name) : e.name), e),
	);
}
async function ZS(t) {
	const e = await Zl(t),
		i = [];
	for (const s of e) (await Wt.existsDirectory(M(t, s))) && i.push(s);
	return i;
}
function ek(t, e = 1e3) {
	return new Promise((i) => {
		let s = !1;
		const r = setInterval(() => {
			s ||
				((s = !0),
				Me.access(t, (n) => {
					(s = !1), n && (clearInterval(r), i(void 0));
				}));
		}, e);
	});
}
function tk(t, e, i) {
	return Xv.queueFor(
		P.file(t),
		() => {
			const s = rk(i);
			return new Promise((r, n) => sk(t, e, s, (o) => (o ? n(o) : r())));
		},
		Ze,
	);
}
function ik(t) {
	xp = t;
}
function sk(t, e, i, s) {
	if (!xp) return Me.writeFile(t, e, { mode: i.mode, flag: i.flag }, s);
	Me.open(t, i.flag, i.mode, (r, n) => {
		if (r) return s(r);
		Me.writeFile(n, e, (o) => {
			if (o) return Me.close(n, () => s(o));
			Me.fdatasync(
				n,
				(a) => (
					a &&
						(console.warn(
							"[node.js fs] fdatasync is now disabled for this session because it failed: ",
							a,
						),
						ik(!1)),
					Me.close(n, (c) => s(c))
				),
			);
		});
	});
}
function rk(t) {
	return t
		? {
				mode: typeof t.mode == "number" ? t.mode : 438,
				flag: typeof t.flag == "string" ? t.flag : "w",
			}
		: { mode: 438, flag: "w" };
}
async function nk(t, e, i = 6e4) {
	if (t !== e)
		try {
			T && typeof i == "number"
				? await Vv(t, e, Date.now(), i)
				: await Me.promises.rename(t, e);
		} catch (s) {
			if (
				(t.toLowerCase() !== e.toLowerCase() && s.code === "EXDEV") ||
				t.endsWith(".")
			)
				await Gv(t, e, { preserveSymlinks: !1 }), await Hv(t, Qr.MOVE);
			else throw s;
		}
}
async function Vv(t, e, i, s, r = 0) {
	try {
		return await Me.promises.rename(t, e);
	} catch (n) {
		if (n.code !== "EACCES" && n.code !== "EPERM" && n.code !== "EBUSY")
			throw n;
		if (Date.now() - i >= s)
			throw (
				(console.error(
					`[node.js fs] rename failed after ${r} retries with error: ${n}`,
				),
				n)
			);
		if (r === 0) {
			let o = !1;
			try {
				const { stat: a } = await Wt.stat(e);
				a.isFile() || (o = !0);
			} catch {}
			if (o) throw n;
		}
		return await Ai(Math.min(100, r * 10)), Vv(t, e, i, s, r + 1);
	}
}
async function Gv(t, e, i) {
	return Jv(t, e, {
		root: { source: t, target: e },
		options: i,
		handledSourcePaths: new Set(),
	});
}
async function Jv(t, e, i) {
	if (i.handledSourcePaths.has(t)) return;
	i.handledSourcePaths.add(t);
	const { stat: s, symbolicLink: r } = await Wt.stat(t);
	if (r) {
		if (i.options.preserveSymlinks)
			try {
				return await ck(t, e, i);
			} catch {}
		if (r.dangling) return;
	}
	return s.isDirectory() ? ok(t, e, s.mode & Dp, i) : ak(t, e, s.mode & Dp);
}
async function ok(t, e, i, s) {
	await Me.promises.mkdir(e, { recursive: !0, mode: i });
	const r = await Zl(t);
	for (const n of r) await Jv(M(t, n), M(e, n), s);
}
async function ak(t, e, i) {
	await Me.promises.copyFile(t, e), await Me.promises.chmod(e, i);
}
async function ck(t, e, i) {
	let s = await Me.promises.readlink(t);
	ja(s, i.root.source, !Ee) &&
		(s = M(i.root.target, s.substr(i.root.source.length + 1))),
		await Me.promises.symlink(s, e);
}
var Qr,
	Wt,
	Xv,
	xp,
	Dp,
	ee,
	yt = m({
		"out-build/vs/base/node/pfs.js"() {
			"use strict";
			ae(),
				hi(),
				Ql(),
				ge(),
				z(),
				rt(),
				ie(),
				(function (t) {
					(t[(t.UNLINK = 0)] = "UNLINK"), (t[(t.MOVE = 1)] = "MOVE");
				})(Qr || (Qr = {})),
				(function (t) {
					async function e(r) {
						let n;
						try {
							if (((n = await Me.promises.lstat(r)), !n.isSymbolicLink()))
								return { stat: n };
						} catch {}
						try {
							return {
								stat: await Me.promises.stat(r),
								symbolicLink: n?.isSymbolicLink() ? { dangling: !1 } : void 0,
							};
						} catch (o) {
							if (o.code === "ENOENT" && n)
								return { stat: n, symbolicLink: { dangling: !0 } };
							if (T && o.code === "EACCES")
								try {
									return {
										stat: await Me.promises.stat(await Me.promises.readlink(r)),
										symbolicLink: { dangling: !1 },
									};
								} catch (a) {
									if (a.code === "ENOENT" && n)
										return { stat: n, symbolicLink: { dangling: !0 } };
									throw a;
								}
							throw o;
						}
					}
					t.stat = e;
					async function i(r) {
						try {
							const { stat: n, symbolicLink: o } = await t.stat(r);
							return n.isFile() && o?.dangling !== !0;
						} catch {}
						return !1;
					}
					t.existsFile = i;
					async function s(r) {
						try {
							const { stat: n, symbolicLink: o } = await t.stat(r);
							return n.isDirectory() && o?.dangling !== !0;
						} catch {}
						return !1;
					}
					t.existsDirectory = s;
				})(Wt || (Wt = {})),
				(Xv = new yp()),
				(xp = !0),
				(Dp = 511),
				(ee = new (class {
					get read() {
						return (t, e, i, s, r) =>
							new Promise((n, o) => {
								Me.read(t, e, i, s, r, (a, c, l) =>
									a ? o(a) : n({ bytesRead: c, buffer: l }),
								);
							});
					}
					get write() {
						return (t, e, i, s, r) =>
							new Promise((n, o) => {
								Me.write(t, e, i, s, r, (a, c, l) =>
									a ? o(a) : n({ bytesWritten: c, buffer: l }),
								);
							});
					}
					get fdatasync() {
						return Ha(Me.fdatasync);
					}
					get open() {
						return Ha(Me.open);
					}
					get close() {
						return Ha(Me.close);
					}
					get realpath() {
						return Ha(Me.realpath);
					}
					get ftruncate() {
						return Ha(Me.ftruncate);
					}
					async exists(t) {
						try {
							return await Me.promises.access(t), !0;
						} catch {
							return !1;
						}
					}
					get readdir() {
						return Zl;
					}
					get readDirsInDir() {
						return ZS;
					}
					get writeFile() {
						return tk;
					}
					get rm() {
						return Hv;
					}
					get rename() {
						return nk;
					}
					get copy() {
						return Gv;
					}
				})());
		},
	});
function eu(t) {
	const e = t;
	return e
		? [e.on, e.pause, e.resume, e.destroy].every((i) => typeof i == "function")
		: !1;
}
function Pp(t) {
	const e = t;
	return e
		? eu(e.stream) && Array.isArray(e.buffer) && typeof e.ended == "boolean"
		: !1;
}
function tu(t, e) {
	return new Qv(t, e);
}
function lk(t, e) {
	const i = [];
	let s;
	for (; (s = t.read()) !== null; ) i.push(s);
	return e(i);
}
function uk(t, e, i) {
	const s = [];
	let r;
	for (; (r = t.read()) !== null && s.length < i; ) s.push(r);
	return r === null && s.length > 0
		? e(s)
		: {
				read: () => {
					if (s.length > 0) return s.shift();
					if (typeof r < "u") {
						const n = r;
						return (r = void 0), n;
					}
					return t.read();
				},
			};
}
function Kv(t, e) {
	return new Promise((i, s) => {
		const r = [];
		iu(t, {
			onData: (n) => {
				e && r.push(n);
			},
			onError: (n) => {
				e ? s(n) : i(void 0);
			},
			onEnd: () => {
				i(e ? e(r) : void 0);
			},
		});
	});
}
function iu(t, e, i) {
	t.on("error", (s) => {
		i?.isCancellationRequested || e.onError(s);
	}),
		t.on("end", () => {
			i?.isCancellationRequested || e.onEnd();
		}),
		t.on("data", (s) => {
			i?.isCancellationRequested || e.onData(s);
		});
}
function hk(t, e) {
	return new Promise((i, s) => {
		const r = new De(),
			n = [],
			o = (l) => {
				if ((n.push(l), n.length > e))
					return r.dispose(), t.pause(), i({ stream: t, buffer: n, ended: !1 });
			},
			a = (l) => (r.dispose(), s(l)),
			c = () => (r.dispose(), i({ stream: t, buffer: n, ended: !0 }));
		r.add(ke(() => t.removeListener("error", a))),
			t.on("error", a),
			r.add(ke(() => t.removeListener("end", c))),
			t.on("end", c),
			r.add(ke(() => t.removeListener("data", o))),
			t.on("data", o);
	});
}
function dk(t) {
	let e = !1;
	return { read: () => (e ? null : ((e = !0), t)) };
}
function Yv(t, e, i) {
	const s = tu(i);
	return (
		iu(t, {
			onData: (r) => s.write(e.data(r)),
			onError: (r) => s.error(e.error ? e.error(r) : r),
			onEnd: () => s.end(),
		}),
		s
	);
}
var Qv,
	Va = m({
		"out-build/vs/base/common/stream.js"() {
			"use strict";
			Ae(),
				F(),
				(Qv = class {
					constructor(t, e) {
						(this.e = t),
							(this.f = e),
							(this.a = { flowing: !1, ended: !1, destroyed: !1 }),
							(this.b = { data: [], error: [] }),
							(this.c = { data: [], error: [], end: [] }),
							(this.d = []);
					}
					pause() {
						this.a.destroyed || (this.a.flowing = !1);
					}
					resume() {
						this.a.destroyed ||
							this.a.flowing ||
							((this.a.flowing = !0), this.j(), this.k(), this.l());
					}
					write(t) {
						if (!this.a.destroyed) {
							if (this.a.flowing) this.g(t);
							else if (
								(this.b.data.push(t),
								typeof this.f?.highWaterMark == "number" &&
									this.b.data.length > this.f.highWaterMark)
							)
								return new Promise((e) => this.d.push(e));
						}
					}
					error(t) {
						this.a.destroyed ||
							(this.a.flowing ? this.h(t) : this.b.error.push(t));
					}
					end(t) {
						this.a.destroyed ||
							(typeof t < "u" && this.write(t),
							this.a.flowing
								? (this.i(), this.destroy())
								: (this.a.ended = !0));
					}
					g(t) {
						this.c.data.slice(0).forEach((e) => e(t));
					}
					h(t) {
						this.c.error.length === 0
							? Ot(t)
							: this.c.error.slice(0).forEach((e) => e(t));
					}
					i() {
						this.c.end.slice(0).forEach((t) => t());
					}
					on(t, e) {
						if (!this.a.destroyed)
							switch (t) {
								case "data":
									this.c.data.push(e), this.resume();
									break;
								case "end":
									this.c.end.push(e),
										this.a.flowing && this.l() && this.destroy();
									break;
								case "error":
									this.c.error.push(e), this.a.flowing && this.k();
									break;
							}
					}
					removeListener(t, e) {
						if (this.a.destroyed) return;
						let i;
						switch (t) {
							case "data":
								i = this.c.data;
								break;
							case "end":
								i = this.c.end;
								break;
							case "error":
								i = this.c.error;
								break;
						}
						if (i) {
							const s = i.indexOf(e);
							s >= 0 && i.splice(s, 1);
						}
					}
					j() {
						if (this.b.data.length > 0) {
							const t = this.e(this.b.data);
							this.g(t), (this.b.data.length = 0);
							const e = [...this.d];
							(this.d.length = 0), e.forEach((i) => i());
						}
					}
					k() {
						if (this.c.error.length > 0) {
							for (const t of this.b.error) this.h(t);
							this.b.error.length = 0;
						}
					}
					l() {
						return this.a.ended ? (this.i(), this.c.end.length > 0) : !1;
					}
					destroy() {
						this.a.destroyed ||
							((this.a.destroyed = !0),
							(this.a.ended = !0),
							(this.b.data.length = 0),
							(this.b.error.length = 0),
							(this.c.data.length = 0),
							(this.c.error.length = 0),
							(this.c.end.length = 0),
							(this.d.length = 0));
					}
				});
		},
	});
function fk(t, e, i = 0) {
	const s = e.byteLength,
		r = t.byteLength;
	if (s === 0) return 0;
	if (s === 1) return t.indexOf(e[0]);
	if (s > r - i) return -1;
	const n = Zv.value;
	n.fill(e.length);
	for (let l = 0; l < e.length; l++) n[e[l]] = e.length - l - 1;
	let o = i + e.length - 1,
		a = o,
		c = -1;
	for (; o < r; )
		if (t[o] === e[a]) {
			if (a === 0) {
				c = o;
				break;
			}
			o--, a--;
		} else (o += Math.max(e.length - a, n[t[o]])), (a = e.length - 1);
	return c;
}
function pk(t, e) {
	return t[e] * 2 ** 24 + t[e + 1] * 2 ** 16 + t[e + 2] * 2 ** 8 + t[e + 3];
}
function mk(t, e, i) {
	(t[i + 3] = e),
		(e = e >>> 8),
		(t[i + 2] = e),
		(e = e >>> 8),
		(t[i + 1] = e),
		(e = e >>> 8),
		(t[i] = e);
}
function gk(t, e) {
	return (
		((t[e + 0] << 0) >>> 0) |
		((t[e + 1] << 8) >>> 0) |
		((t[e + 2] << 16) >>> 0) |
		((t[e + 3] << 24) >>> 0)
	);
}
function wk(t, e, i) {
	(t[i + 0] = e & 255),
		(e = e >>> 8),
		(t[i + 1] = e & 255),
		(e = e >>> 8),
		(t[i + 2] = e & 255),
		(e = e >>> 8),
		(t[i + 3] = e & 255);
}
function vk(t, e) {
	return t[e];
}
function yk(t, e, i) {
	t[i] = e;
}
function bk(t) {
	return lk(t, (e) => H.concat(e));
}
function Ek(t) {
	return dk(t);
}
function Ga(t) {
	return Kv(t, (e) => H.concat(e));
}
async function Sk(t) {
	return t.ended
		? H.concat(t.buffer)
		: H.concat([...t.buffer, await Ga(t.stream)]);
}
function kk(t) {
	return Yv(
		t,
		{ data: (e) => (typeof e == "string" ? H.fromString(e) : H.wrap(e)) },
		(e) => H.concat(e),
	);
}
function xk(t) {
	return tu((e) => H.concat(e), t);
}
var Ja,
	Zv,
	$p,
	Ap,
	H,
	Je = m({
		"out-build/vs/base/common/buffer.js"() {
			"use strict";
			Fa(),
				Va(),
				(Ja = typeof Buffer < "u"),
				(Zv = new mr(() => new Uint8Array(256))),
				(H = class Ki {
					static alloc(e) {
						return Ja
							? new Ki(Buffer.allocUnsafe(e))
							: new Ki(new Uint8Array(e));
					}
					static wrap(e) {
						return (
							Ja &&
								!Buffer.isBuffer(e) &&
								(e = Buffer.from(e.buffer, e.byteOffset, e.byteLength)),
							new Ki(e)
						);
					}
					static fromString(e, i) {
						return !(i?.dontUseNodeBuffer || !1) && Ja
							? new Ki(Buffer.from(e))
							: ($p || ($p = new TextEncoder()), new Ki($p.encode(e)));
					}
					static fromByteArray(e) {
						const i = Ki.alloc(e.length);
						for (let s = 0, r = e.length; s < r; s++) i.buffer[s] = e[s];
						return i;
					}
					static concat(e, i) {
						if (typeof i > "u") {
							i = 0;
							for (let n = 0, o = e.length; n < o; n++) i += e[n].byteLength;
						}
						const s = Ki.alloc(i);
						let r = 0;
						for (let n = 0, o = e.length; n < o; n++) {
							const a = e[n];
							s.set(a, r), (r += a.byteLength);
						}
						return s;
					}
					constructor(e) {
						(this.buffer = e), (this.byteLength = this.buffer.byteLength);
					}
					clone() {
						const e = Ki.alloc(this.byteLength);
						return e.set(this), e;
					}
					toString() {
						return Ja
							? this.buffer.toString()
							: (Ap || (Ap = new TextDecoder()), Ap.decode(this.buffer));
					}
					slice(e, i) {
						return new Ki(this.buffer.subarray(e, i));
					}
					set(e, i) {
						if (e instanceof Ki) this.buffer.set(e.buffer, i);
						else if (e instanceof Uint8Array) this.buffer.set(e, i);
						else if (e instanceof ArrayBuffer)
							this.buffer.set(new Uint8Array(e), i);
						else if (ArrayBuffer.isView(e))
							this.buffer.set(
								new Uint8Array(e.buffer, e.byteOffset, e.byteLength),
								i,
							);
						else throw new Error("Unknown argument 'array'");
					}
					readUInt32BE(e) {
						return pk(this.buffer, e);
					}
					writeUInt32BE(e, i) {
						mk(this.buffer, e, i);
					}
					readUInt32LE(e) {
						return gk(this.buffer, e);
					}
					writeUInt32LE(e, i) {
						wk(this.buffer, e, i);
					}
					readUInt8(e) {
						return vk(this.buffer, e);
					}
					writeUInt8(e, i) {
						yk(this.buffer, e, i);
					}
					indexOf(e, i = 0) {
						return fk(this.buffer, e instanceof Ki ? e.buffer : e, i);
					}
				});
		},
	});
function de(t, e, i) {
	let s = null,
		r = null;
	if (
		(typeof i.value == "function"
			? ((s = "value"),
				(r = i.value),
				r.length !== 0 &&
					console.warn(
						"Memoize should only be used in functions with zero parameters",
					))
			: typeof i.get == "function" && ((s = "get"), (r = i.get)),
		!r)
	)
		throw new Error("not supported");
	const n = `$memoize$${e}`;
	i[s] = function (...o) {
		return (
			this.hasOwnProperty(n) ||
				Object.defineProperty(this, n, {
					configurable: !1,
					enumerable: !1,
					writable: !1,
					value: r.apply(this, o),
				}),
			this[n]
		);
	};
}
var Zr = m({
	"out-build/vs/base/common/decorators.js"() {
		"use strict";
	},
});
function Dk(t) {
	return JSON.stringify(t, $k);
}
function Pk(t) {
	let e = JSON.parse(t);
	return (e = yr(e)), e;
}
function $k(t, e) {
	return e instanceof RegExp
		? { $mid: 2, source: e.source, flags: e.flags }
		: e;
}
function yr(t, e = 0) {
	if (!t || e > 200) return t;
	if (typeof t == "object") {
		switch (t.$mid) {
			case 1:
				return P.revive(t);
			case 2:
				return new RegExp(t.source, t.flags);
			case 17:
				return new Date(t.source);
		}
		if (t instanceof H || t instanceof Uint8Array) return t;
		if (Array.isArray(t))
			for (let i = 0; i < t.length; ++i) t[i] = yr(t[i], e + 1);
		else
			for (const i in t)
				Object.hasOwnProperty.call(t, i) && (t[i] = yr(t[i], e + 1));
	}
	return t;
}
var su = m({
	"out-build/vs/base/common/marshalling.js"() {
		"use strict";
		Je(), ie();
	},
});
function to(t) {
	switch (t) {
		case 100:
			return "req";
		case 101:
			return "cancel";
		case 102:
			return "subscribe";
		case 103:
			return "unsubscribe";
	}
}
function ru(t) {
	switch (t) {
		case 200:
			return "init";
		case 201:
			return "reply:";
		case 202:
		case 203:
			return "replyErr:";
		case 204:
			return "event:";
	}
}
function io(t) {
	let e = 0;
	for (let i = 0; ; i += 7) {
		const s = t.read(1);
		if (((e |= (s.buffer[0] & 127) << i), !(s.buffer[0] & 128))) return e;
	}
}
function so(t, e) {
	if (e === 0) {
		t.write(iy);
		return;
	}
	let i = 0;
	for (let r = e; r !== 0; r = r >>> 7) i++;
	const s = H.alloc(i);
	for (let r = 0; e !== 0; r++)
		(s.buffer[r] = e & 127), (e = e >>> 7), e > 0 && (s.buffer[r] |= 128);
	t.write(s);
}
function br(t) {
	const e = H.alloc(1);
	return e.writeUInt8(t, 0), e;
}
function ro(t, e) {
	if (typeof e > "u") t.write(Er.Undefined);
	else if (typeof e == "string") {
		const i = H.fromString(e);
		t.write(Er.String), so(t, i.byteLength), t.write(i);
	} else if (sy && Buffer.isBuffer(e)) {
		const i = H.wrap(e);
		t.write(Er.Buffer), so(t, i.byteLength), t.write(i);
	} else if (e instanceof H)
		t.write(Er.VSBuffer), so(t, e.byteLength), t.write(e);
	else if (Array.isArray(e)) {
		t.write(Er.Array), so(t, e.length);
		for (const i of e) ro(t, i);
	} else if (typeof e == "number" && (e | 0) === e) t.write(Er.Uint), so(t, e);
	else {
		const i = H.fromString(JSON.stringify(e));
		t.write(Er.Object), so(t, i.byteLength), t.write(i);
	}
}
function no(t) {
	switch (t.read(1).readUInt8(0)) {
		case Qt.Undefined:
			return;
		case Qt.String:
			return t.read(io(t)).toString();
		case Qt.Buffer:
			return t.read(io(t)).buffer;
		case Qt.VSBuffer:
			return t.read(io(t));
		case Qt.Array: {
			const i = io(t),
				s = [];
			for (let r = 0; r < i; r++) s.push(no(t));
			return s;
		}
		case Qt.Object:
			return JSON.parse(t.read(io(t)).toString());
		case Qt.Int:
			return io(t);
	}
}
function nu(t) {
	return {
		call(e, i, s) {
			return t.then((r) => r.call(e, i, s));
		},
		listen(e, i) {
			const s = new zf();
			return t.then((r) => (s.input = r.listen(e, i))), s.event;
		},
	};
}
function Ak(t) {
	let e = !1;
	return {
		call(i, s, r) {
			return e
				? t.call(i, s, r)
				: Ai(0)
						.then(() => (e = !0))
						.then(() => t.call(i, s, r));
		},
		listen(i, s) {
			if (e) return t.listen(i, s);
			const r = new zf();
			return (
				Ai(0)
					.then(() => (e = !0))
					.then(() => (r.input = t.listen(i, s))),
				r.event
			);
		},
	};
}
var ey,
	ty,
	en,
	iy,
	ou,
	au,
	Qt,
	Er,
	sy,
	Ip,
	ry,
	Xa,
	Cp,
	_p,
	ny,
	Xe,
	Ks = m({
		"out-build/vs/base/parts/ipc/common/ipc.js"() {
			"use strict";
			Ut(),
				ae(),
				Je(),
				Mt(),
				Zr(),
				Ae(),
				q(),
				Ll(),
				F(),
				su(),
				Ft(),
				Ie(),
				(function (t) {
					(t[(t.Promise = 100)] = "Promise"),
						(t[(t.PromiseCancel = 101)] = "PromiseCancel"),
						(t[(t.EventListen = 102)] = "EventListen"),
						(t[(t.EventDispose = 103)] = "EventDispose");
				})(ey || (ey = {})),
				(function (t) {
					(t[(t.Initialize = 200)] = "Initialize"),
						(t[(t.PromiseSuccess = 201)] = "PromiseSuccess"),
						(t[(t.PromiseError = 202)] = "PromiseError"),
						(t[(t.PromiseErrorObj = 203)] = "PromiseErrorObj"),
						(t[(t.EventFire = 204)] = "EventFire");
				})(ty || (ty = {})),
				(function (t) {
					(t[(t.Uninitialized = 0)] = "Uninitialized"),
						(t[(t.Idle = 1)] = "Idle");
				})(en || (en = {})),
				(iy = br(0)),
				(ou = class {
					constructor(t) {
						(this.b = t), (this.a = 0);
					}
					read(t) {
						const e = this.b.slice(this.a, this.a + t);
						return (this.a += e.byteLength), e;
					}
				}),
				(au = class {
					constructor() {
						this.a = [];
					}
					get buffer() {
						return H.concat(this.a);
					}
					write(t) {
						this.a.push(t);
					}
				}),
				(function (t) {
					(t[(t.Undefined = 0)] = "Undefined"),
						(t[(t.String = 1)] = "String"),
						(t[(t.Buffer = 2)] = "Buffer"),
						(t[(t.VSBuffer = 3)] = "VSBuffer"),
						(t[(t.Array = 4)] = "Array"),
						(t[(t.Object = 5)] = "Object"),
						(t[(t.Int = 6)] = "Int");
				})(Qt || (Qt = {})),
				(Er = {
					Undefined: br(Qt.Undefined),
					String: br(Qt.String),
					Buffer: br(Qt.Buffer),
					VSBuffer: br(Qt.VSBuffer),
					Array: br(Qt.Array),
					Object: br(Qt.Object),
					Uint: br(Qt.Int),
				}),
				(sy = typeof Buffer < "u"),
				(Ip = class {
					constructor(t, e, i = null, s = 1e3) {
						(this.h = t),
							(this.j = e),
							(this.k = i),
							(this.l = s),
							(this.b = new Map()),
							(this.d = new Map()),
							(this.g = new Map()),
							(this.f = this.h.onMessage((r) => this.q(r))),
							this.m({ type: 200 });
					}
					registerChannel(t, e) {
						this.b.set(t, e), setTimeout(() => this.w(t), 0);
					}
					m(t) {
						switch (t.type) {
							case 200: {
								const e = this.o([t.type]);
								this.k?.logOutgoing(e, 0, 1, ru(t.type));
								return;
							}
							case 201:
							case 202:
							case 204:
							case 203: {
								const e = this.o([t.type, t.id], t.data);
								this.k?.logOutgoing(e, t.id, 1, ru(t.type), t.data);
								return;
							}
						}
					}
					o(t, e = void 0) {
						const i = new au();
						return ro(i, t), ro(i, e), this.p(i.buffer);
					}
					p(t) {
						try {
							return this.h.send(t), t.byteLength;
						} catch {
							return 0;
						}
					}
					q(t) {
						const e = new ou(t),
							i = no(e),
							s = no(e),
							r = i[0];
						switch (r) {
							case 100:
								return (
									this.k?.logIncoming(
										t.byteLength,
										i[1],
										1,
										`${to(r)}: ${i[2]}.${i[3]}`,
										s,
									),
									this.s({
										type: r,
										id: i[1],
										channelName: i[2],
										name: i[3],
										arg: s,
									})
								);
							case 102:
								return (
									this.k?.logIncoming(
										t.byteLength,
										i[1],
										1,
										`${to(r)}: ${i[2]}.${i[3]}`,
										s,
									),
									this.t({
										type: r,
										id: i[1],
										channelName: i[2],
										name: i[3],
										arg: s,
									})
								);
							case 101:
								return (
									this.k?.logIncoming(t.byteLength, i[1], 1, `${to(r)}`),
									this.u({ type: r, id: i[1] })
								);
							case 103:
								return (
									this.k?.logIncoming(t.byteLength, i[1], 1, `${to(r)}`),
									this.u({ type: r, id: i[1] })
								);
						}
					}
					s(t) {
						const e = this.b.get(t.channelName);
						if (!e) {
							this.v(t);
							return;
						}
						const i = new ts();
						let s;
						try {
							s = e.call(this.j, t.name, t.arg, i.token);
						} catch (o) {
							s = Promise.reject(o);
						}
						const r = t.id;
						s.then(
							(o) => {
								this.m({ id: r, data: o, type: 201 });
							},
							(o) => {
								o instanceof Error
									? this.m({
											id: r,
											data: {
												message: o.message,
												name: o.name,
												stack: o.stack
													? o.stack.split(`
`)
													: void 0,
											},
											type: 202,
										})
									: this.m({ id: r, data: o, type: 203 });
							},
						).finally(() => {
							n.dispose(), this.d.delete(t.id);
						});
						const n = ke(() => i.cancel());
						this.d.set(t.id, n);
					}
					t(t) {
						const e = this.b.get(t.channelName);
						if (!e) {
							this.v(t);
							return;
						}
						const i = t.id,
							r = e.listen(
								this.j,
								t.name,
								t.arg,
							)((n) => this.m({ id: i, data: n, type: 204 }));
						this.d.set(t.id, r);
					}
					u(t) {
						const e = this.d.get(t.id);
						e && (e.dispose(), this.d.delete(t.id));
					}
					v(t) {
						let e = this.g.get(t.channelName);
						e || ((e = []), this.g.set(t.channelName, e));
						const i = setTimeout(() => {
							console.error(`Unknown channel: ${t.channelName}`),
								t.type === 100 &&
									this.m({
										id: t.id,
										data: {
											name: "Unknown channel",
											message: `Channel name '${t.channelName}' timed out after ${this.l}ms`,
											stack: void 0,
										},
										type: 202,
									});
						}, this.l);
						e.push({ request: t, timeoutTimer: i });
					}
					w(t) {
						const e = this.g.get(t);
						if (e) {
							for (const i of e)
								switch ((clearTimeout(i.timeoutTimer), i.request.type)) {
									case 100:
										this.s(i.request);
										break;
									case 102:
										this.t(i.request);
										break;
								}
							this.g.delete(t);
						}
					}
					dispose() {
						this.f && (this.f.dispose(), (this.f = null)),
							vt(this.d.values()),
							this.d.clear();
					}
				}),
				(function (t) {
					(t[(t.LocalSide = 0)] = "LocalSide"),
						(t[(t.OtherSide = 1)] = "OtherSide");
				})(ry || (ry = {})),
				(Xa = class {
					constructor(t, e = null) {
						(this.l = t),
							(this.a = !1),
							(this.b = en.Uninitialized),
							(this.d = new Set()),
							(this.f = new Map()),
							(this.g = 0),
							(this.k = new $()),
							(this.onDidInitialize = this.k.event),
							(this.h = this.l.onMessage((i) => this.s(i))),
							(this.j = e);
					}
					getChannel(t) {
						const e = this;
						return {
							call(i, s, r) {
								return e.a ? Promise.reject(new ai()) : e.m(t, i, s, r);
							},
							listen(i, s) {
								return e.a ? x.None : e.o(t, i, s);
							},
						};
					}
					m(t, e, i, s = Ge.None) {
						const r = this.g++,
							o = { id: r, type: 100, channelName: t, name: e, arg: i };
						if (s.isCancellationRequested) return Promise.reject(new ai());
						let a, c;
						return new Promise((u, d) => {
							if (s.isCancellationRequested) return d(new ai());
							const f = () => {
								const g = (b) => {
									switch (b.type) {
										case 201:
											this.f.delete(r), u(b.data);
											break;
										case 202: {
											this.f.delete(r);
											const y = new Error(b.data.message);
											(y.stack = Array.isArray(b.data.stack)
												? b.data.stack.join(`
`)
												: b.data.stack),
												(y.name = b.data.name),
												d(y);
											break;
										}
										case 203:
											this.f.delete(r), d(b.data);
											break;
									}
								};
								this.f.set(r, g), this.p(o);
							};
							let p = null;
							this.b === en.Idle
								? f()
								: ((p = Yn((g) => this.u())),
									p.then(() => {
										(p = null), f();
									}));
							const v = () => {
								p ? (p.cancel(), (p = null)) : this.p({ id: r, type: 101 }),
									d(new ai());
							};
							(a = s.onCancellationRequested(v)),
								(c = {
									dispose: Ol(() => {
										v(), a.dispose();
									}),
								}),
								this.d.add(c);
						}).finally(() => {
							a.dispose(), this.d.delete(c);
						});
					}
					o(t, e, i) {
						const s = this.g++,
							n = { id: s, type: 102, channelName: t, name: e, arg: i };
						let o = null;
						const a = new $({
								onWillAddFirstListener: () => {
									const l = () => {
										this.d.add(a), this.p(n);
									};
									this.b === en.Idle
										? l()
										: ((o = Yn((u) => this.u())),
											o.then(() => {
												(o = null), l();
											}));
								},
								onDidRemoveLastListener: () => {
									o
										? (o.cancel(), (o = null))
										: (this.d.delete(a), this.p({ id: s, type: 103 }));
								},
							}),
							c = (l) => a.fire(l.data);
						return this.f.set(s, c), a.event;
					}
					p(t) {
						switch (t.type) {
							case 100:
							case 102: {
								const e = this.q([t.type, t.id, t.channelName, t.name], t.arg);
								this.j?.logOutgoing(
									e,
									t.id,
									0,
									`${to(t.type)}: ${t.channelName}.${t.name}`,
									t.arg,
								);
								return;
							}
							case 101:
							case 103: {
								const e = this.q([t.type, t.id]);
								this.j?.logOutgoing(e, t.id, 0, to(t.type));
								return;
							}
						}
					}
					q(t, e = void 0) {
						const i = new au();
						return ro(i, t), ro(i, e), this.r(i.buffer);
					}
					r(t) {
						try {
							return this.l.send(t), t.byteLength;
						} catch {
							return 0;
						}
					}
					s(t) {
						const e = new ou(t),
							i = no(e),
							s = no(e),
							r = i[0];
						switch (r) {
							case 200:
								return (
									this.j?.logIncoming(t.byteLength, 0, 0, ru(r)),
									this.t({ type: i[0] })
								);
							case 201:
							case 202:
							case 204:
							case 203:
								return (
									this.j?.logIncoming(t.byteLength, i[1], 0, ru(r), s),
									this.t({ type: i[0], id: i[1], data: s })
								);
						}
					}
					t(t) {
						if (t.type === 200) {
							(this.b = en.Idle), this.k.fire();
							return;
						}
						this.f.get(t.id)?.(t);
					}
					get onDidInitializePromise() {
						return x.toPromise(this.onDidInitialize);
					}
					u() {
						return this.b === en.Idle
							? Promise.resolve()
							: this.onDidInitializePromise;
					}
					dispose() {
						(this.a = !0),
							this.h && (this.h.dispose(), (this.h = null)),
							vt(this.d.values()),
							this.d.clear();
					}
				}),
				__decorate([de], Xa.prototype, "onDidInitializePromise", null),
				(Cp = class {
					get connections() {
						const t = [];
						return this.f.forEach((e) => t.push(e)), t;
					}
					constructor(t, e, i) {
						(this.a = new Map()),
							(this.f = new Set()),
							(this.g = new $()),
							(this.onDidAddConnection = this.g.event),
							(this.h = new $()),
							(this.onDidRemoveConnection = this.h.event),
							(this.j = new De()),
							this.j.add(
								t(({ protocol: s, onDidClientDisconnect: r }) => {
									const n = x.once(s.onMessage);
									this.j.add(
										n((o) => {
											const a = new ou(o),
												c = no(a),
												l = new Ip(s, c, e, i),
												u = new Xa(s, e);
											this.a.forEach((f, p) => l.registerChannel(p, f));
											const d = { channelServer: l, channelClient: u, ctx: c };
											this.f.add(d),
												this.g.fire(d),
												this.j.add(
													r(() => {
														l.dispose(),
															u.dispose(),
															this.f.delete(d),
															this.h.fire(d);
													}),
												);
										}),
									);
								}),
							);
					}
					getChannel(t, e) {
						const i = this;
						return {
							call(s, r, n) {
								let o;
								if (Cw(e)) {
									const c = _E(i.connections.filter(e));
									o = c
										? Promise.resolve(c)
										: x.toPromise(x.filter(i.onDidAddConnection, e));
								} else o = e.routeCall(i, s, r);
								const a = o.then((c) => c.channelClient.getChannel(t));
								return nu(a).call(s, r, n);
							},
							listen(s, r) {
								if (Cw(e)) return i.k(t, e, s, r);
								const n = e
									.routeEvent(i, s, r)
									.then((o) => o.channelClient.getChannel(t));
								return nu(n).listen(s, r);
							},
						};
					}
					k(t, e, i, s) {
						const r = this;
						let n;
						const o = new $({
							onWillAddFirstListener: () => {
								n = new De();
								const a = new Aw(),
									c = new Map(),
									l = (d) => {
										const p = d.channelClient.getChannel(t).listen(i, s),
											v = a.add(p);
										c.set(d, v);
									},
									u = (d) => {
										const f = c.get(d);
										f && (f.dispose(), c.delete(d));
									};
								r.connections.filter(e).forEach(l),
									x.filter(r.onDidAddConnection, e)(l, void 0, n),
									r.onDidRemoveConnection(u, void 0, n),
									a.event(o.fire, o, n),
									n.add(a);
							},
							onDidRemoveLastListener: () => {
								n?.dispose(), (n = void 0);
							},
						});
						return r.j.add(o), o.event;
					}
					registerChannel(t, e) {
						this.a.set(t, e);
						for (const i of this.f) i.channelServer.registerChannel(t, e);
					}
					dispose() {
						this.j.dispose();
						for (const t of this.f)
							t.channelClient.dispose(), t.channelServer.dispose();
						this.f.clear(), this.a.clear(), this.g.dispose(), this.h.dispose();
					}
				}),
				(_p = class {
					constructor(t, e, i = null) {
						const s = new au();
						ro(s, e),
							t.send(s.buffer),
							(this.a = new Xa(t, i)),
							(this.d = new Ip(t, e, i));
					}
					getChannel(t) {
						return this.a.getChannel(t);
					}
					registerChannel(t, e) {
						this.d.registerChannel(t, e);
					}
					dispose() {
						this.a.dispose(), this.d.dispose();
					}
				}),
				(ny = class {
					constructor(t) {
						this.a = t;
					}
					routeCall(t) {
						return this.b(t);
					}
					routeEvent(t) {
						return this.b(t);
					}
					async b(t) {
						for (const e of t.connections)
							if (await Promise.resolve(this.a(e.ctx)))
								return Promise.resolve(e);
						return await x.toPromise(t.onDidAddConnection), await this.b(t);
					}
				}),
				(function (t) {
					function e(n, o, a) {
						const c = n,
							l = a && a.disableMarshalling,
							u = new Map();
						for (const d in c) s(d) && u.set(d, x.buffer(c[d], !0, void 0, o));
						return new (class {
							listen(d, f, p) {
								const v = u.get(f);
								if (v) return v;
								const g = c[f];
								if (typeof g == "function") {
									if (r(f)) return g.call(c, p);
									if (s(f))
										return u.set(f, x.buffer(c[f], !0, void 0, o)), u.get(f);
								}
								throw new Bs(`Event not found: ${f}`);
							}
							call(d, f, p) {
								const v = c[f];
								if (typeof v == "function") {
									if (!l && Array.isArray(p))
										for (let b = 0; b < p.length; b++) p[b] = yr(p[b]);
									let g = v.apply(c, p);
									return g instanceof Promise || (g = Promise.resolve(g)), g;
								}
								throw new Bs(`Method not found: ${f}`);
							}
						})();
					}
					t.fromService = e;
					function i(n, o) {
						const a = o && o.disableMarshalling;
						return new Proxy(
							{},
							{
								get(c, l) {
									if (typeof l == "string")
										return o?.properties?.has(l)
											? o.properties.get(l)
											: r(l)
												? function (u) {
														return n.listen(l, u);
													}
												: s(l)
													? n.listen(l)
													: async function (...u) {
															let d;
															o && !Yt(o.context)
																? (d = [o.context, ...u])
																: (d = u);
															const f = await n.call(l, d);
															return a ? f : yr(f);
														};
									throw new Bs(`Property not found: ${String(l)}`);
								},
							},
						);
					}
					t.toService = i;
					function s(n) {
						return n[0] === "o" && n[1] === "n" && av(n.charCodeAt(2));
					}
					function r(n) {
						return /^onDynamic/.test(n) && av(n.charCodeAt(9));
					}
				})(Xe || (Xe = {}));
		},
	});
function Ik(t) {
	return oy.test(t);
}
var oy,
	fi,
	Oi = m({
		"out-build/vs/base/common/uuid.js"() {
			"use strict";
			(oy = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i),
				(fi = (function () {
					if (
						typeof crypto == "object" &&
						typeof crypto.randomUUID == "function"
					)
						return crypto.randomUUID.bind(crypto);
					let t;
					typeof crypto == "object" &&
					typeof crypto.getRandomValues == "function"
						? (t = crypto.getRandomValues.bind(crypto))
						: (t = function (s) {
								for (let r = 0; r < s.length; r++)
									s[r] = Math.floor(Math.random() * 256);
								return s;
							});
					const e = new Uint8Array(16),
						i = [];
					for (let s = 0; s < 256; s++) i.push(s.toString(16).padStart(2, "0"));
					return function () {
						t(e), (e[6] = (e[6] & 15) | 64), (e[8] = (e[8] & 63) | 128);
						let r = 0,
							n = "";
						return (
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += "-"),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += "-"),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += "-"),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += "-"),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							(n += i[e[r++]]),
							n
						);
					};
				})());
		},
	});
function Sr() {
	return cu || (cu = H.alloc(0)), cu;
}
function ay(t) {
	switch (t) {
		case 0:
			return "None";
		case 1:
			return "Regular";
		case 2:
			return "Control";
		case 3:
			return "Ack";
		case 5:
			return "Disconnect";
		case 6:
			return "ReplayRequest";
		case 7:
			return "PauseWriting";
		case 8:
			return "ResumeWriting";
		case 9:
			return "KeepAlive";
	}
}
var cy,
	Rp,
	ly,
	cu,
	uy,
	hy,
	dy,
	Vi,
	lu,
	uu,
	Op,
	fy,
	oo,
	py,
	my,
	gy,
	wy,
	vy = m({
		"out-build/vs/base/parts/ipc/common/ipc.net.js"() {
			"use strict";
			Je(),
				q(),
				F(),
				Ks(),
				(function (t) {
					(t.Created = "created"),
						(t.Read = "read"),
						(t.Write = "write"),
						(t.Open = "open"),
						(t.Error = "error"),
						(t.Close = "close"),
						(t.BrowserWebSocketBlobReceived = "browserWebSocketBlobReceived"),
						(t.NodeEndReceived = "nodeEndReceived"),
						(t.NodeEndSent = "nodeEndSent"),
						(t.NodeDrainBegin = "nodeDrainBegin"),
						(t.NodeDrainEnd = "nodeDrainEnd"),
						(t.zlibInflateError = "zlibInflateError"),
						(t.zlibInflateData = "zlibInflateData"),
						(t.zlibInflateInitialWrite = "zlibInflateInitialWrite"),
						(t.zlibInflateInitialFlushFired = "zlibInflateInitialFlushFired"),
						(t.zlibInflateWrite = "zlibInflateWrite"),
						(t.zlibInflateFlushFired = "zlibInflateFlushFired"),
						(t.zlibDeflateError = "zlibDeflateError"),
						(t.zlibDeflateData = "zlibDeflateData"),
						(t.zlibDeflateWrite = "zlibDeflateWrite"),
						(t.zlibDeflateFlushFired = "zlibDeflateFlushFired"),
						(t.WebSocketNodeSocketWrite = "webSocketNodeSocketWrite"),
						(t.WebSocketNodeSocketPeekedHeader =
							"webSocketNodeSocketPeekedHeader"),
						(t.WebSocketNodeSocketReadHeader = "webSocketNodeSocketReadHeader"),
						(t.WebSocketNodeSocketReadData = "webSocketNodeSocketReadData"),
						(t.WebSocketNodeSocketUnmaskedData =
							"webSocketNodeSocketUnmaskedData"),
						(t.WebSocketNodeSocketDrainBegin = "webSocketNodeSocketDrainBegin"),
						(t.WebSocketNodeSocketDrainEnd = "webSocketNodeSocketDrainEnd"),
						(t.ProtocolHeaderRead = "protocolHeaderRead"),
						(t.ProtocolMessageRead = "protocolMessageRead"),
						(t.ProtocolHeaderWrite = "protocolHeaderWrite"),
						(t.ProtocolMessageWrite = "protocolMessageWrite"),
						(t.ProtocolWrite = "protocolWrite");
				})(cy || (cy = {})),
				(function (t) {
					(t.enableDiagnostics = !1), (t.records = []);
					const e = new WeakMap();
					let i = 0;
					function s(n, o) {
						if (!e.has(n)) {
							const a = String(++i);
							e.set(n, a);
						}
						return e.get(n);
					}
					function r(n, o, a, c) {
						if (!t.enableDiagnostics) return;
						const l = s(n, o);
						if (
							c instanceof H ||
							c instanceof Uint8Array ||
							c instanceof ArrayBuffer ||
							ArrayBuffer.isView(c)
						) {
							const u = H.alloc(c.byteLength);
							u.set(c),
								t.records.push({
									timestamp: Date.now(),
									id: l,
									label: o,
									type: a,
									buff: u,
								});
						} else
							t.records.push({
								timestamp: Date.now(),
								id: l,
								label: o,
								type: a,
								data: c,
							});
					}
					t.traceSocketEvent = r;
				})(Rp || (Rp = {})),
				(function (t) {
					(t[(t.NodeSocketCloseEvent = 0)] = "NodeSocketCloseEvent"),
						(t[(t.WebSocketCloseEvent = 1)] = "WebSocketCloseEvent");
				})(ly || (ly = {})),
				(cu = null),
				(uy = class {
					get byteLength() {
						return this.b;
					}
					constructor() {
						(this.a = []), (this.b = 0);
					}
					acceptChunk(t) {
						this.a.push(t), (this.b += t.byteLength);
					}
					read(t) {
						return this.c(t, !0);
					}
					peek(t) {
						return this.c(t, !1);
					}
					c(t, e) {
						if (t === 0) return Sr();
						if (t > this.b) throw new Error("Cannot read so many bytes!");
						if (this.a[0].byteLength === t) {
							const n = this.a[0];
							return e && (this.a.shift(), (this.b -= t)), n;
						}
						if (this.a[0].byteLength > t) {
							const n = this.a[0].slice(0, t);
							return e && ((this.a[0] = this.a[0].slice(t)), (this.b -= t)), n;
						}
						const i = H.alloc(t);
						let s = 0,
							r = 0;
						for (; t > 0; ) {
							const n = this.a[r];
							if (n.byteLength > t) {
								const o = n.slice(0, t);
								i.set(o, s),
									(s += t),
									e && ((this.a[r] = n.slice(t)), (this.b -= t)),
									(t -= t);
							} else
								i.set(n, s),
									(s += n.byteLength),
									e ? (this.a.shift(), (this.b -= n.byteLength)) : r++,
									(t -= n.byteLength);
						}
						return i;
					}
				}),
				(function (t) {
					(t[(t.None = 0)] = "None"),
						(t[(t.Regular = 1)] = "Regular"),
						(t[(t.Control = 2)] = "Control"),
						(t[(t.Ack = 3)] = "Ack"),
						(t[(t.Disconnect = 5)] = "Disconnect"),
						(t[(t.ReplayRequest = 6)] = "ReplayRequest"),
						(t[(t.Pause = 7)] = "Pause"),
						(t[(t.Resume = 8)] = "Resume"),
						(t[(t.KeepAlive = 9)] = "KeepAlive");
				})(hy || (hy = {})),
				(function (t) {
					(t[(t.HeaderLength = 13)] = "HeaderLength"),
						(t[(t.AcknowledgeTime = 2e3)] = "AcknowledgeTime"),
						(t[(t.TimeoutTime = 2e4)] = "TimeoutTime"),
						(t[(t.ReconnectionGraceTime = 108e5)] = "ReconnectionGraceTime"),
						(t[(t.ReconnectionShortGraceTime = 3e5)] =
							"ReconnectionShortGraceTime"),
						(t[(t.KeepAliveSendTime = 5e3)] = "KeepAliveSendTime");
				})(dy || (dy = {})),
				(Vi = class {
					constructor(t, e, i, s) {
						(this.type = t),
							(this.id = e),
							(this.ack = i),
							(this.data = s),
							(this.writtenTime = 0);
					}
					get size() {
						return this.data.byteLength;
					}
				}),
				(lu = class extends j {
					constructor(t) {
						super(),
							(this.f = this.D(new $())),
							(this.onMessage = this.f.event),
							(this.g = {
								readHead: !0,
								readLen: 13,
								messageType: 0,
								id: 0,
								ack: 0,
							}),
							(this.a = t),
							(this.b = !1),
							(this.c = new uy()),
							this.D(this.a.onData((e) => this.acceptChunk(e))),
							(this.lastReadTime = Date.now());
					}
					acceptChunk(t) {
						if (!(!t || t.byteLength === 0))
							for (
								this.lastReadTime = Date.now(), this.c.acceptChunk(t);
								this.c.byteLength >= this.g.readLen;
							) {
								const e = this.c.read(this.g.readLen);
								if (this.g.readHead)
									(this.g.readHead = !1),
										(this.g.readLen = e.readUInt32BE(9)),
										(this.g.messageType = e.readUInt8(0)),
										(this.g.id = e.readUInt32BE(1)),
										(this.g.ack = e.readUInt32BE(5)),
										this.a.traceSocketEvent("protocolHeaderRead", {
											messageType: ay(this.g.messageType),
											id: this.g.id,
											ack: this.g.ack,
											messageSize: this.g.readLen,
										});
								else {
									const i = this.g.messageType,
										s = this.g.id,
										r = this.g.ack;
									if (
										((this.g.readHead = !0),
										(this.g.readLen = 13),
										(this.g.messageType = 0),
										(this.g.id = 0),
										(this.g.ack = 0),
										this.a.traceSocketEvent("protocolMessageRead", e),
										this.f.fire(new Vi(i, s, r, e)),
										this.b)
									)
										break;
								}
							}
					}
					readEntireBuffer() {
						return this.c.read(this.c.byteLength);
					}
					dispose() {
						(this.b = !0), super.dispose();
					}
				}),
				(uu = class {
					constructor(t) {
						(this.k = null),
							(this.a = !1),
							(this.b = !1),
							(this.c = t),
							(this.d = []),
							(this.f = 0),
							(this.lastWriteTime = 0);
					}
					dispose() {
						try {
							this.flush();
						} catch {}
						this.a = !0;
					}
					drain() {
						return this.flush(), this.c.drain();
					}
					flush() {
						this.m();
					}
					pause() {
						this.b = !0;
					}
					resume() {
						(this.b = !1), this.l();
					}
					write(t) {
						if (this.a) return;
						(t.writtenTime = Date.now()), (this.lastWriteTime = Date.now());
						const e = H.alloc(13);
						e.writeUInt8(t.type, 0),
							e.writeUInt32BE(t.id, 1),
							e.writeUInt32BE(t.ack, 5),
							e.writeUInt32BE(t.data.byteLength, 9),
							this.c.traceSocketEvent("protocolHeaderWrite", {
								messageType: ay(t.type),
								id: t.id,
								ack: t.ack,
								messageSize: t.data.byteLength,
							}),
							this.c.traceSocketEvent("protocolMessageWrite", t.data),
							this.j(e, t.data);
					}
					g(t, e) {
						const i = this.f === 0;
						return (
							this.d.push(t, e), (this.f += t.byteLength + e.byteLength), i
						);
					}
					h() {
						const t = H.concat(this.d, this.f);
						return (this.d.length = 0), (this.f = 0), t;
					}
					j(t, e) {
						this.g(t, e) && this.l();
					}
					l() {
						this.k ||
							(this.k = setTimeout(() => {
								(this.k = null), this.m();
							}));
					}
					m() {
						if (this.f === 0 || this.b) return;
						const t = this.h();
						this.c.traceSocketEvent("protocolWrite", {
							byteLength: t.byteLength,
						}),
							this.c.write(t);
					}
				}),
				(Op = class extends j {
					constructor(t) {
						super(),
							(this.f = new $()),
							(this.onMessage = this.f.event),
							(this.g = new $()),
							(this.onDidDispose = this.g.event),
							(this.a = t),
							(this.b = this.D(new uu(this.a))),
							(this.c = this.D(new lu(this.a))),
							this.D(
								this.c.onMessage((e) => {
									e.type === 1 && this.f.fire(e.data);
								}),
							),
							this.D(this.a.onClose(() => this.g.fire()));
					}
					drain() {
						return this.b.drain();
					}
					getSocket() {
						return this.a;
					}
					sendDisconnect() {}
					send(t) {
						this.b.write(new Vi(1, 0, 0, t));
					}
				}),
				(fy = class k3 extends _p {
					static fromSocket(e, i) {
						return new k3(new Op(e), i);
					}
					get onDidDispose() {
						return this.b.onDidDispose;
					}
					constructor(e, i, s = null) {
						super(e, i, s), (this.b = e);
					}
					dispose() {
						super.dispose();
						const e = this.b.getSocket();
						this.b.sendDisconnect(), this.b.dispose(), e.end();
					}
				}),
				(oo = class {
					constructor() {
						(this.b = !1),
							(this.c = !1),
							(this.d = []),
							(this.a = new $({
								onWillAddFirstListener: () => {
									(this.b = !0), queueMicrotask(() => this.f());
								},
								onDidRemoveLastListener: () => {
									this.b = !1;
								},
							})),
							(this.event = this.a.event);
					}
					f() {
						if (!this.c) {
							for (this.c = !0; this.b && this.d.length > 0; )
								this.a.fire(this.d.shift());
							this.c = !1;
						}
					}
					fire(t) {
						this.b
							? this.d.length > 0
								? this.d.push(t)
								: this.a.fire(t)
							: this.d.push(t);
					}
					flushBuffer() {
						this.d = [];
					}
				}),
				(py = class {
					constructor(t) {
						(this.data = t), (this.next = null);
					}
				}),
				(my = class {
					constructor() {
						(this.a = null), (this.b = null);
					}
					length() {
						let t = 0,
							e = this.a;
						for (; e; ) (e = e.next), t++;
						return t;
					}
					peek() {
						return this.a ? this.a.data : null;
					}
					toArray() {
						const t = [];
						let e = 0,
							i = this.a;
						for (; i; ) (t[e++] = i.data), (i = i.next);
						return t;
					}
					pop() {
						if (this.a) {
							if (this.a === this.b) {
								(this.a = null), (this.b = null);
								return;
							}
							this.a = this.a.next;
						}
					}
					push(t) {
						const e = new py(t);
						if (!this.a) {
							(this.a = e), (this.b = e);
							return;
						}
						(this.b.next = e), (this.b = e);
					}
				}),
				(gy = class Ns {
					static {
						this.a = 10;
					}
					static {
						this.b = null;
					}
					static getInstance() {
						return Ns.b || (Ns.b = new Ns()), Ns.b;
					}
					constructor() {
						this.c = [];
						const e = Date.now();
						for (let i = 0; i < Ns.a; i++) this.c[i] = e - 1e3 * i;
						setInterval(() => {
							for (let i = Ns.a; i >= 1; i--) this.c[i] = this.c[i - 1];
							this.c[0] = Date.now();
						}, 1e3);
					}
					d() {
						const e = Date.now(),
							i = (1 + Ns.a) * 1e3;
						let s = 0;
						for (let r = 0; r < Ns.a; r++) e - this.c[r] <= i && s++;
						return 1 - s / Ns.a;
					}
					hasHighLoad() {
						return this.d() >= 0.5;
					}
				}),
				(wy = class {
					get unacknowledgedCount() {
						return this.d - this.f;
					}
					constructor(t) {
						(this.v = new oo()),
							(this.onControlMessage = this.v.event),
							(this.w = new oo()),
							(this.onMessage = this.w.event),
							(this.x = new oo()),
							(this.onDidDispose = this.x.event),
							(this.y = new oo()),
							(this.onSocketClose = this.y.event),
							(this.z = new oo()),
							(this.onSocketTimeout = this.z.event),
							(this.t = t.loadEstimator ?? gy.getInstance()),
							(this.u = t.sendKeepAlive ?? !0),
							(this.a = !1),
							(this.c = new my()),
							(this.d = 0),
							(this.f = 0),
							(this.g = null),
							(this.h = 0),
							(this.j = 0),
							(this.k = 0),
							(this.l = null),
							(this.n = 0),
							(this.o = Date.now()),
							(this.s = new De()),
							(this.p = t.socket),
							(this.q = this.s.add(new uu(this.p))),
							(this.r = this.s.add(new lu(this.p))),
							this.s.add(this.r.onMessage((e) => this.A(e))),
							this.s.add(this.p.onClose((e) => this.y.fire(e))),
							t.initialChunk && this.r.acceptChunk(t.initialChunk),
							this.u
								? (this.m = setInterval(() => {
										this.E();
									}, 5e3))
								: (this.m = null);
					}
					dispose() {
						this.g && (clearTimeout(this.g), (this.g = null)),
							this.l && (clearTimeout(this.l), (this.l = null)),
							this.m && (clearInterval(this.m), (this.m = null)),
							this.s.dispose();
					}
					drain() {
						return this.q.drain();
					}
					sendDisconnect() {
						if (!this.b) {
							this.b = !0;
							const t = new Vi(5, 0, 0, Sr());
							this.q.write(t), this.q.flush();
						}
					}
					sendPause() {
						const t = new Vi(7, 0, 0, Sr());
						this.q.write(t);
					}
					sendResume() {
						const t = new Vi(8, 0, 0, Sr());
						this.q.write(t);
					}
					pauseSocketWriting() {
						this.q.pause();
					}
					getSocket() {
						return this.p;
					}
					getMillisSinceLastIncomingData() {
						return Date.now() - this.r.lastReadTime;
					}
					beginAcceptReconnection(t, e) {
						(this.a = !0),
							this.s.dispose(),
							(this.s = new De()),
							this.v.flushBuffer(),
							this.y.flushBuffer(),
							this.z.flushBuffer(),
							this.p.dispose(),
							(this.n = 0),
							(this.o = Date.now()),
							(this.p = t),
							(this.q = this.s.add(new uu(this.p))),
							(this.r = this.s.add(new lu(this.p))),
							this.s.add(this.r.onMessage((i) => this.A(i))),
							this.s.add(this.p.onClose((i) => this.y.fire(i))),
							this.r.acceptChunk(e);
					}
					endAcceptReconnection() {
						(this.a = !1), (this.j = this.h);
						const t = new Vi(3, 0, this.j, Sr());
						this.q.write(t);
						const e = this.c.toArray();
						for (let i = 0, s = e.length; i < s; i++) this.q.write(e[i]);
						this.C();
					}
					acceptDisconnect() {
						this.x.fire();
					}
					A(t) {
						if (t.ack > this.f) {
							this.f = t.ack;
							do {
								const e = this.c.peek();
								if (e && e.id <= t.ack) this.c.pop();
								else break;
							} while (!0);
						}
						switch (t.type) {
							case 0:
								break;
							case 1: {
								if (t.id > this.h)
									if (t.id !== this.h + 1) {
										const e = Date.now();
										e - this.n > 1e4 &&
											((this.n = e), this.q.write(new Vi(6, 0, 0, Sr())));
									} else
										(this.h = t.id),
											(this.k = Date.now()),
											this.B(),
											this.w.fire(t.data);
								break;
							}
							case 2: {
								this.v.fire(t.data);
								break;
							}
							case 3:
								break;
							case 5: {
								this.x.fire();
								break;
							}
							case 6: {
								const e = this.c.toArray();
								for (let i = 0, s = e.length; i < s; i++) this.q.write(e[i]);
								this.C();
								break;
							}
							case 7: {
								this.q.pause();
								break;
							}
							case 8: {
								this.q.resume();
								break;
							}
							case 9:
								break;
						}
					}
					readEntireBuffer() {
						return this.r.readEntireBuffer();
					}
					flush() {
						this.q.flush();
					}
					send(t) {
						const e = ++this.d;
						this.j = this.h;
						const i = new Vi(1, e, this.j, t);
						this.c.push(i), this.a || (this.q.write(i), this.C());
					}
					sendControl(t) {
						const e = new Vi(2, 0, 0, t);
						this.q.write(e);
					}
					B() {
						if (this.h <= this.j || this.l) return;
						const t = Date.now() - this.k;
						if (t >= 2e3) {
							this.D();
							return;
						}
						this.l = setTimeout(
							() => {
								(this.l = null), this.B();
							},
							2e3 - t + 5,
						);
					}
					C() {
						if (this.d <= this.f || this.g || this.a) return;
						const t = this.c.peek(),
							e = Date.now() - t.writtenTime,
							i = Date.now() - this.r.lastReadTime,
							s = Date.now() - this.o;
						if (e >= 2e4 && i >= 2e4 && s >= 2e4 && !this.t.hasHighLoad()) {
							(this.o = Date.now()),
								this.z.fire({
									unacknowledgedMsgCount: this.c.length(),
									timeSinceOldestUnacknowledgedMsg: e,
									timeSinceLastReceivedSomeData: i,
								});
							return;
						}
						const r = Math.max(2e4 - e, 2e4 - i, 2e4 - s, 500);
						this.g = setTimeout(() => {
							(this.g = null), this.C();
						}, r);
					}
					D() {
						if (this.h <= this.j) return;
						this.j = this.h;
						const t = new Vi(3, 0, this.j, Sr());
						this.q.write(t);
					}
					E() {
						this.j = this.h;
						const t = new Vi(9, 0, this.j, Sr());
						this.q.write(t);
					}
				});
		},
	});
import { createHash as Ck } from "crypto";
import { createServer as _k, createConnection as Rk } from "net";
import "os";
import "zlib";
function Ok(t, e, i) {
	const r = Ck("sha256").update(t).digest("hex").substr(0, 8);
	if (process.platform === "win32") return `\\\\.\\pipe\\${r}-${i}-${e}-sock`;
	const n = i.substr(0, 4),
		o = e.substr(0, 6);
	let a;
	return (
		process.platform !== "darwin" && hu && !process.env.VSCODE_PORTABLE
			? (a = M(hu, `vscode-${r}-${n}-${o}.sock`))
			: (a = M(t, `${n}-${o}.sock`)),
		Lk(a),
		a
	);
}
function Lk(t) {
	const e = Sy[va];
	typeof e == "number" &&
		t.length >= e &&
		console.warn(
			`WARNING: IPC handle "${t}" is longer than ${e} chars, try a shorter --user-data-dir`,
		);
}
function Mk(t) {
	return new Promise((e, i) => {
		const s = _k();
		s.on("error", i),
			s.listen(t, () => {
				s.removeListener("error", i), e(new ky(s));
			});
	});
}
function Fk(t, e) {
	return new Promise((i, s) => {
		const r = Rk(t, () => {
			r.removeListener("error", s),
				i(fy.fromSocket(new Ka(r, `ipc-client${e}`), e));
		});
		r.once("error", s);
	});
}
var yy,
	Ka,
	by,
	Ey,
	hu,
	Sy,
	ky,
	Lp = m({
		"out-build/vs/base/parts/ipc/node/ipc.net.js"() {
			"use strict";
			Je(),
				Ae(),
				q(),
				F(),
				ge(),
				z(),
				Oi(),
				Ks(),
				vy(),
				(yy = 3e4),
				(Ka = class {
					traceSocketEvent(t, e) {
						Rp.traceSocketEvent(this.socket, this.debugLabel, t, e);
					}
					constructor(t, e = "") {
						(this.f = !0),
							(this.debugLabel = e),
							(this.socket = t),
							this.traceSocketEvent("created", { type: "NodeSocket" }),
							(this.a = (s) => {
								if (
									(this.traceSocketEvent("error", {
										code: s?.code,
										message: s?.message,
									}),
									s)
								) {
									if (s.code === "EPIPE") return;
									Ot(s);
								}
							}),
							this.socket.on("error", this.a);
						let i;
						(this.b = (s) => {
							this.traceSocketEvent("close", { hadError: s }),
								(this.f = !1),
								i && clearTimeout(i);
						}),
							this.socket.on("close", this.b),
							(this.d = () => {
								this.traceSocketEvent("nodeEndReceived"),
									(this.f = !1),
									(i = setTimeout(() => t.destroy(), yy));
							}),
							this.socket.on("end", this.d);
					}
					dispose() {
						this.socket.off("error", this.a),
							this.socket.off("close", this.b),
							this.socket.off("end", this.d),
							this.socket.destroy();
					}
					onData(t) {
						const e = (i) => {
							this.traceSocketEvent("read", i), t(H.wrap(i));
						};
						return (
							this.socket.on("data", e),
							{ dispose: () => this.socket.off("data", e) }
						);
					}
					onClose(t) {
						const e = (i) => {
							t({ type: 0, hadError: i, error: void 0 });
						};
						return (
							this.socket.on("close", e),
							{ dispose: () => this.socket.off("close", e) }
						);
					}
					onEnd(t) {
						const e = () => {
							t();
						};
						return (
							this.socket.on("end", e),
							{ dispose: () => this.socket.off("end", e) }
						);
					}
					write(t) {
						if (!(this.socket.destroyed || !this.f))
							try {
								this.traceSocketEvent("write", t),
									this.socket.write(t.buffer, (e) => {
										if (e) {
											if (e.code === "EPIPE") return;
											Ot(e);
										}
									});
							} catch (e) {
								if (e.code === "EPIPE") return;
								Ot(e);
							}
					}
					end() {
						this.traceSocketEvent("nodeEndSent"), this.socket.end();
					}
					drain() {
						return (
							this.traceSocketEvent("nodeDrainBegin"),
							new Promise((t, e) => {
								if (this.socket.bufferSize === 0) {
									this.traceSocketEvent("nodeDrainEnd"), t();
									return;
								}
								const i = () => {
									this.socket.off("close", i),
										this.socket.off("end", i),
										this.socket.off("error", i),
										this.socket.off("timeout", i),
										this.socket.off("drain", i),
										this.traceSocketEvent("nodeDrainEnd"),
										t();
								};
								this.socket.on("close", i),
									this.socket.on("end", i),
									this.socket.on("error", i),
									this.socket.on("timeout", i),
									this.socket.on("drain", i);
							})
						);
					}
				}),
				(function (t) {
					(t[(t.MinHeaderByteSize = 2)] = "MinHeaderByteSize"),
						(t[(t.MaxWebSocketMessageLength = 262144)] =
							"MaxWebSocketMessageLength");
				})(by || (by = {})),
				(function (t) {
					(t[(t.PeekHeader = 1)] = "PeekHeader"),
						(t[(t.ReadHeader = 2)] = "ReadHeader"),
						(t[(t.ReadBody = 3)] = "ReadBody"),
						(t[(t.Fin = 4)] = "Fin");
				})(Ey || (Ey = {})),
				(hu = process.env.XDG_RUNTIME_DIR),
				(Sy = { 2: 107, 1: 103 }),
				(ky = class x3 extends Cp {
					static b(e) {
						const i = x.fromNodeEventEmitter(e, "connection");
						return x.map(i, (s) => ({
							protocol: new Op(new Ka(s, "ipc-server-connection")),
							onDidClientDisconnect: x.once(x.fromNodeEventEmitter(s, "close")),
						}));
					}
					constructor(e) {
						super(x3.b(e)), (this.d = e);
					}
					dispose() {
						super.dispose(), this.d && (this.d.close(), (this.d = null));
					}
				});
		},
	});
import Ya from "electron";
var xy,
	et,
	is = m({
		"out-build/vs/base/parts/ipc/electron-main/ipcMain.js"() {
			"use strict";
			Ae(),
				Ce(),
				(xy = class {
					constructor() {
						this.a = new WeakMap();
					}
					on(t, e) {
						const i = (s, ...r) => {
							this.b(t, s) && e(s, ...r);
						};
						return this.a.set(e, i), Ya.ipcMain.on(t, i), this;
					}
					once(t, e) {
						return (
							Ya.ipcMain.once(t, (i, ...s) => {
								this.b(t, i) && e(i, ...s);
							}),
							this
						);
					}
					handle(t, e) {
						return (
							Ya.ipcMain.handle(t, (i, ...s) =>
								this.b(t, i)
									? e(i, ...s)
									: Promise.reject(
											`Invalid channel '${t}' or sender for ipcMain.handle() usage.`,
										),
							),
							this
						);
					}
					removeHandler(t) {
						return Ya.ipcMain.removeHandler(t), this;
					}
					removeListener(t, e) {
						const i = this.a.get(e);
						return (
							i && (Ya.ipcMain.removeListener(t, i), this.a.delete(e)), this
						);
					}
					b(t, e) {
						if (!t || (!t.startsWith("vscode:") && !t.startsWith("cursor:")))
							return (
								Ot(
									`Refused to handle ipcMain event for channel '${t}' because the channel is unknown.`,
								),
								!1
							);
						const i = e.senderFrame,
							s = i?.url;
						if (!s || s === "about:blank") return !0;
						let r = "unknown";
						try {
							r = new URL(s).host;
						} catch {
							return (
								Ot(
									`Refused to handle ipcMain event for channel '${t}' because of a malformed URL '${s}'.`,
								),
								!1
							);
						}
						return r !== Ua
							? (Ot(
									`Refused to handle ipcMain event for channel '${t}' because of a bad origin of '${r}'.`,
								),
								!1)
							: i?.parent !== null
								? (Ot(
										`Refused to handle ipcMain event for channel '${t}' because sender of origin '${r}' is not a main frame.`,
									),
									!1)
								: !0;
					}
				}),
				(et = new xy());
		},
	}),
	Dy,
	Py,
	Nk = m({
		"out-build/vs/base/parts/contextmenu/common/contextmenu.js"() {
			"use strict";
			(Dy = "vscode:contextmenu"), (Py = "vscode:onCloseContextMenu");
		},
	});
import { Menu as Wk, MenuItem as Mp } from "electron";
function jk() {
	et.on(Dy, (t, e, i, s, r) => {
		const n = $y(t, s, i);
		n.popup({
			x: r ? r.x : void 0,
			y: r ? r.y : void 0,
			positioningItem: r ? r.positioningItem : void 0,
			callback: () => {
				n && t.sender.send(Py, e);
			},
		});
	});
}
function $y(t, e, i) {
	const s = new Wk();
	return (
		i.forEach((r) => {
			let n;
			r.type === "separator"
				? (n = new Mp({ type: r.type }))
				: Array.isArray(r.submenu)
					? (n = new Mp({ submenu: $y(t, e, r.submenu), label: r.label }))
					: (n = new Mp({
							label: r.label,
							type: r.type,
							accelerator: r.accelerator,
							checked: r.checked,
							enabled: r.enabled,
							visible: r.visible,
							click: (o, a, c) => t.sender.send(e, r.id, c),
						})),
				s.append(n);
		}),
		s
	);
}
var Tk = m({
		"out-build/vs/base/parts/contextmenu/electron-main/contextmenu.js"() {
			"use strict";
			is(), Nk();
		},
	}),
	Ay,
	Uk = m({
		"out-build/vs/base/parts/ipc/common/ipc.electron.js"() {
			"use strict";
			Ay = class {
				constructor(t, e) {
					(this.a = t), (this.onMessage = e);
				}
				send(t) {
					try {
						this.a.send("vscode:message", t.buffer);
					} catch {}
				}
				disconnect() {
					this.a.send("vscode:disconnect", null);
				}
			};
		},
	});
function Iy(t, e) {
	const i = x.fromNodeEventEmitter(et, e, (r, n) => ({ event: r, message: n })),
		s = x.filter(i, ({ event: r }) => r.sender.id === t);
	return x.map(s, ({ message: r }) => r && H.wrap(r));
}
var Cy,
	qk = m({
		"out-build/vs/base/parts/ipc/electron-main/ipc.electron.js"() {
			"use strict";
			is(),
				Je(),
				q(),
				F(),
				Ks(),
				Uk(),
				(Cy = class hf extends Cp {
					static {
						this.b = new Map();
					}
					static d() {
						const e = x.fromNodeEventEmitter(
							et,
							"vscode:hello",
							({ sender: i }) => i,
						);
						return x.map(e, (i) => {
							const s = i.id;
							hf.b.get(s)?.dispose();
							const n = new $();
							hf.b.set(
								s,
								ke(() => n.fire()),
							);
							const o = Iy(s, "vscode:message"),
								a = x.any(x.signal(Iy(s, "vscode:disconnect")), n.event);
							return { protocol: new Ay(i, o), onDidClientDisconnect: a };
						});
					}
					constructor() {
						super(hf.d());
					}
				});
		},
	}),
	_y,
	Ry,
	Bk = m({
		"out-build/vs/base/parts/ipc/common/ipc.mp.js"() {
			"use strict";
			Je(),
				q(),
				Ks(),
				(_y = class {
					constructor(t) {
						(this.a = t),
							(this.onMessage = x.fromDOMEventEmitter(this.a, "message", (e) =>
								e.data ? H.wrap(e.data) : H.alloc(0),
							)),
							t.start();
					}
					send(t) {
						this.a.postMessage(t.buffer);
					}
					disconnect() {
						this.a.close();
					}
				}),
				(Ry = class extends _p {
					constructor(t, e) {
						const i = new _y(t);
						super(i, e), (this.b = i);
					}
					dispose() {
						this.b.disconnect(), super.dispose();
					}
				});
		},
	}),
	Fp,
	Oy = m({
		"out-build/vs/base/parts/ipc/electron-main/ipc.mp.js"() {
			"use strict";
			is(),
				q(),
				Oi(),
				Bk(),
				(Fp = class extends Ry {
					constructor(t, e) {
						super(
							{
								addEventListener: (i, s) => t.addListener(i, s),
								removeEventListener: (i, s) => t.removeListener(i, s),
								postMessage: (i) => t.postMessage(i),
								start: () => t.start(),
								close: () => t.close(),
							},
							e,
						);
					}
				});
		},
	});
function Ss(t) {
	return Np(t, 0);
}
function Np(t, e) {
	switch (typeof t) {
		case "object":
			return t === null ? Ys(349, e) : Array.isArray(t) ? Hk(t, e) : Vk(t, e);
		case "string":
			return Ly(t, e);
		case "boolean":
			return zk(t, e);
		case "number":
			return Ys(t, e);
		case "undefined":
			return Ys(937, e);
		default:
			return Ys(617, e);
	}
}
function Ys(t, e) {
	return ((e << 5) - e + t) | 0;
}
function zk(t, e) {
	return Ys(t ? 433 : 863, e);
}
function Ly(t, e) {
	e = Ys(149417, e);
	for (let i = 0, s = t.length; i < s; i++) e = Ys(t.charCodeAt(i), e);
	return e;
}
function Hk(t, e) {
	return (e = Ys(104579, e)), t.reduce((i, s) => Np(s, i), e);
}
function Vk(t, e) {
	return (
		(e = Ys(181387, e)),
		Object.keys(t)
			.sort()
			.reduce((i, s) => ((i = Ly(s, i)), Np(t[s], i)), e)
	);
}
function Wp(t, e, i = 32) {
	const s = i - e,
		r = ~((1 << s) - 1);
	return ((t << e) | ((r & t) >>> s)) >>> 0;
}
function Qa(t, e = 32) {
	return t instanceof ArrayBuffer
		? Array.from(new Uint8Array(t))
				.map((i) => i.toString(16).padStart(2, "0"))
				.join("")
		: (t >>> 0).toString(16).padStart(e / 4, "0");
}
var My,
	Gk,
	Qs = m({
		"out-build/vs/base/common/hash.js"() {
			"use strict";
			Je(),
				Ft(),
				(function (t) {
					(t[(t.BLOCK_SIZE = 64)] = "BLOCK_SIZE"),
						(t[(t.UNICODE_REPLACEMENT = 65533)] = "UNICODE_REPLACEMENT");
				})(My || (My = {})),
				(Gk = class D3 {
					static {
						this.g = new DataView(new ArrayBuffer(320));
					}
					constructor() {
						(this.h = 1732584193),
							(this.l = 4023233417),
							(this.m = 2562383102),
							(this.n = 271733878),
							(this.o = 3285377520),
							(this.p = new Uint8Array(67)),
							(this.q = new DataView(this.p.buffer)),
							(this.r = 0),
							(this.t = 0),
							(this.u = 0),
							(this.v = !1);
					}
					update(e) {
						const i = e.length;
						if (i === 0) return;
						const s = this.p;
						let r = this.r,
							n = this.u,
							o,
							a;
						for (
							n !== 0
								? ((o = n), (a = -1), (n = 0))
								: ((o = e.charCodeAt(0)), (a = 0));
							;
						) {
							let c = o;
							if (vS(o))
								if (a + 1 < i) {
									const l = e.charCodeAt(a + 1);
									cv(l) ? (a++, (c = yS(o, l))) : (c = 65533);
								} else {
									n = o;
									break;
								}
							else cv(o) && (c = 65533);
							if (((r = this.w(s, r, c)), a++, a < i)) o = e.charCodeAt(a);
							else break;
						}
						(this.r = r), (this.u = n);
					}
					w(e, i, s) {
						return (
							s < 128
								? (e[i++] = s)
								: s < 2048
									? ((e[i++] = 192 | ((s & 1984) >>> 6)),
										(e[i++] = 128 | ((s & 63) >>> 0)))
									: s < 65536
										? ((e[i++] = 224 | ((s & 61440) >>> 12)),
											(e[i++] = 128 | ((s & 4032) >>> 6)),
											(e[i++] = 128 | ((s & 63) >>> 0)))
										: ((e[i++] = 240 | ((s & 1835008) >>> 18)),
											(e[i++] = 128 | ((s & 258048) >>> 12)),
											(e[i++] = 128 | ((s & 4032) >>> 6)),
											(e[i++] = 128 | ((s & 63) >>> 0))),
							i >= 64 &&
								(this.y(),
								(i -= 64),
								(this.t += 64),
								(e[0] = e[64]),
								(e[1] = e[65]),
								(e[2] = e[66])),
							i
						);
					}
					digest() {
						return (
							this.v ||
								((this.v = !0),
								this.u &&
									((this.u = 0), (this.r = this.w(this.p, this.r, 65533))),
								(this.t += this.r),
								this.x()),
							Qa(this.h) + Qa(this.l) + Qa(this.m) + Qa(this.n) + Qa(this.o)
						);
					}
					x() {
						(this.p[this.r++] = 128),
							this.p.subarray(this.r).fill(0),
							this.r > 56 && (this.y(), this.p.fill(0));
						const e = 8 * this.t;
						this.q.setUint32(56, Math.floor(e / 4294967296), !1),
							this.q.setUint32(60, e % 4294967296, !1),
							this.y();
					}
					y() {
						const e = D3.g,
							i = this.q;
						for (let d = 0; d < 64; d += 4)
							e.setUint32(d, i.getUint32(d, !1), !1);
						for (let d = 64; d < 320; d += 4)
							e.setUint32(
								d,
								Wp(
									e.getUint32(d - 12, !1) ^
										e.getUint32(d - 32, !1) ^
										e.getUint32(d - 56, !1) ^
										e.getUint32(d - 64, !1),
									1,
								),
								!1,
							);
						let s = this.h,
							r = this.l,
							n = this.m,
							o = this.n,
							a = this.o,
							c,
							l,
							u;
						for (let d = 0; d < 80; d++)
							d < 20
								? ((c = (r & n) | (~r & o)), (l = 1518500249))
								: d < 40
									? ((c = r ^ n ^ o), (l = 1859775393))
									: d < 60
										? ((c = (r & n) | (r & o) | (n & o)), (l = 2400959708))
										: ((c = r ^ n ^ o), (l = 3395469782)),
								(u =
									(Wp(s, 5) + c + a + l + e.getUint32(d * 4, !1)) & 4294967295),
								(a = o),
								(o = n),
								(n = Wp(r, 30)),
								(r = s),
								(s = u);
						(this.h = (this.h + s) & 4294967295),
							(this.l = (this.l + r) & 4294967295),
							(this.m = (this.m + n) & 4294967295),
							(this.n = (this.n + o) & 4294967295),
							(this.o = (this.o + a) & 4294967295);
					}
				});
		},
	}),
	Jk,
	du,
	Fy,
	Ny,
	Wy = m({
		"out-build/vs/platform/encryption/common/encryptionService.js"() {
			"use strict";
			Y(),
				(Jk = B("encryptionService")),
				(du = B("encryptionMainService")),
				(function (t) {
					(t.kwallet = "kwallet"),
						(t.kwallet5 = "kwallet5"),
						(t.gnomeLibsecret = "gnome-libsecret"),
						(t.basic = "basic");
				})(Fy || (Fy = {})),
				(function (t) {
					(t.unknown = "unknown"),
						(t.basicText = "basic_text"),
						(t.gnomeAny = "gnome_any"),
						(t.gnomeLibsecret = "gnome_libsecret"),
						(t.gnomeKeyring = "gnome_keyring"),
						(t.kwallet = "kwallet"),
						(t.kwallet5 = "kwallet5"),
						(t.kwallet6 = "kwallet6"),
						(t.dplib = "dpapi"),
						(t.keychainAccess = "keychain_access");
				})(Ny || (Ny = {}));
		},
	}),
	ks,
	Zs,
	Gi = m({
		"out-build/vs/platform/environment/common/environment.js"() {
			"use strict";
			Y(), (ks = B("environmentService")), (Zs = ks);
		},
	});
function Xk(t) {
	return (
		t.getFullYear() +
		"-" +
		String(t.getMonth() + 1).padStart(2, "0") +
		"-" +
		String(t.getDate()).padStart(2, "0") +
		"T" +
		String(t.getHours()).padStart(2, "0") +
		":" +
		String(t.getMinutes()).padStart(2, "0") +
		":" +
		String(t.getSeconds()).padStart(2, "0") +
		"." +
		(t.getMilliseconds() / 1e3).toFixed(3).slice(2, 5) +
		"Z"
	);
}
var jy,
	Ty,
	fu,
	Kk,
	Yk,
	Qk,
	Zk = m({
		"out-build/vs/base/common/date.js"() {
			"use strict";
			ve(),
				z(),
				(jy = 60),
				(Ty = jy * 60),
				(fu = Ty * 24),
				(Kk = fu * 7),
				(Yk = fu * 30),
				(Qk = fu * 365);
		},
	});
function ex(t, e) {
	return jp(
		t["inspect-extensions"],
		t["inspect-brk-extensions"],
		5870,
		e,
		t.debugId,
		t.extensionEnvironment,
	);
}
function jp(t, e, i, s, r, n) {
	const a = Number(e || t) || (s ? null : i),
		c = a ? !!e : !1;
	let l;
	if (n)
		try {
			l = JSON.parse(n);
		} catch {}
	return { port: a, break: c, debugId: r, env: l };
}
var Tp,
	Le,
	tx = m({
		"out-build/vs/platform/environment/common/environmentService.js"() {
			"use strict";
			Zk(),
				Zr(),
				Ce(),
				ge(),
				gs(),
				rt(),
				ie(),
				(Tp = /^([^.]+\..+)[:=](.+)$/),
				(Le = class {
					get appRoot() {
						return Ke($t.asFileUri("").fsPath);
					}
					get userHome() {
						return P.file(this.b.homeDir);
					}
					get userDataPath() {
						return this.b.userDataDir;
					}
					get appSettingsHome() {
						return P.file(M(this.userDataPath, "User"));
					}
					get tmpDir() {
						return P.file(this.b.tmpDir);
					}
					get cacheHome() {
						return P.file(this.userDataPath);
					}
					get stateResource() {
						return he(this.appSettingsHome, "globalStorage", "storage.json");
					}
					get userRoamingDataHome() {
						return this.appSettingsHome.with({ scheme: R.vscodeUserData });
					}
					get userDataSyncHome() {
						return he(this.appSettingsHome, "sync");
					}
					get logsHome() {
						if (!this.args.logsPath) {
							const t = Xk(new Date()).replace(/-|:|\.\d+Z$/g, "");
							this.args.logsPath = M(this.userDataPath, "logs", t);
						}
						return P.file(this.args.logsPath);
					}
					get sync() {
						return this.args.sync;
					}
					get machineSettingsResource() {
						return he(P.file(M(this.userDataPath, "Machine")), "settings.json");
					}
					get workspaceStorageHome() {
						return he(this.appSettingsHome, "workspaceStorage");
					}
					get localHistoryHome() {
						return he(this.appSettingsHome, "History");
					}
					get keyboardLayoutResource() {
						return he(this.userRoamingDataHome, "keyboardLayout.json");
					}
					get argvResource() {
						const t = Di.VSCODE_PORTABLE;
						return t
							? P.file(M(t, "argv.json"))
							: he(this.userHome, this.c.dataFolderName, "argv.json");
					}
					get isExtensionDevelopment() {
						return !!this.args.extensionDevelopmentPath;
					}
					get untitledWorkspacesHome() {
						return P.file(M(this.userDataPath, "Workspaces"));
					}
					get builtinExtensionsPath() {
						const t = this.args["builtin-extensions-dir"];
						return t
							? zi(t)
							: ui(M($t.asFileUri("").fsPath, "..", "extensions"));
					}
					get extensionsDownloadLocation() {
						const t = this.args["extensions-download-dir"];
						return t
							? P.file(zi(t))
							: P.file(M(this.userDataPath, "CachedExtensionVSIXs"));
					}
					get extensionsPath() {
						const t = this.args["extensions-dir"];
						if (t) return zi(t);
						const e = Di.VSCODE_EXTENSIONS;
						if (e) return e;
						const i = Di.VSCODE_PORTABLE;
						return i
							? M(i, "extensions")
							: he(this.userHome, this.c.dataFolderName, "extensions").fsPath;
					}
					get extensionDevelopmentLocationURI() {
						const t = this.args.extensionDevelopmentPath;
						if (Array.isArray(t))
							return t.map((e) =>
								/^[^:/?#]+?:\/\//.test(e) ? P.parse(e) : P.file(ui(e)),
							);
					}
					get extensionDevelopmentKind() {
						return this.args.extensionDevelopmentKind?.map((t) =>
							t === "ui" || t === "workspace" || t === "web" ? t : "workspace",
						);
					}
					get extensionTestsLocationURI() {
						const t = this.args.extensionTestsPath;
						if (t)
							return /^[^:/?#]+?:\/\//.test(t) ? P.parse(t) : P.file(ui(t));
					}
					get disableExtensions() {
						if (this.args["disable-extensions"]) return !0;
						const t = this.args["disable-extension"];
						if (t) {
							if (typeof t == "string") return [t];
							if (Array.isArray(t) && t.length > 0) return t;
						}
						return !1;
					}
					get debugExtensionHost() {
						return ex(this.args, this.isBuilt);
					}
					get debugRenderer() {
						return !!this.args.debugRenderer;
					}
					get isBuilt() {
						return !Di.VSCODE_DEV;
					}
					get verbose() {
						return !!this.args.verbose;
					}
					get logLevel() {
						return this.args.log?.find((t) => !Tp.test(t));
					}
					get extensionLogLevel() {
						const t = [];
						for (const e of this.args.log || []) {
							const i = Tp.exec(e);
							i && i[1] && i[2] && t.push([i[1], i[2]]);
						}
						return t.length ? t : void 0;
					}
					get serviceMachineIdResource() {
						return he(P.file(this.userDataPath), "machineid");
					}
					get crashReporterId() {
						return this.args["crash-reporter-id"];
					}
					get crashReporterDirectory() {
						return this.args["crash-reporter-directory"];
					}
					get disableTelemetry() {
						return !!this.args["disable-telemetry"];
					}
					get disableWorkspaceTrust() {
						return !!this.args["disable-workspace-trust"];
					}
					get useInMemorySecretStorage() {
						return !!this.args["use-inmemory-secretstorage"];
					}
					get policyFile() {
						if (this.args["__enable-file-policy"]) {
							const t = Di.VSCODE_PORTABLE;
							return t
								? P.file(M(t, "policy.json"))
								: he(this.userHome, this.c.dataFolderName, "policy.json");
						}
					}
					get continueOn() {
						return this.args.continueOn;
					}
					set continueOn(t) {
						this.args.continueOn = t;
					}
					get args() {
						return this.a;
					}
					constructor(t, e, i) {
						(this.a = t),
							(this.b = e),
							(this.c = i),
							(this.editSessionId = this.args.editSessionId);
					}
				}),
				__decorate([de], Le.prototype, "appRoot", null),
				__decorate([de], Le.prototype, "userHome", null),
				__decorate([de], Le.prototype, "userDataPath", null),
				__decorate([de], Le.prototype, "appSettingsHome", null),
				__decorate([de], Le.prototype, "tmpDir", null),
				__decorate([de], Le.prototype, "cacheHome", null),
				__decorate([de], Le.prototype, "stateResource", null),
				__decorate([de], Le.prototype, "userRoamingDataHome", null),
				__decorate([de], Le.prototype, "userDataSyncHome", null),
				__decorate([de], Le.prototype, "sync", null),
				__decorate([de], Le.prototype, "machineSettingsResource", null),
				__decorate([de], Le.prototype, "workspaceStorageHome", null),
				__decorate([de], Le.prototype, "localHistoryHome", null),
				__decorate([de], Le.prototype, "keyboardLayoutResource", null),
				__decorate([de], Le.prototype, "argvResource", null),
				__decorate([de], Le.prototype, "isExtensionDevelopment", null),
				__decorate([de], Le.prototype, "untitledWorkspacesHome", null),
				__decorate([de], Le.prototype, "builtinExtensionsPath", null),
				__decorate([de], Le.prototype, "extensionsPath", null),
				__decorate([de], Le.prototype, "extensionDevelopmentLocationURI", null),
				__decorate([de], Le.prototype, "extensionDevelopmentKind", null),
				__decorate([de], Le.prototype, "extensionTestsLocationURI", null),
				__decorate([de], Le.prototype, "debugExtensionHost", null),
				__decorate([de], Le.prototype, "logLevel", null),
				__decorate([de], Le.prototype, "extensionLogLevel", null),
				__decorate([de], Le.prototype, "serviceMachineIdResource", null),
				__decorate([de], Le.prototype, "disableTelemetry", null),
				__decorate([de], Le.prototype, "disableWorkspaceTrust", null),
				__decorate([de], Le.prototype, "useInMemorySecretStorage", null),
				__decorate([de], Le.prototype, "policyFile", null);
		},
	});
import { homedir as ix, tmpdir as sx } from "os";
function rx(t, e) {
	return jp(
		t["inspect-ptyhost"],
		t["inspect-brk-ptyhost"],
		5877,
		e,
		t.extensionEnvironment,
	);
}
function nx(t, e) {
	return jp(
		t["inspect-sharedprocess"],
		t["inspect-brk-sharedprocess"],
		5879,
		e,
		t.extensionEnvironment,
	);
}
var Uy,
	Up = m({
		"out-build/vs/platform/environment/node/environmentService.js"() {
			"use strict";
			tx(),
				I0(),
				(Uy = class extends Le {
					constructor(t, e) {
						super(
							t,
							{ homeDir: ix(), tmpDir: sx(), userDataDir: $0(t, e.nameShort) },
							e,
						);
					}
				});
		},
	}),
	ut,
	er,
	bt = m({
		"out-build/vs/platform/environment/electron-main/environmentMainService.js"() {
			"use strict";
			Zr(),
				ge(),
				z(),
				Lp(),
				Gi(),
				Up(),
				Y(),
				(ut = ks),
				(er = class extends Uy {
					constructor() {
						super(...arguments), (this.d = {});
					}
					get backupHome() {
						return M(this.userDataPath, "Backups");
					}
					get mainIPCHandle() {
						return Ok(this.userDataPath, "main", this.c.version);
					}
					get mainLockfile() {
						return M(this.userDataPath, "code.lock");
					}
					get disableUpdates() {
						return !!this.args["disable-updates"];
					}
					get crossOriginIsolated() {
						return !!this.args["enable-coi"];
					}
					get codeCachePath() {
						return process.env.VSCODE_CODE_CACHE_PATH || void 0;
					}
					get useCodeCache() {
						return !!this.codeCachePath;
					}
					unsetSnapExportedVariables() {
						if (Ee) {
							for (const t in process.env)
								if (t.endsWith("_VSCODE_SNAP_ORIG")) {
									const e = t.slice(0, -17);
									if (this.d[e]) continue;
									process.env[e] && (this.d[e] = process.env[e]),
										process.env[t]
											? (process.env[e] = process.env[t])
											: delete process.env[e];
								}
						}
					}
					restoreSnapExportedVariables() {
						if (Ee)
							for (const t in this.d)
								(process.env[t] = this.d[t]), delete this.d[t];
					}
				}),
				__decorate([de], er.prototype, "backupHome", null),
				__decorate([de], er.prototype, "mainIPCHandle", null),
				__decorate([de], er.prototype, "mainLockfile", null),
				__decorate([de], er.prototype, "disableUpdates", null),
				__decorate([de], er.prototype, "crossOriginIsolated", null),
				__decorate([de], er.prototype, "codeCachePath", null),
				__decorate([de], er.prototype, "useCodeCache", null);
		},
	});
function qp(...t) {
	switch (t.length) {
		case 1:
			return w(1730, null, t[0]);
		case 2:
			return w(1731, null, t[0], t[1]);
		case 3:
			return w(1732, null, t[0], t[1], t[2]);
		default:
			return;
	}
}
var qy,
	By,
	zy,
	ao,
	ox = m({
		"out-build/vs/platform/contextkey/common/scanner.js"() {
			"use strict";
			Ae(),
				ve(),
				(function (t) {
					(t[(t.LParen = 0)] = "LParen"),
						(t[(t.RParen = 1)] = "RParen"),
						(t[(t.Neg = 2)] = "Neg"),
						(t[(t.Eq = 3)] = "Eq"),
						(t[(t.NotEq = 4)] = "NotEq"),
						(t[(t.Lt = 5)] = "Lt"),
						(t[(t.LtEq = 6)] = "LtEq"),
						(t[(t.Gt = 7)] = "Gt"),
						(t[(t.GtEq = 8)] = "GtEq"),
						(t[(t.RegexOp = 9)] = "RegexOp"),
						(t[(t.RegexStr = 10)] = "RegexStr"),
						(t[(t.True = 11)] = "True"),
						(t[(t.False = 12)] = "False"),
						(t[(t.In = 13)] = "In"),
						(t[(t.Not = 14)] = "Not"),
						(t[(t.And = 15)] = "And"),
						(t[(t.Or = 16)] = "Or"),
						(t[(t.Str = 17)] = "Str"),
						(t[(t.QuotedStr = 18)] = "QuotedStr"),
						(t[(t.Error = 19)] = "Error"),
						(t[(t.EOF = 20)] = "EOF");
				})(qy || (qy = {})),
				(By = w(1733, null)),
				(zy = w(1734, null)),
				(ao = class l0 {
					constructor() {
						(this.c = ""),
							(this.d = 0),
							(this.e = 0),
							(this.f = []),
							(this.g = []),
							(this.m = /[a-zA-Z0-9_<>\-\./\\:\*\?\+\[\]\^,#@;"%\$\p{L}-]+/uy);
					}
					static getLexeme(e) {
						switch (e.type) {
							case 0:
								return "(";
							case 1:
								return ")";
							case 2:
								return "!";
							case 3:
								return e.isTripleEq ? "===" : "==";
							case 4:
								return e.isTripleEq ? "!==" : "!=";
							case 5:
								return "<";
							case 6:
								return "<=";
							case 7:
								return ">=";
							case 8:
								return ">=";
							case 9:
								return "=~";
							case 10:
								return e.lexeme;
							case 11:
								return "true";
							case 12:
								return "false";
							case 13:
								return "in";
							case 14:
								return "not";
							case 15:
								return "&&";
							case 16:
								return "||";
							case 17:
								return e.lexeme;
							case 18:
								return e.lexeme;
							case 19:
								return e.lexeme;
							case 20:
								return "EOF";
							default:
								throw Z0(
									`unhandled token type: ${JSON.stringify(e)}; have you forgotten to add a case?`,
								);
						}
					}
					static {
						this.a = new Set(
							["i", "g", "s", "m", "y", "u"].map((e) => e.charCodeAt(0)),
						);
					}
					static {
						this.b = new Map([
							["not", 14],
							["in", 13],
							["false", 12],
							["true", 11],
						]);
					}
					get errors() {
						return this.g;
					}
					reset(e) {
						return (
							(this.c = e),
							(this.d = 0),
							(this.e = 0),
							(this.f = []),
							(this.g = []),
							this
						);
					}
					scan() {
						for (; !this.r(); )
							switch (((this.d = this.e), this.i())) {
								case 40:
									this.k(0);
									break;
								case 41:
									this.k(1);
									break;
								case 33:
									if (this.h(61)) {
										const i = this.h(61);
										this.f.push({ type: 4, offset: this.d, isTripleEq: i });
									} else this.k(2);
									break;
								case 39:
									this.o();
									break;
								case 47:
									this.q();
									break;
								case 61:
									if (this.h(61)) {
										const i = this.h(61);
										this.f.push({ type: 3, offset: this.d, isTripleEq: i });
									} else this.h(126) ? this.k(9) : this.l(qp("==", "=~"));
									break;
								case 60:
									this.k(this.h(61) ? 6 : 5);
									break;
								case 62:
									this.k(this.h(61) ? 8 : 7);
									break;
								case 38:
									this.h(38) ? this.k(15) : this.l(qp("&&"));
									break;
								case 124:
									this.h(124) ? this.k(16) : this.l(qp("||"));
									break;
								case 32:
								case 13:
								case 9:
								case 10:
								case 160:
									break;
								default:
									this.n();
							}
						return (this.d = this.e), this.k(20), Array.from(this.f);
					}
					h(e) {
						return this.r() || this.c.charCodeAt(this.e) !== e
							? !1
							: (this.e++, !0);
					}
					i() {
						return this.c.charCodeAt(this.e++);
					}
					j() {
						return this.r() ? 0 : this.c.charCodeAt(this.e);
					}
					k(e) {
						this.f.push({ type: e, offset: this.d });
					}
					l(e) {
						const i = this.d,
							s = this.c.substring(this.d, this.e),
							r = { type: 19, offset: this.d, lexeme: s };
						this.g.push({ offset: i, lexeme: s, additionalInfo: e }),
							this.f.push(r);
					}
					n() {
						this.m.lastIndex = this.d;
						const e = this.m.exec(this.c);
						if (e) {
							this.e = this.d + e[0].length;
							const i = this.c.substring(this.d, this.e),
								s = l0.b.get(i);
							s
								? this.k(s)
								: this.f.push({ type: 17, lexeme: i, offset: this.d });
						}
					}
					o() {
						for (; this.j() !== 39 && !this.r(); ) this.i();
						if (this.r()) {
							this.l(By);
							return;
						}
						this.i(),
							this.f.push({
								type: 18,
								lexeme: this.c.substring(this.d + 1, this.e - 1),
								offset: this.d + 1,
							});
					}
					q() {
						let e = this.e,
							i = !1,
							s = !1;
						for (;;) {
							if (e >= this.c.length) {
								(this.e = e), this.l(zy);
								return;
							}
							const n = this.c.charCodeAt(e);
							if (i) i = !1;
							else if (n === 47 && !s) {
								e++;
								break;
							} else
								n === 91
									? (s = !0)
									: n === 92
										? (i = !0)
										: n === 93 && (s = !1);
							e++;
						}
						for (; e < this.c.length && l0.a.has(this.c.charCodeAt(e)); ) e++;
						this.e = e;
						const r = this.c.substring(this.d, this.e);
						this.f.push({ type: 10, lexeme: r, offset: this.d });
					}
					r() {
						return this.e >= this.c.length;
					}
				});
		},
	});
function Za(t, e) {
	return t.cmp(e);
}
function pu(t, e) {
	if (typeof t == "string") {
		const i = parseFloat(t);
		isNaN(i) || (t = i);
	}
	return typeof t == "string" || typeof t == "number" ? e(t) : Zt.INSTANCE;
}
function Hy(t) {
	let e = null;
	for (let i = 0, s = t.length; i < s; i++) {
		const r = t[i].substituteConstants();
		if (t[i] !== r && e === null) {
			e = [];
			for (let n = 0; n < i; n++) e[n] = t[n];
		}
		e !== null && (e[i] = r);
	}
	return e === null ? t : e;
}
function Vy(t, e) {
	return t < e ? -1 : t > e ? 1 : 0;
}
function tn(t, e, i, s) {
	return t < i ? -1 : t > i ? 1 : e < s ? -1 : e > s ? 1 : 0;
}
function Gy(t) {
	return t.type === 9 ? t.expr : [t];
}
var Et,
	Jy,
	Xy,
	Ky,
	Yy,
	Qy,
	Zy,
	Bp,
	eb,
	tb,
	ib,
	sb,
	rb,
	Ht,
	nb,
	Zt,
	pi,
	co,
	mu,
	zp,
	Hp,
	gu,
	lo,
	wu,
	vu,
	yu,
	bu,
	Eu,
	ob,
	Vp,
	Su,
	Gp,
	ax,
	ab = m({
		"out-build/vs/platform/contextkey/common/contextkey.js"() {
			"use strict";
			z(),
				Ft(),
				ox(),
				Y(),
				ve(),
				Ae(),
				(Et = new Map()),
				Et.set("false", !1),
				Et.set("true", !0),
				Et.set("isMac", N),
				Et.set("isLinux", Ee),
				Et.set("isWindows", T),
				Et.set("isWeb", hr),
				Et.set("isMacNative", N && !hr),
				Et.set("isEdge", Y0),
				Et.set("isFirefox", X0),
				Et.set("isChrome", Nf),
				Et.set("isSafari", K0),
				(Jy = Object.prototype.hasOwnProperty),
				(function (t) {
					(t[(t.False = 0)] = "False"),
						(t[(t.True = 1)] = "True"),
						(t[(t.Defined = 2)] = "Defined"),
						(t[(t.Not = 3)] = "Not"),
						(t[(t.Equals = 4)] = "Equals"),
						(t[(t.NotEquals = 5)] = "NotEquals"),
						(t[(t.And = 6)] = "And"),
						(t[(t.Regex = 7)] = "Regex"),
						(t[(t.NotRegex = 8)] = "NotRegex"),
						(t[(t.Or = 9)] = "Or"),
						(t[(t.In = 10)] = "In"),
						(t[(t.NotIn = 11)] = "NotIn"),
						(t[(t.Greater = 12)] = "Greater"),
						(t[(t.GreaterEquals = 13)] = "GreaterEquals"),
						(t[(t.Smaller = 14)] = "Smaller"),
						(t[(t.SmallerEquals = 15)] = "SmallerEquals"),
						(t[(t.Function = 16)] = "Function");
				})(Xy || (Xy = {})),
				(Ky = { regexParsingWithErrorRecovery: !0 }),
				(Yy = w(1710, null)),
				(Qy = w(1711, null)),
				(Zy = w(1712, null)),
				(Bp = w(1713, null)),
				(eb = w(1714, null)),
				(tb = w(1715, null)),
				(ib = w(1716, null)),
				(sb = w(1717, null)),
				(rb = class vl {
					static {
						this.c = new Error();
					}
					get lexingErrors() {
						return this.d.errors;
					}
					get parsingErrors() {
						return this.h;
					}
					constructor(e = Ky) {
						(this.k = e),
							(this.d = new ao()),
							(this.f = []),
							(this.g = 0),
							(this.h = []),
							(this.v = /g|y/g);
					}
					parse(e) {
						if (e === "") {
							this.h.push({
								message: Yy,
								offset: 0,
								lexeme: "",
								additionalInfo: Qy,
							});
							return;
						}
						(this.f = this.d.reset(e).scan()), (this.g = 0), (this.h = []);
						try {
							const i = this.l();
							if (!this.E()) {
								const s = this.D(),
									r = s.type === 17 ? tb : void 0;
								throw (
									(this.h.push({
										message: eb,
										offset: s.offset,
										lexeme: ao.getLexeme(s),
										additionalInfo: r,
									}),
									vl.c)
								);
							}
							return i;
						} catch (i) {
							if (i !== vl.c) throw i;
							return;
						}
					}
					l() {
						return this.m();
					}
					m() {
						const e = [this.o()];
						for (; this.y(16); ) {
							const i = this.o();
							e.push(i);
						}
						return e.length === 1 ? e[0] : Ht.or(...e);
					}
					o() {
						const e = [this.s()];
						for (; this.y(15); ) {
							const i = this.s();
							e.push(i);
						}
						return e.length === 1 ? e[0] : Ht.and(...e);
					}
					s() {
						if (this.y(2)) {
							const e = this.D();
							switch (e.type) {
								case 11:
									return this.z(), Zt.INSTANCE;
								case 12:
									return this.z(), pi.INSTANCE;
								case 0: {
									this.z();
									const i = this.l();
									return this.A(1, Bp), i?.negate();
								}
								case 17:
									return this.z(), lo.create(e.lexeme);
								default:
									throw this.B("KEY | true | false | '(' expression ')'", e);
							}
						}
						return this.t();
					}
					t() {
						const e = this.D();
						switch (e.type) {
							case 11:
								return this.z(), Ht.true();
							case 12:
								return this.z(), Ht.false();
							case 0: {
								this.z();
								const i = this.l();
								return this.A(1, Bp), i;
							}
							case 17: {
								const i = e.lexeme;
								if ((this.z(), this.y(9))) {
									const r = this.D();
									if (!this.k.regexParsingWithErrorRecovery) {
										if ((this.z(), r.type !== 10)) throw this.B("REGEX", r);
										const n = r.lexeme,
											o = n.lastIndexOf("/"),
											a =
												o === n.length - 1
													? void 0
													: this.w(n.substring(o + 1));
										let c;
										try {
											c = new RegExp(n.substring(1, o), a);
										} catch {
											throw this.B("REGEX", r);
										}
										return Eu.create(i, c);
									}
									switch (r.type) {
										case 10:
										case 19: {
											const n = [r.lexeme];
											this.z();
											let o = this.D(),
												a = 0;
											for (let f = 0; f < r.lexeme.length; f++)
												r.lexeme.charCodeAt(f) === 40
													? a++
													: r.lexeme.charCodeAt(f) === 41 && a--;
											for (; !this.E() && o.type !== 15 && o.type !== 16; ) {
												switch (o.type) {
													case 0:
														a++;
														break;
													case 1:
														a--;
														break;
													case 10:
													case 18:
														for (let f = 0; f < o.lexeme.length; f++)
															o.lexeme.charCodeAt(f) === 40
																? a++
																: r.lexeme.charCodeAt(f) === 41 && a--;
												}
												if (a < 0) break;
												n.push(ao.getLexeme(o)), this.z(), (o = this.D());
											}
											const c = n.join(""),
												l = c.lastIndexOf("/"),
												u =
													l === c.length - 1
														? void 0
														: this.w(c.substring(l + 1));
											let d;
											try {
												d = new RegExp(c.substring(1, l), u);
											} catch {
												throw this.B("REGEX", r);
											}
											return Ht.regex(i, d);
										}
										case 18: {
											const n = r.lexeme;
											this.z();
											let o = null;
											if (!wS(n)) {
												const a = n.indexOf("/"),
													c = n.lastIndexOf("/");
												if (a !== c && a >= 0) {
													const l = n.slice(a + 1, c),
														u = n[c + 1] === "i" ? "i" : "";
													try {
														o = new RegExp(l, u);
													} catch {
														throw this.B("REGEX", r);
													}
												}
											}
											if (o === null) throw this.B("REGEX", r);
											return Eu.create(i, o);
										}
										default:
											throw this.B("REGEX", this.D());
									}
								}
								if (this.y(14)) {
									this.A(13, Zy);
									const r = this.u();
									return Ht.notIn(i, r);
								}
								switch (this.D().type) {
									case 3: {
										this.z();
										const r = this.u();
										if (this.x().type === 18) return Ht.equals(i, r);
										switch (r) {
											case "true":
												return Ht.has(i);
											case "false":
												return Ht.not(i);
											default:
												return Ht.equals(i, r);
										}
									}
									case 4: {
										this.z();
										const r = this.u();
										if (this.x().type === 18) return Ht.notEquals(i, r);
										switch (r) {
											case "true":
												return Ht.not(i);
											case "false":
												return Ht.has(i);
											default:
												return Ht.notEquals(i, r);
										}
									}
									case 5:
										return this.z(), yu.create(i, this.u());
									case 6:
										return this.z(), bu.create(i, this.u());
									case 7:
										return this.z(), wu.create(i, this.u());
									case 8:
										return this.z(), vu.create(i, this.u());
									case 13:
										return this.z(), Ht.in(i, this.u());
									default:
										return Ht.has(i);
								}
							}
							case 20:
								throw (
									(this.h.push({
										message: ib,
										offset: e.offset,
										lexeme: "",
										additionalInfo: sb,
									}),
									vl.c)
								);
							default:
								throw this.B(
									`true | false | KEY 
	| KEY '=~' REGEX 
	| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`,
									this.D(),
								);
						}
					}
					u() {
						const e = this.D();
						switch (e.type) {
							case 17:
							case 18:
								return this.z(), e.lexeme;
							case 11:
								return this.z(), "true";
							case 12:
								return this.z(), "false";
							case 13:
								return this.z(), "in";
							default:
								return "";
						}
					}
					w(e) {
						return e.replaceAll(this.v, "");
					}
					x() {
						return this.f[this.g - 1];
					}
					y(e) {
						return this.C(e) ? (this.z(), !0) : !1;
					}
					z() {
						return this.E() || this.g++, this.x();
					}
					A(e, i) {
						if (this.C(e)) return this.z();
						throw this.B(i, this.D());
					}
					B(e, i, s) {
						const r = w(1718, null, e, ao.getLexeme(i)),
							n = i.offset,
							o = ao.getLexeme(i);
						return (
							this.h.push({
								message: r,
								offset: n,
								lexeme: o,
								additionalInfo: s,
							}),
							vl.c
						);
					}
					C(e) {
						return this.D().type === e;
					}
					D() {
						return this.f[this.g];
					}
					E() {
						return this.D().type === 20;
					}
				}),
				(Ht = class {
					static false() {
						return Zt.INSTANCE;
					}
					static true() {
						return pi.INSTANCE;
					}
					static has(t) {
						return co.create(t);
					}
					static equals(t, e) {
						return mu.create(t, e);
					}
					static notEquals(t, e) {
						return gu.create(t, e);
					}
					static regex(t, e) {
						return Eu.create(t, e);
					}
					static in(t, e) {
						return zp.create(t, e);
					}
					static notIn(t, e) {
						return Hp.create(t, e);
					}
					static not(t) {
						return lo.create(t);
					}
					static and(...t) {
						return Vp.create(t, null, !0);
					}
					static or(...t) {
						return Su.create(t, null, !0);
					}
					static greater(t, e) {
						return wu.create(t, e);
					}
					static greaterEquals(t, e) {
						return vu.create(t, e);
					}
					static smaller(t, e) {
						return yu.create(t, e);
					}
					static smallerEquals(t, e) {
						return bu.create(t, e);
					}
					static function(t) {
						return nb.create(t);
					}
					static {
						this.c = new rb({ regexParsingWithErrorRecovery: !1 });
					}
					static deserialize(t) {
						return t == null ? void 0 : this.c.parse(t);
					}
				}),
				(nb = class u0 {
					static create(e) {
						return new u0(e);
					}
					constructor(e) {
						(this.type = 16), (this.c = e);
					}
					cmp(e) {
						return this.type - e.type;
					}
					equals(e) {
						return e.type === this.type && e.c === this.c;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return this.c();
					}
					serialize() {
						return "(arbitrary function)";
					}
					keys() {
						return [];
					}
					map(e) {
						return this;
					}
					negate() {
						return new u0(() => !this.c());
					}
				}),
				(Zt = class P3 {
					static {
						this.INSTANCE = new P3();
					}
					constructor() {
						this.type = 0;
					}
					cmp(e) {
						return this.type - e.type;
					}
					equals(e) {
						return e.type === this.type;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return !1;
					}
					serialize() {
						return "false";
					}
					keys() {
						return [];
					}
					map(e) {
						return this;
					}
					negate() {
						return pi.INSTANCE;
					}
				}),
				(pi = class $3 {
					static {
						this.INSTANCE = new $3();
					}
					constructor() {
						this.type = 1;
					}
					cmp(e) {
						return this.type - e.type;
					}
					equals(e) {
						return e.type === this.type;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return !0;
					}
					serialize() {
						return "true";
					}
					keys() {
						return [];
					}
					map(e) {
						return this;
					}
					negate() {
						return Zt.INSTANCE;
					}
				}),
				(co = class A3 {
					static create(e, i = null) {
						const s = Et.get(e);
						return typeof s == "boolean"
							? s
								? pi.INSTANCE
								: Zt.INSTANCE
							: new A3(e, i);
					}
					constructor(e, i) {
						(this.key = e), (this.c = i), (this.type = 2);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: Vy(this.key, e.key);
					}
					equals(e) {
						return e.type === this.type ? this.key === e.key : !1;
					}
					substituteConstants() {
						const e = Et.get(this.key);
						return typeof e == "boolean"
							? e
								? pi.INSTANCE
								: Zt.INSTANCE
							: this;
					}
					evaluate(e) {
						return !!e.getValue(this.key);
					}
					serialize() {
						return this.key;
					}
					keys() {
						return [this.key];
					}
					map(e) {
						return e.mapDefined(this.key);
					}
					negate() {
						return this.c || (this.c = lo.create(this.key, this)), this.c;
					}
				}),
				(mu = class I3 {
					static create(e, i, s = null) {
						if (typeof i == "boolean")
							return i ? co.create(e, s) : lo.create(e, s);
						const r = Et.get(e);
						return typeof r == "boolean"
							? i === (r ? "true" : "false")
								? pi.INSTANCE
								: Zt.INSTANCE
							: new I3(e, i, s);
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 4);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						const e = Et.get(this.c);
						if (typeof e == "boolean") {
							const i = e ? "true" : "false";
							return this.d === i ? pi.INSTANCE : Zt.INSTANCE;
						}
						return this;
					}
					evaluate(e) {
						return e.getValue(this.c) == this.d;
					}
					serialize() {
						return `${this.c} == '${this.d}'`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapEquals(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = gu.create(this.c, this.d, this)), this.f;
					}
				}),
				(zp = class C3 {
					static create(e, i) {
						return new C3(e, i);
					}
					constructor(e, i) {
						(this.d = e), (this.f = i), (this.type = 10), (this.c = null);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.d, this.f, e.d, e.f);
					}
					equals(e) {
						return e.type === this.type ? this.d === e.d && this.f === e.f : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						const i = e.getValue(this.f),
							s = e.getValue(this.d);
						return Array.isArray(i)
							? i.includes(s)
							: typeof s == "string" && typeof i == "object" && i !== null
								? Jy.call(i, s)
								: !1;
					}
					serialize() {
						return `${this.d} in '${this.f}'`;
					}
					keys() {
						return [this.d, this.f];
					}
					map(e) {
						return e.mapIn(this.d, this.f);
					}
					negate() {
						return this.c || (this.c = Hp.create(this.d, this.f)), this.c;
					}
				}),
				(Hp = class _3 {
					static create(e, i) {
						return new _3(e, i);
					}
					constructor(e, i) {
						(this.d = e),
							(this.f = i),
							(this.type = 11),
							(this.c = zp.create(e, i));
					}
					cmp(e) {
						return e.type !== this.type ? this.type - e.type : this.c.cmp(e.c);
					}
					equals(e) {
						return e.type === this.type ? this.c.equals(e.c) : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return !this.c.evaluate(e);
					}
					serialize() {
						return `${this.d} not in '${this.f}'`;
					}
					keys() {
						return this.c.keys();
					}
					map(e) {
						return e.mapNotIn(this.d, this.f);
					}
					negate() {
						return this.c;
					}
				}),
				(gu = class R3 {
					static create(e, i, s = null) {
						if (typeof i == "boolean")
							return i ? lo.create(e, s) : co.create(e, s);
						const r = Et.get(e);
						return typeof r == "boolean"
							? i === (r ? "true" : "false")
								? Zt.INSTANCE
								: pi.INSTANCE
							: new R3(e, i, s);
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 5);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						const e = Et.get(this.c);
						if (typeof e == "boolean") {
							const i = e ? "true" : "false";
							return this.d === i ? Zt.INSTANCE : pi.INSTANCE;
						}
						return this;
					}
					evaluate(e) {
						return e.getValue(this.c) != this.d;
					}
					serialize() {
						return `${this.c} != '${this.d}'`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapNotEquals(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = mu.create(this.c, this.d, this)), this.f;
					}
				}),
				(lo = class O3 {
					static create(e, i = null) {
						const s = Et.get(e);
						return typeof s == "boolean"
							? s
								? Zt.INSTANCE
								: pi.INSTANCE
							: new O3(e, i);
					}
					constructor(e, i) {
						(this.c = e), (this.d = i), (this.type = 3);
					}
					cmp(e) {
						return e.type !== this.type ? this.type - e.type : Vy(this.c, e.c);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c : !1;
					}
					substituteConstants() {
						const e = Et.get(this.c);
						return typeof e == "boolean"
							? e
								? Zt.INSTANCE
								: pi.INSTANCE
							: this;
					}
					evaluate(e) {
						return !e.getValue(this.c);
					}
					serialize() {
						return `!${this.c}`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapNot(this.c);
					}
					negate() {
						return this.d || (this.d = co.create(this.c, this)), this.d;
					}
				}),
				(wu = class L3 {
					static create(e, i, s = null) {
						return pu(i, (r) => new L3(e, r, s));
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 12);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return typeof this.d == "string"
							? !1
							: parseFloat(e.getValue(this.c)) > this.d;
					}
					serialize() {
						return `${this.c} > ${this.d}`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapGreater(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = bu.create(this.c, this.d, this)), this.f;
					}
				}),
				(vu = class M3 {
					static create(e, i, s = null) {
						return pu(i, (r) => new M3(e, r, s));
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 13);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return typeof this.d == "string"
							? !1
							: parseFloat(e.getValue(this.c)) >= this.d;
					}
					serialize() {
						return `${this.c} >= ${this.d}`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapGreaterEquals(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = yu.create(this.c, this.d, this)), this.f;
					}
				}),
				(yu = class F3 {
					static create(e, i, s = null) {
						return pu(i, (r) => new F3(e, r, s));
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 14);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return typeof this.d == "string"
							? !1
							: parseFloat(e.getValue(this.c)) < this.d;
					}
					serialize() {
						return `${this.c} < ${this.d}`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapSmaller(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = vu.create(this.c, this.d, this)), this.f;
					}
				}),
				(bu = class N3 {
					static create(e, i, s = null) {
						return pu(i, (r) => new N3(e, r, s));
					}
					constructor(e, i, s) {
						(this.c = e), (this.d = i), (this.f = s), (this.type = 15);
					}
					cmp(e) {
						return e.type !== this.type
							? this.type - e.type
							: tn(this.c, this.d, e.c, e.d);
					}
					equals(e) {
						return e.type === this.type ? this.c === e.c && this.d === e.d : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return typeof this.d == "string"
							? !1
							: parseFloat(e.getValue(this.c)) <= this.d;
					}
					serialize() {
						return `${this.c} <= ${this.d}`;
					}
					keys() {
						return [this.c];
					}
					map(e) {
						return e.mapSmallerEquals(this.c, this.d);
					}
					negate() {
						return this.f || (this.f = wu.create(this.c, this.d, this)), this.f;
					}
				}),
				(Eu = class W3 {
					static create(e, i) {
						return new W3(e, i);
					}
					constructor(e, i) {
						(this.d = e), (this.f = i), (this.type = 7), (this.c = null);
					}
					cmp(e) {
						if (e.type !== this.type) return this.type - e.type;
						if (this.d < e.d) return -1;
						if (this.d > e.d) return 1;
						const i = this.f ? this.f.source : "",
							s = e.f ? e.f.source : "";
						return i < s ? -1 : i > s ? 1 : 0;
					}
					equals(e) {
						if (e.type === this.type) {
							const i = this.f ? this.f.source : "",
								s = e.f ? e.f.source : "";
							return this.d === e.d && i === s;
						}
						return !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						const i = e.getValue(this.d);
						return this.f ? this.f.test(i) : !1;
					}
					serialize() {
						const e = this.f
							? `/${this.f.source}/${this.f.flags}`
							: "/invalid/";
						return `${this.d} =~ ${e}`;
					}
					keys() {
						return [this.d];
					}
					map(e) {
						return e.mapRegex(this.d, this.f);
					}
					negate() {
						return this.c || (this.c = ob.create(this)), this.c;
					}
				}),
				(ob = class h0 {
					static create(e) {
						return new h0(e);
					}
					constructor(e) {
						(this.c = e), (this.type = 8);
					}
					cmp(e) {
						return e.type !== this.type ? this.type - e.type : this.c.cmp(e.c);
					}
					equals(e) {
						return e.type === this.type ? this.c.equals(e.c) : !1;
					}
					substituteConstants() {
						return this;
					}
					evaluate(e) {
						return !this.c.evaluate(e);
					}
					serialize() {
						return `!(${this.c.serialize()})`;
					}
					keys() {
						return this.c.keys();
					}
					map(e) {
						return new h0(this.c.map(e));
					}
					negate() {
						return this.c;
					}
				}),
				(Vp = class aa {
					static create(e, i, s) {
						return aa.d(e, i, s);
					}
					constructor(e, i) {
						(this.expr = e), (this.c = i), (this.type = 6);
					}
					cmp(e) {
						if (e.type !== this.type) return this.type - e.type;
						if (this.expr.length < e.expr.length) return -1;
						if (this.expr.length > e.expr.length) return 1;
						for (let i = 0, s = this.expr.length; i < s; i++) {
							const r = Za(this.expr[i], e.expr[i]);
							if (r !== 0) return r;
						}
						return 0;
					}
					equals(e) {
						if (e.type === this.type) {
							if (this.expr.length !== e.expr.length) return !1;
							for (let i = 0, s = this.expr.length; i < s; i++)
								if (!this.expr[i].equals(e.expr[i])) return !1;
							return !0;
						}
						return !1;
					}
					substituteConstants() {
						const e = Hy(this.expr);
						return e === this.expr ? this : aa.create(e, this.c, !1);
					}
					evaluate(e) {
						for (let i = 0, s = this.expr.length; i < s; i++)
							if (!this.expr[i].evaluate(e)) return !1;
						return !0;
					}
					static d(e, i, s) {
						const r = [];
						let n = !1;
						for (const o of e)
							if (o) {
								if (o.type === 1) {
									n = !0;
									continue;
								}
								if (o.type === 0) return Zt.INSTANCE;
								if (o.type === 6) {
									r.push(...o.expr);
									continue;
								}
								r.push(o);
							}
						if (r.length === 0 && n) return pi.INSTANCE;
						if (r.length !== 0) {
							if (r.length === 1) return r[0];
							r.sort(Za);
							for (let o = 1; o < r.length; o++)
								r[o - 1].equals(r[o]) && (r.splice(o, 1), o--);
							if (r.length === 1) return r[0];
							for (; r.length > 1; ) {
								const o = r[r.length - 1];
								if (o.type !== 9) break;
								r.pop();
								const a = r.pop(),
									c = r.length === 0,
									l = Su.create(
										o.expr.map((u) => aa.create([u, a], null, s)),
										null,
										c,
									);
								l && (r.push(l), r.sort(Za));
							}
							if (r.length === 1) return r[0];
							if (s) {
								for (let o = 0; o < r.length; o++)
									for (let a = o + 1; a < r.length; a++)
										if (r[o].negate().equals(r[a])) return Zt.INSTANCE;
								if (r.length === 1) return r[0];
							}
							return new aa(r, i);
						}
					}
					serialize() {
						return this.expr.map((e) => e.serialize()).join(" && ");
					}
					keys() {
						const e = [];
						for (const i of this.expr) e.push(...i.keys());
						return e;
					}
					map(e) {
						return new aa(
							this.expr.map((i) => i.map(e)),
							null,
						);
					}
					negate() {
						if (!this.c) {
							const e = [];
							for (const i of this.expr) e.push(i.negate());
							this.c = Su.create(e, this, !0);
						}
						return this.c;
					}
				}),
				(Su = class Nn {
					static create(e, i, s) {
						return Nn.d(e, i, s);
					}
					constructor(e, i) {
						(this.expr = e), (this.c = i), (this.type = 9);
					}
					cmp(e) {
						if (e.type !== this.type) return this.type - e.type;
						if (this.expr.length < e.expr.length) return -1;
						if (this.expr.length > e.expr.length) return 1;
						for (let i = 0, s = this.expr.length; i < s; i++) {
							const r = Za(this.expr[i], e.expr[i]);
							if (r !== 0) return r;
						}
						return 0;
					}
					equals(e) {
						if (e.type === this.type) {
							if (this.expr.length !== e.expr.length) return !1;
							for (let i = 0, s = this.expr.length; i < s; i++)
								if (!this.expr[i].equals(e.expr[i])) return !1;
							return !0;
						}
						return !1;
					}
					substituteConstants() {
						const e = Hy(this.expr);
						return e === this.expr ? this : Nn.create(e, this.c, !1);
					}
					evaluate(e) {
						for (let i = 0, s = this.expr.length; i < s; i++)
							if (this.expr[i].evaluate(e)) return !0;
						return !1;
					}
					static d(e, i, s) {
						let r = [],
							n = !1;
						if (e) {
							for (let o = 0, a = e.length; o < a; o++) {
								const c = e[o];
								if (c) {
									if (c.type === 0) {
										n = !0;
										continue;
									}
									if (c.type === 1) return pi.INSTANCE;
									if (c.type === 9) {
										r = r.concat(c.expr);
										continue;
									}
									r.push(c);
								}
							}
							if (r.length === 0 && n) return Zt.INSTANCE;
							r.sort(Za);
						}
						if (r.length !== 0) {
							if (r.length === 1) return r[0];
							for (let o = 1; o < r.length; o++)
								r[o - 1].equals(r[o]) && (r.splice(o, 1), o--);
							if (r.length === 1) return r[0];
							if (s) {
								for (let o = 0; o < r.length; o++)
									for (let a = o + 1; a < r.length; a++)
										if (r[o].negate().equals(r[a])) return pi.INSTANCE;
								if (r.length === 1) return r[0];
							}
							return new Nn(r, i);
						}
					}
					serialize() {
						return this.expr.map((e) => e.serialize()).join(" || ");
					}
					keys() {
						const e = [];
						for (const i of this.expr) e.push(...i.keys());
						return e;
					}
					map(e) {
						return new Nn(
							this.expr.map((i) => i.map(e)),
							null,
						);
					}
					negate() {
						if (!this.c) {
							const e = [];
							for (const i of this.expr) e.push(i.negate());
							for (; e.length > 1; ) {
								const i = e.shift(),
									s = e.shift(),
									r = [];
								for (const n of Gy(i))
									for (const o of Gy(s)) r.push(Vp.create([n, o], null, !1));
								e.unshift(Nn.create(r, null, !1));
							}
							this.c = Nn.create(e, this, !0);
						}
						return this.c;
					}
				}),
				(Gp = class df extends co {
					static {
						this.d = [];
					}
					static all() {
						return df.d.values();
					}
					constructor(e, i, s) {
						super(e, null),
							(this.f = i),
							typeof s == "object"
								? df.d.push({ ...s, key: e })
								: s !== !0 &&
									df.d.push({
										key: e,
										description: s,
										type: i != null ? typeof i : void 0,
									});
					}
					bindTo(e) {
						return e.createKey(this.key, this.f);
					}
					getValue(e) {
						return e.getContextKeyValue(this.key);
					}
					toNegated() {
						return this.negate();
					}
					isEqualTo(e) {
						return mu.create(this.key, e);
					}
					notEqualsTo(e) {
						return gu.create(this.key, e);
					}
				}),
				(ax = B("contextKeyService"));
		},
	});
function xs() {
	return new Date().toISOString();
}
function cb(t) {
	return jl(t);
}
function Jp(t, e, i) {
	switch (e) {
		case J.Trace:
			t.trace(i);
			break;
		case J.Debug:
			t.debug(i);
			break;
		case J.Info:
			t.info(i);
			break;
		case J.Warning:
			t.warn(i);
			break;
		case J.Error:
			t.error(i);
			break;
		case J.Off:
			break;
		default:
			throw new Error(`Invalid log level ${e}`);
	}
}
function uo(t, e = !1) {
	let i = "";
	for (let s = 0; s < t.length; s++) {
		let r = t[s];
		if ((r instanceof Error && (r = Es(r, e)), typeof r == "object"))
			try {
				r = JSON.stringify(r);
			} catch {}
		i += (s > 0 ? " " : "") + r;
	}
	return i;
}
function cx(t) {
	if (t.verbose) return J.Trace;
	if (typeof t.logLevel == "string") {
		const e = ux(t.logLevel.toLowerCase());
		if (e !== void 0) return e;
	}
	return tc;
}
function lx(t) {
	switch (t) {
		case J.Trace:
			return "trace";
		case J.Debug:
			return "debug";
		case J.Info:
			return "info";
		case J.Warning:
			return "warn";
		case J.Error:
			return "error";
		case J.Off:
			return "off";
	}
}
function ux(t) {
	switch (t) {
		case "trace":
			return J.Trace;
		case "debug":
			return J.Debug;
		case "info":
			return J.Info;
		case "warn":
			return J.Warning;
		case "error":
			return J.Error;
		case "critical":
			return J.Error;
		case "off":
			return J.Off;
	}
}
var G,
	ec,
	J,
	tc,
	ku,
	Xp,
	lb,
	ub,
	hb,
	db,
	fb,
	hx,
	Q = m({
		"out-build/vs/platform/log/common/log.js"() {
			"use strict";
			ve(),
				Yr(),
				q(),
				Qs(),
				F(),
				xi(),
				z(),
				rt(),
				Ie(),
				ie(),
				ab(),
				Y(),
				(G = B("logService")),
				(ec = B("loggerService")),
				(function (t) {
					(t[(t.Off = 0)] = "Off"),
						(t[(t.Trace = 1)] = "Trace"),
						(t[(t.Debug = 2)] = "Debug"),
						(t[(t.Info = 3)] = "Info"),
						(t[(t.Warning = 4)] = "Warning"),
						(t[(t.Error = 5)] = "Error");
				})(J || (J = {})),
				(tc = J.Info),
				(ku = class extends j {
					constructor() {
						super(...arguments),
							(this.b = tc),
							(this.c = this.D(new $())),
							(this.onDidChangeLogLevel = this.c.event);
					}
					setLevel(t) {
						this.b !== t && ((this.b = t), this.c.fire(this.b));
					}
					getLevel() {
						return this.b;
					}
					f(t) {
						return this.b !== J.Off && this.b <= t;
					}
					g(t) {
						return this.B.isDisposed ? !1 : this.f(t);
					}
				}),
				(Xp = class extends ku {
					constructor(t) {
						super(), (this.h = t);
					}
					f(t) {
						return this.h || super.f(t);
					}
					trace(t, ...e) {
						this.g(J.Trace) && this.m(J.Trace, uo([t, ...e], !0));
					}
					debug(t, ...e) {
						this.g(J.Debug) && this.m(J.Debug, uo([t, ...e]));
					}
					info(t, ...e) {
						this.g(J.Info) && this.m(J.Info, uo([t, ...e]));
					}
					warn(t, ...e) {
						this.g(J.Warning) && this.m(J.Warning, uo([t, ...e]));
					}
					error(t, ...e) {
						if (this.g(J.Error))
							if (t instanceof Error) {
								const i = Array.prototype.slice.call(arguments);
								(i[0] = t.stack), this.m(J.Error, uo(i));
							} else this.m(J.Error, uo([t, ...e]));
					}
					flush() {}
				}),
				(lb = class extends ku {
					constructor(t = tc) {
						super(), this.setLevel(t), (this.h = !T);
					}
					trace(t, ...e) {
						this.g(J.Trace) &&
							(this.h
								? console.log(`\x1B[90m[main ${xs()}]\x1B[0m`, t, ...e)
								: console.log(`[main ${xs()}]`, t, ...e));
					}
					debug(t, ...e) {
						this.g(J.Debug) &&
							(this.h
								? console.log(`\x1B[90m[main ${xs()}]\x1B[0m`, t, ...e)
								: console.log(`[main ${xs()}]`, t, ...e));
					}
					info(t, ...e) {
						this.g(J.Info) &&
							(this.h
								? console.log(`\x1B[90m[main ${xs()}]\x1B[0m`, t, ...e)
								: console.log(`[main ${xs()}]`, t, ...e));
					}
					warn(t, ...e) {
						this.g(J.Warning) &&
							(this.h
								? console.warn(`\x1B[93m[main ${xs()}]\x1B[0m`, t, ...e)
								: console.warn(`[main ${xs()}]`, t, ...e));
					}
					error(t, ...e) {
						this.g(J.Error) &&
							(this.h
								? console.error(`\x1B[91m[main ${xs()}]\x1B[0m`, t, ...e)
								: console.error(`[main ${xs()}]`, t, ...e));
					}
					flush() {}
				}),
				(ub = class extends ku {
					constructor(t) {
						super(), (this.h = t), t.length && this.setLevel(t[0].getLevel());
					}
					setLevel(t) {
						for (const e of this.h) e.setLevel(t);
						super.setLevel(t);
					}
					trace(t, ...e) {
						for (const i of this.h) i.trace(t, ...e);
					}
					debug(t, ...e) {
						for (const i of this.h) i.debug(t, ...e);
					}
					info(t, ...e) {
						for (const i of this.h) i.info(t, ...e);
					}
					warn(t, ...e) {
						for (const i of this.h) i.warn(t, ...e);
					}
					error(t, ...e) {
						for (const i of this.h) i.error(t, ...e);
					}
					flush() {
						for (const t of this.h) t.flush();
					}
					dispose() {
						for (const t of this.h) t.dispose();
						super.dispose();
					}
				}),
				(hb = class extends j {
					constructor(t, e, i) {
						if (
							(super(),
							(this.h = t),
							(this.j = e),
							(this.b = new qt()),
							(this.c = this.D(new $())),
							(this.onDidChangeLoggers = this.c.event),
							(this.f = this.D(new $())),
							(this.onDidChangeLogLevel = this.f.event),
							(this.g = this.D(new $())),
							(this.onDidChangeVisibility = this.g.event),
							i)
						)
							for (const s of i)
								this.b.set(s.resource, { logger: void 0, info: s });
					}
					m(t) {
						return mt(t)
							? [...this.b.values()].find((e) => e.info.id === t)
							: this.b.get(t);
					}
					getLogger(t) {
						return this.m(t)?.logger;
					}
					createLogger(t, e) {
						const i = this.n(t),
							s = mt(t) ? t : (e?.id ?? Ss(i.toString()).toString(16));
						let r = this.b.get(i)?.logger;
						const n = e?.logLevel === "always" ? J.Trace : e?.logLevel;
						r ||
							(r = this.q(i, n ?? this.getLogLevel(i) ?? this.h, {
								...e,
								id: s,
							}));
						const o = {
							logger: r,
							info: {
								resource: i,
								id: s,
								logLevel: n,
								name: e?.name,
								hidden: e?.hidden,
								extensionId: e?.extensionId,
								when: e?.when,
							},
						};
						return this.registerLogger(o.info), this.b.set(i, o), r;
					}
					n(t) {
						return mt(t) ? he(this.j, `${t}.log`) : t;
					}
					setLogLevel(t, e) {
						if (P.isUri(t)) {
							const i = t,
								s = e,
								r = this.b.get(i);
							r &&
								s !== r.info.logLevel &&
								((r.info.logLevel = s === this.h ? void 0 : s),
								r.logger?.setLevel(s),
								this.b.set(r.info.resource, r),
								this.f.fire([i, s]));
						} else {
							this.h = t;
							for (const [i, s] of this.b.entries())
								this.b.get(i)?.info.logLevel === void 0 &&
									s.logger?.setLevel(this.h);
							this.f.fire(this.h);
						}
					}
					setVisibility(t, e) {
						const i = this.m(t);
						i &&
							e !== !i.info.hidden &&
							((i.info.hidden = !e),
							this.b.set(i.info.resource, i),
							this.g.fire([i.info.resource, e]));
					}
					getLogLevel(t) {
						let e;
						return t && (e = this.b.get(t)?.info.logLevel), e ?? this.h;
					}
					registerLogger(t) {
						const e = this.b.get(t.resource);
						e
							? e.info.hidden !== t.hidden &&
								this.setVisibility(t.resource, !t.hidden)
							: (this.b.set(t.resource, { info: t, logger: void 0 }),
								this.c.fire({ added: [t], removed: [] }));
					}
					deregisterLogger(t) {
						const e = this.b.get(t);
						e &&
							(e.logger && e.logger.dispose(),
							this.b.delete(t),
							this.c.fire({ added: [], removed: [e.info] }));
					}
					*getRegisteredLoggers() {
						for (const t of this.b.values()) yield t.info;
					}
					getRegisteredLogger(t) {
						return this.b.get(t)?.info;
					}
					dispose() {
						this.b.forEach((t) => t.logger?.dispose()),
							this.b.clear(),
							super.dispose();
					}
				}),
				(db = class {
					constructor() {
						this.onDidChangeLogLevel = new $().event;
					}
					setLevel(t) {}
					getLevel() {
						return J.Info;
					}
					trace(t, ...e) {}
					debug(t, ...e) {}
					info(t, ...e) {}
					warn(t, ...e) {}
					error(t, ...e) {}
					critical(t, ...e) {}
					dispose() {}
					flush() {}
				}),
				(fb = class extends db {}),
				(hx = new Gp("logLevel", lx(J.Info)));
		},
	}),
	pb,
	mb,
	Kp,
	gb,
	wb,
	ic,
	vb,
	kr,
	ho = m({
		"out-build/vs/base/common/ternarySearchTree.js"() {
			"use strict";
			Ut(),
				Ft(),
				(pb = class {
					constructor() {
						(this.b = ""), (this.c = 0);
					}
					reset(t) {
						return (this.b = t), (this.c = 0), this;
					}
					next() {
						return (this.c += 1), this;
					}
					hasNext() {
						return this.c < this.b.length - 1;
					}
					cmp(t) {
						const e = t.charCodeAt(0),
							i = this.b.charCodeAt(this.c);
						return e - i;
					}
					value() {
						return this.b[this.c];
					}
				}),
				(mb = class {
					constructor(t = !0) {
						this.e = t;
					}
					reset(t) {
						return (this.b = t), (this.c = 0), (this.d = 0), this.next();
					}
					hasNext() {
						return this.d < this.b.length;
					}
					next() {
						this.c = this.d;
						let t = !0;
						for (; this.d < this.b.length; this.d++)
							if (this.b.charCodeAt(this.d) === 46)
								if (t) this.c++;
								else break;
							else t = !1;
						return this;
					}
					cmp(t) {
						return this.e
							? ap(t, this.b, 0, t.length, this.c, this.d)
							: Wa(t, this.b, 0, t.length, this.c, this.d);
					}
					value() {
						return this.b.substring(this.c, this.d);
					}
				}),
				(Kp = class {
					constructor(t = !0, e = !0) {
						(this.f = t), (this.g = e);
					}
					reset(t) {
						(this.d = 0), (this.e = 0), (this.b = t), (this.c = t.length);
						for (let e = t.length - 1; e >= 0; e--, this.c--) {
							const i = this.b.charCodeAt(e);
							if (!(i === 47 || (this.f && i === 92))) break;
						}
						return this.next();
					}
					hasNext() {
						return this.e < this.c;
					}
					next() {
						this.d = this.e;
						let t = !0;
						for (; this.e < this.c; this.e++) {
							const e = this.b.charCodeAt(this.e);
							if (e === 47 || (this.f && e === 92))
								if (t) this.d++;
								else break;
							else t = !1;
						}
						return this;
					}
					cmp(t) {
						return this.g
							? ap(t, this.b, 0, t.length, this.d, this.e)
							: Wa(t, this.b, 0, t.length, this.d, this.e);
					}
					value() {
						return this.b.substring(this.d, this.e);
					}
				}),
				(function (t) {
					(t[(t.Scheme = 1)] = "Scheme"),
						(t[(t.Authority = 2)] = "Authority"),
						(t[(t.Path = 3)] = "Path"),
						(t[(t.Query = 4)] = "Query"),
						(t[(t.Fragment = 5)] = "Fragment");
				})(gb || (gb = {})),
				(wb = class {
					constructor(t, e) {
						(this.f = t), (this.g = e), (this.d = []), (this.e = 0);
					}
					reset(t) {
						return (
							(this.c = t),
							(this.d = []),
							this.c.scheme && this.d.push(1),
							this.c.authority && this.d.push(2),
							this.c.path &&
								((this.b = new Kp(!1, !this.f(t))),
								this.b.reset(t.path),
								this.b.value() && this.d.push(3)),
							this.g(t) ||
								(this.c.query && this.d.push(4),
								this.c.fragment && this.d.push(5)),
							(this.e = 0),
							this
						);
					}
					next() {
						return (
							this.d[this.e] === 3 && this.b.hasNext()
								? this.b.next()
								: (this.e += 1),
							this
						);
					}
					hasNext() {
						return (
							(this.d[this.e] === 3 && this.b.hasNext()) ||
							this.e < this.d.length - 1
						);
					}
					cmp(t) {
						if (this.d[this.e] === 1) return cp(t, this.c.scheme);
						if (this.d[this.e] === 2) return cp(t, this.c.authority);
						if (this.d[this.e] === 3) return this.b.cmp(t);
						if (this.d[this.e] === 4) return op(t, this.c.query);
						if (this.d[this.e] === 5) return op(t, this.c.fragment);
						throw new Error();
					}
					value() {
						if (this.d[this.e] === 1) return this.c.scheme;
						if (this.d[this.e] === 2) return this.c.authority;
						if (this.d[this.e] === 3) return this.b.value();
						if (this.d[this.e] === 4) return this.c.query;
						if (this.d[this.e] === 5) return this.c.fragment;
						throw new Error();
					}
				}),
				(ic = class {
					constructor() {
						this.height = 1;
					}
					isEmpty() {
						return !this.left && !this.mid && !this.right && !this.value;
					}
					rotateLeft() {
						const t = this.right;
						return (
							(this.right = t.left),
							(t.left = this),
							this.updateHeight(),
							t.updateHeight(),
							t
						);
					}
					rotateRight() {
						const t = this.left;
						return (
							(this.left = t.right),
							(t.right = this),
							this.updateHeight(),
							t.updateHeight(),
							t
						);
					}
					updateHeight() {
						this.height = 1 + Math.max(this.heightLeft, this.heightRight);
					}
					balanceFactor() {
						return this.heightRight - this.heightLeft;
					}
					get heightLeft() {
						return this.left?.height ?? 0;
					}
					get heightRight() {
						return this.right?.height ?? 0;
					}
				}),
				(function (t) {
					(t[(t.Left = -1)] = "Left"),
						(t[(t.Mid = 0)] = "Mid"),
						(t[(t.Right = 1)] = "Right");
				})(vb || (vb = {})),
				(kr = class yl {
					static forUris(e = () => !1, i = () => !1) {
						return new yl(new wb(e, i));
					}
					static forPaths(e = !1) {
						return new yl(new Kp(void 0, !e));
					}
					static forStrings() {
						return new yl(new pb());
					}
					static forConfigKeys() {
						return new yl(new mb());
					}
					constructor(e) {
						this.b = e;
					}
					clear() {
						this.c = void 0;
					}
					fill(e, i) {
						if (i) {
							const s = i.slice(0);
							iw(s);
							for (const r of s) this.set(r, e);
						} else {
							const s = e.slice(0);
							iw(s);
							for (const r of s) this.set(r[0], r[1]);
						}
					}
					set(e, i) {
						const s = this.b.reset(e);
						let r;
						this.c || ((this.c = new ic()), (this.c.segment = s.value()));
						const n = [];
						for (r = this.c; ; ) {
							const a = s.cmp(r.segment);
							if (a > 0)
								r.left || ((r.left = new ic()), (r.left.segment = s.value())),
									n.push([-1, r]),
									(r = r.left);
							else if (a < 0)
								r.right ||
									((r.right = new ic()), (r.right.segment = s.value())),
									n.push([1, r]),
									(r = r.right);
							else if (s.hasNext())
								s.next(),
									r.mid || ((r.mid = new ic()), (r.mid.segment = s.value())),
									n.push([0, r]),
									(r = r.mid);
							else break;
						}
						const o = r.value;
						(r.value = i), (r.key = e);
						for (let a = n.length - 1; a >= 0; a--) {
							const c = n[a][1];
							c.updateHeight();
							const l = c.balanceFactor();
							if (l < -1 || l > 1) {
								const u = n[a][0],
									d = n[a + 1][0];
								if (u === 1 && d === 1) n[a][1] = c.rotateLeft();
								else if (u === -1 && d === -1) n[a][1] = c.rotateRight();
								else if (u === 1 && d === -1)
									(c.right = n[a + 1][1] = n[a + 1][1].rotateRight()),
										(n[a][1] = c.rotateLeft());
								else if (u === -1 && d === 1)
									(c.left = n[a + 1][1] = n[a + 1][1].rotateLeft()),
										(n[a][1] = c.rotateRight());
								else throw new Error();
								if (a > 0)
									switch (n[a - 1][0]) {
										case -1:
											n[a - 1][1].left = n[a][1];
											break;
										case 1:
											n[a - 1][1].right = n[a][1];
											break;
										case 0:
											n[a - 1][1].mid = n[a][1];
											break;
									}
								else this.c = n[0][1];
							}
						}
						return o;
					}
					get(e) {
						return this.d(e)?.value;
					}
					d(e) {
						const i = this.b.reset(e);
						let s = this.c;
						for (; s; ) {
							const r = i.cmp(s.segment);
							if (r > 0) s = s.left;
							else if (r < 0) s = s.right;
							else if (i.hasNext()) i.next(), (s = s.mid);
							else break;
						}
						return s;
					}
					has(e) {
						const i = this.d(e);
						return !(i?.value === void 0 && i?.mid === void 0);
					}
					delete(e) {
						return this.e(e, !1);
					}
					deleteSuperstr(e) {
						return this.e(e, !0);
					}
					e(e, i) {
						const s = this.b.reset(e),
							r = [];
						let n = this.c;
						for (; n; ) {
							const o = s.cmp(n.segment);
							if (o > 0) r.push([-1, n]), (n = n.left);
							else if (o < 0) r.push([1, n]), (n = n.right);
							else if (s.hasNext()) s.next(), r.push([0, n]), (n = n.mid);
							else break;
						}
						if (n) {
							if (
								(i
									? ((n.left = void 0),
										(n.mid = void 0),
										(n.right = void 0),
										(n.height = 1))
									: ((n.key = void 0), (n.value = void 0)),
								!n.mid && !n.value)
							)
								if (n.left && n.right) {
									const o = this.f(n.right);
									if (o.key) {
										const { key: a, value: c, segment: l } = o;
										this.e(o.key, !1),
											(n.key = a),
											(n.value = c),
											(n.segment = l);
									}
								} else {
									const o = n.left ?? n.right;
									if (r.length > 0) {
										const [a, c] = r[r.length - 1];
										switch (a) {
											case -1:
												c.left = o;
												break;
											case 0:
												c.mid = o;
												break;
											case 1:
												c.right = o;
												break;
										}
									} else this.c = o;
								}
							for (let o = r.length - 1; o >= 0; o--) {
								const a = r[o][1];
								a.updateHeight();
								const c = a.balanceFactor();
								if (
									(c > 1
										? (a.right.balanceFactor() >= 0 ||
												(a.right = a.right.rotateRight()),
											(r[o][1] = a.rotateLeft()))
										: c < -1 &&
											(a.left.balanceFactor() <= 0 ||
												(a.left = a.left.rotateLeft()),
											(r[o][1] = a.rotateRight())),
									o > 0)
								)
									switch (r[o - 1][0]) {
										case -1:
											r[o - 1][1].left = r[o][1];
											break;
										case 1:
											r[o - 1][1].right = r[o][1];
											break;
										case 0:
											r[o - 1][1].mid = r[o][1];
											break;
									}
								else this.c = r[0][1];
							}
						}
					}
					f(e) {
						for (; e.left; ) e = e.left;
						return e;
					}
					findSubstr(e) {
						const i = this.b.reset(e);
						let s = this.c,
							r;
						for (; s; ) {
							const n = i.cmp(s.segment);
							if (n > 0) s = s.left;
							else if (n < 0) s = s.right;
							else if (i.hasNext()) i.next(), (r = s.value || r), (s = s.mid);
							else break;
						}
						return (s && s.value) || r;
					}
					findSuperstr(e) {
						return this.g(e, !1);
					}
					g(e, i) {
						const s = this.b.reset(e);
						let r = this.c;
						for (; r; ) {
							const n = s.cmp(r.segment);
							if (n > 0) r = r.left;
							else if (n < 0) r = r.right;
							else if (s.hasNext()) s.next(), (r = r.mid);
							else return r.mid ? this.h(r.mid) : i ? r.value : void 0;
						}
					}
					hasElementOrSubtree(e) {
						return this.g(e, !0) !== void 0;
					}
					forEach(e) {
						for (const [i, s] of this) e(s, i);
					}
					*[Symbol.iterator]() {
						yield* this.h(this.c);
					}
					h(e) {
						const i = [];
						return this.j(e, i), i[Symbol.iterator]();
					}
					j(e, i) {
						e &&
							(e.left && this.j(e.left, i),
							e.value && i.push([e.key, e.value]),
							e.mid && this.j(e.mid, i),
							e.right && this.j(e.right, i));
					}
					_isBalanced() {
						const e = (i) => {
							if (!i) return !0;
							const s = i.balanceFactor();
							return s < -1 || s > 1 ? !1 : e(i.left) && e(i.right);
						};
						return e(this.c);
					}
				});
		},
	});
function fo(t) {
	return t.create === !0;
}
function Ji(t) {
	return !!(t.capabilities & 2);
}
function Yp(t) {
	return !!(t.capabilities & 8);
}
function yb(t) {
	return !!(t.capabilities & 131072);
}
function xr(t) {
	return !!(t.capabilities & 4);
}
function Qp(t) {
	return !!(t.capabilities & 16);
}
function Zp(t) {
	return Ji(t) ? !!(t.capabilities & 16384) : !1;
}
function bb(t) {
	return Ji(t) ? !!(t.capabilities & 32768) : !1;
}
function dx(t) {
	return !!(t.capabilities & 65536);
}
function ss(t, e) {
	return Du.create(t, e);
}
function sn(t) {
	return t || ss(w(1916, null), ne.Unknown);
}
function fx(t, e) {
	return (t.name = e ? `${e} (FileSystemError)` : "FileSystemError"), t;
}
function xu(t) {
	if (!t) return ne.Unknown;
	if (t instanceof Du) return t.code;
	const e = /^(.+) \(FileSystemError\)$/.exec(t.name);
	if (!e) return ne.Unknown;
	switch (e[1]) {
		case ne.FileExists:
			return ne.FileExists;
		case ne.FileIsADirectory:
			return ne.FileIsADirectory;
		case ne.FileNotADirectory:
			return ne.FileNotADirectory;
		case ne.FileNotFound:
			return ne.FileNotFound;
		case ne.FileTooLarge:
			return ne.FileTooLarge;
		case ne.FileWriteLocked:
			return ne.FileWriteLocked;
		case ne.NoPermissions:
			return ne.NoPermissions;
		case ne.Unavailable:
			return ne.Unavailable;
	}
	return ne.Unknown;
}
function Ds(t) {
	if (t instanceof ei) return t.fileOperationResult;
	switch (xu(t)) {
		case ne.FileNotFound:
			return 1;
		case ne.FileIsADirectory:
			return 0;
		case ne.FileNotADirectory:
			return 9;
		case ne.FileWriteLocked:
			return 5;
		case ne.NoPermissions:
			return 6;
		case ne.FileExists:
			return 4;
		case ne.FileTooLarge:
			return 7;
		default:
			return 10;
	}
}
function px(t, e, i) {
	return !t || !e || t === e || e.length > t.length
		? !1
		: (e.charAt(e.length - 1) !== Bt && (e += Bt),
			i ? Gl(t, e) : t.indexOf(e) === 0);
}
function Eb(t) {
	if (!(typeof t.size != "number" || typeof t.mtime != "number"))
		return t.mtime.toString(29) + t.size.toString(31);
}
var nt,
	At,
	po,
	Sb,
	kb,
	ne,
	Du,
	xb,
	rn,
	Db,
	Pb,
	ei,
	Pu,
	$u,
	$b,
	Au,
	Ab,
	Iu,
	nn,
	Be = m({
		"out-build/vs/platform/files/common/files.js"() {
			"use strict";
			ho(),
				ge(),
				Ft(),
				Ie(),
				ie(),
				ve(),
				Y(),
				z(),
				Ce(),
				Fa(),
				(nt = B("fileService")),
				(function (t) {
					(t[(t.Unknown = 0)] = "Unknown"),
						(t[(t.File = 1)] = "File"),
						(t[(t.Directory = 2)] = "Directory"),
						(t[(t.SymbolicLink = 64)] = "SymbolicLink");
				})(At || (At = {})),
				(function (t) {
					(t[(t.Readonly = 1)] = "Readonly"), (t[(t.Locked = 2)] = "Locked");
				})(po || (po = {})),
				(function (t) {
					(t[(t.UPDATED = 2)] = "UPDATED"),
						(t[(t.ADDED = 4)] = "ADDED"),
						(t[(t.DELETED = 8)] = "DELETED");
				})(Sb || (Sb = {})),
				(function (t) {
					(t[(t.None = 0)] = "None"),
						(t[(t.FileReadWrite = 2)] = "FileReadWrite"),
						(t[(t.FileOpenReadWriteClose = 4)] = "FileOpenReadWriteClose"),
						(t[(t.FileReadStream = 16)] = "FileReadStream"),
						(t[(t.FileFolderCopy = 8)] = "FileFolderCopy"),
						(t[(t.PathCaseSensitive = 1024)] = "PathCaseSensitive"),
						(t[(t.Readonly = 2048)] = "Readonly"),
						(t[(t.Trash = 4096)] = "Trash"),
						(t[(t.FileWriteUnlock = 8192)] = "FileWriteUnlock"),
						(t[(t.FileAtomicRead = 16384)] = "FileAtomicRead"),
						(t[(t.FileAtomicWrite = 32768)] = "FileAtomicWrite"),
						(t[(t.FileAtomicDelete = 65536)] = "FileAtomicDelete"),
						(t[(t.FileClone = 131072)] = "FileClone");
				})(kb || (kb = {})),
				(function (t) {
					(t.FileExists = "EntryExists"),
						(t.FileNotFound = "EntryNotFound"),
						(t.FileNotADirectory = "EntryNotADirectory"),
						(t.FileIsADirectory = "EntryIsADirectory"),
						(t.FileExceedsStorageQuota = "EntryExceedsStorageQuota"),
						(t.FileTooLarge = "EntryTooLarge"),
						(t.FileWriteLocked = "EntryWriteLocked"),
						(t.NoPermissions = "NoPermissions"),
						(t.Unavailable = "Unavailable"),
						(t.Unknown = "Unknown");
				})(ne || (ne = {})),
				(Du = class j3 extends Error {
					static create(e, i) {
						const s = new j3(e.toString(), i);
						return fx(s, i), s;
					}
					constructor(e, i) {
						super(e), (this.code = i);
					}
				}),
				(function (t) {
					(t[(t.CREATE = 0)] = "CREATE"),
						(t[(t.DELETE = 1)] = "DELETE"),
						(t[(t.MOVE = 2)] = "MOVE"),
						(t[(t.COPY = 3)] = "COPY"),
						(t[(t.WRITE = 4)] = "WRITE");
				})(xb || (xb = {})),
				(rn = class {
					constructor(t, e, i) {
						(this.resource = t), (this.operation = e), (this.target = i);
					}
					isOperation(t) {
						return this.operation === t;
					}
				}),
				(function (t) {
					(t[(t.UPDATED = 0)] = "UPDATED"),
						(t[(t.ADDED = 1)] = "ADDED"),
						(t[(t.DELETED = 2)] = "DELETED");
				})(Db || (Db = {})),
				(Pb = class ff {
					static {
						this.a = null;
					}
					constructor(e, i) {
						(this.c = i),
							(this.b = void 0),
							(this.d = new mr(() => {
								const s = kr.forUris(() => this.c);
								return s.fill(this.rawAdded.map((r) => [r, !0])), s;
							})),
							(this.f = new mr(() => {
								const s = kr.forUris(() => this.c);
								return s.fill(this.rawUpdated.map((r) => [r, !0])), s;
							})),
							(this.g = new mr(() => {
								const s = kr.forUris(() => this.c);
								return s.fill(this.rawDeleted.map((r) => [r, !0])), s;
							})),
							(this.rawAdded = []),
							(this.rawUpdated = []),
							(this.rawDeleted = []);
						for (const s of e) {
							switch (s.type) {
								case 1:
									this.rawAdded.push(s.resource);
									break;
								case 0:
									this.rawUpdated.push(s.resource);
									break;
								case 2:
									this.rawDeleted.push(s.resource);
									break;
							}
							this.b !== ff.a &&
								(typeof s.cId == "number"
									? this.b === void 0
										? (this.b = s.cId)
										: this.b !== s.cId && (this.b = ff.a)
									: this.b !== void 0 && (this.b = ff.a));
						}
					}
					contains(e, ...i) {
						return this.h(e, { includeChildren: !1 }, ...i);
					}
					affects(e, ...i) {
						return this.h(e, { includeChildren: !0 }, ...i);
					}
					h(e, i, ...s) {
						if (!e) return !1;
						const r = s.length > 0;
						return !!(
							((!r || s.includes(1)) &&
								(this.d.value.get(e) ||
									(i.includeChildren && this.d.value.findSuperstr(e)))) ||
							((!r || s.includes(0)) &&
								(this.f.value.get(e) ||
									(i.includeChildren && this.f.value.findSuperstr(e)))) ||
							((!r || s.includes(2)) &&
								(this.g.value.findSubstr(e) ||
									(i.includeChildren && this.g.value.findSuperstr(e))))
						);
					}
					gotAdded() {
						return this.rawAdded.length > 0;
					}
					gotDeleted() {
						return this.rawDeleted.length > 0;
					}
					gotUpdated() {
						return this.rawUpdated.length > 0;
					}
					correlates(e) {
						return this.b === e;
					}
					hasCorrelation() {
						return typeof this.b == "number";
					}
				}),
				(ei = class extends Error {
					constructor(t, e, i) {
						super(t), (this.fileOperationResult = e), (this.options = i);
					}
				}),
				(Pu = class extends ei {
					constructor(t, e, i, s) {
						super(t, e, s), (this.fileOperationResult = e), (this.size = i);
					}
				}),
				($u = class extends ei {
					constructor(t, e, i) {
						super(t, 2, i), (this.stat = e);
					}
				}),
				(function (t) {
					(t[(t.FILE_IS_DIRECTORY = 0)] = "FILE_IS_DIRECTORY"),
						(t[(t.FILE_NOT_FOUND = 1)] = "FILE_NOT_FOUND"),
						(t[(t.FILE_NOT_MODIFIED_SINCE = 2)] = "FILE_NOT_MODIFIED_SINCE"),
						(t[(t.FILE_MODIFIED_SINCE = 3)] = "FILE_MODIFIED_SINCE"),
						(t[(t.FILE_MOVE_CONFLICT = 4)] = "FILE_MOVE_CONFLICT"),
						(t[(t.FILE_WRITE_LOCKED = 5)] = "FILE_WRITE_LOCKED"),
						(t[(t.FILE_PERMISSION_DENIED = 6)] = "FILE_PERMISSION_DENIED"),
						(t[(t.FILE_TOO_LARGE = 7)] = "FILE_TOO_LARGE"),
						(t[(t.FILE_INVALID_PATH = 8)] = "FILE_INVALID_PATH"),
						(t[(t.FILE_NOT_DIRECTORY = 9)] = "FILE_NOT_DIRECTORY"),
						(t[(t.FILE_OTHER_ERROR = 10)] = "FILE_OTHER_ERROR");
				})($b || ($b = {})),
				(Au = {
					OFF: "off",
					ON_EXIT: "onExit",
					ON_EXIT_AND_WINDOW_CLOSE: "onExitAndWindowClose",
				}),
				(function (t) {
					(t[(t.FILE = 0)] = "FILE"),
						(t[(t.FOLDER = 1)] = "FOLDER"),
						(t[(t.ROOT_FOLDER = 2)] = "ROOT_FOLDER");
				})(Ab || (Ab = {})),
				(Iu = ""),
				(nn = class bi {
					static {
						this.KB = 1024;
					}
					static {
						this.MB = bi.KB * bi.KB;
					}
					static {
						this.GB = bi.MB * bi.KB;
					}
					static {
						this.TB = bi.GB * bi.KB;
					}
					static formatSize(e) {
						return (
							jl(e) || (e = 0),
							e < bi.KB
								? w(1917, null, e.toFixed(0))
								: e < bi.MB
									? w(1918, null, (e / bi.KB).toFixed(2))
									: e < bi.GB
										? w(1919, null, (e / bi.MB).toFixed(2))
										: e < bi.TB
											? w(1920, null, (e / bi.GB).toFixed(2))
											: w(1921, null, (e / bi.TB).toFixed(2))
						);
					}
				});
		},
	}),
	e1,
	Ii,
	Li = m({
		"out-build/vs/platform/state/node/state.js"() {
			"use strict";
			Y(), (e1 = B("stateReadService")), (Ii = B("stateService"));
		},
	});
import Mi from "electron";
var sc,
	Ne,
	Ib,
	Cb,
	Cu,
	ot = m({
		"out-build/vs/platform/lifecycle/electron-main/lifecycleMainService.js"() {
			"use strict";
			is(),
				ae(),
				q(),
				F(),
				z(),
				gs(),
				Ie(),
				Y(),
				Q(),
				Li(),
				bt(),
				(Ne = B("lifecycleMainService")),
				(function (t) {
					(t[(t.QUIT = 1)] = "QUIT"), (t[(t.KILL = 2)] = "KILL");
				})(Ib || (Ib = {})),
				(function (t) {
					(t[(t.Starting = 1)] = "Starting"),
						(t[(t.Ready = 2)] = "Ready"),
						(t[(t.AfterWindowOpen = 3)] = "AfterWindowOpen"),
						(t[(t.Eventually = 4)] = "Eventually");
				})(Cb || (Cb = {})),
				(Cu = class extends j {
					static {
						sc = this;
					}
					static {
						this.b = "lifecycle.quitAndRestart";
					}
					get quitRequested() {
						return this.j;
					}
					get wasRestarted() {
						return this.m;
					}
					get phase() {
						return this.n;
					}
					constructor(e, i, s) {
						super(),
							(this.F = e),
							(this.G = i),
							(this.H = s),
							(this.c = this.D(new $())),
							(this.onBeforeShutdown = this.c.event),
							(this.f = this.D(new $())),
							(this.onWillShutdown = this.f.event),
							(this.g = this.D(new $())),
							(this.onWillLoadWindow = this.g.event),
							(this.h = this.D(new $())),
							(this.onBeforeCloseWindow = this.h.event),
							(this.j = !1),
							(this.m = !1),
							(this.n = 1),
							(this.q = new Set()),
							(this.r = 0),
							(this.s = 0),
							(this.t = void 0),
							(this.u = void 0),
							(this.w = void 0),
							(this.y = new Map()),
							(this.z = new Map()),
							(this.C = void 0),
							this.I(),
							this.when(2).then(() => this.J());
					}
					I() {
						(this.m = !!this.G.getItem(sc.b)),
							this.m && this.G.removeItem(sc.b);
					}
					J() {
						const e = () => {
							this.j ||
								(this.S("Lifecycle#app.on(before-quit)"),
								(this.j = !0),
								this.S("Lifecycle#onBeforeShutdown.fire()"),
								this.c.fire(),
								N && this.s === 0 && this.L(1));
						};
						Mi.app.addListener("before-quit", e);
						const i = () => {
							this.S("Lifecycle#app.on(window-all-closed)"),
								(this.j || !N) && Mi.app.quit();
						};
						Mi.app.addListener("window-all-closed", i),
							Mi.app.once("will-quit", (s) => {
								this.S("Lifecycle#app.on(will-quit) - begin"),
									s.preventDefault(),
									this.L(1).finally(() => {
										this.S(
											"Lifecycle#app.on(will-quit) - after fireOnWillShutdown",
										),
											this.O(!1),
											Mi.app.removeListener("before-quit", e),
											Mi.app.removeListener("window-all-closed", i),
											this.S(
												"Lifecycle#app.on(will-quit) - calling app.quit()",
											),
											Mi.app.quit();
									});
							});
					}
					L(e) {
						if (this.w) return this.w;
						const i = this.F;
						this.S("Lifecycle#onWillShutdown.fire()");
						const s = [];
						return (
							this.f.fire({
								reason: e,
								join(r, n) {
									i.trace(`Lifecycle#onWillShutdown - begin '${r}'`),
										s.push(
											n.finally(() => {
												i.trace(`Lifecycle#onWillShutdown - end '${r}'`);
											}),
										);
								},
							}),
							(this.w = (async () => {
								try {
									await Nt.settled(s);
								} catch (r) {
									this.F.error(r);
								}
								try {
									await this.G.close();
								} catch (r) {
									this.F.error(r);
								}
							})()),
							this.w
						);
					}
					set phase(e) {
						if (e < this.phase)
							throw new Error("Lifecycle cannot go backwards");
						if (this.n === e) return;
						this.S(`lifecycle (main): phase changed (value: ${e})`),
							(this.n = e);
						const i = this.z.get(this.n);
						i && (i.open(), this.z.delete(this.n));
					}
					async when(e) {
						if (e <= this.n) return;
						let i = this.z.get(e);
						i || ((i = new za()), this.z.set(e, i)), await i.wait();
					}
					registerWindow(e) {
						const i = new De();
						this.s++,
							i.add(
								e.onWillLoad((r) =>
									this.g.fire({
										window: e,
										workspace: r.workspace,
										reason: r.reason,
									}),
								),
							);
						const s = Pa(e.win);
						i.add(
							x.fromNodeEventEmitter(
								s,
								"close",
							)((r) => {
								const n = e.id;
								if (this.q.has(n)) {
									this.q.delete(n);
									return;
								}
								this.S(`Lifecycle#window.on('close') - window ID ${e.id}`),
									r.preventDefault(),
									this.unload(e, 1).then((o) => {
										if (o) {
											this.q.delete(n);
											return;
										}
										this.q.add(n),
											this.S(
												`Lifecycle#onBeforeCloseWindow.fire() - window ID ${n}`,
											),
											this.h.fire(e),
											e.close();
									});
							}),
						),
							i.add(
								x.fromNodeEventEmitter(
									s,
									"closed",
								)(() => {
									this.S(`Lifecycle#window.on('closed') - window ID ${e.id}`),
										this.s--,
										i.dispose(),
										this.s === 0 && (!N || this.j) && this.L(1);
								}),
							);
					}
					registerAuxWindow(e) {
						const i = Pa(e.win),
							s = new De();
						s.add(
							x.fromNodeEventEmitter(
								i,
								"close",
							)((r) => {
								this.S(`Lifecycle#auxWindow.on('close') - window ID ${e.id}`),
									this.j &&
										(this.S(
											"Lifecycle#auxWindow.on('close') - preventDefault() because quit requested",
										),
										r.preventDefault());
							}),
						),
							s.add(
								x.fromNodeEventEmitter(
									i,
									"closed",
								)(() => {
									this.S(
										`Lifecycle#auxWindow.on('closed') - window ID ${e.id}`,
									),
										s.dispose();
								}),
							);
					}
					async reload(e, i) {
						(await this.unload(e, 3)) || e.reload(i);
					}
					unload(e, i) {
						const s = this.y.get(e.id);
						if (s) return s;
						const r = this.M(e, i).finally(() => {
							this.y.delete(e.id);
						});
						return this.y.set(e.id, r), r;
					}
					async M(e, i) {
						if (!e.isReady) return !1;
						this.S(`Lifecycle#unload() - window ID ${e.id}`);
						const s = this.j ? 2 : i,
							r = await this.P(e, s);
						return r
							? (this.S(
									`Lifecycle#unload() - veto in renderer (window ID ${e.id})`,
								),
								this.N(r))
							: (await this.Q(e, s), !1);
					}
					N(e) {
						return e ? (this.O(!0), (this.j = !1), !0) : !1;
					}
					O(e) {
						this.u && (this.u(e), (this.u = void 0), (this.t = void 0));
					}
					P(e, i) {
						return new Promise((s) => {
							const r = this.r++,
								n = `vscode:ok${r}`,
								o = `vscode:cancel${r}`;
							et.once(n, () => {
								s(!1);
							}),
								et.once(o, () => {
									s(!0);
								}),
								e.send("vscode:onBeforeUnload", {
									okChannel: n,
									cancelChannel: o,
									reason: i,
								});
						});
					}
					Q(e, i) {
						return new Promise((s) => {
							const n = `vscode:reply${this.r++}`;
							et.once(n, () => s()),
								e.send("vscode:onWillUnload", { replyChannel: n, reason: i });
						});
					}
					quit(e) {
						return this.R(e).then((i) => {
							if (!i && e)
								try {
									if (T) {
										const s = ms();
										s !== process.cwd() && process.chdir(s);
									}
								} catch (s) {
									this.F.error(s);
								}
							return i;
						});
					}
					R(e) {
						return (
							this.S(`Lifecycle#quit() - begin (willRestart: ${e})`),
							this.t
								? (this.S("Lifecycle#quit() - returning pending quit promise"),
									this.t)
								: (e && this.G.setItem(sc.b, !0),
									(this.t = new Promise((i) => {
										(this.u = i),
											this.S("Lifecycle#quit() - calling app.quit()"),
											Mi.app.quit();
									})),
									this.t)
						);
					}
					S(e) {
						this.H.args["enable-smoke-test-driver"]
							? this.F.info(e)
							: this.F.trace(e);
					}
					setRelaunchHandler(e) {
						this.C = e;
					}
					async relaunch(e) {
						this.S("Lifecycle#relaunch()");
						const i = process.argv.slice(1);
						if ((e?.addArgs && i.push(...e.addArgs), e?.removeArgs))
							for (const n of e.removeArgs) {
								const o = i.indexOf(n);
								o >= 0 && i.splice(o, 1);
							}
						const s = () => {
							this.C?.handleRelaunch(e) ||
								(this.S("Lifecycle#relaunch() - calling app.relaunch()"),
								Mi.app.relaunch({ args: i }));
						};
						Mi.app.once("quit", s),
							(await this.quit(!0)) && Mi.app.removeListener("quit", s);
					}
					async kill(e) {
						this.S("Lifecycle#kill()"),
							await this.L(2),
							await Promise.race([
								Ai(1e3),
								(async () => {
									for (const i of Mi.BrowserWindow.getAllWindows())
										if (i && !i.isDestroyed()) {
											let s;
											i.webContents && !i.webContents.isDestroyed()
												? (s = new Promise((r) => i.once("closed", r)))
												: (s = Promise.resolve()),
												i.destroy(),
												await s;
										}
								})(),
							]),
							Mi.app.exit(e);
					}
				}),
				(Cu = sc =
					__decorate([__param(0, G), __param(1, Ii), __param(2, ut)], Cu));
		},
	}),
	Ps,
	mi,
	rc,
	t1,
	_b = m({
		"out-build/vs/base/parts/storage/common/storage.js"() {
			"use strict";
			ae(),
				q(),
				F(),
				su(),
				Ie(),
				(function (t) {
					(t[(t.STORAGE_DOES_NOT_EXIST = 0)] = "STORAGE_DOES_NOT_EXIST"),
						(t[(t.STORAGE_IN_MEMORY = 1)] = "STORAGE_IN_MEMORY");
				})(Ps || (Ps = {})),
				(function (t) {
					(t[(t.None = 0)] = "None"),
						(t[(t.Initialized = 1)] = "Initialized"),
						(t[(t.Closed = 2)] = "Closed");
				})(mi || (mi = {})),
				(rc = class T3 extends j {
					static {
						this.a = 100;
					}
					constructor(e, i = Object.create(null)) {
						super(),
							(this.q = e),
							(this.r = i),
							(this.b = this.D(new Wl())),
							(this.onDidChangeStorage = this.b.event),
							(this.c = mi.None),
							(this.f = new Map()),
							(this.g = this.D(new Js(T3.a))),
							(this.h = new Set()),
							(this.j = new Map()),
							(this.m = void 0),
							(this.n = []),
							this.s();
					}
					s() {
						this.D(this.q.onDidChangeItemsExternal((e) => this.t(e)));
					}
					t(e) {
						this.b.pause();
						try {
							e.changed?.forEach((i, s) => this.u(s, i)),
								e.deleted?.forEach((i) => this.u(i, void 0));
						} finally {
							this.b.resume();
						}
					}
					u(e, i) {
						if (this.c === mi.Closed) return;
						let s = !1;
						Yt(i)
							? (s = this.f.delete(e))
							: this.f.get(e) !== i && (this.f.set(e, i), (s = !0)),
							s && this.b.fire({ key: e, external: !0 });
					}
					get items() {
						return this.f;
					}
					get size() {
						return this.f.size;
					}
					async init() {
						this.c === mi.None &&
							((this.c = mi.Initialized),
							this.r.hint !== Ps.STORAGE_DOES_NOT_EXIST &&
								(this.f = await this.q.getItems()));
					}
					cursorDiskKVGet(e) {
						return this.q.cursorDiskKVGet(e);
					}
					cursorDiskKVSet(e, i) {
						return this.q.cursorDiskKVSet(e, i);
					}
					cursorDiskKVClearPrefix(e) {
						return this.q.cursorDiskKVClearPrefix(e);
					}
					get(e, i) {
						const s = this.f.get(e);
						return Yt(s) ? i : s;
					}
					getBoolean(e, i) {
						const s = this.get(e);
						return Yt(s) ? i : s === "true";
					}
					getNumber(e, i) {
						const s = this.get(e);
						return Yt(s) ? i : parseInt(s, 10);
					}
					getObject(e, i) {
						const s = this.get(e);
						return Yt(s) ? i : Pk(s);
					}
					async set(e, i, s = !1) {
						if (this.c === mi.Closed) return;
						if (Yt(i)) return this.delete(e, s);
						const r = Lt(i) || Array.isArray(i) ? Dk(i) : String(i);
						if (this.f.get(e) !== r)
							return (
								this.f.set(e, r),
								this.j.set(e, r),
								this.h.delete(e),
								this.b.fire({ key: e, external: s }),
								this.C()
							);
					}
					async delete(e, i = !1) {
						if (!(this.c === mi.Closed || !this.f.delete(e)))
							return (
								this.h.has(e) || this.h.add(e),
								this.j.delete(e),
								this.b.fire({ key: e, external: i }),
								this.C()
							);
					}
					async optimize() {
						if (this.c !== mi.Closed)
							return await this.flush(0), this.q.optimize();
					}
					async close() {
						return this.m || (this.m = this.w()), this.m;
					}
					async w() {
						this.c = mi.Closed;
						try {
							await this.C(0);
						} catch {}
						await this.q.close(() => this.f);
					}
					get y() {
						return this.j.size > 0 || this.h.size > 0;
					}
					async z() {
						if (!this.y) return;
						const e = { insert: this.j, delete: this.h };
						return (
							(this.h = new Set()),
							(this.j = new Map()),
							this.q.updateItems(e).finally(() => {
								if (!this.y) for (; this.n.length; ) this.n.pop()?.();
							})
						);
					}
					async flush(e) {
						if (!(this.c === mi.Closed || this.m)) return this.C(e);
					}
					async C(e) {
						return this.r.hint === Ps.STORAGE_IN_MEMORY
							? this.z()
							: this.g.trigger(() => this.z(), e);
					}
					async whenFlushed() {
						if (this.y) return new Promise((e) => this.n.push(e));
					}
					isInMemory() {
						return this.r.hint === Ps.STORAGE_IN_MEMORY;
					}
				}),
				(t1 = class {
					constructor() {
						(this.onDidChangeItemsExternal = x.None), (this.a = new Map());
					}
					async getItems() {
						return this.a;
					}
					async cursorDiskKVGet(t) {}
					async cursorDiskKVSet(t, e) {}
					async cursorDiskKVClearPrefix(t) {}
					async updateItems(t) {
						t.insert?.forEach((e, i) => this.a.set(i, e)),
							t.delete?.forEach((e) => this.a.delete(e));
					}
					async optimize() {}
					async close() {}
				});
		},
	});
function Ci(t) {
	const e = t;
	return typeof e?.id == "string" && P.isUri(e.uri);
}
function _u(t, e) {
	if (typeof t == "string" || typeof t > "u")
		return typeof t == "string" ? { id: Te(t) } : e ? Ob : Lb;
	const i = t;
	return i.configuration
		? { id: i.id, configPath: i.configuration }
		: i.folders.length === 1
			? { id: i.id, uri: i.folders[0].uri }
			: { id: i.id };
}
function Vt(t) {
	const e = t;
	return typeof e?.id == "string" && P.isUri(e.configPath);
}
function mx(t) {
	const e = t;
	if (e?.uri) return { id: e.id, uri: P.revive(e.uri) };
	const i = t;
	if (i?.configPath) return { id: i.id, configPath: P.revive(i.configPath) };
	if (t?.id) return { id: t.id };
}
function Rb(t, e) {
	return Ze.isEqualOrParent(t, e.untitledWorkspacesHome);
}
function on(t) {
	return (typeof t == "string" ? ql(t) : kv(t)) === Nb;
}
var gx,
	Ob,
	Lb,
	Mb,
	Fb,
	nc,
	Nb,
	Wb,
	i1,
	ti = m({
		"out-build/vs/platform/workspace/common/workspace.js"() {
			"use strict";
			ve(),
				ge(),
				ho(),
				rt(),
				ie(),
				Y(),
				Ce(),
				(gx = B("contextService")),
				(Ob = { id: "ext-dev" }),
				(Lb = { id: "empty-window" }),
				(function (t) {
					(t[(t.EMPTY = 1)] = "EMPTY"),
						(t[(t.FOLDER = 2)] = "FOLDER"),
						(t[(t.WORKSPACE = 3)] = "WORKSPACE");
				})(Mb || (Mb = {})),
				(Fb = class {
					constructor(t, e) {
						(this.raw = e),
							(this.uri = t.uri),
							(this.index = t.index),
							(this.name = t.name);
					}
					toResource(t) {
						return he(this.uri, t);
					}
					toJSON() {
						return { uri: this.uri, name: this.name, index: this.index };
					}
				}),
				(nc = "code-workspace"),
				(Nb = `.${nc}`),
				(Wb = [{ name: w(2534, null), extensions: [nc] }]),
				(i1 = "workspace.json");
		},
	}),
	gi,
	$s = m({
		"out-build/vs/platform/uriIdentity/common/uriIdentity.js"() {
			"use strict";
			Y(), (gi = B("IUriIdentityService"));
		},
	});
function wx(t) {
	const e = t;
	return !!(
		e &&
		typeof e == "object" &&
		typeof e.id == "string" &&
		typeof e.isDefault == "boolean" &&
		typeof e.name == "string" &&
		P.isUri(e.location) &&
		P.isUri(e.globalStorageHome) &&
		P.isUri(e.settingsResource) &&
		P.isUri(e.keybindingsResource) &&
		P.isUri(e.tasksResource) &&
		P.isUri(e.snippetsHome) &&
		P.isUri(e.extensionsResource)
	);
}
function Ru(t, e, i, s, r, n) {
	return {
		id: t,
		name: e,
		location: i,
		isDefault: !1,
		icon: r?.icon,
		globalStorageHome:
			n && r?.useDefaultFlags?.globalState
				? n.globalStorageHome
				: he(i, "globalStorage"),
		settingsResource:
			n && r?.useDefaultFlags?.settings
				? n.settingsResource
				: he(i, "settings.json"),
		keybindingsResource:
			n && r?.useDefaultFlags?.keybindings
				? n.keybindingsResource
				: he(i, "keybindings.json"),
		tasksResource:
			n && r?.useDefaultFlags?.tasks ? n.tasksResource : he(i, "tasks.json"),
		snippetsHome:
			n && r?.useDefaultFlags?.snippets ? n.snippetsHome : he(i, "snippets"),
		extensionsResource:
			n && r?.useDefaultFlags?.extensions
				? n.extensionsResource
				: he(i, "extensions.json"),
		cacheHome: he(s, t),
		useDefaultFlags: r?.useDefaultFlags,
		isTransient: r?.transient,
		workspaces: r?.workspaces,
	};
}
var jb,
	As,
	Ou,
	Is = m({
		"out-build/vs/platform/userDataProfile/common/userDataProfile.js"() {
			"use strict";
			Qs(),
				q(),
				F(),
				rt(),
				ie(),
				ve(),
				Gi(),
				Be(),
				Y(),
				Q(),
				ti(),
				$s(),
				ae(),
				Oi(),
				Ft(),
				Ie(),
				(function (t) {
					(t.Settings = "settings"),
						(t.Keybindings = "keybindings"),
						(t.Snippets = "snippets"),
						(t.Tasks = "tasks"),
						(t.Extensions = "extensions"),
						(t.GlobalState = "globalState");
				})(jb || (jb = {})),
				(As = B("IUserDataProfilesService")),
				(Ou = class extends j {
					static {
						this.b = "userDataProfiles";
					}
					static {
						this.c = "profileAssociations";
					}
					get defaultProfile() {
						return this.profiles[0];
					}
					get profiles() {
						return [...this.z.profiles, ...this.q.profiles];
					}
					constructor(e, i, s, r) {
						super(),
							(this.r = e),
							(this.s = i),
							(this.t = s),
							(this.u = r),
							(this.g = this.D(new $())),
							(this.onDidChangeProfiles = this.g.event),
							(this.h = this.D(new $())),
							(this.onWillCreateProfile = this.h.event),
							(this.j = this.D(new $())),
							(this.onWillRemoveProfile = this.j.event),
							(this.m = this.D(new $())),
							(this.onDidResetWorkspaces = this.m.event),
							(this.n = new Map()),
							(this.q = { profiles: [], emptyWindows: new Map() }),
							(this.profilesHome = he(this.r.userRoamingDataHome, "profiles")),
							(this.f = he(this.r.cacheHome, "CachedProfilesData"));
					}
					init() {
						this.y = void 0;
					}
					get z() {
						if (!this.y) {
							const e = this.C(),
								i = [e];
							try {
								for (const r of this.N()) {
									if (!r.name || !mt(r.name) || !r.location) {
										this.u.warn(
											"Skipping the invalid stored profile",
											r.location || r.name,
										);
										continue;
									}
									i.push(
										Ru(
											ys(r.location),
											r.name,
											r.location,
											this.f,
											{ icon: r.icon, useDefaultFlags: r.useDefaultFlags },
											e,
										),
									);
								}
							} catch (r) {
								this.u.error(r);
							}
							const s = new Map();
							if (i.length)
								try {
									const r = this.P();
									if (r.workspaces)
										for (const [n, o] of Object.entries(r.workspaces)) {
											const a = P.parse(n),
												c = i.find((l) => l.id === o);
											if (c) {
												const l = c.workspaces ? c.workspaces.slice(0) : [];
												l.push(a), (c.workspaces = l);
											}
										}
									if (r.emptyWindows)
										for (const [n, o] of Object.entries(r.emptyWindows)) {
											const a = i.find((c) => c.id === o);
											a && s.set(n, a);
										}
								} catch (r) {
									this.u.error(r);
								}
							this.y = { profiles: i, emptyWindows: s };
						}
						return this.y;
					}
					C() {
						const e = Ru(
							"__default__profile__",
							w(2487, null),
							this.r.userRoamingDataHome,
							this.f,
						);
						return {
							...e,
							extensionsResource: this.R() ?? e.extensionsResource,
							isDefault: !0,
						};
					}
					async createTransientProfile(e) {
						const i = "Temp",
							s = new RegExp(`${Na(i)}\\s(\\d+)`);
						let r = 0;
						for (const o of this.profiles) {
							const a = s.exec(o.name),
								c = a ? parseInt(a[1]) : 0;
							r = c > r ? c : r;
						}
						const n = `${i} ${r + 1}`;
						return this.createProfile(
							Ss(fi()).toString(16),
							n,
							{ transient: !0 },
							e,
						);
					}
					async createNamedProfile(e, i, s) {
						return this.createProfile(Ss(fi()).toString(16), e, i, s);
					}
					async createProfile(e, i, s, r) {
						return await this.F(e, i, s, r);
					}
					async F(e, i, s, r) {
						if (!mt(i) || !i)
							throw new Error(
								"Name of the profile is mandatory and must be of type `string`",
							);
						let n = this.n.get(i);
						return (
							n ||
								((n = (async () => {
									try {
										if (
											this.profiles.find(
												(u) =>
													u.id === e ||
													(!u.isTransient && !s?.transient && u.name === i),
											)
										)
											throw new Error(`Profile with ${i} name already exists`);
										const a = r ? this.G(r) : void 0;
										P.isUri(a) && (s = { ...s, workspaces: [a] });
										const c = Ru(
											e,
											i,
											he(this.profilesHome, e),
											this.f,
											s,
											this.defaultProfile,
										);
										await this.s.createFolder(c.location);
										const l = [];
										return (
											this.h.fire({
												profile: c,
												join(u) {
													l.push(u);
												},
											}),
											await Nt.settled(l),
											a && !P.isUri(a) && this.L(a, c, !!c.isTransient),
											this.I([c], [], []),
											c
										);
									} finally {
										this.n.delete(i);
									}
								})()),
								this.n.set(i, n)),
							n
						);
					}
					async updateProfile(e, i) {
						const s = [];
						for (const n of this.profiles) {
							let o;
							if (e.id === n.id)
								n.isDefault
									? i.workspaces && ((o = n), (o.workspaces = i.workspaces))
									: (o = Ru(
											n.id,
											i.name ?? n.name,
											n.location,
											this.f,
											{
												icon: i.icon === null ? void 0 : (i.icon ?? n.icon),
												transient: i.transient ?? n.isTransient,
												useDefaultFlags: i.useDefaultFlags ?? n.useDefaultFlags,
												workspaces: i.workspaces ?? n.workspaces,
											},
											this.defaultProfile,
										));
							else if (i.workspaces) {
								const a = n.workspaces?.filter(
									(c) =>
										!i.workspaces?.some((l) => this.t.extUri.isEqual(c, l)),
								);
								n.workspaces?.length !== a?.length &&
									((o = n), (o.workspaces = a));
							}
							o && s.push(o);
						}
						if (!s.length)
							throw e.isDefault
								? new Error("Cannot update default profile")
								: new Error(`Profile '${e.name}' does not exist`);
						this.I([], [], s);
						const r = this.profiles.find((n) => n.id === e.id);
						if (!r) throw new Error(`Profile '${e.name}' was not updated`);
						return r;
					}
					async removeProfile(e) {
						if (e.isDefault) throw new Error("Cannot remove default profile");
						const i = this.profiles.find((r) => r.id === e.id);
						if (!i) throw new Error(`Profile '${e.name}' does not exist`);
						const s = [];
						this.j.fire({
							profile: i,
							join(r) {
								s.push(r);
							},
						});
						try {
							await Promise.allSettled(s);
						} catch (r) {
							this.u.error(r);
						}
						this.I([], [i], []);
						try {
							await this.s.del(i.cacheHome, { recursive: !0 });
						} catch (r) {
							Ds(r) !== 1 && this.u.error(r);
						}
					}
					async setProfileForWorkspace(e, i) {
						const s = this.profiles.find((n) => n.id === i.id);
						if (!s) throw new Error(`Profile '${i.name}' does not exist`);
						const r = this.G(e);
						if (P.isUri(r)) {
							const n = s.workspaces ? [...s.workspaces] : [];
							n.some((o) => this.t.extUri.isEqual(o, r)) ||
								(n.push(r), await this.updateProfile(s, { workspaces: n }));
						} else this.L(r, s, !1), this.M(this.profiles);
					}
					unsetWorkspace(e, i = !1) {
						const s = this.G(e);
						if (P.isUri(s)) {
							const r = this.getProfileForWorkspace(e);
							r &&
								this.updateProfile(r, {
									workspaces: r.workspaces?.filter(
										(n) => !this.t.extUri.isEqual(n, s),
									),
								});
						} else this.L(s, void 0, i), this.M(this.profiles);
					}
					async resetWorkspaces() {
						this.q.emptyWindows.clear(), this.z.emptyWindows.clear();
						for (const e of this.profiles) e.workspaces = void 0;
						this.I([], [], this.profiles), this.m.fire();
					}
					async cleanUp() {
						if (await this.s.exists(this.profilesHome)) {
							const e = await this.s.resolve(this.profilesHome);
							await Promise.all(
								(e.children || [])
									.filter(
										(i) =>
											i.isDirectory &&
											this.profiles.every(
												(s) => !this.t.extUri.isEqual(s.location, i.resource),
											),
									)
									.map((i) => this.s.del(i.resource, { recursive: !0 })),
							);
						}
					}
					async cleanUpTransientProfiles() {
						const e = this.q.profiles.filter((i) => !this.H(i));
						await Promise.allSettled(e.map((i) => this.removeProfile(i)));
					}
					getProfileForWorkspace(e) {
						const i = this.G(e);
						return P.isUri(i)
							? this.profiles.find((s) =>
									s.workspaces?.some((r) => this.t.extUri.isEqual(r, i)),
								)
							: (this.z.emptyWindows.get(i) ?? this.q.emptyWindows.get(i));
					}
					G(e) {
						return Ci(e) ? e.uri : Vt(e) ? e.configPath : e.id;
					}
					H(e) {
						return !!(
							e.workspaces?.length ||
							[...this.z.emptyWindows.values()].some((i) =>
								this.t.extUri.isEqual(i.location, e.location),
							) ||
							[...this.q.emptyWindows.values()].some((i) =>
								this.t.extUri.isEqual(i.location, e.location),
							)
						);
					}
					I(e, i, s) {
						const r = [...this.profiles, ...e],
							n = this.q.profiles;
						this.q.profiles = [];
						const o = [];
						for (let a of r) {
							if (i.some((c) => a.id === c.id)) {
								for (const c of [...this.z.emptyWindows.keys()])
									a.id === this.z.emptyWindows.get(c)?.id &&
										this.z.emptyWindows.delete(c);
								continue;
							}
							if (!a.isDefault) {
								a = s.find((l) => a.id === l.id) ?? a;
								const c = n.find((l) => a.id === l.id);
								if (a.isTransient) this.q.profiles.push(a);
								else if (c) {
									for (const [l, u] of this.q.emptyWindows.entries())
										if (a.id === u.id) {
											this.q.emptyWindows.delete(l),
												this.z.emptyWindows.set(l, a);
											break;
										}
								}
							}
							a.workspaces?.length === 0 && (a.workspaces = void 0), o.push(a);
						}
						this.M(o), this.J(e, i, s);
					}
					J(e, i, s) {
						this.g.fire({
							added: e,
							removed: i,
							updated: s,
							all: this.profiles,
						});
					}
					L(e, i, s) {
						(s = i?.isTransient ? !0 : s),
							s
								? i
									? this.q.emptyWindows.set(e, i)
									: this.q.emptyWindows.delete(e)
								: (this.q.emptyWindows.delete(e),
									i
										? this.z.emptyWindows.set(e, i)
										: this.z.emptyWindows.delete(e));
					}
					M(e) {
						const i = [],
							s = {},
							r = {};
						for (const n of e)
							if (
								!n.isTransient &&
								(n.isDefault ||
									i.push({
										location: n.location,
										name: n.name,
										icon: n.icon,
										useDefaultFlags: n.useDefaultFlags,
									}),
								n.workspaces)
							)
								for (const o of n.workspaces) s[o.toString()] = n.id;
						for (const [n, o] of this.z.emptyWindows.entries())
							r[n.toString()] = o.id;
						this.Q({ workspaces: s, emptyWindows: r }),
							this.O(i),
							(this.y = void 0);
					}
					N() {
						return [];
					}
					O(e) {
						throw new Error("not implemented");
					}
					P() {
						return {};
					}
					Q(e) {
						throw new Error("not implemented");
					}
					R() {}
				}),
				(Ou = __decorate(
					[__param(0, ks), __param(1, nt), __param(2, gi), __param(3, G)],
					Ou,
				));
		},
	});
function s1(t) {
	const e = t.get(tr);
	if (e)
		try {
			return JSON.parse(e);
		} catch {}
	return Object.create(null);
}
function r1(t) {
	return t.isDefault || !!t.useDefaultFlags?.globalState;
}
async function vx(t, e, i, s, r, n) {
	const o = (g) => {
			try {
				return JSON.parse(g);
			} catch {
				return g;
			}
		},
		a = new Map(),
		c = new Map();
	t.forEach((g, b) => {
		a.set(b, g), c.set(b, o(g));
	});
	const l = new Map(),
		u = new Map();
	e.forEach((g, b) => {
		l.set(b, g), u.set(b, o(g));
	});
	const d = new Map(),
		f = new Map();
	i.forEach((g, b) => {
		d.set(b, g), f.set(b, o(g));
	}),
		console.group(
			s !== r
				? `Storage: Application (path: ${s})`
				: `Storage: Application & Profile (path: ${s}, default profile)`,
		);
	const p = [];
	if (
		(a.forEach((g, b) => {
			p.push({ key: b, value: g });
		}),
		console.table(p),
		console.groupEnd(),
		console.log(c),
		s !== r)
	) {
		console.group(`Storage: Profile (path: ${r}, profile specific)`);
		const g = [];
		l.forEach((b, y) => {
			g.push({ key: y, value: b });
		}),
			console.table(g),
			console.groupEnd(),
			console.log(u);
	}
	console.group(`Storage: Workspace (path: ${n})`);
	const v = [];
	d.forEach((g, b) => {
		v.push({ key: b, value: g });
	}),
		console.table(v),
		console.groupEnd(),
		console.log(f);
}
var oc,
	tr,
	yx,
	mo,
	Tb,
	Ub,
	qb,
	n1 = m({
		"out-build/vs/platform/storage/common/storage.js"() {
			"use strict";
			ae(),
				q(),
				F(),
				qs(),
				Ie(),
				_b(),
				Y(),
				Is(),
				(oc = "__$__isNewStorageMarker"),
				(tr = "__$__targetStorageMarker"),
				(yx = B("storageService")),
				(function (t) {
					(t[(t.NONE = 0)] = "NONE"), (t[(t.SHUTDOWN = 1)] = "SHUTDOWN");
				})(mo || (mo = {})),
				(function (t) {
					(t[(t.APPLICATION = -1)] = "APPLICATION"),
						(t[(t.PROFILE = 0)] = "PROFILE"),
						(t[(t.WORKSPACE = 1)] = "WORKSPACE");
				})(Tb || (Tb = {})),
				(function (t) {
					(t[(t.USER = 0)] = "USER"), (t[(t.MACHINE = 1)] = "MACHINE");
				})(Ub || (Ub = {})),
				(qb = class U3 extends j {
					static {
						this.a = 60 * 1e3;
					}
					constructor(e = { flushInterval: U3.a }) {
						super(),
							(this.n = e),
							(this.b = this.D(new Wl())),
							(this.f = this.D(new Wl())),
							(this.onDidChangeTarget = this.f.event),
							(this.g = this.D(new $())),
							(this.onWillSaveState = this.g.event),
							(this.j = this.D(new bs(() => this.q(), this.n.flushInterval))),
							(this.m = this.D(new zr())),
							(this.C = void 0),
							(this.G = void 0),
							(this.I = void 0),
							(this.N = []);
					}
					onDidChangeValue(e, i, s) {
						return x.filter(
							this.b.event,
							(r) => r.scope === e && (i === void 0 || r.key === i),
							s,
						);
					}
					q() {
						this.m.value = bp(() => {
							this.r() && this.flush(), this.j.schedule();
						});
					}
					r() {
						return !0;
					}
					t() {
						vt([this.m, this.j]);
					}
					initialize() {
						return (
							this.h ||
								(this.h = (async () => {
									Fe("code/willInitStorage");
									try {
										await this.Q();
									} finally {
										Fe("code/didInitStorage");
									}
									this.j.schedule();
								})()),
							this.h
						);
					}
					u(e, i) {
						const { key: s, external: r } = i;
						if (s === tr) {
							switch (e) {
								case -1:
									this.I = void 0;
									break;
								case 0:
									this.G = void 0;
									break;
								case 1:
									this.C = void 0;
									break;
							}
							this.f.fire({ scope: e });
						} else
							this.b.fire({
								scope: e,
								key: s,
								target: this.L(e)[s],
								external: r,
							});
					}
					w(e) {
						this.g.fire({ reason: e });
					}
					get(e, i, s) {
						return this.R(i)?.get(e, s);
					}
					getBoolean(e, i, s) {
						return this.R(i)?.getBoolean(e, s);
					}
					getNumber(e, i, s) {
						return this.R(i)?.getNumber(e, s);
					}
					getObject(e, i, s) {
						return this.R(i)?.getObject(e, s);
					}
					storeAll(e, i) {
						this.y(() => {
							for (const s of e)
								this.store(s.key, s.value, s.scope, s.target, i);
						});
					}
					store(e, i, s, r, n = !1) {
						if (Yt(i)) {
							this.remove(e, s, n);
							return;
						}
						this.y(() => {
							this.z(e, s, r), this.R(s)?.set(e, i, n);
						});
					}
					remove(e, i, s = !1) {
						this.y(() => {
							this.z(e, i, void 0), this.R(i)?.delete(e, s);
						});
					}
					y(e) {
						this.b.pause(), this.f.pause();
						try {
							e();
						} finally {
							this.b.resume(), this.f.resume();
						}
					}
					keys(e, i) {
						const s = [],
							r = this.L(e);
						for (const n of Object.keys(r)) r[n] === i && s.push(n);
						return s;
					}
					z(e, i, s, r = !1) {
						const n = this.L(i);
						typeof s == "number"
							? n[e] !== s &&
								((n[e] = s), this.R(i)?.set(tr, JSON.stringify(n), r))
							: typeof n[e] == "number" &&
								(delete n[e], this.R(i)?.set(tr, JSON.stringify(n), r));
					}
					get F() {
						return this.C || (this.C = this.M(1)), this.C;
					}
					get H() {
						return this.G || (this.G = this.M(0)), this.G;
					}
					get J() {
						return this.I || (this.I = this.M(-1)), this.I;
					}
					L(e) {
						switch (e) {
							case -1:
								return this.J;
							case 0:
								return this.H;
							default:
								return this.F;
						}
					}
					M(e) {
						const i = this.R(e);
						return i ? s1(i) : Object.create(null);
					}
					isNew(e) {
						return this.getBoolean(oc, e) === !0;
					}
					async cursorDiskKVGet(e) {
						return this.R(-1)?.cursorDiskKVGet(e);
					}
					async cursorDiskKVSet(e, i) {
						return this.R(-1)?.cursorDiskKVSet(e, i);
					}
					async cursorDiskKVClearPrefix(e) {
						return this.R(-1)?.cursorDiskKVClearPrefix(e);
					}
					cursorDiskKVOnShouldSave(e) {
						return (
							this.N.push(e),
							{
								dispose: () => {
									this.N = this.N.filter((i) => i !== e);
								},
							}
						);
					}
					async flush(e = mo.NONE) {
						this.g.fire({ reason: e });
						const i = this.R(-1),
							s = this.R(0),
							r = this.R(1);
						switch (e) {
							case mo.NONE:
								for (const n of this.N)
									try {
										n().catch(console.error);
									} catch {}
								await Nt.settled([
									i?.whenFlushed() ?? Promise.resolve(),
									s?.whenFlushed() ?? Promise.resolve(),
									r?.whenFlushed() ?? Promise.resolve(),
								]);
								break;
							case mo.SHUTDOWN:
								for (const n of this.N)
									try {
										await n();
									} catch (o) {
										console.error(o);
									}
								await Nt.settled([
									i?.flush(0) ?? Promise.resolve(),
									s?.flush(0) ?? Promise.resolve(),
									r?.flush(0) ?? Promise.resolve(),
								]);
								break;
						}
					}
					async log() {
						const e = this.R(-1)?.items ?? new Map(),
							i = this.R(0)?.items ?? new Map(),
							s = this.R(1)?.items ?? new Map();
						return vx(
							e,
							i,
							s,
							this.S(-1) ?? "",
							this.S(0) ?? "",
							this.S(1) ?? "",
						);
					}
					async optimize(e) {
						return await this.flush(), this.R(e)?.optimize();
					}
					async switch(e, i) {
						return this.w(mo.NONE), wx(e) ? this.U(e, i) : this.W(e, i);
					}
					O(e, i) {
						return !(e.id === i.id || (r1(i) && r1(e)));
					}
					P(e, i, s) {
						this.y(() => {
							const r = new Set();
							for (const [n, o] of e)
								r.add(n), i.get(n) !== o && this.u(s, { key: n, external: !0 });
							for (const [n] of i.items)
								r.has(n) || this.u(s, { key: n, external: !0 });
						});
					}
				});
		},
	}),
	bx,
	Bb,
	Lu,
	Ex,
	zb,
	Sx,
	Hb,
	Vb,
	Gb,
	Jb,
	Xb = m({
		"out-build/vs/base/common/constants.js"() {
			"use strict";
			(bx = Date.now()),
				(Bb = !1),
				(Lu =
					"src.vs.platform.reactivestorage.browser.reactiveStorageServiceImpl.persistentStorage"),
				(Ex = `${Lu}.applicationUser`),
				(zb = `${Lu}.workspaceUser`),
				(Sx = `${Lu}.applicationUser.subscription`),
				(Hb = "workbench.panel.aichat.view"),
				(Vb = Hb + ".aichat.chatdata"),
				(Gb = "composer.composerData"),
				(Jb = "workbench.bugbot.data");
		},
	});
import * as Kb from "fs";
var ac,
	Yb,
	kx = m({
		"out-build/vs/base/parts/storage/node/storage.js"() {
			"use strict";
			ae(),
				q(),
				xi(),
				ge(),
				yt(),
				Xb(),
				(ac = class Wn {
					static {
						this.IN_MEMORY_PATH = ":memory:";
					}
					get onDidChangeItemsExternal() {
						return x.None;
					}
					static {
						this.a = 2e3;
					}
					static {
						this.b = 256;
					}
					constructor(e, i = Object.create(null)) {
						(this.g = e),
							(this.h = i),
							(this.c = Te(this.g)),
							(this.d = new Yb(this.h.logging)),
							(this.f = this.n(this.g));
					}
					async cursorDiskKVGet(e) {
						const i = await this.f;
						try {
							const s = await this.s(
								i,
								"SELECT value FROM cursorDiskKV WHERE key = ?",
								[e],
							);
							if (!s) return;
							const r = s.value;
							return r == null || typeof r != "string" ? void 0 : r;
						} catch (s) {
							this.d.error(`[storage ${this.c}] cursorDiskKVGet(${e}): ${s}`);
							return;
						}
					}
					async cursorDiskKVSet(e, i) {
						const s = await this.f;
						try {
							await this.y(
								s,
								"INSERT INTO cursorDiskKV (key, value) VALUES (?, ?)",
								[e, i],
							);
						} catch (r) {
							throw (
								(this.d.error(
									`[storage ${this.c}] cursorDiskKVSet(${e}): ${r}`,
								),
								r)
							);
						}
					}
					async cursorDiskKVClearPrefix(e) {
						const i = await this.f;
						try {
							await this.y(
								i,
								"DELETE FROM cursorDiskKV WHERE key LIKE ? || '%'",
								[e],
							);
						} catch (s) {
							throw (
								(this.d.error(
									`[storage ${this.c}] cursorDiskKVClearPrefix(${e}): ${s}`,
								),
								s)
							);
						}
					}
					async getItems() {
						const e = await this.f,
							i = new Map();
						return (
							await Promise.allSettled([
								this.t(e, zb, {
									timeout: 1e4,
									maxSizeBytes: 100 * 1024 * 1024,
								}),
								this.t(e, Vb, {
									timeout: 1e4,
									maxSizeBytes: 100 * 1024 * 1024,
								}),
								this.t(e, Gb, {
									timeout: 1e4,
									maxSizeBytes: 100 * 1024 * 1024,
								}),
								this.t(e, Jb, { timeout: 1e4, maxSizeBytes: 50 * 1024 * 1024 }),
							]),
							(await this.v(e, "SELECT * FROM ItemTable")).forEach((r) =>
								i.set(r.key, r.value),
							),
							this.d.isTracing &&
								this.d.trace(`[storage ${this.c}] getItems(): ${i.size} rows`),
							i
						);
					}
					async updateItems(e) {
						const i = await this.f;
						return this.j(i, e);
					}
					j(e, i) {
						return (
							this.d.isTracing &&
								this.d.trace(
									`[storage ${this.c}] updateItems(): insert(${i.insert ? FE(i.insert) : "0"}), delete(${i.delete ? NE(i.delete) : "0"})`,
								),
							this.w(e, () => {
								const s = i.insert,
									r = i.delete;
								if (s && s.size > 0) {
									const n = [];
									n.push([]);
									let o = 0;
									s.forEach((a, c) => {
										let l = n[o];
										l.length > Wn.b && (o++, (l = []), n.push(l)), l.push(c, a);
									}),
										n.forEach((a) => {
											this.x(
												e,
												`INSERT INTO ItemTable VALUES ${new Array(a.length / 2).fill("(?,?)").join(",")}`,
												(c) => c.run(a),
												() => {
													const c = [];
													let l = 0;
													return (
														s.forEach((u, d) => {
															c.push(d), (l += u.length);
														}),
														`Keys: ${c.join(", ")} Length: ${l}`
													);
												},
											);
										});
								}
								if (r && r.size) {
									const n = [];
									n.push([]);
									let o = 0;
									r.forEach((a) => {
										let c = n[o];
										c.length > Wn.b && (o++, (c = []), n.push(c)), c.push(a);
									}),
										n.forEach((a) => {
											this.x(
												e,
												`DELETE FROM ItemTable WHERE key IN (${new Array(a.length).fill("?").join(",")})`,
												(c) => c.run(a),
												() => {
													const c = [];
													return (
														r.forEach((l) => {
															c.push(l);
														}),
														`Keys: ${c.join(", ")}`
													);
												},
											);
										});
								}
							})
						);
					}
					async optimize() {
						this.d.trace(`[storage ${this.c}] vacuum()`);
						const e = await this.f;
						return this.q(e, "VACUUM");
					}
					async close(e) {
						this.d.trace(`[storage ${this.c}] close()`);
						const i = await this.f;
						return this.k(i, e);
					}
					k(e, i) {
						return new Promise((s, r) => {
							e.db.close(
								(n) => (
									n && this.o(e, `[storage ${this.c}] close(): ${n}`),
									this.g === Wn.IN_MEMORY_PATH
										? s()
										: !e.isErroneous && !e.isInMemory
											? this.l().then(
													s,
													(o) => (
														this.d.error(`[storage ${this.c}] backup(): ${o}`),
														s()
													),
												)
											: typeof i == "function"
												? Kb.promises
														.unlink(this.g)
														.then(() =>
															this.p(this.g).then((o) => {
																const a = () => this.k(o, void 0);
																return this.j(o, { insert: i() }).then(
																	() => a(),
																	(c) => (a(), Promise.reject(c)),
																);
															}),
														)
														.then(s, r)
												: r(
														n ||
															new Error(
																"Database has errors or is in-memory without recovery option",
															),
													)
								),
							);
						});
					}
					l() {
						const e = this.m(this.g);
						return ee.copy(this.g, e, { preserveSymlinks: !1 });
					}
					m(e) {
						return `${e}.backup`;
					}
					async checkIntegrity(e) {
						this.d.trace(`[storage ${this.c}] checkIntegrity(full: ${e})`);
						const i = await this.f,
							s = await this.r(
								i,
								e ? "PRAGMA integrity_check" : "PRAGMA quick_check",
							),
							r = e ? s.integrity_check : s.quick_check;
						return i.isErroneous
							? `${r} (last error: ${i.lastError})`
							: i.isInMemory
								? `${r} (in-memory!)`
								: r;
					}
					async n(e, i = !0) {
						this.d.trace(`[storage ${this.c}] open(${e}, retryOnBusy: ${i})`);
						try {
							return await this.p(e);
						} catch (s) {
							if (
								(this.d.error(
									`[storage ${this.c}] open(): Unable to open DB due to ${s}`,
								),
								s.code === "SQLITE_BUSY" && i)
							)
								return await Ai(Wn.a), this.n(e, !1);
							try {
								await Kb.promises.unlink(e);
								try {
									await ee.rename(this.m(e), e, !1);
								} catch {}
								return await this.p(e);
							} catch (r) {
								return (
									this.d.error(
										`[storage ${this.c}] open(): Unable to use backup due to ${r}`,
									),
									this.p(Wn.IN_MEMORY_PATH)
								);
							}
						}
					}
					o(e, i) {
						(e.isErroneous = !0), (e.lastError = i), this.d.error(i);
					}
					p(e) {
						return new Promise((i, s) => {
							import("@vscode/sqlite3").then((r) => {
								const n = this.d.isTracing
										? r.default.verbose().Database
										: r.default.Database,
									o = {
										db: new n(e, (a) =>
											a
												? o.db && a.code !== "SQLITE_CANTOPEN"
													? o.db.close(() => s(a))
													: s(a)
												: this.q(
														o,
														[
															"PRAGMA user_version = 1;",
															"CREATE TABLE IF NOT EXISTS ItemTable (key TEXT UNIQUE ON CONFLICT REPLACE, value BLOB);",
															"CREATE TABLE IF NOT EXISTS cursorDiskKV (key TEXT UNIQUE ON CONFLICT REPLACE, value BLOB);",
														].join(""),
													).then(
														() => i(o),
														(c) => o.db.close(() => s(c)),
													),
										),
										isInMemory: e === Wn.IN_MEMORY_PATH,
									};
								o.db.on("error", (a) =>
									this.o(o, `[storage ${this.c}] Error (event): ${a}`),
								),
									this.d.isTracing &&
										o.db.on("trace", (a) =>
											this.d.trace(`[storage ${this.c}] Trace (event): ${a}`),
										);
							}, s);
						});
					}
					q(e, i) {
						return new Promise((s, r) => {
							e.db.exec(i, (n) =>
								n ? (this.o(e, `[storage ${this.c}] exec(): ${n}`), r(n)) : s(),
							);
						});
					}
					r(e, i) {
						return new Promise((s, r) => {
							e.db.get(i, (n, o) =>
								n ? (this.o(e, `[storage ${this.c}] get(): ${n}`), r(n)) : s(o),
							);
						});
					}
					s(e, i, s) {
						return new Promise((r, n) => {
							e.db.get(i, s, (o, a) =>
								o
									? (this.o(e, `[storage ${this.c}] getParams(): ${o}`), n(o))
									: r(a),
							);
						});
					}
					async t(e, i, s) {
						(await Promise.race([
							this.u(e, i, s.maxSizeBytes),
							new Promise((n, o) => setTimeout(() => n(!1), s.timeout)),
						])) === !1 && (await this.updateItems({ delete: new Set([i]) }));
					}
					async u(e, i, s) {
						try {
							const r = await new Promise((n, o) => {
								e.db.all(
									`SELECT LENGTH(value) as size FROM ItemTable WHERE key = '${i}'`,
									(a, c) =>
										a
											? (this.o(e, `[storage ${this.c}] getSize(${i}): ${a}`),
												o(a))
											: c.length === 0
												? n(0)
												: c.length !== 1
													? o(
															new Error(
																`Unexpected number of rows - ${c.length}`,
															),
														)
													: n(c[0].size),
								);
							});
							this.d.trace(
								`[storage ${this.c}] ${i} is ${r} bytes and can be at most ${s} bytes`,
							),
								r > s &&
									(this.d.error(
										`[storage ${this.c}] ${i} is too large (${r} > ${s}), clearing`,
									),
									await this.updateItems({ delete: new Set([i]) }));
						} catch (r) {
							this.d.error(
								`[storage ${this.c}] error checking size of ${i}: ${r}`,
							);
						}
					}
					v(e, i) {
						return new Promise((s, r) => {
							e.db.all(i, (n, o) =>
								n ? (this.o(e, `[storage ${this.c}] all(): ${n}`), r(n)) : s(o),
							);
						});
					}
					w(e, i) {
						return new Promise((s, r) => {
							e.db.serialize(() => {
								e.db.run("BEGIN TRANSACTION"),
									i(),
									e.db.run("END TRANSACTION", (n) =>
										n
											? (this.o(e, `[storage ${this.c}] transaction(): ${n}`),
												r(n))
											: s(),
									);
							});
						});
					}
					x(e, i, s, r) {
						const n = e.db.prepare(i),
							o = (a) => {
								this.o(
									e,
									`[storage ${this.c}] prepare(): ${a} (${i}). Details: ${r()}`,
								);
							};
						n.on("error", o),
							s(n),
							n.finalize((a) => {
								a && o(a), n.removeListener("error", o);
							});
					}
					y(e, i, s) {
						return new Promise((r, n) => {
							e.db.run(i, s, (o) =>
								o
									? (this.o(e, `[storage ${this.c}] runParams(): ${o}`), n(o))
									: r(),
							);
						});
					}
				}),
				(Yb = class q3 {
					static {
						this.a = "VSCODE_TRACE_STORAGE";
					}
					constructor(e) {
						e &&
							typeof e.logTrace == "function" &&
							process.env[q3.a] &&
							(this.b = e.logTrace),
							e && typeof e.logError == "function" && (this.c = e.logError);
					}
					get isTracing() {
						return !!this.b;
					}
					trace(e) {
						this.b?.(e);
					}
					error(e) {
						this.c?.(e);
					}
				});
		},
	}),
	It,
	xx,
	o1,
	a1,
	Qb,
	c1,
	l1,
	u1,
	Mu,
	Zb,
	Fu,
	h1,
	d1,
	e4,
	t4,
	St = m({
		"out-build/vs/platform/telemetry/common/telemetry.js"() {
			"use strict";
			Y(),
				(It = B("telemetryService")),
				(xx = B("customEndpointTelemetryService")),
				(o1 = "telemetry.currentSessionDate"),
				(a1 = "telemetry.firstSessionDate"),
				(Qb = "telemetry.lastSessionDate"),
				(c1 = "telemetry.machineId"),
				(l1 = "telemetry.macMachineId"),
				(u1 = "telemetry.sqmId"),
				(Mu = "telemetry.devDeviceId"),
				(Zb = "crashReporting"),
				(Fu = "crashReporting.enabled"),
				(h1 = "telemetry.enableCrashReporter"),
				(d1 = "telemetry.enableTelemetry"),
				(function (t) {
					(t[(t.NONE = 0)] = "NONE"),
						(t[(t.CRASH = 1)] = "CRASH"),
						(t[(t.ERROR = 2)] = "ERROR"),
						(t[(t.USAGE = 3)] = "USAGE");
				})(e4 || (e4 = {})),
				(function (t) {
					(t.OFF = "off"), (t.ON = "all");
				})(t4 || (t4 = {}));
		},
	});
function Dx(t, e) {
	switch (t) {
		case 3:
			return e === "x64"
				? "win32-x64"
				: e === "arm64"
					? "win32-arm64"
					: "unknown";
		case 2:
			return e === "x64"
				? "linux-x64"
				: e === "arm64"
					? "linux-arm64"
					: e === "arm"
						? "linux-armhf"
						: "unknown";
		case "alpine":
			return e === "x64"
				? "alpine-x64"
				: e === "arm64"
					? "alpine-arm64"
					: "unknown";
		case 1:
			return e === "x64"
				? "darwin-x64"
				: e === "arm64"
					? "darwin-arm64"
					: "unknown";
		case 0:
			return "web";
	}
}
function Px(t) {
	return (
		t &&
		typeof t == "object" &&
		typeof t.id == "string" &&
		(!t.uuid || typeof t.uuid == "string")
	);
}
var i4,
	$x,
	s4,
	r4,
	n4,
	o4,
	a4,
	Ax,
	c4,
	l4,
	f1,
	Ix,
	u4,
	Cx,
	_x,
	Rx,
	Ox,
	Lx,
	Nu = m({
		"out-build/vs/platform/extensionManagement/common/extensionManagement.js"() {
			"use strict";
			ve(),
				Y(),
				(i4 = "^([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$"),
				($x = new RegExp(i4)),
				(function (t) {
					(t.COMMAND = "command"), (t.SETTINGS_SYNC = "settingsSync");
				})(s4 || (s4 = {})),
				(function (t) {
					(t[(t.NoneOrRelevance = 0)] = "NoneOrRelevance"),
						(t[(t.LastUpdatedDate = 1)] = "LastUpdatedDate"),
						(t[(t.Title = 2)] = "Title"),
						(t[(t.PublisherName = 3)] = "PublisherName"),
						(t[(t.InstallCount = 4)] = "InstallCount"),
						(t[(t.PublishedDate = 10)] = "PublishedDate"),
						(t[(t.AverageRating = 6)] = "AverageRating"),
						(t[(t.WeightedRating = 12)] = "WeightedRating");
				})(r4 || (r4 = {})),
				(function (t) {
					(t[(t.Default = 0)] = "Default"),
						(t[(t.Ascending = 1)] = "Ascending"),
						(t[(t.Descending = 2)] = "Descending");
				})(n4 || (n4 = {})),
				(function (t) {
					(t.Install = "install"), (t.Uninstall = "uninstall");
				})(o4 || (o4 = {})),
				(function (t) {
					(t[(t.None = 1)] = "None"),
						(t[(t.Install = 2)] = "Install"),
						(t[(t.Update = 3)] = "Update"),
						(t[(t.Migrate = 4)] = "Migrate");
				})(a4 || (a4 = {})),
				(Ax = B("extensionGalleryService")),
				(function (t) {
					(t.Timeout = "Timeout"),
						(t.Cancelled = "Cancelled"),
						(t.Failed = "Failed"),
						(t.DownloadFailedWriting = "DownloadFailedWriting"),
						(t.Offline = "Offline");
				})(c4 || (c4 = {})),
				(function (t) {
					(t.Unsupported = "Unsupported"),
						(t.Deprecated = "Deprecated"),
						(t.Malicious = "Malicious"),
						(t.Incompatible = "Incompatible"),
						(t.IncompatibleApi = "IncompatibleApi"),
						(t.IncompatibleTargetPlatform = "IncompatibleTargetPlatform"),
						(t.ReleaseVersionNotFound = "ReleaseVersionNotFound"),
						(t.Invalid = "Invalid"),
						(t.Download = "Download"),
						(t.DownloadSignature = "DownloadSignature"),
						(t.DownloadFailedWriting = "DownloadFailedWriting"),
						(t.UpdateMetadata = "UpdateMetadata"),
						(t.Extract = "Extract"),
						(t.Scanning = "Scanning"),
						(t.ScanningExtension = "ScanningExtension"),
						(t.ReadUninstalled = "ReadUninstalled"),
						(t.UnsetUninstalled = "UnsetUninstalled"),
						(t.Delete = "Delete"),
						(t.Rename = "Rename"),
						(t.IntializeDefaultProfile = "IntializeDefaultProfile"),
						(t.AddToProfile = "AddToProfile"),
						(t.InstalledExtensionNotFound = "InstalledExtensionNotFound"),
						(t.PostInstall = "PostInstall"),
						(t.CorruptZip = "CorruptZip"),
						(t.IncompleteZip = "IncompleteZip"),
						(t.PackageNotSigned = "PackageNotSigned"),
						(t.SignatureVerificationInternal = "SignatureVerificationInternal"),
						(t.SignatureVerificationFailed = "SignatureVerificationFailed"),
						(t.NotAllowed = "NotAllowed"),
						(t.Gallery = "Gallery"),
						(t.Cancelled = "Cancelled"),
						(t.Unknown = "Unknown"),
						(t.Internal = "Internal");
				})(l4 || (l4 = {})),
				(function (t) {
					(t.NotSigned = "NotSigned"),
						(t.Success = "Success"),
						(t.RequiredArgumentMissing = "RequiredArgumentMissing"),
						(t.InvalidArgument = "InvalidArgument"),
						(t.PackageIsUnreadable = "PackageIsUnreadable"),
						(t.UnhandledException = "UnhandledException"),
						(t.SignatureManifestIsMissing = "SignatureManifestIsMissing"),
						(t.SignatureManifestIsUnreadable = "SignatureManifestIsUnreadable"),
						(t.SignatureIsMissing = "SignatureIsMissing"),
						(t.SignatureIsUnreadable = "SignatureIsUnreadable"),
						(t.CertificateIsUnreadable = "CertificateIsUnreadable"),
						(t.SignatureArchiveIsUnreadable = "SignatureArchiveIsUnreadable"),
						(t.FileAlreadyExists = "FileAlreadyExists"),
						(t.SignatureArchiveIsInvalidZip = "SignatureArchiveIsInvalidZip"),
						(t.SignatureArchiveHasSameSignatureFile =
							"SignatureArchiveHasSameSignatureFile"),
						(t.PackageIntegrityCheckFailed = "PackageIntegrityCheckFailed"),
						(t.SignatureIsInvalid = "SignatureIsInvalid"),
						(t.SignatureManifestIsInvalid = "SignatureManifestIsInvalid"),
						(t.SignatureIntegrityCheckFailed = "SignatureIntegrityCheckFailed"),
						(t.EntryIsMissing = "EntryIsMissing"),
						(t.EntryIsTampered = "EntryIsTampered"),
						(t.Untrusted = "Untrusted"),
						(t.CertificateRevoked = "CertificateRevoked"),
						(t.SignatureIsNotValid = "SignatureIsNotValid"),
						(t.UnknownError = "UnknownError"),
						(t.PackageIsInvalidZip = "PackageIsInvalidZip"),
						(t.SignatureArchiveHasTooManyEntries =
							"SignatureArchiveHasTooManyEntries");
				})(f1 || (f1 = {})),
				(Ix = B("extensionManagementService")),
				(u4 = "extensionsIdentifiers/disabled"),
				(Cx = B("IGlobalExtensionEnablementService")),
				(_x = B("IExtensionTipsService")),
				(Rx = B("IAllowedExtensionsService")),
				(Ox = M0(1826, "Extensions")),
				(Lx = M0(1827, "Preferences"));
		},
	});
import * as Mx from "fs";
var Wu,
	p1,
	h4,
	d4,
	f4,
	m1,
	Fx = m({
		"out-build/vs/platform/storage/electron-main/storageMain.js"() {
			"use strict";
			Ut(),
				ae(),
				q(),
				F(),
				ge(),
				Gn(),
				ie(),
				yt(),
				_b(),
				kx(),
				Q(),
				n1(),
				St(),
				ti(),
				Nu(),
				Ce(),
				(Wu = class B3 extends j {
					static {
						this.a = 2e3;
					}
					get storage() {
						return this.f;
					}
					constructor(e, i) {
						super(),
							(this.m = e),
							(this.n = i),
							(this.b = this.D(new $())),
							(this.onDidChangeStorage = this.b.event),
							(this.c = this.D(new $())),
							(this.onDidCloseStorage = this.c.event),
							(this.f = this.D(
								new rc(new t1(), { hint: Ps.STORAGE_IN_MEMORY }),
							)),
							(this.g = void 0),
							(this.h = new Xs()),
							(this.whenInit = this.h.p),
							(this.j = mi.None);
					}
					cursorDiskKVGet(e) {
						return this.f.cursorDiskKVGet(e);
					}
					cursorDiskKVSet(e, i) {
						return this.f.cursorDiskKVSet(e, i);
					}
					cursorDiskKVClearPrefix(e) {
						return this.f.cursorDiskKVClearPrefix(e);
					}
					isInMemory() {
						return this.f.isInMemory();
					}
					init() {
						return (
							this.g ||
								(this.g = (async () => {
									if (this.j === mi.None)
										try {
											const e = this.D(await this.t());
											this.f.dispose(),
												(this.f = e),
												this.D(e.onDidChangeStorage((s) => this.b.fire(s))),
												await this.s(e);
											const i = e.getBoolean(oc);
											i === void 0 ? e.set(oc, !0) : i && e.set(oc, !1),
												this.q(e);
										} catch (e) {
											this.m.error(
												`[storage main] initialize(): Unable to init storage due to ${e}`,
											);
										} finally {
											(this.j = mi.Initialized), this.h.complete();
										}
								})()),
							this.g
						);
					}
					q(e) {
						const i = this.vscodePath;
						if (!i) return;
						const s = [u4];
						try {
							import("@vscode/sqlite3").then((r) => {
								let n;
								try {
									let o = !1;
									if (
										((n = new r.Database(i, (a) => {
											o = !a;
										})),
										!o)
									)
										return;
									for (const a of s)
										n.get(
											"SELECT value FROM ItemTable WHERE key = ?",
											[a],
											(c, l) => {
												try {
													if (!c) {
														const u = l.value;
														e.set(`vscode/${a}`, u);
													}
												} catch {}
											},
										);
								} catch {
								} finally {
									try {
										n && n.close();
									} catch {}
								}
							});
						} catch {}
					}
					r() {
						return {
							logTrace:
								this.m.getLevel() === J.Trace ? (e) => this.m.trace(e) : void 0,
							logError: (e) => this.m.error(e),
						};
					}
					s(e) {
						return e.init();
					}
					get items() {
						return this.f.items;
					}
					get(e, i) {
						return this.f.get(e, i);
					}
					set(e, i) {
						return this.f.set(e, i);
					}
					delete(e) {
						return this.f.delete(e);
					}
					optimize() {
						return this.f.optimize();
					}
					async close() {
						const e = new Hr(!1);
						await this.w(),
							e.stop(),
							e.elapsed() > B3.a && (await this.u(e)),
							this.c.fire();
					}
					async u(e) {
						if (this.path)
							try {
								const i = AE(
										Array.from(this.f.items.entries()).map(([r, n]) => ({
											key: r,
											length: n.length,
										})),
										(r, n) => n.length - r.length,
										5,
									)
										.map((r) => `${r.key}:${r.length}`)
										.join(", "),
									s = (await this.n.stat(P.file(this.path))).size;
								this.m.warn(
									`[storage main] detected slow close() operation: Time: ${e.elapsed()}ms, DB size: ${s}b, Large Keys: ${i}`,
								);
							} catch (i) {
								this.m.error(
									"[storage main] figuring out stats for slow DB on close() resulted in an error",
									i,
								);
							}
					}
					async w() {
						this.g && (await this.g),
							(this.j = mi.Closed),
							await this.f.close();
					}
				}),
				(p1 = class d0 extends Wu {
					static {
						this.y = "state.vscdb";
					}
					get path() {
						if (!this.C.useInMemoryStorage)
							return M(
								this.z.globalStorageHome.with({ scheme: R.file }).fsPath,
								d0.y,
							);
					}
					get vscodePath() {
						try {
							if (!this.C.useInMemoryStorage)
								return M(
									Ke(Ke(Ke(this.z.globalStorageHome.fsPath))),
									"Code",
									"User",
									"globalStorage",
									d0.y,
								);
						} catch {}
					}
					constructor(e, i, s, r) {
						super(s, r), (this.z = e), (this.C = i);
					}
					async t() {
						return new rc(
							new ac(this.path ?? ac.IN_MEMORY_PATH, { logging: this.r() }),
							this.path ? void 0 : { hint: Ps.STORAGE_IN_MEMORY },
						);
					}
				}),
				(h4 = class extends p1 {
					constructor(t, e, i, s) {
						super(t, e, i, s);
					}
				}),
				(d4 = class extends p1 {
					constructor(t, e, i, s) {
						super(e.defaultProfile, t, i, s);
					}
					async s(t) {
						await super.s(t), this.H(t);
					}
					H(t) {
						t.get(a1, void 0) === void 0 && t.set(a1, new Date().toUTCString());
						const i = t.get(o1, void 0),
							s = new Date().toUTCString();
						t.set(Qb, typeof i > "u" ? null : i), t.set(o1, s);
					}
				}),
				(f4 = class pf extends Wu {
					static {
						this.y = "state.vscdb";
					}
					static {
						this.z = "workspace.json";
					}
					get path() {
						if (!this.F.useInMemoryStorage)
							return M(
								this.G.workspaceStorageHome.with({ scheme: R.file }).fsPath,
								this.C.id,
								pf.y,
							);
					}
					get vscodePath() {}
					constructor(e, i, s, r, n) {
						super(s, n), (this.C = e), (this.F = i), (this.G = r);
					}
					async t() {
						const { storageFilePath: e, wasCreated: i } = await this.I();
						return new rc(new ac(e, { logging: this.r() }), {
							hint: this.F.useInMemoryStorage
								? Ps.STORAGE_IN_MEMORY
								: i
									? Ps.STORAGE_DOES_NOT_EXIST
									: void 0,
						});
					}
					async I() {
						if (this.F.useInMemoryStorage)
							return { storageFilePath: ac.IN_MEMORY_PATH, wasCreated: !0 };
						const e = M(
								this.G.workspaceStorageHome.with({ scheme: R.file }).fsPath,
								this.C.id,
							),
							i = M(e, pf.y);
						return (await ee.exists(e))
							? { storageFilePath: i, wasCreated: !1 }
							: (await Mx.promises.mkdir(e, { recursive: !0 }),
								this.J(e),
								{ storageFilePath: i, wasCreated: !0 });
					}
					async J(e) {
						let i;
						if (
							(Ci(this.C)
								? (i = { folder: this.C.uri.toString() })
								: Vt(this.C) &&
									(i = { workspace: this.C.configPath.toString() }),
							i)
						)
							try {
								const s = M(e, pf.z);
								(await ee.exists(s)) ||
									(await ee.writeFile(s, JSON.stringify(i, void 0, 2)));
							} catch (s) {
								this.m.error(
									`[storage main] ensureWorkspaceStorageFolderMeta(): Unable to create workspace storage metadata due to ${s}`,
								);
							}
					}
				}),
				(m1 = class extends Wu {
					get path() {}
					get vscodePath() {}
					async t() {
						return new rc(new t1(), { hint: Ps.STORAGE_IN_MEMORY });
					}
				});
		},
	}),
	p4,
	m4,
	ju,
	g1,
	g4 = m({
		"out-build/vs/platform/state/node/stateService.js"() {
			"use strict";
			ae(),
				Je(),
				F(),
				Ie(),
				Gi(),
				Be(),
				Q(),
				(function (t) {
					(t[(t.IMMEDIATE = 0)] = "IMMEDIATE"),
						(t[(t.DELAYED = 1)] = "DELAYED");
				})(p4 || (p4 = {})),
				(m4 = class extends j {
					constructor(t, e, i, s) {
						super(),
							(this.h = t),
							(this.j = e),
							(this.m = i),
							(this.n = s),
							(this.a = Object.create(null)),
							(this.b = ""),
							(this.c = this.D(new Js(this.j === 0 ? 0 : 100))),
							(this.f = void 0),
							(this.g = void 0);
					}
					init() {
						return this.f || (this.f = this.q()), this.f;
					}
					async q() {
						try {
							(this.b = (await this.n.readFile(this.h)).value.toString()),
								(this.a = JSON.parse(this.b));
						} catch (t) {
							t.fileOperationResult !== 1 && this.m.error(t);
						}
					}
					getItem(t, e) {
						const i = this.a[t];
						return Yt(i) ? e : i;
					}
					setItem(t, e) {
						this.setItems([{ key: t, data: e }]);
					}
					setItems(t) {
						let e = !1;
						for (const { key: i, data: s } of t)
							this.a[i] !== s &&
								(Yt(s)
									? zs(this.a[i]) || ((this.a[i] = void 0), (e = !0))
									: ((this.a[i] = s), (e = !0)));
						e && this.r();
					}
					removeItem(t) {
						zs(this.a[t]) || ((this.a[t] = void 0), this.r());
					}
					async r() {
						if (!this.g) return this.c.trigger(() => this.s());
					}
					async s() {
						if (!this.f) return;
						await this.f;
						const t = JSON.stringify(this.a, null, 4);
						if (t !== this.b)
							try {
								await this.n.writeFile(this.h, H.fromString(t), {
									atomic: { postfix: ".vsctmp" },
								}),
									(this.b = t);
							} catch (e) {
								this.m.error(e);
							}
					}
					async close() {
						return (
							this.g || (this.g = this.c.trigger(() => this.s(), 0)), this.g
						);
					}
				}),
				(ju = class extends j {
					constructor(e, i, s, r) {
						super(), (this.a = this.D(new m4(i.stateResource, e, s, r)));
					}
					async init() {
						await this.a.init();
					}
					getItem(e, i) {
						return this.a.getItem(e, i);
					}
				}),
				(ju = __decorate([__param(1, ks), __param(2, G), __param(3, nt)], ju)),
				(g1 = class extends ju {
					setItem(t, e) {
						this.a.setItem(t, e);
					}
					setItems(t) {
						this.a.setItems(t);
					}
					removeItem(t) {
						this.a.removeItem(t);
					}
					close() {
						return this.a.close();
					}
				});
		},
	}),
	Tu,
	go,
	Uu,
	cc,
	w1,
	Nx = m({
		"out-build/vs/platform/userDataProfile/node/userDataProfile.js"() {
			"use strict";
			ie(),
				Gi(),
				Be(),
				Q(),
				Li(),
				$s(),
				Is(),
				Ie(),
				g4(),
				(Uu = Tu =
					class extends Ou {
						constructor(e, i, s, r, n) {
							super(s, r, i, n), (this.a = e), (this.S = s);
						}
						N() {
							return this.a
								.getItem(Tu.b, [])
								.map((i) => ({
									...i,
									location: mt(i.location)
										? this.t.extUri.joinPath(this.profilesHome, i.location)
										: P.revive(i.location),
								}));
						}
						P() {
							return this.a.getItem(Tu.c, {});
						}
						R() {
							return this.t.extUri.joinPath(
								P.file(this.S.extensionsPath).with({
									scheme: this.profilesHome.scheme,
								}),
								"extensions.json",
							);
						}
					}),
				(Uu = Tu =
					__decorate(
						[
							__param(0, e1),
							__param(1, gi),
							__param(2, Zs),
							__param(3, nt),
							__param(4, G),
						],
						Uu,
					)),
				(cc = go =
					class extends Uu {
						constructor(e, i, s, r, n) {
							super(e, i, s, r, n), (this.Y = e);
						}
						O(e) {
							e.length
								? this.Y.setItem(
										go.b,
										e.map((i) => ({
											...i,
											location: this.t.extUri.basename(i.location),
										})),
									)
								: this.Y.removeItem(go.b);
						}
						Q(e) {
							e.emptyWindows || e.workspaces
								? this.Y.setItem(go.c, e)
								: this.Y.removeItem(go.c);
						}
					}),
				(cc = go =
					__decorate(
						[
							__param(0, Ii),
							__param(1, gi),
							__param(2, Zs),
							__param(3, nt),
							__param(4, G),
						],
						cc,
					)),
				(w1 = class extends cc {
					constructor(e, i, s, r) {
						super(new g1(0, i, r, s), e, i, s, r);
					}
					async init() {
						return await this.Y.init(), super.init();
					}
				}),
				(w1 = __decorate(
					[__param(0, gi), __param(1, Zs), __param(2, nt), __param(3, G)],
					w1,
				));
		},
	}),
	Cs,
	qu,
	an = m({
		"out-build/vs/platform/userDataProfile/electron-main/userDataProfile.js"() {
			"use strict";
			Gi(),
				Be(),
				Y(),
				Q(),
				$s(),
				Is(),
				Nx(),
				Li(),
				(Cs = As),
				(qu = class extends cc {
					constructor(e, i, s, r, n) {
						super(e, i, s, r, n);
					}
					getAssociatedEmptyWindows() {
						const e = [];
						for (const i of this.z.emptyWindows.keys()) e.push({ id: i });
						return e;
					}
				}),
				(qu = __decorate(
					[
						__param(0, Ii),
						__param(1, gi),
						__param(2, Zs),
						__param(3, nt),
						__param(4, G),
					],
					qu,
				));
		},
	}),
	wo,
	Bu,
	lc,
	zu,
	Hu = m({
		"out-build/vs/platform/storage/electron-main/storageMainService.js"() {
			"use strict";
			ie(),
				q(),
				F(),
				Gi(),
				Be(),
				Y(),
				ot(),
				Q(),
				n1(),
				Fx(),
				Is(),
				an(),
				$s(),
				Ce(),
				(wo = B("storageMainService")),
				(Bu = class extends j {
					constructor(e, i, s, r, n, o) {
						super(),
							(this.c = e),
							(this.f = i),
							(this.g = s),
							(this.h = r),
							(this.j = n),
							(this.m = o),
							(this.a = void 0),
							(this.b = this.D(new $())),
							(this.onDidChangeProfileStorage = this.b.event),
							(this.applicationStorage = this.D(this.r())),
							(this.s = new Map()),
							(this.u = new Map()),
							this.q();
					}
					n() {
						return { useInMemoryStorage: !!this.f.extensionTestsLocationURI };
					}
					q() {
						(async () => (
							await this.h.when(3), this.applicationStorage.init()
						))(),
							this.D(
								this.h.onWillLoadWindow((e) => {
									e.window.profile &&
										this.profileStorage(e.window.profile).init(),
										e.workspace && this.workspaceStorage(e.workspace).init();
								}),
							),
							this.D(
								this.h.onWillShutdown((e) => {
									this.c.trace("storageMainService#onWillShutdown()"),
										(this.a = e.reason),
										e.join(
											"applicationStorage",
											this.applicationStorage.close(),
										);
									for (const [, i] of this.s)
										e.join("profileStorage", i.close());
									for (const [, i] of this.u)
										e.join("workspaceStorage", i.close());
								}),
							),
							this.D(
								this.g.onWillCreateProfile((e) => {
									e.join(
										(async () => {
											(await this.j.exists(e.profile.globalStorageHome)) ||
												(await this.j.createFolder(
													e.profile.globalStorageHome,
												));
										})(),
									);
								}),
							),
							this.D(
								this.g.onWillRemoveProfile((e) => {
									const i = this.s.get(e.profile.id);
									i && e.join(i.close());
								}),
							);
					}
					r() {
						this.c.trace("StorageMainService: creating application storage");
						const e = new d4(this.n(), this.g, this.c, this.j);
						return (
							this.D(
								x.once(e.onDidCloseStorage)(() => {
									this.c.trace(
										"StorageMainService: closed application storage",
									);
								}),
							),
							e
						);
					}
					profileStorage(e) {
						if (r1(e)) return this.applicationStorage;
						let i = this.s.get(e.id);
						if (!i) {
							this.c.trace(
								`StorageMainService: creating profile storage (${e.name})`,
							),
								(i = this.D(this.t(e))),
								this.s.set(e.id, i);
							const s = this.D(
								i.onDidChangeStorage((r) =>
									this.b.fire({ ...r, storage: i, profile: e }),
								),
							);
							this.D(
								x.once(i.onDidCloseStorage)(() => {
									this.c.trace(
										`StorageMainService: closed profile storage (${e.name})`,
									),
										this.s.delete(e.id),
										s.dispose();
								}),
							);
						}
						return i;
					}
					t(e) {
						return this.a === 2
							? new m1(this.c, this.j)
							: new h4(e, this.n(), this.c, this.j);
					}
					workspaceStorage(e) {
						let i = this.u.get(e.id);
						return (
							i ||
								(this.c.trace(
									`StorageMainService: creating workspace storage (${e.id})`,
								),
								(i = this.D(this.w(e))),
								this.u.set(e.id, i),
								this.D(
									x.once(i.onDidCloseStorage)(() => {
										this.c.trace(
											`StorageMainService: closed workspace storage (${e.id})`,
										),
											this.u.delete(e.id);
									}),
								)),
							i
						);
					}
					w(e) {
						return this.a === 2
							? new m1(this.c, this.j)
							: new f4(e, this.n(), this.c, this.f, this.j);
					}
					isUsed(e) {
						const i = P.file(e);
						for (const s of [
							this.applicationStorage,
							...this.s.values(),
							...this.u.values(),
						])
							if (s.path && this.m.extUri.isEqualOrParent(P.file(s.path), i))
								return !0;
						return !1;
					}
				}),
				(Bu = __decorate(
					[
						__param(0, G),
						__param(1, ks),
						__param(2, Cs),
						__param(3, Ne),
						__param(4, nt),
						__param(5, gi),
					],
					Bu,
				)),
				(lc = B("applicationStorageMainService")),
				(zu = class extends qb {
					constructor(e, i) {
						super(),
							(this.s = e),
							(this.X = i),
							(this.whenReady = this.X.applicationStorage.whenInit);
					}
					Q() {
						return this.X.applicationStorage.whenInit;
					}
					R(e) {
						if (e === -1) return this.X.applicationStorage.storage;
					}
					S(e) {
						if (e === -1)
							return this.s.defaultProfile.globalStorageHome.with({
								scheme: R.file,
							}).fsPath;
					}
					r() {
						return !1;
					}
					switch() {
						throw new Error(
							"Migrating storage is unsupported from main process",
						);
					}
					U() {
						throw new Error(
							"Switching storage profile is unsupported from main process",
						);
					}
					W() {
						throw new Error(
							"Switching storage workspace is unsupported from main process",
						);
					}
					hasScope() {
						throw new Error(
							"Main process is never profile or workspace scoped",
						);
					}
				}),
				(zu = __decorate([__param(0, As), __param(1, wo)], zu));
		},
	});
function Dr(t, e) {
	const i = Math.pow(10, e);
	return Math.round(t * i) / i;
}
var S,
	cn,
	uc,
	Vu,
	Wx = m({
		"out-build/vs/base/common/color.js"() {
			"use strict";
			(S = class {
				constructor(t, e, i, s = 1) {
					(this._rgbaBrand = void 0),
						(this.r = Math.min(255, Math.max(0, t)) | 0),
						(this.g = Math.min(255, Math.max(0, e)) | 0),
						(this.b = Math.min(255, Math.max(0, i)) | 0),
						(this.a = Dr(Math.max(Math.min(1, s), 0), 3));
				}
				static equals(t, e) {
					return t.r === e.r && t.g === e.g && t.b === e.b && t.a === e.a;
				}
			}),
				(cn = class bl {
					constructor(e, i, s, r) {
						(this._hslaBrand = void 0),
							(this.h = Math.max(Math.min(360, e), 0) | 0),
							(this.s = Dr(Math.max(Math.min(1, i), 0), 3)),
							(this.l = Dr(Math.max(Math.min(1, s), 0), 3)),
							(this.a = Dr(Math.max(Math.min(1, r), 0), 3));
					}
					static equals(e, i) {
						return e.h === i.h && e.s === i.s && e.l === i.l && e.a === i.a;
					}
					static fromRGBA(e) {
						const i = e.r / 255,
							s = e.g / 255,
							r = e.b / 255,
							n = e.a,
							o = Math.max(i, s, r),
							a = Math.min(i, s, r);
						let c = 0,
							l = 0;
						const u = (a + o) / 2,
							d = o - a;
						if (d > 0) {
							switch (
								((l = Math.min(u <= 0.5 ? d / (2 * u) : d / (2 - 2 * u), 1)), o)
							) {
								case i:
									c = (s - r) / d + (s < r ? 6 : 0);
									break;
								case s:
									c = (r - i) / d + 2;
									break;
								case r:
									c = (i - s) / d + 4;
									break;
							}
							(c *= 60), (c = Math.round(c));
						}
						return new bl(c, l, u, n);
					}
					static i(e, i, s) {
						return (
							s < 0 && (s += 1),
							s > 1 && (s -= 1),
							s < 1 / 6
								? e + (i - e) * 6 * s
								: s < 1 / 2
									? i
									: s < 2 / 3
										? e + (i - e) * (2 / 3 - s) * 6
										: e
						);
					}
					static toRGBA(e) {
						const i = e.h / 360,
							{ s, l: r, a: n } = e;
						let o, a, c;
						if (s === 0) o = a = c = r;
						else {
							const l = r < 0.5 ? r * (1 + s) : r + s - r * s,
								u = 2 * r - l;
							(o = bl.i(u, l, i + 1 / 3)),
								(a = bl.i(u, l, i)),
								(c = bl.i(u, l, i - 1 / 3));
						}
						return new S(
							Math.round(o * 255),
							Math.round(a * 255),
							Math.round(c * 255),
							n,
						);
					}
				}),
				(uc = class z3 {
					constructor(e, i, s, r) {
						(this._hsvaBrand = void 0),
							(this.h = Math.max(Math.min(360, e), 0) | 0),
							(this.s = Dr(Math.max(Math.min(1, i), 0), 3)),
							(this.v = Dr(Math.max(Math.min(1, s), 0), 3)),
							(this.a = Dr(Math.max(Math.min(1, r), 0), 3));
					}
					static equals(e, i) {
						return e.h === i.h && e.s === i.s && e.v === i.v && e.a === i.a;
					}
					static fromRGBA(e) {
						const i = e.r / 255,
							s = e.g / 255,
							r = e.b / 255,
							n = Math.max(i, s, r),
							o = Math.min(i, s, r),
							a = n - o,
							c = n === 0 ? 0 : a / n;
						let l;
						return (
							a === 0
								? (l = 0)
								: n === i
									? (l = ((((s - r) / a) % 6) + 6) % 6)
									: n === s
										? (l = (r - i) / a + 2)
										: (l = (i - s) / a + 4),
							new z3(Math.round(l * 60), c, n, e.a)
						);
					}
					static toRGBA(e) {
						const { h: i, s, v: r, a: n } = e,
							o = r * s,
							a = o * (1 - Math.abs(((i / 60) % 2) - 1)),
							c = r - o;
						let [l, u, d] = [0, 0, 0];
						return (
							i < 60
								? ((l = o), (u = a))
								: i < 120
									? ((l = a), (u = o))
									: i < 180
										? ((u = o), (d = a))
										: i < 240
											? ((u = a), (d = o))
											: i < 300
												? ((l = a), (d = o))
												: i <= 360 && ((l = o), (d = a)),
							(l = Math.round((l + c) * 255)),
							(u = Math.round((u + c) * 255)),
							(d = Math.round((d + c) * 255)),
							new S(l, u, d, n)
						);
					}
				}),
				(Vu = class je {
					static fromHex(e) {
						return je.Format.CSS.parseHex(e) || je.red;
					}
					static equals(e, i) {
						return !e && !i ? !0 : !e || !i ? !1 : e.equals(i);
					}
					get hsla() {
						return this.i ? this.i : cn.fromRGBA(this.rgba);
					}
					get hsva() {
						return this.j ? this.j : uc.fromRGBA(this.rgba);
					}
					constructor(e) {
						if (e)
							if (e instanceof S) this.rgba = e;
							else if (e instanceof cn)
								(this.i = e), (this.rgba = cn.toRGBA(e));
							else if (e instanceof uc)
								(this.j = e), (this.rgba = uc.toRGBA(e));
							else throw new Error("Invalid color ctor argument");
						else throw new Error("Color needs a value");
					}
					equals(e) {
						return (
							!!e &&
							S.equals(this.rgba, e.rgba) &&
							cn.equals(this.hsla, e.hsla) &&
							uc.equals(this.hsva, e.hsva)
						);
					}
					getRelativeLuminance() {
						const e = je.k(this.rgba.r),
							i = je.k(this.rgba.g),
							s = je.k(this.rgba.b),
							r = 0.2126 * e + 0.7152 * i + 0.0722 * s;
						return Dr(r, 4);
					}
					reduceRelativeLuminace(e, i) {
						let { r: s, g: r, b: n } = e.rgba,
							o = this.getContrastRatio(e);
						for (; o < i && (s > 0 || r > 0 || n > 0); )
							(s -= Math.max(0, Math.ceil(s * 0.1))),
								(r -= Math.max(0, Math.ceil(r * 0.1))),
								(n -= Math.max(0, Math.ceil(n * 0.1))),
								(o = this.getContrastRatio(new je(new S(s, r, n))));
						return new je(new S(s, r, n));
					}
					increaseRelativeLuminace(e, i) {
						let { r: s, g: r, b: n } = e.rgba,
							o = this.getContrastRatio(e);
						for (; o < i && (s < 255 || r < 255 || n < 255); )
							(s = Math.min(255, s + Math.ceil((255 - s) * 0.1))),
								(r = Math.min(255, r + Math.ceil((255 - r) * 0.1))),
								(n = Math.min(255, n + Math.ceil((255 - n) * 0.1))),
								(o = this.getContrastRatio(new je(new S(s, r, n))));
						return new je(new S(s, r, n));
					}
					static k(e) {
						const i = e / 255;
						return i <= 0.03928
							? i / 12.92
							: Math.pow((i + 0.055) / 1.055, 2.4);
					}
					getContrastRatio(e) {
						const i = this.getRelativeLuminance(),
							s = e.getRelativeLuminance();
						return i > s ? (i + 0.05) / (s + 0.05) : (s + 0.05) / (i + 0.05);
					}
					isDarker() {
						return (
							(this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) /
								1e3 <
							128
						);
					}
					isLighter() {
						return (
							(this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) /
								1e3 >=
							128
						);
					}
					isLighterThan(e) {
						const i = this.getRelativeLuminance(),
							s = e.getRelativeLuminance();
						return i > s;
					}
					isDarkerThan(e) {
						const i = this.getRelativeLuminance(),
							s = e.getRelativeLuminance();
						return i < s;
					}
					ensureConstrast(e, i) {
						const s = this.getRelativeLuminance(),
							r = e.getRelativeLuminance();
						if (this.getContrastRatio(e) < i) {
							if (r < s) {
								const c = this.reduceRelativeLuminace(e, i),
									l = this.getContrastRatio(c);
								if (l < i) {
									const u = this.increaseRelativeLuminace(e, i),
										d = this.getContrastRatio(u);
									return l > d ? c : u;
								}
								return c;
							}
							const o = this.increaseRelativeLuminace(e, i),
								a = this.getContrastRatio(o);
							if (a < i) {
								const c = this.reduceRelativeLuminace(e, i),
									l = this.getContrastRatio(c);
								return a > l ? o : c;
							}
							return o;
						}
						return e;
					}
					lighten(e) {
						return new je(
							new cn(
								this.hsla.h,
								this.hsla.s,
								this.hsla.l + this.hsla.l * e,
								this.hsla.a,
							),
						);
					}
					darken(e) {
						return new je(
							new cn(
								this.hsla.h,
								this.hsla.s,
								this.hsla.l - this.hsla.l * e,
								this.hsla.a,
							),
						);
					}
					transparent(e) {
						const { r: i, g: s, b: r, a: n } = this.rgba;
						return new je(new S(i, s, r, n * e));
					}
					isTransparent() {
						return this.rgba.a === 0;
					}
					isOpaque() {
						return this.rgba.a === 1;
					}
					opposite() {
						return new je(
							new S(
								255 - this.rgba.r,
								255 - this.rgba.g,
								255 - this.rgba.b,
								this.rgba.a,
							),
						);
					}
					blend(e) {
						const i = e.rgba,
							s = this.rgba.a,
							r = i.a,
							n = s + r * (1 - s);
						if (n < 1e-6) return je.transparent;
						const o = (this.rgba.r * s) / n + (i.r * r * (1 - s)) / n,
							a = (this.rgba.g * s) / n + (i.g * r * (1 - s)) / n,
							c = (this.rgba.b * s) / n + (i.b * r * (1 - s)) / n;
						return new je(new S(o, a, c, n));
					}
					makeOpaque(e) {
						if (this.isOpaque() || e.rgba.a !== 1) return this;
						const { r: i, g: s, b: r, a: n } = this.rgba;
						return new je(
							new S(
								e.rgba.r - n * (e.rgba.r - i),
								e.rgba.g - n * (e.rgba.g - s),
								e.rgba.b - n * (e.rgba.b - r),
								1,
							),
						);
					}
					flatten(...e) {
						const i = e.reduceRight((s, r) => je.o(r, s));
						return je.o(this, i);
					}
					static o(e, i) {
						const s = 1 - e.rgba.a;
						return new je(
							new S(
								s * i.rgba.r + e.rgba.a * e.rgba.r,
								s * i.rgba.g + e.rgba.a * e.rgba.g,
								s * i.rgba.b + e.rgba.a * e.rgba.b,
							),
						);
					}
					toString() {
						return this.u || (this.u = je.Format.CSS.format(this)), this.u;
					}
					toNumber24Bit() {
						return (
							this.w ||
								(this.w =
									((this.rgba.r << 24) |
										(this.rgba.g << 16) |
										(this.rgba.b << 8) |
										((this.rgba.a * 255) << 0)) >>>
									0),
							this.w
						);
					}
					static getLighterColor(e, i, s) {
						if (e.isLighterThan(i)) return e;
						s = s || 0.5;
						const r = e.getRelativeLuminance(),
							n = i.getRelativeLuminance();
						return (s = (s * (n - r)) / n), e.lighten(s);
					}
					static getDarkerColor(e, i, s) {
						if (e.isDarkerThan(i)) return e;
						s = s || 0.5;
						const r = e.getRelativeLuminance(),
							n = i.getRelativeLuminance();
						return (s = (s * (r - n)) / r), e.darken(s);
					}
					static {
						this.white = new je(new S(255, 255, 255, 1));
					}
					static {
						this.black = new je(new S(0, 0, 0, 1));
					}
					static {
						this.red = new je(new S(255, 0, 0, 1));
					}
					static {
						this.blue = new je(new S(0, 0, 255, 1));
					}
					static {
						this.green = new je(new S(0, 255, 0, 1));
					}
					static {
						this.cyan = new je(new S(0, 255, 255, 1));
					}
					static {
						this.lightgrey = new je(new S(211, 211, 211, 1));
					}
					static {
						this.transparent = new je(new S(0, 0, 0, 0));
					}
				}),
				(function (t) {
					let e;
					(function (i) {
						let s;
						(function (r) {
							function n(y) {
								return y.rgba.a === 1
									? `rgb(${y.rgba.r}, ${y.rgba.g}, ${y.rgba.b})`
									: t.Format.CSS.formatRGBA(y);
							}
							r.formatRGB = n;
							function o(y) {
								return `rgba(${y.rgba.r}, ${y.rgba.g}, ${y.rgba.b}, ${+y.rgba.a.toFixed(2)})`;
							}
							r.formatRGBA = o;
							function a(y) {
								return y.hsla.a === 1
									? `hsl(${y.hsla.h}, ${(y.hsla.s * 100).toFixed(2)}%, ${(y.hsla.l * 100).toFixed(2)}%)`
									: t.Format.CSS.formatHSLA(y);
							}
							r.formatHSL = a;
							function c(y) {
								return `hsla(${y.hsla.h}, ${(y.hsla.s * 100).toFixed(2)}%, ${(y.hsla.l * 100).toFixed(2)}%, ${y.hsla.a.toFixed(2)})`;
							}
							r.formatHSLA = c;
							function l(y) {
								const k = y.toString(16);
								return k.length !== 2 ? "0" + k : k;
							}
							function u(y) {
								return `#${l(y.rgba.r)}${l(y.rgba.g)}${l(y.rgba.b)}`;
							}
							r.formatHex = u;
							function d(y, k = !1) {
								return k && y.rgba.a === 1
									? t.Format.CSS.formatHex(y)
									: `#${l(y.rgba.r)}${l(y.rgba.g)}${l(y.rgba.b)}${l(Math.round(y.rgba.a * 255))}`;
							}
							r.formatHexA = d;
							function f(y) {
								return y.isOpaque()
									? t.Format.CSS.formatHex(y)
									: t.Format.CSS.formatRGBA(y);
							}
							r.format = f;
							function p(y) {
								if (y === "transparent") return t.transparent;
								if (y.startsWith("#")) return g(y);
								if (y.startsWith("rgba(")) {
									const k = y.match(
										/rgba\((?<r>(?:\+|-)?\d+), *(?<g>(?:\+|-)?\d+), *(?<b>(?:\+|-)?\d+), *(?<a>(?:\+|-)?\d+(\.\d+)?)\)/,
									);
									if (!k) throw new Error("Invalid color format " + y);
									const I = parseInt(k.groups?.r ?? "0"),
										C = parseInt(k.groups?.g ?? "0"),
										_ = parseInt(k.groups?.b ?? "0"),
										K = parseFloat(k.groups?.a ?? "0");
									return new t(new S(I, C, _, K));
								}
								if (y.startsWith("rgb(")) {
									const k = y.match(
										/rgb\((?<r>(?:\+|-)?\d+), *(?<g>(?:\+|-)?\d+), *(?<b>(?:\+|-)?\d+)\)/,
									);
									if (!k) throw new Error("Invalid color format " + y);
									const I = parseInt(k.groups?.r ?? "0"),
										C = parseInt(k.groups?.g ?? "0"),
										_ = parseInt(k.groups?.b ?? "0");
									return new t(new S(I, C, _));
								}
								return v(y);
							}
							r.parse = p;
							function v(y) {
								switch (y) {
									case "aliceblue":
										return new t(new S(240, 248, 255, 1));
									case "antiquewhite":
										return new t(new S(250, 235, 215, 1));
									case "aqua":
										return new t(new S(0, 255, 255, 1));
									case "aquamarine":
										return new t(new S(127, 255, 212, 1));
									case "azure":
										return new t(new S(240, 255, 255, 1));
									case "beige":
										return new t(new S(245, 245, 220, 1));
									case "bisque":
										return new t(new S(255, 228, 196, 1));
									case "black":
										return new t(new S(0, 0, 0, 1));
									case "blanchedalmond":
										return new t(new S(255, 235, 205, 1));
									case "blue":
										return new t(new S(0, 0, 255, 1));
									case "blueviolet":
										return new t(new S(138, 43, 226, 1));
									case "brown":
										return new t(new S(165, 42, 42, 1));
									case "burlywood":
										return new t(new S(222, 184, 135, 1));
									case "cadetblue":
										return new t(new S(95, 158, 160, 1));
									case "chartreuse":
										return new t(new S(127, 255, 0, 1));
									case "chocolate":
										return new t(new S(210, 105, 30, 1));
									case "coral":
										return new t(new S(255, 127, 80, 1));
									case "cornflowerblue":
										return new t(new S(100, 149, 237, 1));
									case "cornsilk":
										return new t(new S(255, 248, 220, 1));
									case "crimson":
										return new t(new S(220, 20, 60, 1));
									case "cyan":
										return new t(new S(0, 255, 255, 1));
									case "darkblue":
										return new t(new S(0, 0, 139, 1));
									case "darkcyan":
										return new t(new S(0, 139, 139, 1));
									case "darkgoldenrod":
										return new t(new S(184, 134, 11, 1));
									case "darkgray":
										return new t(new S(169, 169, 169, 1));
									case "darkgreen":
										return new t(new S(0, 100, 0, 1));
									case "darkgrey":
										return new t(new S(169, 169, 169, 1));
									case "darkkhaki":
										return new t(new S(189, 183, 107, 1));
									case "darkmagenta":
										return new t(new S(139, 0, 139, 1));
									case "darkolivegreen":
										return new t(new S(85, 107, 47, 1));
									case "darkorange":
										return new t(new S(255, 140, 0, 1));
									case "darkorchid":
										return new t(new S(153, 50, 204, 1));
									case "darkred":
										return new t(new S(139, 0, 0, 1));
									case "darksalmon":
										return new t(new S(233, 150, 122, 1));
									case "darkseagreen":
										return new t(new S(143, 188, 143, 1));
									case "darkslateblue":
										return new t(new S(72, 61, 139, 1));
									case "darkslategray":
										return new t(new S(47, 79, 79, 1));
									case "darkslategrey":
										return new t(new S(47, 79, 79, 1));
									case "darkturquoise":
										return new t(new S(0, 206, 209, 1));
									case "darkviolet":
										return new t(new S(148, 0, 211, 1));
									case "deeppink":
										return new t(new S(255, 20, 147, 1));
									case "deepskyblue":
										return new t(new S(0, 191, 255, 1));
									case "dimgray":
										return new t(new S(105, 105, 105, 1));
									case "dimgrey":
										return new t(new S(105, 105, 105, 1));
									case "dodgerblue":
										return new t(new S(30, 144, 255, 1));
									case "firebrick":
										return new t(new S(178, 34, 34, 1));
									case "floralwhite":
										return new t(new S(255, 250, 240, 1));
									case "forestgreen":
										return new t(new S(34, 139, 34, 1));
									case "fuchsia":
										return new t(new S(255, 0, 255, 1));
									case "gainsboro":
										return new t(new S(220, 220, 220, 1));
									case "ghostwhite":
										return new t(new S(248, 248, 255, 1));
									case "gold":
										return new t(new S(255, 215, 0, 1));
									case "goldenrod":
										return new t(new S(218, 165, 32, 1));
									case "gray":
										return new t(new S(128, 128, 128, 1));
									case "green":
										return new t(new S(0, 128, 0, 1));
									case "greenyellow":
										return new t(new S(173, 255, 47, 1));
									case "grey":
										return new t(new S(128, 128, 128, 1));
									case "honeydew":
										return new t(new S(240, 255, 240, 1));
									case "hotpink":
										return new t(new S(255, 105, 180, 1));
									case "indianred":
										return new t(new S(205, 92, 92, 1));
									case "indigo":
										return new t(new S(75, 0, 130, 1));
									case "ivory":
										return new t(new S(255, 255, 240, 1));
									case "khaki":
										return new t(new S(240, 230, 140, 1));
									case "lavender":
										return new t(new S(230, 230, 250, 1));
									case "lavenderblush":
										return new t(new S(255, 240, 245, 1));
									case "lawngreen":
										return new t(new S(124, 252, 0, 1));
									case "lemonchiffon":
										return new t(new S(255, 250, 205, 1));
									case "lightblue":
										return new t(new S(173, 216, 230, 1));
									case "lightcoral":
										return new t(new S(240, 128, 128, 1));
									case "lightcyan":
										return new t(new S(224, 255, 255, 1));
									case "lightgoldenrodyellow":
										return new t(new S(250, 250, 210, 1));
									case "lightgray":
										return new t(new S(211, 211, 211, 1));
									case "lightgreen":
										return new t(new S(144, 238, 144, 1));
									case "lightgrey":
										return new t(new S(211, 211, 211, 1));
									case "lightpink":
										return new t(new S(255, 182, 193, 1));
									case "lightsalmon":
										return new t(new S(255, 160, 122, 1));
									case "lightseagreen":
										return new t(new S(32, 178, 170, 1));
									case "lightskyblue":
										return new t(new S(135, 206, 250, 1));
									case "lightslategray":
										return new t(new S(119, 136, 153, 1));
									case "lightslategrey":
										return new t(new S(119, 136, 153, 1));
									case "lightsteelblue":
										return new t(new S(176, 196, 222, 1));
									case "lightyellow":
										return new t(new S(255, 255, 224, 1));
									case "lime":
										return new t(new S(0, 255, 0, 1));
									case "limegreen":
										return new t(new S(50, 205, 50, 1));
									case "linen":
										return new t(new S(250, 240, 230, 1));
									case "magenta":
										return new t(new S(255, 0, 255, 1));
									case "maroon":
										return new t(new S(128, 0, 0, 1));
									case "mediumaquamarine":
										return new t(new S(102, 205, 170, 1));
									case "mediumblue":
										return new t(new S(0, 0, 205, 1));
									case "mediumorchid":
										return new t(new S(186, 85, 211, 1));
									case "mediumpurple":
										return new t(new S(147, 112, 219, 1));
									case "mediumseagreen":
										return new t(new S(60, 179, 113, 1));
									case "mediumslateblue":
										return new t(new S(123, 104, 238, 1));
									case "mediumspringgreen":
										return new t(new S(0, 250, 154, 1));
									case "mediumturquoise":
										return new t(new S(72, 209, 204, 1));
									case "mediumvioletred":
										return new t(new S(199, 21, 133, 1));
									case "midnightblue":
										return new t(new S(25, 25, 112, 1));
									case "mintcream":
										return new t(new S(245, 255, 250, 1));
									case "mistyrose":
										return new t(new S(255, 228, 225, 1));
									case "moccasin":
										return new t(new S(255, 228, 181, 1));
									case "navajowhite":
										return new t(new S(255, 222, 173, 1));
									case "navy":
										return new t(new S(0, 0, 128, 1));
									case "oldlace":
										return new t(new S(253, 245, 230, 1));
									case "olive":
										return new t(new S(128, 128, 0, 1));
									case "olivedrab":
										return new t(new S(107, 142, 35, 1));
									case "orange":
										return new t(new S(255, 165, 0, 1));
									case "orangered":
										return new t(new S(255, 69, 0, 1));
									case "orchid":
										return new t(new S(218, 112, 214, 1));
									case "palegoldenrod":
										return new t(new S(238, 232, 170, 1));
									case "palegreen":
										return new t(new S(152, 251, 152, 1));
									case "paleturquoise":
										return new t(new S(175, 238, 238, 1));
									case "palevioletred":
										return new t(new S(219, 112, 147, 1));
									case "papayawhip":
										return new t(new S(255, 239, 213, 1));
									case "peachpuff":
										return new t(new S(255, 218, 185, 1));
									case "peru":
										return new t(new S(205, 133, 63, 1));
									case "pink":
										return new t(new S(255, 192, 203, 1));
									case "plum":
										return new t(new S(221, 160, 221, 1));
									case "powderblue":
										return new t(new S(176, 224, 230, 1));
									case "purple":
										return new t(new S(128, 0, 128, 1));
									case "rebeccapurple":
										return new t(new S(102, 51, 153, 1));
									case "red":
										return new t(new S(255, 0, 0, 1));
									case "rosybrown":
										return new t(new S(188, 143, 143, 1));
									case "royalblue":
										return new t(new S(65, 105, 225, 1));
									case "saddlebrown":
										return new t(new S(139, 69, 19, 1));
									case "salmon":
										return new t(new S(250, 128, 114, 1));
									case "sandybrown":
										return new t(new S(244, 164, 96, 1));
									case "seagreen":
										return new t(new S(46, 139, 87, 1));
									case "seashell":
										return new t(new S(255, 245, 238, 1));
									case "sienna":
										return new t(new S(160, 82, 45, 1));
									case "silver":
										return new t(new S(192, 192, 192, 1));
									case "skyblue":
										return new t(new S(135, 206, 235, 1));
									case "slateblue":
										return new t(new S(106, 90, 205, 1));
									case "slategray":
										return new t(new S(112, 128, 144, 1));
									case "slategrey":
										return new t(new S(112, 128, 144, 1));
									case "snow":
										return new t(new S(255, 250, 250, 1));
									case "springgreen":
										return new t(new S(0, 255, 127, 1));
									case "steelblue":
										return new t(new S(70, 130, 180, 1));
									case "tan":
										return new t(new S(210, 180, 140, 1));
									case "teal":
										return new t(new S(0, 128, 128, 1));
									case "thistle":
										return new t(new S(216, 191, 216, 1));
									case "tomato":
										return new t(new S(255, 99, 71, 1));
									case "turquoise":
										return new t(new S(64, 224, 208, 1));
									case "violet":
										return new t(new S(238, 130, 238, 1));
									case "wheat":
										return new t(new S(245, 222, 179, 1));
									case "white":
										return new t(new S(255, 255, 255, 1));
									case "whitesmoke":
										return new t(new S(245, 245, 245, 1));
									case "yellow":
										return new t(new S(255, 255, 0, 1));
									case "yellowgreen":
										return new t(new S(154, 205, 50, 1));
									default:
										return null;
								}
							}
							function g(y) {
								const k = y.length;
								if (k === 0 || y.charCodeAt(0) !== 35) return null;
								if (k === 7) {
									const I = 16 * b(y.charCodeAt(1)) + b(y.charCodeAt(2)),
										C = 16 * b(y.charCodeAt(3)) + b(y.charCodeAt(4)),
										_ = 16 * b(y.charCodeAt(5)) + b(y.charCodeAt(6));
									return new t(new S(I, C, _, 1));
								}
								if (k === 9) {
									const I = 16 * b(y.charCodeAt(1)) + b(y.charCodeAt(2)),
										C = 16 * b(y.charCodeAt(3)) + b(y.charCodeAt(4)),
										_ = 16 * b(y.charCodeAt(5)) + b(y.charCodeAt(6)),
										K = 16 * b(y.charCodeAt(7)) + b(y.charCodeAt(8));
									return new t(new S(I, C, _, K / 255));
								}
								if (k === 4) {
									const I = b(y.charCodeAt(1)),
										C = b(y.charCodeAt(2)),
										_ = b(y.charCodeAt(3));
									return new t(new S(16 * I + I, 16 * C + C, 16 * _ + _));
								}
								if (k === 5) {
									const I = b(y.charCodeAt(1)),
										C = b(y.charCodeAt(2)),
										_ = b(y.charCodeAt(3)),
										K = b(y.charCodeAt(4));
									return new t(
										new S(
											16 * I + I,
											16 * C + C,
											16 * _ + _,
											(16 * K + K) / 255,
										),
									);
								}
								return null;
							}
							r.parseHex = g;
							function b(y) {
								switch (y) {
									case 48:
										return 0;
									case 49:
										return 1;
									case 50:
										return 2;
									case 51:
										return 3;
									case 52:
										return 4;
									case 53:
										return 5;
									case 54:
										return 6;
									case 55:
										return 7;
									case 56:
										return 8;
									case 57:
										return 9;
									case 97:
										return 10;
									case 65:
										return 10;
									case 98:
										return 11;
									case 66:
										return 11;
									case 99:
										return 12;
									case 67:
										return 12;
									case 100:
										return 13;
									case 68:
										return 13;
									case 101:
										return 14;
									case 69:
										return 14;
									case 102:
										return 15;
									case 70:
										return 15;
								}
								return 0;
							}
						})((s = i.CSS || (i.CSS = {})));
					})((e = t.Format || (t.Format = {})));
				})(Vu || (Vu = {}));
		},
	});
function jx(t, e) {
	return P.joinPath(t.userHome, e.dataFolderName, "shadow-workspaces");
}
var tt,
	Ct = m({
		"out-build/vs/platform/product/common/productService.js"() {
			"use strict";
			ie(), Y(), (tt = B("productService"));
		},
	});
import ii from "electron";
var w4,
	v4,
	v1,
	y1,
	b1,
	E1,
	S1,
	vo,
	yo,
	Gu,
	hc = m({
		"out-build/vs/platform/theme/electron-main/themeMainService.js"() {
			"use strict";
			q(),
				F(),
				z(),
				Ve(),
				Y(),
				Li(),
				(w4 = "#FFFFFF"),
				(v4 = "#1F1F1F"),
				(v1 = "#000000"),
				(y1 = "#FFFFFF"),
				(b1 = "theme"),
				(E1 = "themeBackground"),
				(S1 = "windowSplash"),
				(function (t) {
					(t.DETECT_COLOR_SCHEME = "window.autoDetectColorScheme"),
						(t.SYSTEM_COLOR_THEME = "window.systemColorTheme");
				})(vo || (vo = {})),
				(yo = B("themeMainService")),
				(Gu = class extends j {
					constructor(e, i) {
						super(),
							(this.b = e),
							(this.c = i),
							(this.a = this.D(new $())),
							(this.onDidChangeColorScheme = this.a.event),
							Ee ||
								this.D(
									this.c.onDidChangeConfiguration((s) => {
										(s.affectsConfiguration(vo.SYSTEM_COLOR_THEME) ||
											s.affectsConfiguration(vo.DETECT_COLOR_SCHEME)) &&
											this.f();
									}),
								),
							this.f(),
							this.D(
								x.fromNodeEventEmitter(
									ii.nativeTheme,
									"updated",
								)(() => this.a.fire(this.getColorScheme())),
							);
					}
					f() {
						if (Ee || this.c.getValue(vo.DETECT_COLOR_SCHEME))
							ii.nativeTheme.themeSource = "system";
						else
							switch (this.c.getValue(vo.SYSTEM_COLOR_THEME)) {
								case "dark":
									ii.nativeTheme.themeSource = "dark";
									break;
								case "light":
									ii.nativeTheme.themeSource = "light";
									break;
								case "auto":
									switch (this.g()) {
										case "vs":
											ii.nativeTheme.themeSource = "light";
											break;
										case "vs-dark":
											ii.nativeTheme.themeSource = "dark";
											break;
										default:
											ii.nativeTheme.themeSource = "system";
									}
									break;
								default:
									ii.nativeTheme.themeSource = "system";
									break;
							}
					}
					getColorScheme() {
						if (T) {
							if (ii.nativeTheme.shouldUseHighContrastColors)
								return {
									dark: ii.nativeTheme.shouldUseInvertedColorScheme,
									highContrast: !0,
								};
						} else if (N) {
							if (
								ii.nativeTheme.shouldUseInvertedColorScheme ||
								ii.nativeTheme.shouldUseHighContrastColors
							)
								return {
									dark: ii.nativeTheme.shouldUseDarkColors,
									highContrast: !0,
								};
						} else if (Ee && ii.nativeTheme.shouldUseHighContrastColors)
							return { dark: !0, highContrast: !0 };
						return {
							dark: ii.nativeTheme.shouldUseDarkColors,
							highContrast: !1,
						};
					}
					getBackgroundColor() {
						const e = this.getColorScheme();
						if (
							e.highContrast &&
							this.c.getValue("window.autoDetectHighContrast")
						)
							return e.dark ? v1 : y1;
						let i = this.b.getItem(E1, null);
						if (!i)
							switch (this.g()) {
								case "vs":
									i = w4;
									break;
								case "hc-black":
									i = v1;
									break;
								case "hc-light":
									i = y1;
									break;
								default:
									i = v4;
							}
						return i;
					}
					g() {
						switch (this.b.getItem(b1, "vs-dark").split(" ")[0]) {
							case "vs":
								return "vs";
							case "hc-black":
								return "hc-black";
							case "hc-light":
								return "hc-light";
							default:
								return "vs-dark";
						}
					}
					saveWindowSplash(e, i) {
						this.b.setItems([
							{ key: b1, data: i.baseTheme },
							{ key: E1, data: i.colorInfo.background },
							{ key: S1, data: i },
						]),
							typeof e == "number" && this.h(e, i),
							this.f();
					}
					h(e, i) {
						for (const s of ii.BrowserWindow.getAllWindows())
							if (s.id === e) {
								s.setBackgroundColor(i.colorInfo.background);
								break;
							}
					}
					getWindowSplash() {
						return this.b.getItem(S1);
					}
				}),
				(Gu = __decorate([__param(0, Ii), __param(1, He)], Gu));
		},
	}),
	kt,
	Ju,
	bo,
	dc = m({
		"out-build/vs/platform/product/common/product.js"() {
			"use strict";
			if (
				(gs(),
				(Ju = globalThis.vscode),
				typeof Ju < "u" && typeof Ju.context < "u")
			) {
				const t = Ju.context.configuration();
				if (t) kt = t.product;
				else
					throw new Error(
						"Sandbox: unable to resolve product configuration from preload script.",
					);
			} else if (
				globalThis._VSCODE_PRODUCT_JSON &&
				globalThis._VSCODE_PACKAGE_JSON
			) {
				if (
					((kt = globalThis._VSCODE_PRODUCT_JSON),
					Di.VSCODE_DEV &&
						Object.assign(kt, {
							nameShort: `${kt.nameShort} Dev`,
							nameLong: `${kt.nameLong} Dev`,
							dataFolderName: `${kt.dataFolderName}-dev`,
							serverDataFolderName: kt.serverDataFolderName
								? `${kt.serverDataFolderName}-dev`
								: void 0,
						}),
					Di.VSCODE_DEV_ONBOARDING &&
						Object.assign(kt, {
							nameShort: `${kt.nameShort} Onboarding`,
							nameLong: `${kt.nameLong} Onboarding`,
							dataFolderName: `${kt.dataFolderName}-onboarding`,
							serverDataFolderName: kt.serverDataFolderName
								? `${kt.serverDataFolderName}-onboarding`
								: void 0,
						}),
					!kt.version)
				) {
					const t = globalThis._VSCODE_PACKAGE_JSON;
					Object.assign(kt, { version: t.version });
				}
			} else
				(kt = {}),
					Object.keys(kt).length === 0 &&
						Object.assign(kt, {
							version: "1.94.0-dev",
							nameShort: "Cursor Dev",
							nameLong: "Cursor Dev",
							applicationName: "cursor",
							dataFolderName: ".cursor",
							urlProtocol: "cursor",
							reportIssueUrl: "https://github.com/getcursor/cursor/issues/new",
							licenseName: "MIT",
							licenseUrl: "https://github.com/getcursor/cursor/",
							serverLicenseUrl: "https://github.com/getcursor/cursor/",
						});
			bo = kt;
		},
	});
function k1(t) {
	return !!t.workspaceUri;
}
function y4(t) {
	return !!t.folderUri;
}
function b4(t) {
	return !!t.fileUri;
}
function Tx(t) {
	const e = ln(t),
		i = t.getValue("window.menuBarVisibility");
	return i === "default" || (e && i === "compact") || (N && Mf) ? "classic" : i;
}
function ln(t, e) {
	return e || (e = Ux(t)), e === "native";
}
function Ux(t) {
	if (hr) return "custom";
	const e = t.getValue("window");
	if (e) {
		if ((N && e.nativeTabs === !0) || (N && e.nativeFullScreen === !1))
			return "native";
		const r = e.titleBarStyle;
		if (r === "native" || r === "custom") return r;
	}
	return Ee && bo.quality === "stable" ? "native" : "custom";
}
function x1(t) {
	if (N || hr || ln(t)) return !1;
	if (Ee) {
		const e = t.getValue("window.experimentalControlOverlay");
		if (typeof e == "boolean") return e;
	}
	return !0;
}
function E4(t) {
	const e = t.getValue("window");
	return !e || typeof e.nativeFullScreen != "boolean" || e.nativeTabs
		? !0
		: e.nativeFullScreen !== !1;
}
function S4(t = 0) {
	return Math.pow(1.2, t);
}
var D1,
	k4,
	x4,
	D4,
	P4,
	un = m({
		"out-build/vs/platform/window/common/window.js"() {
			"use strict";
			z(),
				dc(),
				(D1 = { WIDTH: 400, WIDTH_WITH_VERTICAL_PANEL: 600, HEIGHT: 270 }),
				(function (t) {
					(t.TITLE_BAR_STYLE = "window.titleBarStyle"),
						(t.CUSTOM_TITLE_BAR_VISIBILITY = "window.customTitleBarVisibility");
				})(k4 || (k4 = {})),
				(function (t) {
					(t.NATIVE = "native"), (t.CUSTOM = "custom");
				})(x4 || (x4 = {})),
				(function (t) {
					(t.AUTO = "auto"), (t.WINDOWED = "windowed"), (t.NEVER = "never");
				})(D4 || (D4 = {})),
				(P4 = 35);
		},
	});
import qx from "electron";
var $4,
	A4,
	hn,
	I4,
	C4,
	_4,
	fc = m({
		"out-build/vs/platform/window/electron-main/window.js"() {
			"use strict";
			(function (t) {
				(t[(t.INITIAL = 1)] = "INITIAL"),
					(t[(t.LOAD = 2)] = "LOAD"),
					(t[(t.RELOAD = 3)] = "RELOAD");
			})($4 || ($4 = {})),
				(function (t) {
					(t[(t.CLOSE = 1)] = "CLOSE"),
						(t[(t.QUIT = 2)] = "QUIT"),
						(t[(t.RELOAD = 3)] = "RELOAD"),
						(t[(t.LOAD = 4)] = "LOAD");
				})(A4 || (A4 = {})),
				(hn = function (t = 1) {
					return { width: 1024, height: 768, mode: t };
				}),
				(I4 = function () {
					const i = qx.screen.getPrimaryDisplay().workArea,
						s = Math.max(i.x + i.width / 2 - 800 / 2, 0),
						r = Math.max(i.y + i.height / 2 - 600 / 2, 0);
					return { x: s, y: r, width: 800, height: 600, mode: 1 };
				}),
				(function (t) {
					(t[(t.Maximized = 0)] = "Maximized"),
						(t[(t.Normal = 1)] = "Normal"),
						(t[(t.Minimized = 2)] = "Minimized"),
						(t[(t.Fullscreen = 3)] = "Fullscreen");
				})(C4 || (C4 = {})),
				(function (t) {
					(t[(t.UNRESPONSIVE = 1)] = "UNRESPONSIVE"),
						(t[(t.PROCESS_GONE = 2)] = "PROCESS_GONE"),
						(t[(t.LOAD = 3)] = "LOAD");
				})(_4 || (_4 = {}));
		},
	});
import R4 from "electron";
function P1(t, e, i, s) {
	const r = t.get(yo),
		n = t.get(tt),
		o = t.get(He),
		a = t.get(ut),
		c = o.getValue("window"),
		l = {
			backgroundColor: r.getBackgroundColor(),
			minWidth: D1.WIDTH,
			minHeight: D1.HEIGHT,
			title: n.nameLong,
			show: i.hideBecauseShadowWindow === !1 && e.mode !== 0 && e.mode !== 3,
			x: e.x,
			y: e.y,
			width: e.width,
			height: e.height,
			webPreferences: {
				...s,
				enableWebSQL: !1,
				spellcheck: !1,
				zoomFactor: S4(e.zoomLevel ?? c?.zoomLevel),
				autoplayPolicy: "user-gesture-required",
				enableBlinkFeatures: "HighlightAPI",
				sandbox: !0,
			},
			experimentalDarkMode: !0,
		};
	if (
		(Ee
			? (l.icon = M(a.appRoot, "resources/linux/code.png"))
			: T &&
				!a.isBuilt &&
				(l.icon = M(a.appRoot, "resources/win32/code_150x150.png")),
		N &&
			((l.acceptFirstMouse = !0),
			c?.clickThroughInactive === !1 && (l.acceptFirstMouse = !1)),
		i?.disableFullscreen
			? (l.fullscreen = !1)
			: N && !E4(o) && (l.fullscreenable = !1),
		N && c?.nativeTabs === !0 && (l.tabbingIdentifier = n.nameShort),
		!ln(o, i?.forceNativeTitlebar ? "native" : void 0) &&
			((l.titleBarStyle = "hidden"), N || (l.frame = !1), x1(o)))
	) {
		const f =
				r.getWindowSplash()?.colorInfo.titleBarBackground ??
				r.getBackgroundColor(),
			p = Vu.fromHex(f).isDarker() ? "#FFFFFF" : "#000000";
		l.titleBarOverlay = { height: 29, color: f, symbolColor: p };
	}
	return l;
}
function O4(t) {
	let e,
		i = Number.MIN_VALUE;
	for (const s of t) s.lastFocusTime > i && ((i = s.lastFocusTime), (e = s));
	return e;
}
var _t,
	L4,
	Xu,
	si = m({
		"out-build/vs/platform/windows/electron-main/windows.js"() {
			"use strict";
			Wx(),
				ge(),
				z(),
				Ve(),
				bt(),
				Y(),
				Ct(),
				hc(),
				un(),
				fc(),
				(_t = B("windowsMainService")),
				(function (t) {
					(t[(t.CLI = 0)] = "CLI"),
						(t[(t.DOCK = 1)] = "DOCK"),
						(t[(t.MENU = 2)] = "MENU"),
						(t[(t.DIALOG = 3)] = "DIALOG"),
						(t[(t.DESKTOP = 4)] = "DESKTOP"),
						(t[(t.API = 5)] = "API"),
						(t[(t.LINK = 6)] = "LINK");
				})(L4 || (L4 = {})),
				(function (t) {
					function e(s, r, n = R4.screen.getAllDisplays()) {
						if (
							(s.trace(
								`window#validateWindowState: validating window state on ${n.length} display(s)`,
								r,
							),
							typeof r.x != "number" ||
								typeof r.y != "number" ||
								typeof r.width != "number" ||
								typeof r.height != "number")
						) {
							s.trace(
								"window#validateWindowState: unexpected type of state values",
							);
							return;
						}
						if (r.width <= 0 || r.height <= 0) {
							s.trace("window#validateWindowState: unexpected negative values");
							return;
						}
						if (n.length === 1) {
							const l = i(n[0]);
							if (
								(s.trace(
									"window#validateWindowState: single monitor working area",
									l,
								),
								l)
							) {
								let u = function () {
									!r ||
										typeof r.x != "number" ||
										typeof r.y != "number" ||
										!l ||
										(r.x < l.x && (r.x = l.x), r.y < l.y && (r.y = l.y));
								};
								var o = u;
								u(),
									r.width > l.width && (r.width = l.width),
									r.height > l.height && (r.height = l.height),
									r.x > l.x + l.width - 128 && (r.x = l.x + l.width - r.width),
									r.y > l.y + l.height - 128 &&
										(r.y = l.y + l.height - r.height),
									u();
							}
							return r;
						}
						if (r.display && r.mode === 3) {
							const l = n.find((u) => u.id === r.display);
							if (
								l &&
								typeof l.bounds?.x == "number" &&
								typeof l.bounds?.y == "number"
							) {
								s.trace(
									"window#validateWindowState: restoring fullscreen to previous display",
								);
								const u = hn(3);
								return (u.x = l.bounds.x), (u.y = l.bounds.y), u;
							}
						}
						let a, c;
						try {
							(a = R4.screen.getDisplayMatching({
								x: r.x,
								y: r.y,
								width: r.width,
								height: r.height,
							})),
								(c = i(a)),
								s.trace(
									"window#validateWindowState: multi-monitor working area",
									c,
								);
						} catch (l) {
							s.error(
								"window#validateWindowState: error finding display for window state",
								l,
							);
						}
						if (
							a &&
							c &&
							r.x + r.width > c.x &&
							r.y + r.height > c.y &&
							r.x < c.x + c.width &&
							r.y < c.y + c.height
						)
							return r;
						s.trace(
							"window#validateWindowState: state is outside of the multi-monitor working area",
						);
					}
					t.validateWindowState = e;
					function i(s) {
						if (s.workArea.width > 0 && s.workArea.height > 0)
							return s.workArea;
						if (s.bounds.width > 0 && s.bounds.height > 0) return s.bounds;
					}
				})(Xu || (Xu = {}));
		},
	});
import { app as Bx } from "electron";
var Ku,
	Yu,
	M4 = m({
		"out-build/vs/platform/native/electron-main/auth.js"() {
			"use strict";
			Mt(),
				q(),
				Qs(),
				F(),
				ie(),
				Oi(),
				Ve(),
				Wy(),
				bt(),
				Y(),
				Q(),
				Hu(),
				si(),
				(Ku = B("proxyAuthService")),
				(Yu = class extends j {
					constructor(e, i, s, r, n, o) {
						super(),
							(this.h = e),
							(this.m = i),
							(this.n = s),
							(this.q = r),
							(this.r = n),
							(this.s = o),
							(this.a = "proxy-credentials://"),
							(this.b = new Map()),
							(this.c = void 0),
							(this.f = new Set()),
							(this.g = new Map()),
							this.t();
					}
					t() {
						const e = x.fromNodeEventEmitter(Bx, "login", (i, s, r, n, o) => ({
							event: i,
							authInfo: { ...n, attempt: r.firstAuthAttempt ? 1 : 2 },
							callback: o,
						}));
						this.D(e(this.u, this));
					}
					async lookupAuthorization(e) {
						return this.u({ authInfo: e });
					}
					async u({ event: e, authInfo: i, callback: s }) {
						if (!i.isProxy) return;
						e?.preventDefault();
						const r = String(
							Ss({ scheme: i.scheme, host: i.host, port: i.port }),
						);
						let n,
							o = this.b.get(r);
						if (o)
							this.h.trace(
								"auth#onLogin (proxy) - pending proxy handling found",
							),
								(n = await o);
						else {
							this.h.trace(
								"auth#onLogin (proxy) - no pending proxy handling found, starting new",
							),
								(o = this.w(i, r)),
								this.b.set(r, o);
							try {
								n = await o;
							} finally {
								this.b.delete(r);
							}
						}
						return s?.(n?.username, n?.password), n;
					}
					async w(e, i) {
						this.h.trace("auth#resolveProxyCredentials (proxy) - enter");
						try {
							const s = await this.y(e, i);
							if (s)
								return (
									this.h.trace(
										"auth#resolveProxyCredentials (proxy) - got credentials",
									),
									s
								);
							this.h.trace(
								"auth#resolveProxyCredentials (proxy) - did not get credentials",
							);
						} finally {
							this.h.trace("auth#resolveProxyCredentials (proxy) - exit");
						}
					}
					async y(e, i) {
						if (
							(this.h.trace("auth#doResolveProxyCredentials - enter", e),
							this.s.extensionTestsLocationURI)
						) {
							const l = this.r.getValue("integration-test.http.proxyAuth");
							if (l) {
								const u = l.indexOf(":");
								return u !== -1
									? {
											username: l.substring(0, u),
											password: l.substring(u + 1),
										}
									: { username: l, password: "" };
							}
							return;
						}
						const s =
							(this.r.getValue("http.proxy") || "").trim() ||
							(
								process.env.https_proxy ||
								process.env.HTTPS_PROXY ||
								process.env.http_proxy ||
								process.env.HTTP_PROXY ||
								""
							).trim() ||
							void 0;
						if (s?.indexOf("@") !== -1) {
							const l = P.parse(s),
								u = l.authority.indexOf("@");
							if (u !== -1) {
								if (e.attempt > 1) {
									this.h.trace(
										"auth#doResolveProxyCredentials (proxy) - exit - ignoring previously used config/envvar credentials",
									);
									return;
								}
								this.h.trace(
									"auth#doResolveProxyCredentials (proxy) - exit - found config/envvar credentials to use",
								);
								const d = l.authority.substring(0, u),
									f = d.indexOf(":");
								return f !== -1
									? {
											username: d.substring(0, f),
											password: d.substring(f + 1),
										}
									: { username: d, password: "" };
							}
						}
						const r = e.attempt === 1 && this.g.get(i);
						if (r) {
							this.h.trace(
								"auth#doResolveProxyCredentials (proxy) - exit - found session credentials to use",
							);
							const { username: l, password: u } = r;
							return { username: l, password: u };
						}
						let n, o;
						try {
							const l = this.q.get(this.a + i, -1);
							if (l) {
								const u = JSON.parse(await this.n.decrypt(l));
								(n = u.username), (o = u.password);
							}
						} catch (l) {
							this.h.error(l);
						}
						if (e.attempt === 1 && typeof n == "string" && typeof o == "string")
							return (
								this.h.trace(
									"auth#doResolveProxyCredentials (proxy) - exit - found stored credentials to use",
								),
								this.g.set(i, { username: n, password: o }),
								{ username: n, password: o }
							);
						const a = this.c,
							c = (this.c = (async () => {
								await a;
								const l = await this.z(e, i, n, o);
								return this.c === c && (this.c = void 0), l;
							})());
						return c;
					}
					async z(e, i, s, r) {
						if (this.f.has(i)) {
							this.h.trace(
								"auth#doResolveProxyCredentials (proxy) - exit - login dialog was cancelled before, not showing again",
							);
							return;
						}
						const n = this.m.getFocusedWindow() || this.m.getLastActiveWindow();
						if (!n) {
							this.h.trace(
								"auth#doResolveProxyCredentials (proxy) - exit - no opened window found to show dialog in",
							);
							return;
						}
						this.h.trace(
							`auth#doResolveProxyCredentials (proxy) - asking window ${n.id} to handle proxy login`,
						);
						const o = this.g.get(i),
							a = {
								authInfo: e,
								username: o?.username ?? s,
								password: o?.password ?? r,
								replyChannel: `vscode:proxyAuthResponse:${fi()}`,
							};
						n.sendWhenReady("vscode:openProxyAuthenticationDialog", Ge.None, a);
						const c = await new Promise((l) => {
							const u = async (d, f, p) => {
								if (f === a.replyChannel)
									if (
										(this.h.trace(
											`auth#doResolveProxyCredentials - exit - received credentials from window ${n.id}`,
										),
										n.win?.webContents.off("ipc-message", u),
										p)
									) {
										const v = { username: p.username, password: p.password };
										try {
											if (p.remember) {
												const g = await this.n.encrypt(JSON.stringify(v));
												this.q.store(this.a + i, g, -1, 1);
											} else this.q.remove(this.a + i, -1);
										} catch (g) {
											this.h.error(g);
										}
										l({ username: v.username, password: v.password });
									} else this.f.add(i), l(void 0);
							};
							n.win?.webContents.on("ipc-message", u);
						});
						return this.g.set(i, c), c;
					}
				}),
				(Yu = __decorate(
					[
						__param(0, G),
						__param(1, _t),
						__param(2, du),
						__param(3, lc),
						__param(4, He),
						__param(5, ut),
					],
					Yu,
				));
		},
	}),
	Eo,
	pc = m({
		"out-build/vs/platform/backup/electron-main/backup.js"() {
			"use strict";
			Y(), (Eo = B("backupMainService"));
		},
	});
function zx(t) {
	return typeof t?.backupFolder == "string";
}
function Hx(t) {
	let e = [];
	try {
		Array.isArray(t.workspaces) &&
			(e = t.workspaces.map((i) => ({
				workspace: { id: i.id, configPath: P.parse(i.configURIPath) },
				remoteAuthority: i.remoteAuthority,
			})));
	} catch {}
	return e;
}
function Vx(t) {
	let e = [];
	try {
		Array.isArray(t.folders) &&
			(e = t.folders.map((i) => ({
				folderUri: P.parse(i.folderUri),
				remoteAuthority: i.remoteAuthority,
			})));
	} catch {}
	return e;
}
var Gx = m({
	"out-build/vs/platform/backup/node/backup.js"() {
		"use strict";
		ie();
	},
});
function Jx(t) {
	return t && t.hasOwnProperty("folderUri");
}
var Xx = m({
	"out-build/vs/platform/backup/common/backup.js"() {
		"use strict";
	},
});
import { createHash as $1 } from "crypto";
function dn(t) {
	function e() {
		let i = t.scheme === R.file ? $i(t) : t.toString();
		return Ee || (i = i.toLowerCase()), $1("md5").update(i).digest("hex");
	}
	return { id: e(), configPath: t };
}
function A1(t, e) {
	function i() {
		if (t.scheme !== R.file)
			return $1("md5").update(t.toString()).digest("hex");
		if (!e) return;
		let r;
		return (
			Ee
				? (r = e.ino)
				: N
					? (r = e.birthtime.getTime())
					: T &&
						(typeof e.birthtimeMs == "number"
							? (r = Math.floor(e.birthtimeMs))
							: (r = e.birthtime.getTime())),
			$1("md5")
				.update(t.fsPath)
				.update(r ? String(r) : "")
				.digest("hex")
		);
	}
	const s = i();
	if (typeof s == "string") return { id: s, uri: t };
}
function I1() {
	return { id: (Date.now() + Math.round(Math.random() * 1e3)).toString() };
}
var Kx,
	C1 = m({
		"out-build/vs/platform/workspaces/node/workspaces.js"() {
			"use strict";
			Ce(), z(), rt(), (Kx = 128 / 4);
		},
	});
import { createHash as Yx } from "crypto";
var Qu,
	Zu,
	Qx = m({
		"out-build/vs/platform/backup/electron-main/backupMainService.js"() {
			"use strict";
			hi(),
				Ce(),
				ge(),
				z(),
				rt(),
				yt(),
				Gx(),
				Ve(),
				bt(),
				Li(),
				Be(),
				Q(),
				Xx(),
				ti(),
				C1(),
				Ct(),
				(Zu = class {
					static {
						Qu = this;
					}
					static {
						this.a = "backupWorkspaces";
					}
					constructor(e, i, s, r, n) {
						(this.j = e),
							(this.k = i),
							(this.l = s),
							(this.m = r),
							(this.n = n),
							(this.c = this.j.backupHome),
							(this.d = []),
							(this.e = []),
							(this.g = []),
							(this.h = Ze),
							(this.i = { isEqual: (o, a) => Jl(o, a, !Ee) });
					}
					async initialize() {
						const e = this.n.getItem(Qu.a) ?? {
							workspaces: [],
							folders: [],
							emptyWindows: [],
						};
						(this.g = await this.x(e.emptyWindows)),
							(this.d = await this.v(Hx(e))),
							(this.e = await this.w(Vx(e))),
							this.D();
					}
					o() {
						return this.s() ? [] : this.d.slice(0);
					}
					q() {
						return this.s() ? [] : this.e.slice(0);
					}
					isHotExitEnabled() {
						return this.t() !== Au.OFF;
					}
					s() {
						return this.t() === Au.ON_EXIT_AND_WINDOW_CLOSE;
					}
					t() {
						return this.k.getValue()?.files?.hotExit || Au.ON_EXIT;
					}
					getEmptyWindowBackups() {
						return this.g.slice(0);
					}
					registerWorkspaceBackup(e, i) {
						this.d.some((r) => e.workspace.id === r.workspace.id) ||
							(this.d.push(e), this.D());
						const s = M(this.c, e.workspace.id);
						return i ? this.u(s, i).then(() => s) : s;
					}
					async u(e, i) {
						if (((await ee.exists(e)) && (await this.A(e)), await ee.exists(i)))
							try {
								await ee.rename(i, e, !1);
							} catch (s) {
								this.m.error(
									`Backup: Could not move backup folder to new location: ${s.toString()}`,
								);
							}
					}
					registerFolderBackup(e) {
						return (
							this.e.some((i) => this.h.isEqual(e.folderUri, i.folderUri)) ||
								(this.e.push(e), this.D()),
							M(this.c, this.E(e))
						);
					}
					registerEmptyWindowBackup(e) {
						return (
							this.g.some(
								(i) =>
									!!i.backupFolder &&
									this.i.isEqual(i.backupFolder, e.backupFolder),
							) || (this.g.push(e), this.D()),
							M(this.c, e.backupFolder)
						);
					}
					async v(e) {
						if (!Array.isArray(e)) return [];
						const i = new Set(),
							s = [];
						for (const r of e) {
							const n = r.workspace;
							if (!Vt(n)) return [];
							const o = jx(this.j, this.l);
							if (!n.configPath.fsPath.startsWith(o.fsPath) && !i.has(n.id)) {
								i.add(n.id);
								const a = M(this.c, n.id);
								(await this.C(a))
									? n.configPath.scheme !== R.file ||
										(await ee.exists(n.configPath.fsPath))
										? s.push(r)
										: await this.A(a)
									: await this.y(a);
							}
						}
						return s;
					}
					async w(e) {
						if (!Array.isArray(e)) return [];
						const i = [],
							s = new Set();
						for (const r of e) {
							const n = r.folderUri,
								o = this.h.getComparisonKey(n);
							if (!s.has(o)) {
								s.add(o);
								const a = M(this.c, this.E(r));
								(await this.C(a))
									? n.scheme !== R.file || (await ee.exists(n.fsPath))
										? i.push(r)
										: await this.A(a)
									: await this.y(a);
							}
						}
						return i;
					}
					async x(e) {
						if (!Array.isArray(e)) return [];
						const i = [],
							s = new Set();
						for (const r of e) {
							const n = r.backupFolder;
							if (typeof n != "string") return [];
							if (!s.has(n)) {
								s.add(n);
								const o = M(this.c, n);
								(await this.C(o)) ? i.push(r) : await this.y(o);
							}
						}
						return i;
					}
					async y(e) {
						try {
							await ee.rm(e, Qr.MOVE);
						} catch (i) {
							this.m.error(
								`Backup: Could not delete stale backup: ${i.toString()}`,
							);
						}
					}
					z() {
						let e = I1();
						for (
							;
							this.g.some(
								(i) => !!i.backupFolder && this.i.isEqual(i.backupFolder, e.id),
							);
						)
							e = I1();
						return { backupFolder: e.id };
					}
					async A(e) {
						const i = this.z(),
							s = M(this.c, i.backupFolder);
						try {
							await ee.rename(e, s, !1);
						} catch (r) {
							return (
								this.m.error(
									`Backup: Could not rename backup folder: ${r.toString()}`,
								),
								!1
							);
						}
						return this.g.push(i), !0;
					}
					async getDirtyWorkspaces() {
						const e = [];
						for (const i of this.d) (await this.B(i)) && e.push(i);
						for (const i of this.e) (await this.B(i)) && e.push(i);
						return e;
					}
					B(e) {
						let i;
						return (
							zx(e)
								? (i = M(this.c, e.backupFolder))
								: Jx(e)
									? (i = M(this.c, this.E(e)))
									: (i = M(this.c, e.workspace.id)),
							this.C(i)
						);
					}
					async C(e) {
						try {
							const i = await ee.readdir(e);
							for (const s of i)
								try {
									if ((await ee.readdir(M(e, s))).length > 0) return !0;
								} catch {}
						} catch {}
						return !1;
					}
					D() {
						const e = {
							workspaces: this.d.map(({ workspace: i, remoteAuthority: s }) => {
								const r = { id: i.id, configURIPath: i.configPath.toString() };
								return s && (r.remoteAuthority = s), r;
							}),
							folders: this.e.map(({ folderUri: i, remoteAuthority: s }) => {
								const r = { folderUri: i.toString() };
								return s && (r.remoteAuthority = s), r;
							}),
							emptyWindows: this.g.map(
								({ backupFolder: i, remoteAuthority: s }) => {
									const r = { backupFolder: i };
									return s && (r.remoteAuthority = s), r;
								},
							),
						};
						this.n.setItem(Qu.a, e);
					}
					E(e) {
						const i = e.folderUri;
						let s;
						return (
							i.scheme === R.file
								? (s = Ee ? i.fsPath : i.fsPath.toLowerCase())
								: (s = i.toString().toLowerCase()),
							Yx("md5").update(s).digest("hex")
						);
					}
				}),
				(Zu = Qu =
					__decorate(
						[
							__param(0, ut),
							__param(1, He),
							__param(2, tt),
							__param(3, G),
							__param(4, Ii),
						],
						Zu,
					));
		},
	}),
	F4,
	Zx = m({
		"out-build/vs/platform/debug/common/extensionHostDebugIpc.js"() {
			"use strict";
			q(),
				F(),
				(F4 = class {
					constructor() {
						(this.a = new $()),
							(this.b = new $()),
							(this.c = new $()),
							(this.d = new $());
					}
					static {
						this.ChannelName = "extensionhostdebugservice";
					}
					call(t, e, i) {
						switch (e) {
							case "close":
								return Promise.resolve(this.a.fire({ sessionId: i[0] }));
							case "reload":
								return Promise.resolve(this.b.fire({ sessionId: i[0] }));
							case "terminate":
								return Promise.resolve(this.c.fire({ sessionId: i[0] }));
							case "attach":
								return Promise.resolve(
									this.d.fire({ sessionId: i[0], port: i[1], subId: i[2] }),
								);
						}
						throw new Error("Method not implemented.");
					}
					listen(t, e, i) {
						switch (e) {
							case "close":
								return this.a.event;
							case "reload":
								return this.b.event;
							case "terminate":
								return this.c.event;
							case "attach":
								return this.d.event;
						}
						throw new Error("Method not implemented.");
					}
				});
		},
	});
function _1(t, e, i = W4) {
	const s = t.find((f) => f.length > 0 && f[0] !== "-"),
		r = {},
		n = ["_"],
		o = [],
		a = {};
	let c;
	for (const f in e) {
		const p = e[f];
		p.type === "subcommand"
			? f === s && (c = p)
			: (p.alias && (r[f] = p.alias),
				p.type === "string" || p.type === "string[]"
					? (n.push(f), p.deprecates && n.push(...p.deprecates))
					: p.type === "boolean" &&
						(o.push(f), p.deprecates && o.push(...p.deprecates)),
				p.global && (a[f] = p));
	}
	if (c && s) {
		const f = a;
		for (const b in c.options) f[b] = c.options[b];
		const p = t.filter((b) => b !== s),
			v = i.getSubcommandReporter ? i.getSubcommandReporter(s) : void 0,
			g = _1(p, f, v);
		return { [s]: g, _: [] };
	}
	const l = (0, N4.default)(t, { string: n, boolean: o, alias: r }),
		u = {},
		d = l;
	(u._ = l._.map((f) => String(f)).filter((f) => f.length > 0)), delete d._;
	for (const f in e) {
		const p = e[f];
		if (p.type === "subcommand") continue;
		p.alias && delete d[p.alias];
		let v = d[f];
		if (p.deprecates)
			for (const g of p.deprecates)
				d.hasOwnProperty(g) &&
					(v ||
						((v = d[g]),
						v &&
							i.onDeprecatedOption(
								g,
								p.deprecationMessage || w(1789, null, f),
							)),
					delete d[g]);
		if (typeof v < "u") {
			if (p.type === "string[]") {
				if ((Array.isArray(v) || (v = [v]), !p.allowEmptyValue)) {
					const g = v.filter((b) => b.length > 0);
					g.length !== v.length &&
						(i.onEmptyValue(f), (v = g.length > 0 ? g : void 0));
				}
			} else
				p.type === "string" &&
					(Array.isArray(v)
						? ((v = v.pop()), i.onMultipleValues(f, v))
						: !v && !p.allowEmptyValue && (i.onEmptyValue(f), (v = void 0)));
			(u[f] = v),
				p.deprecationMessage && i.onDeprecatedOption(f, p.deprecationMessage);
		}
		delete d[f];
	}
	for (const f in d) i.onUnknownOption(f);
	return u;
}
var N4,
	eD,
	R1,
	O1,
	W4,
	j4 = m({
		"out-build/vs/platform/environment/node/argv.js"() {
			"use strict";
			(N4 = E0(S0(), 1)),
				z(),
				ve(),
				(eD = { o: w(1750, null), e: w(1751, null), t: w(1752, null) }),
				(R1 = ["tunnel", "serve-web"]),
				(O1 = {
					tunnel: {
						type: "subcommand",
						description:
							"Make the current machine accessible from vscode.dev or other machines through a secure tunnel",
						options: {
							"cli-data-dir": {
								type: "string",
								args: "dir",
								description: w(1753, null),
							},
							"disable-telemetry": { type: "boolean" },
							"telemetry-level": { type: "string" },
							user: {
								type: "subcommand",
								options: {
									login: {
										type: "subcommand",
										options: {
											provider: { type: "string" },
											"access-token": { type: "string" },
										},
									},
								},
							},
						},
					},
					"serve-web": {
						type: "subcommand",
						description:
							"Run a server that displays the editor UI in browsers.",
						options: {
							"cli-data-dir": {
								type: "string",
								args: "dir",
								description: w(1754, null),
							},
							"disable-telemetry": { type: "boolean" },
							"telemetry-level": { type: "string" },
						},
					},
					diff: {
						type: "boolean",
						cat: "o",
						alias: "d",
						args: ["file", "file"],
						description: w(1755, null),
					},
					merge: {
						type: "boolean",
						cat: "o",
						alias: "m",
						args: ["path1", "path2", "base", "result"],
						description: w(1756, null),
					},
					add: {
						type: "boolean",
						cat: "o",
						alias: "a",
						args: "folder",
						description: w(1757, null),
					},
					goto: {
						type: "boolean",
						cat: "o",
						alias: "g",
						args: "file:line[:character]",
						description: w(1758, null),
					},
					"new-window": {
						type: "boolean",
						cat: "o",
						alias: "n",
						description: w(1759, null),
					},
					"reuse-window": {
						type: "boolean",
						cat: "o",
						alias: "r",
						description: w(1760, null),
					},
					wait: {
						type: "boolean",
						cat: "o",
						alias: "w",
						description: w(1761, null),
					},
					waitMarkerFilePath: { type: "string" },
					locale: {
						type: "string",
						cat: "o",
						args: "locale",
						description: w(1762, null),
					},
					"user-data-dir": {
						type: "string",
						cat: "o",
						args: "dir",
						description: w(1763, null),
					},
					profile: {
						type: "string",
						cat: "o",
						args: "profileName",
						description: w(1764, null),
					},
					help: {
						type: "boolean",
						cat: "o",
						alias: "h",
						description: w(1765, null),
					},
					"extensions-dir": {
						type: "string",
						deprecates: ["extensionHomePath"],
						cat: "e",
						args: "dir",
						description: w(1766, null),
					},
					"extensions-download-dir": { type: "string" },
					"builtin-extensions-dir": { type: "string" },
					"list-extensions": {
						type: "boolean",
						cat: "e",
						description: w(1767, null),
					},
					"show-versions": {
						type: "boolean",
						cat: "e",
						description: w(1768, null),
					},
					category: {
						type: "string",
						allowEmptyValue: !0,
						cat: "e",
						description: w(1769, null),
						args: "category",
					},
					"install-extension": {
						type: "string[]",
						cat: "e",
						args: "ext-id | path",
						description: w(1770, null),
					},
					"pre-release": {
						type: "boolean",
						cat: "e",
						description: w(1771, null),
					},
					"uninstall-extension": {
						type: "string[]",
						cat: "e",
						args: "ext-id",
						description: w(1772, null),
					},
					"update-extensions": {
						type: "boolean",
						cat: "e",
						description: w(1773, null),
					},
					"enable-proposed-api": {
						type: "string[]",
						allowEmptyValue: !0,
						cat: "e",
						args: "ext-id",
						description: w(1774, null),
					},
					version: {
						type: "boolean",
						cat: "t",
						alias: "v",
						description: w(1775, null),
					},
					verbose: {
						type: "boolean",
						cat: "t",
						global: !0,
						description: w(1776, null),
					},
					log: {
						type: "string[]",
						cat: "t",
						args: "level",
						global: !0,
						description: w(1777, null),
					},
					status: {
						type: "boolean",
						alias: "s",
						cat: "t",
						description: w(1778, null),
					},
					"prof-startup": {
						type: "boolean",
						cat: "t",
						description: w(1779, null),
					},
					"prof-append-timers": { type: "string" },
					"prof-duration-markers": { type: "string[]" },
					"prof-duration-markers-file": { type: "string" },
					"no-cached-data": { type: "boolean" },
					"prof-startup-prefix": { type: "string" },
					"prof-v8-extensions": { type: "boolean" },
					"disable-extensions": {
						type: "boolean",
						deprecates: ["disableExtensions"],
						cat: "t",
						description: w(1780, null),
					},
					"disable-extension": {
						type: "string[]",
						cat: "t",
						args: "ext-id",
						description: w(1781, null),
					},
					sync: {
						type: "string",
						cat: "t",
						description: w(1782, null),
						args: ["on | off"],
					},
					"inspect-extensions": {
						type: "string",
						allowEmptyValue: !0,
						deprecates: ["debugPluginHost"],
						args: "port",
						cat: "t",
						description: w(1783, null),
					},
					"inspect-brk-extensions": {
						type: "string",
						allowEmptyValue: !0,
						deprecates: ["debugBrkPluginHost"],
						args: "port",
						cat: "t",
						description: w(1784, null),
					},
					"disable-lcd-text": {
						type: "boolean",
						cat: "t",
						description: w(1785, null),
					},
					"disable-gpu": {
						type: "boolean",
						cat: "t",
						description: w(1786, null),
					},
					"disable-chromium-sandbox": {
						type: "boolean",
						cat: "t",
						description: w(1787, null),
					},
					sandbox: { type: "boolean" },
					telemetry: { type: "boolean", cat: "t", description: w(1788, null) },
					remote: { type: "string", allowEmptyValue: !0 },
					"folder-uri": { type: "string[]", cat: "o", args: "uri" },
					"file-uri": { type: "string[]", cat: "o", args: "uri" },
					"locate-extension": { type: "string[]" },
					extensionDevelopmentPath: { type: "string[]" },
					extensionDevelopmentKind: { type: "string[]" },
					extensionTestsPath: { type: "string" },
					extensionEnvironment: { type: "string" },
					debugId: { type: "string" },
					debugRenderer: { type: "boolean" },
					"inspect-ptyhost": { type: "string", allowEmptyValue: !0 },
					"inspect-brk-ptyhost": { type: "string", allowEmptyValue: !0 },
					"inspect-search": {
						type: "string",
						deprecates: ["debugSearch"],
						allowEmptyValue: !0,
					},
					"inspect-brk-search": {
						type: "string",
						deprecates: ["debugBrkSearch"],
						allowEmptyValue: !0,
					},
					"inspect-sharedprocess": { type: "string", allowEmptyValue: !0 },
					"inspect-brk-sharedprocess": { type: "string", allowEmptyValue: !0 },
					"export-default-configuration": { type: "string" },
					"install-source": { type: "string" },
					"enable-smoke-test-driver": { type: "boolean" },
					logExtensionHostCommunication: { type: "boolean" },
					"skip-release-notes": { type: "boolean" },
					"skip-welcome": { type: "boolean" },
					"skip-onboarding": { type: "boolean" },
					"override-cursor-auth-token": { type: "string" },
					"disable-telemetry": { type: "boolean" },
					"disable-updates": { type: "boolean" },
					"use-inmemory-secretstorage": {
						type: "boolean",
						deprecates: ["disable-keytar"],
					},
					"password-store": { type: "string" },
					"disable-workspace-trust": { type: "boolean" },
					"disable-crash-reporter": { type: "boolean" },
					"crash-reporter-directory": { type: "string" },
					"crash-reporter-id": { type: "string" },
					"skip-add-to-recently-opened": { type: "boolean" },
					"open-url": { type: "boolean" },
					"file-write": { type: "boolean" },
					"file-chmod": { type: "boolean" },
					"install-builtin-extension": { type: "string[]" },
					force: { type: "boolean" },
					"do-not-sync": { type: "boolean" },
					trace: { type: "boolean" },
					"trace-category-filter": { type: "string" },
					"trace-options": { type: "string" },
					"preserve-env": { type: "boolean" },
					"force-user-env": { type: "boolean" },
					"force-disable-user-env": { type: "boolean" },
					"open-devtools": { type: "boolean" },
					"shadow-window-for-workspace-id": { type: "string" },
					"disable-gpu-sandbox": { type: "boolean" },
					logsPath: { type: "string" },
					"__enable-file-policy": { type: "boolean" },
					editSessionId: { type: "string" },
					continueOn: { type: "string" },
					"locate-shell-integration-path": {
						type: "string",
						args: ["bash", "pwsh", "zsh", "fish"],
					},
					"enable-coi": { type: "boolean" },
					"no-proxy-server": { type: "boolean" },
					"no-sandbox": { type: "boolean", alias: "sandbox" },
					"proxy-server": { type: "string" },
					"proxy-bypass-list": { type: "string" },
					"proxy-pac-url": { type: "string" },
					"js-flags": { type: "string" },
					inspect: { type: "string", allowEmptyValue: !0 },
					"inspect-brk": { type: "string", allowEmptyValue: !0 },
					nolazy: { type: "boolean" },
					"force-device-scale-factor": { type: "string" },
					"force-renderer-accessibility": { type: "boolean" },
					"ignore-certificate-errors": { type: "boolean" },
					"allow-insecure-localhost": { type: "boolean" },
					"log-net-log": { type: "string" },
					vmodule: { type: "string" },
					_urls: { type: "string[]" },
					"disable-dev-shm-usage": { type: "boolean" },
					"profile-temp": { type: "boolean" },
					"ozone-platform": { type: "string" },
					"enable-tracing": { type: "string" },
					"trace-startup-format": { type: "string" },
					"trace-startup-file": { type: "string" },
					"trace-startup-duration": { type: "string" },
					hmr: { type: "boolean" },
					_: { type: "string[]" },
				}),
				(W4 = {
					onUnknownOption: () => {},
					onMultipleValues: () => {},
					onEmptyValue: () => {},
					onDeprecatedOption: () => {},
				});
		},
	});
import { createServer as tD } from "net";
var T4,
	iD = m({
		"out-build/vs/platform/debug/electron-main/extensionHostDebugIpc.js"() {
			"use strict";
			Zx(),
				j4(),
				(T4 = class extends F4 {
					constructor(t) {
						super(), (this.f = t);
					}
					call(t, e, i) {
						return e === "openExtensionDevelopmentHostWindow"
							? this.g(i[0], i[1])
							: super.call(t, e, i);
					}
					async g(t, e) {
						const i = _1(t, O1);
						i.debugRenderer = e;
						const s = i.extensionDevelopmentPath;
						if (!s) return { success: !1 };
						const [r] = await this.f.openExtensionDevelopmentHostWindow(s, {
							context: 5,
							cli: i,
							forceProfile: i.profile,
							forceTempProfile: i["profile-temp"],
						});
						if (!e) return { success: !0 };
						const n = r.win;
						if (!n) return { success: !0 };
						const o = n.webContents.debugger;
						let a = o.isAttached() ? 1 / 0 : 0;
						const c = tD((l) => {
							a++ === 0 && o.attach();
							let u = !1;
							const d = (v) => {
									u || l.write(JSON.stringify(v) + "\0");
								},
								f = (v, g, b, y) => d({ method: g, params: b, sessionId: y });
							n.on("close", () => {
								o.removeListener("message", f), l.end(), (u = !0);
							}),
								o.addListener("message", f);
							let p = Buffer.alloc(0);
							l.on("data", (v) => {
								p = Buffer.concat([p, v]);
								for (let g = p.indexOf(0); g !== -1; g = p.indexOf(0)) {
									let b;
									try {
										const y = p.slice(0, g).toString("utf8");
										(p = p.slice(g + 1)), (b = JSON.parse(y));
									} catch (y) {
										console.error("error reading cdp line", y);
									}
									o.sendCommand(b.method, b.params, b.sessionId)
										.then((y) =>
											d({ id: b.id, sessionId: b.sessionId, result: y }),
										)
										.catch((y) =>
											d({
												id: b.id,
												sessionId: b.sessionId,
												error: { code: 0, message: y.message },
											}),
										);
								}
							}),
								l.on("error", (v) => {
									console.error("error on cdp pipe:", v);
								}),
								l.on("close", () => {
									(u = !0), --a === 0 && o.detach();
								});
						});
						return (
							await new Promise((l) => c.listen(0, l)),
							n.on("close", () => c.close()),
							{ rendererDebugPort: c.address().port, success: !0 }
						);
					}
				});
		},
	});
function L1(t) {
	return !!t.hostName && !!t.errorMessage;
}
var U4,
	M1,
	F1 = m({
		"out-build/vs/platform/diagnostics/common/diagnostics.js"() {
			"use strict";
			Y(), (U4 = "diagnosticsService"), (M1 = B(U4));
		},
	});
function q4(t, e = !1) {
	let i = 0;
	const s = t.length;
	let r = "",
		n = 0,
		o = 16,
		a = 0;
	function c(g) {
		let b = 0,
			y = 0;
		for (; b < g; ) {
			const k = t.charCodeAt(i);
			if (k >= 48 && k <= 57) y = y * 16 + k - 48;
			else if (k >= 65 && k <= 70) y = y * 16 + k - 65 + 10;
			else if (k >= 97 && k <= 102) y = y * 16 + k - 97 + 10;
			else break;
			i++, b++;
		}
		return b < g && (y = -1), y;
	}
	function l(g) {
		(i = g), (r = ""), (n = 0), (o = 16), (a = 0);
	}
	function u() {
		const g = i;
		if (t.charCodeAt(i) === 48) i++;
		else for (i++; i < t.length && So(t.charCodeAt(i)); ) i++;
		if (i < t.length && t.charCodeAt(i) === 46)
			if ((i++, i < t.length && So(t.charCodeAt(i))))
				for (i++; i < t.length && So(t.charCodeAt(i)); ) i++;
			else return (a = 3), t.substring(g, i);
		let b = i;
		if (i < t.length && (t.charCodeAt(i) === 69 || t.charCodeAt(i) === 101))
			if (
				(i++,
				((i < t.length && t.charCodeAt(i) === 43) || t.charCodeAt(i) === 45) &&
					i++,
				i < t.length && So(t.charCodeAt(i)))
			) {
				for (i++; i < t.length && So(t.charCodeAt(i)); ) i++;
				b = i;
			} else a = 3;
		return t.substring(g, b);
	}
	function d() {
		let g = "",
			b = i;
		for (;;) {
			if (i >= s) {
				(g += t.substring(b, i)), (a = 2);
				break;
			}
			const y = t.charCodeAt(i);
			if (y === 34) {
				(g += t.substring(b, i)), i++;
				break;
			}
			if (y === 92) {
				if (((g += t.substring(b, i)), i++, i >= s)) {
					a = 2;
					break;
				}
				switch (t.charCodeAt(i++)) {
					case 34:
						g += '"';
						break;
					case 92:
						g += "\\";
						break;
					case 47:
						g += "/";
						break;
					case 98:
						g += "\b";
						break;
					case 102:
						g += "\f";
						break;
					case 110:
						g += `
`;
						break;
					case 114:
						g += "\r";
						break;
					case 116:
						g += "	";
						break;
					case 117: {
						const I = c(4);
						I >= 0 ? (g += String.fromCharCode(I)) : (a = 4);
						break;
					}
					default:
						a = 5;
				}
				b = i;
				continue;
			}
			if (y >= 0 && y <= 31)
				if (eh(y)) {
					(g += t.substring(b, i)), (a = 2);
					break;
				} else a = 6;
			i++;
		}
		return g;
	}
	function f() {
		if (((r = ""), (a = 0), (n = i), i >= s)) return (n = s), (o = 17);
		let g = t.charCodeAt(i);
		if (N1(g)) {
			do i++, (r += String.fromCharCode(g)), (g = t.charCodeAt(i));
			while (N1(g));
			return (o = 15);
		}
		if (eh(g))
			return (
				i++,
				(r += String.fromCharCode(g)),
				g === 13 &&
					t.charCodeAt(i) === 10 &&
					(i++,
					(r += `
`)),
				(o = 14)
			);
		switch (g) {
			case 123:
				return i++, (o = 1);
			case 125:
				return i++, (o = 2);
			case 91:
				return i++, (o = 3);
			case 93:
				return i++, (o = 4);
			case 58:
				return i++, (o = 6);
			case 44:
				return i++, (o = 5);
			case 34:
				return i++, (r = d()), (o = 10);
			case 47: {
				const b = i - 1;
				if (t.charCodeAt(i + 1) === 47) {
					for (i += 2; i < s && !eh(t.charCodeAt(i)); ) i++;
					return (r = t.substring(b, i)), (o = 12);
				}
				if (t.charCodeAt(i + 1) === 42) {
					i += 2;
					const y = s - 1;
					let k = !1;
					for (; i < y; ) {
						if (t.charCodeAt(i) === 42 && t.charCodeAt(i + 1) === 47) {
							(i += 2), (k = !0);
							break;
						}
						i++;
					}
					return k || (i++, (a = 1)), (r = t.substring(b, i)), (o = 13);
				}
				return (r += String.fromCharCode(g)), i++, (o = 16);
			}
			case 45:
				if (
					((r += String.fromCharCode(g)), i++, i === s || !So(t.charCodeAt(i)))
				)
					return (o = 16);
			case 48:
			case 49:
			case 50:
			case 51:
			case 52:
			case 53:
			case 54:
			case 55:
			case 56:
			case 57:
				return (r += u()), (o = 11);
			default:
				for (; i < s && p(g); ) i++, (g = t.charCodeAt(i));
				if (n !== i) {
					switch (((r = t.substring(n, i)), r)) {
						case "true":
							return (o = 8);
						case "false":
							return (o = 9);
						case "null":
							return (o = 7);
					}
					return (o = 16);
				}
				return (r += String.fromCharCode(g)), i++, (o = 16);
		}
	}
	function p(g) {
		if (N1(g) || eh(g)) return !1;
		switch (g) {
			case 125:
			case 93:
			case 123:
			case 91:
			case 34:
			case 58:
			case 44:
			case 47:
				return !1;
		}
		return !0;
	}
	function v() {
		let g;
		do g = f();
		while (g >= 12 && g <= 15);
		return g;
	}
	return {
		setPosition: l,
		getPosition: () => i,
		scan: e ? v : f,
		getToken: () => o,
		getTokenValue: () => r,
		getTokenOffset: () => n,
		getTokenLength: () => i - n,
		getTokenError: () => a,
	};
}
function N1(t) {
	return (
		t === 32 ||
		t === 9 ||
		t === 11 ||
		t === 12 ||
		t === 160 ||
		t === 5760 ||
		(t >= 8192 && t <= 8203) ||
		t === 8239 ||
		t === 8287 ||
		t === 12288 ||
		t === 65279
	);
}
function eh(t) {
	return t === 10 || t === 13 || t === 8232 || t === 8233;
}
function So(t) {
	return t >= 48 && t <= 57;
}
function fn(t, e = [], i = mc.DEFAULT) {
	let s = null,
		r = [];
	const n = [];
	function o(c) {
		Array.isArray(r) ? r.push(c) : s !== null && (r[s] = c);
	}
	return (
		th(
			t,
			{
				onObjectBegin: () => {
					const c = {};
					o(c), n.push(r), (r = c), (s = null);
				},
				onObjectProperty: (c) => {
					s = c;
				},
				onObjectEnd: () => {
					r = n.pop();
				},
				onArrayBegin: () => {
					const c = [];
					o(c), n.push(r), (r = c), (s = null);
				},
				onArrayEnd: () => {
					r = n.pop();
				},
				onLiteralValue: o,
				onError: (c, l, u) => {
					e.push({ error: c, offset: l, length: u });
				},
			},
			i,
		),
		r[0]
	);
}
function sD(t, e = [], i = mc.DEFAULT) {
	let s = {
		type: "array",
		offset: -1,
		length: -1,
		children: [],
		parent: void 0,
	};
	function r(c) {
		s.type === "property" && ((s.length = c - s.offset), (s = s.parent));
	}
	function n(c) {
		return s.children.push(c), c;
	}
	th(
		t,
		{
			onObjectBegin: (c) => {
				s = n({
					type: "object",
					offset: c,
					length: -1,
					parent: s,
					children: [],
				});
			},
			onObjectProperty: (c, l, u) => {
				(s = n({
					type: "property",
					offset: l,
					length: -1,
					parent: s,
					children: [],
				})),
					s.children.push({
						type: "string",
						value: c,
						offset: l,
						length: u,
						parent: s,
					});
			},
			onObjectEnd: (c, l) => {
				(s.length = c + l - s.offset), (s = s.parent), r(c + l);
			},
			onArrayBegin: (c, l) => {
				s = n({
					type: "array",
					offset: c,
					length: -1,
					parent: s,
					children: [],
				});
			},
			onArrayEnd: (c, l) => {
				(s.length = c + l - s.offset), (s = s.parent), r(c + l);
			},
			onLiteralValue: (c, l, u) => {
				n({ type: ko(c), offset: l, length: u, parent: s, value: c }), r(l + u);
			},
			onSeparator: (c, l, u) => {
				s.type === "property" &&
					(c === ":" ? (s.colonOffset = l) : c === "," && r(l));
			},
			onError: (c, l, u) => {
				e.push({ error: c, offset: l, length: u });
			},
		},
		i,
	);
	const a = s.children[0];
	return a && delete a.parent, a;
}
function B4(t, e) {
	if (!t) return;
	let i = t;
	for (const s of e)
		if (typeof s == "string") {
			if (i.type !== "object" || !Array.isArray(i.children)) return;
			let r = !1;
			for (const n of i.children)
				if (Array.isArray(n.children) && n.children[0].value === s) {
					(i = n.children[1]), (r = !0);
					break;
				}
			if (!r) return;
		} else {
			const r = s;
			if (
				i.type !== "array" ||
				r < 0 ||
				!Array.isArray(i.children) ||
				r >= i.children.length
			)
				return;
			i = i.children[r];
		}
	return i;
}
function th(t, e, i = mc.DEFAULT) {
	const s = q4(t, !1);
	function r(W) {
		return W ? () => W(s.getTokenOffset(), s.getTokenLength()) : () => !0;
	}
	function n(W) {
		return W ? (ye) => W(ye, s.getTokenOffset(), s.getTokenLength()) : () => !0;
	}
	const o = r(e.onObjectBegin),
		a = n(e.onObjectProperty),
		c = r(e.onObjectEnd),
		l = r(e.onArrayBegin),
		u = r(e.onArrayEnd),
		d = n(e.onLiteralValue),
		f = n(e.onSeparator),
		p = r(e.onComment),
		v = n(e.onError),
		g = i && i.disallowComments,
		b = i && i.allowTrailingComma;
	function y() {
		for (;;) {
			const W = s.scan();
			switch (s.getTokenError()) {
				case 4:
					k(14);
					break;
				case 5:
					k(15);
					break;
				case 3:
					k(13);
					break;
				case 1:
					g || k(11);
					break;
				case 2:
					k(12);
					break;
				case 6:
					k(16);
					break;
			}
			switch (W) {
				case 12:
				case 13:
					g ? k(10) : p();
					break;
				case 16:
					k(1);
					break;
				case 15:
				case 14:
					break;
				default:
					return W;
			}
		}
	}
	function k(W, ye = [], at = []) {
		if ((v(W), ye.length + at.length > 0)) {
			let ue = s.getToken();
			for (; ue !== 17; ) {
				if (ye.indexOf(ue) !== -1) {
					y();
					break;
				} else if (at.indexOf(ue) !== -1) break;
				ue = y();
			}
		}
	}
	function I(W) {
		const ye = s.getTokenValue();
		return W ? d(ye) : a(ye), y(), !0;
	}
	function C() {
		switch (s.getToken()) {
			case 11: {
				let W = 0;
				try {
					(W = JSON.parse(s.getTokenValue())),
						typeof W != "number" && (k(2), (W = 0));
				} catch {
					k(2);
				}
				d(W);
				break;
			}
			case 7:
				d(null);
				break;
			case 8:
				d(!0);
				break;
			case 9:
				d(!1);
				break;
			default:
				return !1;
		}
		return y(), !0;
	}
	function _() {
		return s.getToken() !== 10
			? (k(3, [], [2, 5]), !1)
			: (I(!1),
				s.getToken() === 6
					? (f(":"), y(), xe() || k(4, [], [2, 5]))
					: k(5, [], [2, 5]),
				!0);
	}
	function K() {
		o(), y();
		let W = !1;
		for (; s.getToken() !== 2 && s.getToken() !== 17; ) {
			if (s.getToken() === 5) {
				if ((W || k(4, [], []), f(","), y(), s.getToken() === 2 && b)) break;
			} else W && k(6, [], []);
			_() || k(4, [], [2, 5]), (W = !0);
		}
		return c(), s.getToken() !== 2 ? k(7, [2], []) : y(), !0;
	}
	function se() {
		l(), y();
		let W = !1;
		for (; s.getToken() !== 4 && s.getToken() !== 17; ) {
			if (s.getToken() === 5) {
				if ((W || k(4, [], []), f(","), y(), s.getToken() === 4 && b)) break;
			} else W && k(6, [], []);
			xe() || k(4, [], [4, 5]), (W = !0);
		}
		return u(), s.getToken() !== 4 ? k(8, [4], []) : y(), !0;
	}
	function xe() {
		switch (s.getToken()) {
			case 3:
				return se();
			case 1:
				return K();
			case 10:
				return I(!0);
			default:
				return C();
		}
	}
	return (
		y(),
		s.getToken() === 17
			? i.allowEmptyContent
				? !0
				: (k(4, [], []), !1)
			: xe()
				? (s.getToken() !== 17 && k(9, [], []), !0)
				: (k(4, [], []), !1)
	);
}
function ko(t) {
	switch (typeof t) {
		case "boolean":
			return "boolean";
		case "number":
			return "number";
		case "string":
			return "string";
		case "object": {
			if (t) {
				if (Array.isArray(t)) return "array";
			} else return "null";
			return "object";
		}
		default:
			return "null";
	}
}
var z4,
	H4,
	V4,
	mc,
	G4,
	ir = m({
		"out-build/vs/base/common/json.js"() {
			"use strict";
			(function (t) {
				(t[(t.None = 0)] = "None"),
					(t[(t.UnexpectedEndOfComment = 1)] = "UnexpectedEndOfComment"),
					(t[(t.UnexpectedEndOfString = 2)] = "UnexpectedEndOfString"),
					(t[(t.UnexpectedEndOfNumber = 3)] = "UnexpectedEndOfNumber"),
					(t[(t.InvalidUnicode = 4)] = "InvalidUnicode"),
					(t[(t.InvalidEscapeCharacter = 5)] = "InvalidEscapeCharacter"),
					(t[(t.InvalidCharacter = 6)] = "InvalidCharacter");
			})(z4 || (z4 = {})),
				(function (t) {
					(t[(t.OpenBraceToken = 1)] = "OpenBraceToken"),
						(t[(t.CloseBraceToken = 2)] = "CloseBraceToken"),
						(t[(t.OpenBracketToken = 3)] = "OpenBracketToken"),
						(t[(t.CloseBracketToken = 4)] = "CloseBracketToken"),
						(t[(t.CommaToken = 5)] = "CommaToken"),
						(t[(t.ColonToken = 6)] = "ColonToken"),
						(t[(t.NullKeyword = 7)] = "NullKeyword"),
						(t[(t.TrueKeyword = 8)] = "TrueKeyword"),
						(t[(t.FalseKeyword = 9)] = "FalseKeyword"),
						(t[(t.StringLiteral = 10)] = "StringLiteral"),
						(t[(t.NumericLiteral = 11)] = "NumericLiteral"),
						(t[(t.LineCommentTrivia = 12)] = "LineCommentTrivia"),
						(t[(t.BlockCommentTrivia = 13)] = "BlockCommentTrivia"),
						(t[(t.LineBreakTrivia = 14)] = "LineBreakTrivia"),
						(t[(t.Trivia = 15)] = "Trivia"),
						(t[(t.Unknown = 16)] = "Unknown"),
						(t[(t.EOF = 17)] = "EOF");
				})(H4 || (H4 = {})),
				(function (t) {
					(t[(t.InvalidSymbol = 1)] = "InvalidSymbol"),
						(t[(t.InvalidNumberFormat = 2)] = "InvalidNumberFormat"),
						(t[(t.PropertyNameExpected = 3)] = "PropertyNameExpected"),
						(t[(t.ValueExpected = 4)] = "ValueExpected"),
						(t[(t.ColonExpected = 5)] = "ColonExpected"),
						(t[(t.CommaExpected = 6)] = "CommaExpected"),
						(t[(t.CloseBraceExpected = 7)] = "CloseBraceExpected"),
						(t[(t.CloseBracketExpected = 8)] = "CloseBracketExpected"),
						(t[(t.EndOfFileExpected = 9)] = "EndOfFileExpected"),
						(t[(t.InvalidCommentToken = 10)] = "InvalidCommentToken"),
						(t[(t.UnexpectedEndOfComment = 11)] = "UnexpectedEndOfComment"),
						(t[(t.UnexpectedEndOfString = 12)] = "UnexpectedEndOfString"),
						(t[(t.UnexpectedEndOfNumber = 13)] = "UnexpectedEndOfNumber"),
						(t[(t.InvalidUnicode = 14)] = "InvalidUnicode"),
						(t[(t.InvalidEscapeCharacter = 15)] = "InvalidEscapeCharacter"),
						(t[(t.InvalidCharacter = 16)] = "InvalidCharacter");
				})(V4 || (V4 = {})),
				(function (t) {
					t.DEFAULT = { allowTrailingComma: !0 };
				})(mc || (mc = {})),
				(function (t) {
					(t[(t.nullCharacter = 0)] = "nullCharacter"),
						(t[(t.maxAsciiCharacter = 127)] = "maxAsciiCharacter"),
						(t[(t.lineFeed = 10)] = "lineFeed"),
						(t[(t.carriageReturn = 13)] = "carriageReturn"),
						(t[(t.lineSeparator = 8232)] = "lineSeparator"),
						(t[(t.paragraphSeparator = 8233)] = "paragraphSeparator"),
						(t[(t.nextLine = 133)] = "nextLine"),
						(t[(t.space = 32)] = "space"),
						(t[(t.nonBreakingSpace = 160)] = "nonBreakingSpace"),
						(t[(t.enQuad = 8192)] = "enQuad"),
						(t[(t.emQuad = 8193)] = "emQuad"),
						(t[(t.enSpace = 8194)] = "enSpace"),
						(t[(t.emSpace = 8195)] = "emSpace"),
						(t[(t.threePerEmSpace = 8196)] = "threePerEmSpace"),
						(t[(t.fourPerEmSpace = 8197)] = "fourPerEmSpace"),
						(t[(t.sixPerEmSpace = 8198)] = "sixPerEmSpace"),
						(t[(t.figureSpace = 8199)] = "figureSpace"),
						(t[(t.punctuationSpace = 8200)] = "punctuationSpace"),
						(t[(t.thinSpace = 8201)] = "thinSpace"),
						(t[(t.hairSpace = 8202)] = "hairSpace"),
						(t[(t.zeroWidthSpace = 8203)] = "zeroWidthSpace"),
						(t[(t.narrowNoBreakSpace = 8239)] = "narrowNoBreakSpace"),
						(t[(t.ideographicSpace = 12288)] = "ideographicSpace"),
						(t[(t.mathematicalSpace = 8287)] = "mathematicalSpace"),
						(t[(t.ogham = 5760)] = "ogham"),
						(t[(t._ = 95)] = "_"),
						(t[(t.$ = 36)] = "$"),
						(t[(t._0 = 48)] = "_0"),
						(t[(t._1 = 49)] = "_1"),
						(t[(t._2 = 50)] = "_2"),
						(t[(t._3 = 51)] = "_3"),
						(t[(t._4 = 52)] = "_4"),
						(t[(t._5 = 53)] = "_5"),
						(t[(t._6 = 54)] = "_6"),
						(t[(t._7 = 55)] = "_7"),
						(t[(t._8 = 56)] = "_8"),
						(t[(t._9 = 57)] = "_9"),
						(t[(t.a = 97)] = "a"),
						(t[(t.b = 98)] = "b"),
						(t[(t.c = 99)] = "c"),
						(t[(t.d = 100)] = "d"),
						(t[(t.e = 101)] = "e"),
						(t[(t.f = 102)] = "f"),
						(t[(t.g = 103)] = "g"),
						(t[(t.h = 104)] = "h"),
						(t[(t.i = 105)] = "i"),
						(t[(t.j = 106)] = "j"),
						(t[(t.k = 107)] = "k"),
						(t[(t.l = 108)] = "l"),
						(t[(t.m = 109)] = "m"),
						(t[(t.n = 110)] = "n"),
						(t[(t.o = 111)] = "o"),
						(t[(t.p = 112)] = "p"),
						(t[(t.q = 113)] = "q"),
						(t[(t.r = 114)] = "r"),
						(t[(t.s = 115)] = "s"),
						(t[(t.t = 116)] = "t"),
						(t[(t.u = 117)] = "u"),
						(t[(t.v = 118)] = "v"),
						(t[(t.w = 119)] = "w"),
						(t[(t.x = 120)] = "x"),
						(t[(t.y = 121)] = "y"),
						(t[(t.z = 122)] = "z"),
						(t[(t.A = 65)] = "A"),
						(t[(t.B = 66)] = "B"),
						(t[(t.C = 67)] = "C"),
						(t[(t.D = 68)] = "D"),
						(t[(t.E = 69)] = "E"),
						(t[(t.F = 70)] = "F"),
						(t[(t.G = 71)] = "G"),
						(t[(t.H = 72)] = "H"),
						(t[(t.I = 73)] = "I"),
						(t[(t.J = 74)] = "J"),
						(t[(t.K = 75)] = "K"),
						(t[(t.L = 76)] = "L"),
						(t[(t.M = 77)] = "M"),
						(t[(t.N = 78)] = "N"),
						(t[(t.O = 79)] = "O"),
						(t[(t.P = 80)] = "P"),
						(t[(t.Q = 81)] = "Q"),
						(t[(t.R = 82)] = "R"),
						(t[(t.S = 83)] = "S"),
						(t[(t.T = 84)] = "T"),
						(t[(t.U = 85)] = "U"),
						(t[(t.V = 86)] = "V"),
						(t[(t.W = 87)] = "W"),
						(t[(t.X = 88)] = "X"),
						(t[(t.Y = 89)] = "Y"),
						(t[(t.Z = 90)] = "Z"),
						(t[(t.ampersand = 38)] = "ampersand"),
						(t[(t.asterisk = 42)] = "asterisk"),
						(t[(t.at = 64)] = "at"),
						(t[(t.backslash = 92)] = "backslash"),
						(t[(t.bar = 124)] = "bar"),
						(t[(t.caret = 94)] = "caret"),
						(t[(t.closeBrace = 125)] = "closeBrace"),
						(t[(t.closeBracket = 93)] = "closeBracket"),
						(t[(t.closeParen = 41)] = "closeParen"),
						(t[(t.colon = 58)] = "colon"),
						(t[(t.comma = 44)] = "comma"),
						(t[(t.dot = 46)] = "dot"),
						(t[(t.doubleQuote = 34)] = "doubleQuote"),
						(t[(t.equals = 61)] = "equals"),
						(t[(t.exclamation = 33)] = "exclamation"),
						(t[(t.greaterThan = 62)] = "greaterThan"),
						(t[(t.lessThan = 60)] = "lessThan"),
						(t[(t.minus = 45)] = "minus"),
						(t[(t.openBrace = 123)] = "openBrace"),
						(t[(t.openBracket = 91)] = "openBracket"),
						(t[(t.openParen = 40)] = "openParen"),
						(t[(t.percent = 37)] = "percent"),
						(t[(t.plus = 43)] = "plus"),
						(t[(t.question = 63)] = "question"),
						(t[(t.semicolon = 59)] = "semicolon"),
						(t[(t.singleQuote = 39)] = "singleQuote"),
						(t[(t.slash = 47)] = "slash"),
						(t[(t.tilde = 126)] = "tilde"),
						(t[(t.backspace = 8)] = "backspace"),
						(t[(t.formFeed = 12)] = "formFeed"),
						(t[(t.byteOrderMark = 65279)] = "byteOrderMark"),
						(t[(t.tab = 9)] = "tab"),
						(t[(t.verticalTab = 11)] = "verticalTab");
				})(G4 || (G4 = {}));
		},
	}),
	gc,
	Pe,
	ih = m({
		"out-build/vs/base/common/severity.js"() {
			"use strict";
			Ft(),
				(function (t) {
					(t[(t.Ignore = 0)] = "Ignore"),
						(t[(t.Info = 1)] = "Info"),
						(t[(t.Warning = 2)] = "Warning"),
						(t[(t.Error = 3)] = "Error"),
						(t[(t.AI = 4)] = "AI");
				})(gc || (gc = {})),
				(function (t) {
					const e = "error",
						i = "warning",
						s = "warn",
						r = "info",
						n = "ignore";
					function o(c) {
						return c
							? gr(e, c)
								? t.Error
								: gr(i, c) || gr(s, c)
									? t.Warning
									: gr(r, c)
										? t.Info
										: t.Ignore
							: t.Ignore;
					}
					t.fromValue = o;
					function a(c) {
						switch (c) {
							case t.Error:
								return e;
							case t.Warning:
								return i;
							case t.Info:
								return r;
							default:
								return n;
						}
					}
					t.toString = a;
				})(gc || (gc = {})),
				(Pe = gc);
		},
	});
function rs(t) {
	if (!t || typeof t != "object" || t instanceof RegExp) return t;
	const e = Array.isArray(t) ? [] : {};
	return (
		Object.entries(t).forEach(([i, s]) => {
			e[i] = s && typeof s == "object" ? rs(s) : s;
		}),
		e
	);
}
function rD(t) {
	if (!t || typeof t != "object") return t;
	const e = [t];
	for (; e.length > 0; ) {
		const i = e.shift();
		Object.freeze(i);
		for (const s in i)
			if (j1.call(i, s)) {
				const r = i[s];
				typeof r == "object" && !Object.isFrozen(r) && !zE(r) && e.push(r);
			}
	}
	return t;
}
function nD(t, e) {
	return W1(t, e, new Set());
}
function W1(t, e, i) {
	if (Yt(t)) return t;
	const s = e(t);
	if (typeof s < "u") return s;
	if (Array.isArray(t)) {
		const r = [];
		for (const n of t) r.push(W1(n, e, i));
		return r;
	}
	if (Lt(t)) {
		if (i.has(t)) throw new Error("Cannot clone recursive data-structure");
		i.add(t);
		const r = {};
		for (const n in t) j1.call(t, n) && (r[n] = W1(t[n], e, i));
		return i.delete(t), r;
	}
	return t;
}
function wc(t, e, i = !0) {
	return Lt(t)
		? (Lt(e) &&
				Object.keys(e).forEach((s) => {
					s in t
						? i && (Lt(t[s]) && Lt(e[s]) ? wc(t[s], e[s], i) : (t[s] = e[s]))
						: (t[s] = e[s]);
				}),
			t)
		: e;
}
function _s(t, e) {
	if (t === e) return !0;
	if (
		t == null ||
		e === null ||
		e === void 0 ||
		typeof t != typeof e ||
		typeof t != "object" ||
		Array.isArray(t) !== Array.isArray(e)
	)
		return !1;
	let i, s;
	if (Array.isArray(t)) {
		if (t.length !== e.length) return !1;
		for (i = 0; i < t.length; i++) if (!_s(t[i], e[i])) return !1;
	} else {
		const r = [];
		for (s in t) r.push(s);
		r.sort();
		const n = [];
		for (s in e) n.push(s);
		if ((n.sort(), !_s(r, n))) return !1;
		for (i = 0; i < r.length; i++) if (!_s(t[r[i]], e[r[i]])) return !1;
	}
	return !0;
}
function oD(t, e) {
	const i = e.toLowerCase(),
		s = Object.keys(t).find((r) => r.toLowerCase() === i);
	return s ? t[s] : t[e];
}
var j1,
	ns = m({
		"out-build/vs/base/common/objects.js"() {
			"use strict";
			Ie(), (j1 = Object.prototype.hasOwnProperty);
		},
	});
function J4(t, e) {
	const i = rs(t);
	let s = (i.buttons ?? []).map((a) => Tv(a)),
		r = (t.buttons || []).map((a, c) => c),
		n = 0,
		o = i.cancelId ?? s.length - 1;
	if (s.length > 1) {
		const a = typeof o == "number" ? s[o] : void 0;
		if (Ee || N) {
			if (typeof a == "string" && s.length > 1 && o !== 1) {
				s.splice(o, 1), s.splice(1, 0, a);
				const c = r[o];
				r.splice(o, 1), r.splice(1, 0, c), (o = 1);
			}
			Ee &&
				s.length > 1 &&
				((s = s.reverse()),
				(r = r.reverse()),
				(n = s.length - 1),
				typeof a == "string" && (o = n - 1));
		} else if (
			T &&
			typeof a == "string" &&
			s.length > 1 &&
			o !== s.length - 1
		) {
			s.splice(o, 1), s.push(a);
			const c = r[o];
			r.splice(o, 1), r.push(c), (o = s.length - 1);
		}
	}
	return (
		(i.buttons = s),
		(i.defaultId = n),
		(i.cancelId = o),
		(i.noLink = !0),
		(i.title = i.title || e.nameLong),
		{ options: i, buttonIndeces: r }
	);
}
var aD,
	X4,
	cD,
	K4,
	Y4 = m({
		"out-build/vs/platform/dialogs/common/dialogs.js"() {
			"use strict";
			rt(),
				ih(),
				ve(),
				Y(),
				vr(),
				z(),
				ns(),
				(aD = B("dialogService")),
				(function (t) {
					(t[(t.Confirmation = 1)] = "Confirmation"),
						(t[(t.Prompt = 2)] = "Prompt"),
						(t[(t.Input = 3)] = "Input");
				})(X4 || (X4 = {})),
				(cD = B("fileDialogService")),
				(function (t) {
					(t[(t.SAVE = 0)] = "SAVE"),
						(t[(t.DONT_SAVE = 1)] = "DONT_SAVE"),
						(t[(t.CANCEL = 2)] = "CANCEL");
				})(K4 || (K4 = {}));
		},
	});
import pn from "electron";
var sr,
	sh,
	mn = m({
		"out-build/vs/platform/dialogs/electron-main/dialogMainService.js"() {
			"use strict";
			ae(),
				Qs(),
				vr(),
				F(),
				Ql(),
				z(),
				yt(),
				ve(),
				Y4(),
				Y(),
				Q(),
				Ct(),
				ti(),
				(sr = B("dialogMainService")),
				(sh = class {
					constructor(e, i) {
						(this.d = e),
							(this.e = i),
							(this.a = new Map()),
							(this.b = new Map()),
							(this.c = new Qn());
					}
					pickFileFolder(e, i) {
						return this.f(
							{ ...e, pickFolders: !0, pickFiles: !0, title: w(1744, null) },
							i,
						);
					}
					pickFolder(e, i) {
						return this.f({ ...e, pickFolders: !0, title: w(1745, null) }, i);
					}
					pickFile(e, i) {
						return this.f({ ...e, pickFiles: !0, title: w(1746, null) }, i);
					}
					pickWorkspace(e, i) {
						const s = w(1747, null),
							r = Tv(w(1748, null)),
							n = Wb;
						return this.f(
							{ ...e, pickFiles: !0, title: s, filters: n, buttonLabel: r },
							i,
						);
					}
					async f(e, i) {
						const s = {
							title: e.title,
							buttonLabel: e.buttonLabel,
							filters: e.filters,
							defaultPath: e.defaultPath,
						};
						(typeof e.pickFiles == "boolean" ||
							typeof e.pickFolders == "boolean") &&
							((s.properties = void 0),
							e.pickFiles &&
								e.pickFolders &&
								(s.properties = [
									"multiSelections",
									"openDirectory",
									"openFile",
									"createDirectory",
								])),
							s.properties ||
								(s.properties = [
									"multiSelections",
									e.pickFolders ? "openDirectory" : "openFile",
									"createDirectory",
								]),
							N && s.properties.push("treatPackageAsDirectory");
						const r = await this.showOpenDialog(
							s,
							(i || pn.BrowserWindow.getFocusedWindow()) ?? void 0,
						);
						if (r && r.filePaths && r.filePaths.length > 0) return r.filePaths;
					}
					g(e) {
						if (e) {
							let i = this.b.get(e.id);
							return i || ((i = new Qn()), this.b.set(e.id, i)), i;
						} else return this.c;
					}
					showMessageBox(e, i) {
						return this.g(i).queue(async () => {
							const { options: s, buttonIndeces: r } = J4(e, this.e);
							let n;
							return (
								i
									? (n = await pn.dialog.showMessageBox(i, s))
									: (n = await pn.dialog.showMessageBox(s)),
								{ response: r[n.response], checkboxChecked: n.checkboxChecked }
							);
						});
					}
					async showSaveDialog(e, i) {
						const s = this.j(e, i);
						if (!s)
							return (
								this.d.error(
									"[DialogMainService]: file save dialog is already or will be showing for the window with the same configuration",
								),
								{ canceled: !0, filePath: "" }
							);
						try {
							return await this.g(i).queue(async () => {
								let r;
								return (
									i
										? (r = await pn.dialog.showSaveDialog(i, e))
										: (r = await pn.dialog.showSaveDialog(e)),
									(r.filePath = this.h(r.filePath)),
									r
								);
							});
						} finally {
							vt(s);
						}
					}
					h(e) {
						return e && N && (e = eo(e)), e;
					}
					i(e) {
						return e.map((i) => this.h(i));
					}
					async showOpenDialog(e, i) {
						e.defaultPath &&
							((await ee.exists(e.defaultPath)) || (e.defaultPath = void 0));
						const s = this.j(e, i);
						if (!s)
							return (
								this.d.error(
									"[DialogMainService]: file open dialog is already or will be showing for the window with the same configuration",
								),
								{ canceled: !0, filePaths: [] }
							);
						try {
							return await this.g(i).queue(async () => {
								let r;
								return (
									i
										? (r = await pn.dialog.showOpenDialog(i, e))
										: (r = await pn.dialog.showOpenDialog(e)),
									(r.filePaths = this.i(r.filePaths)),
									r
								);
							});
						} finally {
							vt(s);
						}
					}
					j(e, i) {
						if (!i) return j.None;
						this.d.trace(
							"[DialogMainService]: request to acquire file dialog lock",
							e,
						);
						let s = this.a.get(i.id);
						s || ((s = new Set()), this.a.set(i.id, s));
						const r = Ss(e);
						if (!s.has(r))
							return (
								this.d.trace(
									"[DialogMainService]: new file dialog lock created",
									e,
								),
								s.add(r),
								ke(() => {
									this.d.trace(
										"[DialogMainService]: file dialog lock disposed",
										e,
									),
										s?.delete(r),
										s?.size === 0 && this.a.delete(i.id);
								})
							);
					}
				}),
				(sh = __decorate([__param(0, G), __param(1, tt)], sh));
		},
	});
async function lD(t, e, i) {
	for (const r of t) {
		const n = r.openedWorkspace;
		if (Vt(n)) {
			const o = await i(n);
			if (o) {
				if (o.folders.some((a) => Ze.isEqualOrParent(e, a.uri))) return r;
			} else if (Ze.isEqualOrParent(e, n.configPath)) return r;
		}
	}
	const s = t.filter(
		(r) =>
			Ci(r.openedWorkspace) && Ze.isEqualOrParent(e, r.openedWorkspace.uri),
	);
	if (s.length)
		return s.sort(
			(r, n) =>
				-(
					r.openedWorkspace.uri.path.length - n.openedWorkspace.uri.path.length
				),
		)[0];
}
function xo(t, e) {
	for (const i of t)
		if (
			(Vt(i.openedWorkspace) && Ze.isEqual(i.openedWorkspace.configPath, e)) ||
			(Ci(i.openedWorkspace) && Ze.isEqual(i.openedWorkspace.uri, e))
		)
			return i;
}
function uD(t, e) {
	const i = (s) => e.some((r) => Ze.isEqual(P.file(r), P.file(s)));
	for (const s of t)
		if (s.config?.extensionDevelopmentPath?.some((r) => i(r))) return s;
}
var Q4 = m({
	"out-build/vs/platform/windows/electron-main/windowsFinder.js"() {
		"use strict";
		rt(), ie(), ti();
	},
});
function hD(t, e, i) {
	let s, r, n, o, a;
	if (e) {
		for (o = e.offset, a = o + e.length, n = o; n > 0 && !rh(t, n - 1); ) n--;
		let I = a;
		for (; I < t.length && !rh(t, I); ) I++;
		(r = t.substring(n, I)), (s = dD(r, i));
	} else (r = t), (s = 0), (n = 0), (o = 0), (a = t.length);
	const c = fD(i, t);
	let l = !1,
		u = 0,
		d;
	i.insertSpaces ? (d = T1(" ", i.tabSize || 4)) : (d = "	");
	const f = q4(r, !1);
	let p = !1;
	function v() {
		return c + T1(d, s + u);
	}
	function g() {
		let I = f.scan();
		for (l = !1; I === 15 || I === 14; ) (l = l || I === 14), (I = f.scan());
		return (p = I === 16 || f.getTokenError() !== 0), I;
	}
	const b = [];
	function y(I, C, _) {
		!p &&
			C < a &&
			_ > o &&
			t.substring(C, _) !== I &&
			b.push({ offset: C, length: _ - C, content: I });
	}
	let k = g();
	if (k !== 17) {
		const I = f.getTokenOffset() + n,
			C = T1(d, s);
		y(C, n, I);
	}
	for (; k !== 17; ) {
		let I = f.getTokenOffset() + f.getTokenLength() + n,
			C = g(),
			_ = "";
		for (; !l && (C === 12 || C === 13); ) {
			const se = f.getTokenOffset() + n;
			y(" ", I, se),
				(I = f.getTokenOffset() + f.getTokenLength() + n),
				(_ = C === 12 ? v() : ""),
				(C = g());
		}
		if (C === 2) k !== 1 && (u--, (_ = v()));
		else if (C === 4) k !== 3 && (u--, (_ = v()));
		else {
			switch (k) {
				case 3:
				case 1:
					u++, (_ = v());
					break;
				case 5:
				case 12:
					_ = v();
					break;
				case 13:
					l ? (_ = v()) : (_ = " ");
					break;
				case 6:
					_ = " ";
					break;
				case 10:
					if (C === 6) {
						_ = "";
						break;
					}
				case 7:
				case 8:
				case 9:
				case 11:
				case 2:
				case 4:
					C === 12 || C === 13 ? (_ = " ") : C !== 5 && C !== 17 && (p = !0);
					break;
				case 16:
					p = !0;
					break;
			}
			l && (C === 12 || C === 13) && (_ = v());
		}
		const K = f.getTokenOffset() + n;
		y(_, I, K), (k = C);
	}
	return b;
}
function T1(t, e) {
	let i = "";
	for (let s = 0; s < e; s++) i += t;
	return i;
}
function dD(t, e) {
	let i = 0,
		s = 0;
	const r = e.tabSize || 4;
	for (; i < t.length; ) {
		const n = t.charAt(i);
		if (n === " ") s++;
		else if (n === "	") s += r;
		else break;
		i++;
	}
	return Math.floor(s / r);
}
function fD(t, e) {
	for (let i = 0; i < e.length; i++) {
		const s = e.charAt(i);
		if (s === "\r")
			return i + 1 < e.length &&
				e.charAt(i + 1) ===
					`
`
				? `\r
`
				: "\r";
		if (
			s ===
			`
`
		)
			return `
`;
	}
	return (
		(t && t.eol) ||
		`
`
	);
}
function rh(t, e) {
	return (
		`\r
`.indexOf(t.charAt(e)) !== -1
	);
}
var pD = m({
	"out-build/vs/base/common/jsonFormatter.js"() {
		"use strict";
		ir();
	},
});
function mD(t, e, i, s, r) {
	const n = e.slice(),
		a = sD(t, []);
	let c, l;
	for (
		;
		n.length > 0 &&
		((l = n.pop()), (c = B4(a, n)), c === void 0 && i !== void 0);
	)
		typeof l == "string" ? (i = { [l]: i }) : (i = [i]);
	if (c)
		if (
			c.type === "object" &&
			typeof l == "string" &&
			Array.isArray(c.children)
		) {
			const u = B4(c, [l]);
			if (u !== void 0)
				if (i === void 0) {
					if (!u.parent) throw new Error("Malformed AST");
					const d = c.children.indexOf(u.parent);
					let f,
						p = u.parent.offset + u.parent.length;
					if (d > 0) {
						const v = c.children[d - 1];
						f = v.offset + v.length;
					} else
						(f = c.offset + 1),
							c.children.length > 1 && (p = c.children[1].offset);
					return Do(t, { offset: f, length: p - f, content: "" }, s);
				} else
					return Do(
						t,
						{ offset: u.offset, length: u.length, content: JSON.stringify(i) },
						s,
					);
			else {
				if (i === void 0) return [];
				const d = `${JSON.stringify(l)}: ${JSON.stringify(i)}`,
					f = r
						? r(c.children.map((v) => v.children[0].value))
						: c.children.length;
				let p;
				if (f > 0) {
					const v = c.children[f - 1];
					p = { offset: v.offset + v.length, length: 0, content: "," + d };
				} else
					c.children.length === 0
						? (p = { offset: c.offset + 1, length: 0, content: d })
						: (p = { offset: c.offset + 1, length: 0, content: d + "," });
				return Do(t, p, s);
			}
		} else if (
			c.type === "array" &&
			typeof l == "number" &&
			Array.isArray(c.children)
		)
			if (i !== void 0) {
				const u = `${JSON.stringify(i)}`;
				let d;
				if (c.children.length === 0 || l === 0)
					d = {
						offset: c.offset + 1,
						length: 0,
						content: c.children.length === 0 ? u : u + ",",
					};
				else {
					const f = l === -1 || l > c.children.length ? c.children.length : l,
						p = c.children[f - 1];
					d = { offset: p.offset + p.length, length: 0, content: "," + u };
				}
				return Do(t, d, s);
			} else {
				const u = l,
					d = c.children[u];
				let f;
				if (c.children.length === 1)
					f = { offset: c.offset + 1, length: c.length - 2, content: "" };
				else if (c.children.length - 1 === u) {
					const p = c.children[u - 1],
						v = p.offset + p.length,
						g = c.offset + c.length;
					f = { offset: v, length: g - 2 - v, content: "" };
				} else
					f = {
						offset: d.offset,
						length: c.children[u + 1].offset - d.offset,
						content: "",
					};
				return Do(t, f, s);
			}
		else
			throw new Error(
				`Can not add ${typeof l != "number" ? "index" : "property"} to parent of type ${c.type}`,
			);
	else
		return i === void 0
			? []
			: Do(
					t,
					{
						offset: a ? a.offset : 0,
						length: a ? a.length : 0,
						content: JSON.stringify(i),
					},
					s,
				);
}
function Do(t, e, i) {
	let s = U1(t, e),
		r = e.offset,
		n = e.offset + e.content.length;
	if (e.length === 0 || e.content.length === 0) {
		for (; r > 0 && !rh(s, r - 1); ) r--;
		for (; n < s.length && !rh(s, n); ) n++;
	}
	const o = hD(s, { offset: r, length: n - r }, i);
	for (let c = o.length - 1; c >= 0; c--) {
		const l = o[c];
		(s = U1(s, l)),
			(r = Math.min(r, l.offset)),
			(n = Math.max(n, l.offset + l.length)),
			(n += l.content.length - l.length);
	}
	const a = t.length - (s.length - n) - r;
	return [{ offset: r, length: a, content: s.substring(r, n) }];
}
function U1(t, e) {
	return (
		t.substring(0, e.offset) + e.content + t.substring(e.offset + e.length)
	);
}
function gD(t, e) {
	const i = e.slice(0).sort((r, n) => {
		const o = r.offset - n.offset;
		return o === 0 ? r.length - n.length : o;
	});
	let s = t.length;
	for (let r = i.length - 1; r >= 0; r--) {
		const n = i[r];
		if (n.offset + n.length <= s) t = U1(t, n);
		else throw new Error("Overlapping edit");
		s = n.offset;
	}
	return t;
}
var Z4 = m({
	"out-build/vs/base/common/jsonEdit.js"() {
		"use strict";
		ir(), pD();
	},
});
function Po(t) {
	return t.scheme === R.vscodeRemote ? t.authority : void 0;
}
var vc = m({
	"out-build/vs/platform/remote/common/remoteHosts.js"() {
		"use strict";
		Ce();
	},
});
function q1(t) {
	return t.hasOwnProperty("workspace");
}
function nh(t) {
	return t.hasOwnProperty("folderUri");
}
function wD(t) {
	return t.hasOwnProperty("fileUri");
}
function vD(t) {
	return e2(t) || t2(t);
}
function e2(t) {
	const e = t;
	return typeof e?.path == "string" && (!e.name || typeof e.name == "string");
}
function t2(t) {
	const e = t;
	return typeof e?.uri == "string" && (!e.name || typeof e.name == "string");
}
function yD(t, e, i, s, r) {
	if (t.scheme !== s.scheme) return { name: i, uri: t.toString(!0) };
	let n = e ? void 0 : r.relativePath(s, t);
	if (n !== void 0) n.length === 0 ? (n = ".") : T && (n = i2(n));
	else if (t.scheme === R.file) (n = t.fsPath), T && (n = i2(n));
	else if (r.isEqualAuthority(t.authority, s.authority)) n = t.path;
	else return { name: i, uri: t.toString(!0) };
	return { name: i, path: n };
}
function i2(t) {
	return (t = Sp(t)), PS(t) || (t = Kn(t)), t;
}
function bD(t, e, i) {
	const s = [],
		r = new Set(),
		n = i.dirname(e);
	for (const o of t) {
		let a;
		if (e2(o)) o.path && (a = i.resolvePath(n, o.path));
		else if (t2(o))
			try {
				(a = P.parse(o.uri)),
					a.path[0] !== oe.sep && (a = a.with({ path: oe.sep + a.path }));
			} catch (c) {
				console.warn(c);
			}
		if (a) {
			const c = i.getComparisonKey(a);
			if (!r.has(c)) {
				r.add(c);
				const l = o.name || i.basenameOrAuthority(a);
				s.push(new Fb({ uri: a, name: l, index: s.length }, o));
			}
		}
	}
	return s;
}
function ED(t) {
	return (
		t.workspace &&
		typeof t.workspace == "object" &&
		typeof t.workspace.id == "string" &&
		typeof t.workspace.configPath == "string"
	);
}
function SD(t) {
	return typeof t.folderUri == "string";
}
function kD(t) {
	return typeof t.fileUri == "string";
}
function xD(t, e) {
	const i = { workspaces: [], files: [] };
	if (t) {
		const s = function (n, o) {
				for (let a = 0; a < n.length; a++)
					try {
						o(n[a], a);
					} catch (c) {
						e.warn(
							`Error restoring recent entry ${JSON.stringify(n[a])}: ${c.toString()}. Skip entry.`,
						);
					}
			},
			r = t;
		Array.isArray(r.entries) &&
			s(r.entries, (n) => {
				const o = n.label,
					a = n.remoteAuthority;
				ED(n)
					? i.workspaces.push({
							label: o,
							remoteAuthority: a,
							workspace: {
								id: n.workspace.id,
								configPath: P.parse(n.workspace.configPath),
							},
						})
					: SD(n)
						? i.workspaces.push({
								label: o,
								remoteAuthority: a,
								folderUri: P.parse(n.folderUri),
							})
						: kD(n) &&
							i.files.push({
								label: o,
								remoteAuthority: a,
								fileUri: P.parse(n.fileUri),
							});
			});
	}
	return i;
}
function DD(t) {
	const e = { entries: [] };
	for (const i of t.workspaces)
		nh(i)
			? e.entries.push({
					folderUri: i.folderUri.toString(),
					label: i.label,
					remoteAuthority: i.remoteAuthority,
				})
			: e.entries.push({
					workspace: {
						id: i.workspace.id,
						configPath: i.workspace.configPath.toString(),
					},
					label: i.label,
					remoteAuthority: i.remoteAuthority,
				});
	for (const i of t.files)
		e.entries.push({
			fileUri: i.fileUri.toString(),
			label: i.label,
			remoteAuthority: i.remoteAuthority,
		});
	return e;
}
var B1,
	z1 = m({
		"out-build/vs/platform/workspaces/common/workspaces.js"() {
			"use strict";
			hi(),
				ir(),
				Z4(),
				vr(),
				Ce(),
				ge(),
				z(),
				rt(),
				ie(),
				Y(),
				vc(),
				ti(),
				(B1 = B("workspacesService"));
		},
	});
import * as s2 from "fs";
import PD from "electron";
var Pr,
	oh,
	gn = m({
		"out-build/vs/platform/workspaces/electron-main/workspacesManagementMainService.js"() {
			"use strict";
			q(),
				ir(),
				F(),
				Ce(),
				ge(),
				rt(),
				yt(),
				ve(),
				pc(),
				mn(),
				bt(),
				Y(),
				Q(),
				an(),
				Q4(),
				ti(),
				z1(),
				C1(),
				(Pr = B("workspacesManagementMainService")),
				(oh = class extends j {
					constructor(e, i, s, r, n) {
						super(),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = n),
							(this.a = this.D(new $())),
							(this.onDidDeleteUntitledWorkspace = this.a.event),
							(this.b = this.D(new $())),
							(this.onDidEnterWorkspace = this.b.event),
							(this.c = this.g.untitledWorkspacesHome),
							(this.f = []);
					}
					async initialize() {
						this.f = [];
						try {
							const e = (
								await ee.readdir(this.c.with({ scheme: R.file }).fsPath)
							).map((i) => he(this.c, i, i1));
							for (const i of e) {
								const s = dn(i),
									r = await this.resolveLocalWorkspace(i);
								r
									? this.f.push({
											workspace: s,
											remoteAuthority: r.remoteAuthority,
										})
									: await this.deleteUntitledWorkspace(s);
							}
						} catch (e) {
							e.code !== "ENOENT" &&
								this.h.warn(`Unable to read folders in ${this.c} (${e}).`);
						}
					}
					resolveLocalWorkspace(e) {
						return this.q(e, (i) => s2.promises.readFile(i, "utf8"));
					}
					q(e, i) {
						if (this.r(e) && e.scheme === R.file)
							try {
								const s = i(e.fsPath);
								return s instanceof Promise
									? s.then(
											(r) => this.s(e, r),
											(r) => {},
										)
									: this.s(e, s);
							} catch {
								return;
							}
					}
					r(e) {
						return Rb(e, this.g) || on(e);
					}
					s(e, i) {
						try {
							const s = this.t(e, i),
								r = dn(e);
							return {
								id: r.id,
								configPath: r.configPath,
								folders: bD(s.folders, r.configPath, Ze),
								remoteAuthority: s.remoteAuthority,
								transient: s.transient,
							};
						} catch (s) {
							this.h.warn(s.toString());
						}
					}
					t(e, i) {
						const s = fn(i);
						if (s && Array.isArray(s.folders))
							s.folders = s.folders.filter((r) => vD(r));
						else
							throw new Error(
								`${e.toString(!0)} looks like an invalid workspace file.`,
							);
						return s;
					}
					async createUntitledWorkspace(e, i) {
						const { workspace: s, storedWorkspace: r } = this.u(e, i),
							n = s.configPath.fsPath;
						return (
							await s2.promises.mkdir(Ke(n), { recursive: !0 }),
							await ee.writeFile(n, JSON.stringify(r, null, "	")),
							this.f.push({ workspace: s, remoteAuthority: i }),
							s
						);
					}
					u(e = [], i) {
						const s = (Date.now() + Math.round(Math.random() * 1e3)).toString(),
							r = he(this.c, s),
							n = he(r, i1),
							o = [];
						for (const a of e) o.push(yD(a.uri, !0, a.name, r, Ze));
						return {
							workspace: dn(n),
							storedWorkspace: { folders: o, remoteAuthority: i },
						};
					}
					async getWorkspaceIdentifier(e) {
						return dn(e);
					}
					isUntitledWorkspace(e) {
						return Rb(e.configPath, this.g);
					}
					async deleteUntitledWorkspace(e) {
						this.isUntitledWorkspace(e) &&
							(await this.w(e), this.j.unsetWorkspace(e), this.a.fire(e));
					}
					async w(e) {
						const i = $i(e.configPath);
						try {
							await ee.rm(Ke(i));
							const s = M(
								this.g.workspaceStorageHome.with({ scheme: R.file }).fsPath,
								e.id,
							);
							(await ee.exists(s)) &&
								(await ee.writeFile(M(s, "obsolete"), "")),
								(this.f = this.f.filter((r) => r.workspace.id !== e.id));
						} catch (s) {
							this.h.warn(`Unable to delete untitled workspace ${i} (${s}).`);
						}
					}
					getUntitledWorkspaces() {
						return this.f;
					}
					async enterWorkspace(e, i, s) {
						if (!e || !e.win || !e.isReady || !(await this.y(e, i, s))) return;
						const n = await this.z(e, dn(s));
						if (n) return this.b.fire({ window: e, workspace: n.workspace }), n;
					}
					async y(e, i, s) {
						return s
							? Vt(e.openedWorkspace) &&
								Ze.isEqual(e.openedWorkspace.configPath, s)
								? !1
								: xo(i, s)
									? (await this.n.showMessageBox(
											{
												type: "info",
												buttons: [w(2545, null)],
												message: w(2546, null, ys(s)),
												detail: w(2547, null),
											},
											PD.BrowserWindow.getFocusedWindow() ?? void 0,
										),
										!1)
									: !0
							: !0;
					}
					async z(e, i) {
						if (!e.config) return;
						e.focus();
						let s;
						return (
							e.config.extensionDevelopmentPath ||
								(e.config.backupPath
									? (s = await this.m.registerWorkspaceBackup(
											{ workspace: i, remoteAuthority: e.remoteAuthority },
											e.config.backupPath,
										))
									: (s = this.m.registerWorkspaceBackup({
											workspace: i,
											remoteAuthority: e.remoteAuthority,
										}))),
							Vt(e.openedWorkspace) &&
								this.isUntitledWorkspace(e.openedWorkspace) &&
								(await this.deleteUntitledWorkspace(e.openedWorkspace)),
							(e.config.workspace = i),
							(e.config.backupPath = s),
							{ workspace: i, backupPath: s }
						);
					}
				}),
				(oh = __decorate(
					[
						__param(0, ut),
						__param(1, G),
						__param(2, Cs),
						__param(3, Eo),
						__param(4, sr),
					],
					oh,
				));
		},
	});
function $D(t, ...e) {
	const i = e.reduce((n, o) => ((n[o] = !0), n), {}),
		s = [
			/^ELECTRON_.+$/,
			/^VSCODE_(?!(PORTABLE|SHELL_LOGIN|ENV_REPLACE|ENV_APPEND|ENV_PREPEND)).+$/,
			/^SNAP(|_.*)$/,
			/^GDK_PIXBUF_.+$/,
		];
	Object.keys(t)
		.filter((n) => !i[n])
		.forEach((n) => {
			for (let o = 0; o < s.length; o++)
				if (n.search(s[o]) !== -1) {
					delete t[n];
					break;
				}
		});
}
function r2(t) {
	t && (delete t.DEBUG, Ee && delete t.LD_PRELOAD);
}
var n2,
	o2,
	ah = m({
		"out-build/vs/base/common/processes.js"() {
			"use strict";
			z(),
				(function (t) {
					(t[(t.stdout = 0)] = "stdout"), (t[(t.stderr = 1)] = "stderr");
				})(n2 || (n2 = {})),
				(function (t) {
					(t[(t.Success = 0)] = "Success"),
						(t[(t.Unknown = 1)] = "Unknown"),
						(t[(t.AccessDenied = 2)] = "AccessDenied"),
						(t[(t.ProcessNotFound = 3)] = "ProcessNotFound");
				})(o2 || (o2 = {}));
		},
	});
import {
	MessageChannelMain as AD,
	app as ID,
	utilityProcess as CD,
} from "electron";
import { StringDecoder as a2 } from "string_decoder";
function _D(t) {
	return typeof t.responseWindowId == "number";
}
var $o,
	$r,
	yc,
	Ao = m({
		"out-build/vs/platform/utilityProcess/electron-main/utilityProcess.js"() {
			"use strict";
			F(),
				q(),
				Q(),
				ae(),
				Ce(),
				si(),
				ih(),
				St(),
				ot(),
				ah(),
				ns(),
				z(),
				fa(),
				($r = class extends j {
					static {
						$o = this;
					}
					static {
						this.a = 0;
					}
					static {
						this.b = new Map();
					}
					static getAll() {
						return Array.from($o.b.values());
					}
					constructor(e, i, s) {
						super(),
							(this.t = e),
							(this.u = i),
							(this.w = s),
							(this.c = String(++$o.a)),
							(this.f = this.D(new $())),
							(this.onStdout = this.f.event),
							(this.g = this.D(new $())),
							(this.onStderr = this.g.event),
							(this.h = this.D(new $())),
							(this.onMessage = this.h.event),
							(this.j = this.D(new $())),
							(this.onSpawn = this.j.event),
							(this.m = this.D(new $())),
							(this.onExit = this.m.event),
							(this.n = this.D(new $())),
							(this.onCrash = this.n.event),
							(this.q = void 0),
							(this.r = void 0),
							(this.s = void 0);
					}
					y(e, i) {
						let s;
						switch (
							(this.s?.correlationId
								? (s = `[UtilityProcess id: ${this.s?.correlationId}, type: ${this.s?.type}, pid: ${this.r ?? "<none>"}]: ${e}`)
								: (s = `[UtilityProcess type: ${this.s?.type}, pid: ${this.r ?? "<none>"}]: ${e}`),
							i)
						) {
							case Pe.Error:
								this.t.error(s);
								break;
							case Pe.Warning:
								this.t.warn(s);
								break;
							case Pe.Info:
								this.t.trace(s);
								break;
						}
					}
					z() {
						return this.q
							? (this.y(
									"Cannot start utility process because it is already running...",
									Pe.Error,
								),
								!1)
							: !0;
					}
					start(e) {
						const i = this.C(e);
						return (
							i &&
								e.payload &&
								this.postMessage(e.payload) &&
								this.y("payload sent via postMessage()", Pe.Info),
							i
						);
					}
					C(e) {
						if (!this.z()) return !1;
						this.s = e;
						const i = `${this.s.type}-${this.c}`,
							s = $t.asFileUri("bootstrap-fork.js").fsPath,
							r = this.s.args ?? [],
							n = this.s.execArgv ?? [],
							o = this.s.allowLoadingUnsignedLibraries,
							a = this.s.respondToAuthRequestsFromMainProcess,
							c = "pipe",
							l = this.F(e);
						return (
							this.y("creating new...", Pe.Info),
							(this.q = CD.fork(s, r, {
								serviceName: i,
								env: l,
								execArgv: n,
								allowLoadingUnsignedLibraries: o,
								respondToAuthRequestsFromMainProcess: a,
								stdio: c,
							})),
							this.G(this.q, this.s, i),
							!0
						);
					}
					F(e) {
						const i = e.env ? { ...e.env } : { ...rs(process.env) };
						(i.VSCODE_PROCESS_TITLE = e.processTitle),
							(i.VSCODE_ESM_ENTRYPOINT = e.entryPoint),
							typeof e.parentLifecycleBound == "number" &&
								(i.VSCODE_PARENT_PID = String(e.parentLifecycleBound)),
							(i.VSCODE_CRASH_REPORTER_PROCESS_TYPE = e.type),
							T &&
								(gE()
									? (i.NODE_DISABLE_UNC_ACCESS_CHECKS = "1")
									: (i.NODE_UNC_HOST_ALLOWLIST = fE().join("\\"))),
							r2(i);
						for (const s of Object.keys(i)) i[s] = String(i[s]);
						return i;
					}
					G(e, i, s) {
						if (e.stdout) {
							const r = new a2("utf-8");
							this.D(
								x.fromNodeEventEmitter(
									e.stdout,
									"data",
								)((n) => this.f.fire(typeof n == "string" ? n : r.write(n))),
							);
						}
						if (e.stderr) {
							const r = new a2("utf-8");
							this.D(
								x.fromNodeEventEmitter(
									e.stderr,
									"data",
								)((n) => this.g.fire(typeof n == "string" ? n : r.write(n))),
							);
						}
						this.D(x.fromNodeEventEmitter(e, "message")((r) => this.h.fire(r))),
							this.D(
								x.fromNodeEventEmitter(
									e,
									"spawn",
								)(() => {
									(this.r = e.pid),
										typeof e.pid == "number" &&
											$o.b.set(e.pid, {
												pid: e.pid,
												name: _D(i)
													? `${i.type} [${i.responseWindowId}]`
													: i.type,
											}),
										this.y("successfully created", Pe.Info),
										this.j.fire(e.pid);
								}),
							),
							this.D(
								x.fromNodeEventEmitter(
									e,
									"exit",
								)((r) => {
									this.y(`received exit event with code ${r}`, Pe.Info),
										this.m.fire({ pid: this.r, code: r, signal: "unknown" }),
										this.H();
								}),
							),
							this.D(
								x.fromNodeEventEmitter(e, "error", (r, n, o) => ({
									type: r,
									location: n,
									report: o,
								}))(({ type: r, location: n, report: o }) => {
									this.y(`crashed due to ${r} from V8 at ${n}`, Pe.Info);
									let a = [];
									try {
										a = JSON.parse(o)
											.sharedObjects.filter((l) => l.endsWith(".node"))
											.map((l) => {
												const u =
													l.indexOf("extensions") === -1
														? l.indexOf("node_modules")
														: l.indexOf("extensions");
												return l.substring(u);
											});
									} catch {}
									this.u.publicLog2("utilityprocessv8error", {
										processtype: i.type,
										error: r,
										location: n,
										addons: a,
									});
								}),
							),
							this.D(
								x.fromNodeEventEmitter(ID, "child-process-gone", (r, n) => ({
									event: r,
									details: n,
								}))(({ details: r }) => {
									r.type === "Utility" &&
										r.name === s &&
										(this.y(
											`crashed with code ${r.exitCode} and reason '${r.reason}'`,
											Pe.Error,
										),
										this.u.publicLog2("utilityprocesscrash", {
											type: i.type,
											reason: r.reason,
											code: r.exitCode,
										}),
										this.n.fire({
											pid: this.r,
											code: r.exitCode,
											reason: r.reason,
										}),
										this.H());
								}),
							);
					}
					once(e, i) {
						const s = this.D(
							this.h.event((r) => {
								r === e && (s.dispose(), i());
							}),
						);
					}
					postMessage(e, i) {
						return this.q ? (this.q.postMessage(e, i), !0) : !1;
					}
					connect(e) {
						const { port1: i, port2: s } = new AD();
						return this.postMessage(e, [s]), i;
					}
					enableInspectPort() {
						if (!this.q || typeof this.r != "number") return !1;
						this.y("enabling inspect port", Pe.Info);
						const e = process;
						return typeof e._debugProcess == "function"
							? (e._debugProcess(this.r), !0)
							: !1;
					}
					kill() {
						if (!this.q) return;
						this.y("attempting to kill the process...", Pe.Info),
							this.q.kill()
								? (this.y("successfully killed the process", Pe.Info), this.H())
								: this.y("unable to kill the process", Pe.Warning);
					}
					H() {
						typeof this.r == "number" && $o.b.delete(this.r), (this.q = void 0);
					}
					async waitForExit(e) {
						this.q &&
							(this.y("waiting to exit...", Pe.Info),
							await Promise.race([x.toPromise(this.onExit), Ai(e)]),
							this.q &&
								(this.y(
									`did not exit within ${e}ms, will kill it now...`,
									Pe.Info,
								),
								this.kill()));
					}
				}),
				($r = $o =
					__decorate([__param(0, G), __param(1, It), __param(2, Ne)], $r)),
				(yc = class extends $r {
					constructor(e, i, s, r) {
						super(e, s, r), (this.I = i);
					}
					start(e) {
						const i = this.I.getWindowById(e.responseWindowId);
						if (
							!i?.win ||
							i.win.isDestroyed() ||
							i.win.webContents.isDestroyed()
						)
							return (
								this.y(
									"Refusing to start utility process because requesting window cannot be found or is destroyed...",
									Pe.Error,
								),
								!0
							);
						if (!super.C(e)) return !1;
						this.J(i.win, e);
						const r = this.connect(e.payload);
						return (
							i.win.webContents.postMessage(
								e.responseChannel,
								e.responseNonce,
								[r],
							),
							!0
						);
					}
					J(e, i) {
						i.windowLifecycleBound &&
							(this.D(
								x.filter(
									this.w.onWillLoadWindow,
									(s) => s.window.win === e,
								)(() => this.kill()),
							),
							this.D(x.fromNodeEventEmitter(e, "closed")(() => this.kill())));
					}
				}),
				(yc = __decorate(
					[__param(0, G), __param(1, _t), __param(2, It), __param(3, Ne)],
					yc,
				));
		},
	});
import { app as c2, BrowserWindow as RD } from "electron";
var l2,
	ch,
	lh,
	u2 = m({
		"out-build/vs/platform/diagnostics/electron-main/diagnosticsMainService.js"() {
			"use strict";
			is(),
				Mt(),
				Y(),
				si(),
				ti(),
				gn(),
				Ie(),
				Q(),
				Ao(),
				(l2 = "diagnosticsMainService"),
				(ch = B(l2)),
				(lh = class {
					constructor(e, i, s) {
						(this.a = e), (this.b = i), (this.c = s);
					}
					async getRemoteDiagnostics(e) {
						const i = this.a.getWindows();
						return (
							await Promise.all(
								i.map(async (r) => {
									const n = r.remoteAuthority;
									if (!n) return;
									const o = `vscode:getDiagnosticInfoResponse${r.id}`,
										a = {
											includeProcesses: e.includeProcesses,
											folders: e.includeWorkspaceMetadata
												? await this.f(r)
												: void 0,
										};
									return new Promise((c) => {
										r.sendWhenReady("vscode:getDiagnosticInfo", Ge.None, {
											replyChannel: o,
											args: a,
										}),
											et.once(o, (l, u) => {
												u ||
													c({
														hostName: n,
														errorMessage: `Unable to resolve connection to '${n}'.`,
													}),
													c(u);
											}),
											setTimeout(() => {
												c({
													hostName: n,
													errorMessage: `Connection to '${n}' could not be established`,
												});
											}, 5e3);
									});
								}),
							)
						).filter((r) => !!r);
					}
					async getMainDiagnostics() {
						this.c.trace(
							"Received request for main process info from other instance.",
						);
						const e = [];
						for (const s of RD.getAllWindows()) {
							const r = this.a.getWindowById(s.id);
							r ? e.push(await this.d(r)) : e.push(this.e(s));
						}
						const i = [];
						for (const { pid: s, name: r } of $r.getAll())
							i.push({ pid: s, name: r });
						return {
							mainPID: process.pid,
							mainArguments: process.argv.slice(1),
							windows: e,
							pidToNames: i,
							screenReader: !!c2.accessibilitySupportEnabled,
							gpuFeatureStatus: c2.getGPUFeatureStatus(),
						};
					}
					async d(e) {
						const i = await this.f(e),
							s = Pa(e.win);
						return this.e(s, i, e.remoteAuthority);
					}
					e(e, i = [], s) {
						return {
							id: e.id,
							pid: e.webContents.getOSProcessId(),
							title: e.getTitle(),
							folderURIs: i,
							remoteAuthority: s,
						};
					}
					async f(e) {
						const i = [],
							s = e.openedWorkspace;
						if (Ci(s)) i.push(s.uri);
						else if (Vt(s)) {
							const r = await this.b.resolveLocalWorkspace(s.configPath);
							r &&
								r.folders.forEach((o) => {
									i.push(o.uri);
								});
						}
						return i;
					}
				}),
				(lh = __decorate([__param(0, _t), __param(1, Pr), __param(2, G)], lh));
		},
	});
import { safeStorage as OD, app as LD } from "electron";
var rr,
	uh,
	MD = m({
		"out-build/vs/platform/encryption/electron-main/encryptionMainService.js"() {
			"use strict";
			z(),
				Q(),
				(rr = OD),
				(uh = class {
					constructor(e) {
						(this.a = e),
							LD.commandLine.getSwitchValue("password-store") === "basic" &&
								(this.a.trace(
									"[EncryptionMainService] setting usePlainTextEncryption to true...",
								),
								rr.setUsePlainTextEncryption?.(!0),
								this.a.trace(
									"[EncryptionMainService] set usePlainTextEncryption to true",
								));
					}
					async encrypt(e) {
						this.a.trace("[EncryptionMainService] Encrypting value...");
						try {
							const i = JSON.stringify(rr.encryptString(e));
							return (
								this.a.trace("[EncryptionMainService] Encrypted value."), i
							);
						} catch (i) {
							throw (this.a.error(i), i);
						}
					}
					async decrypt(e) {
						let i;
						try {
							if (((i = JSON.parse(e)), !i.data))
								throw new Error(
									`[EncryptionMainService] Invalid encrypted value: ${e}`,
								);
							const s = Buffer.from(i.data);
							this.a.trace("[EncryptionMainService] Decrypting value...");
							const r = rr.decryptString(s);
							return (
								this.a.trace("[EncryptionMainService] Decrypted value."), r
							);
						} catch (s) {
							throw (this.a.error(s), s);
						}
					}
					isEncryptionAvailable() {
						this.a.trace(
							"[EncryptionMainService] Checking if encryption is available...",
						);
						const e = rr.isEncryptionAvailable();
						return (
							this.a.trace(
								"[EncryptionMainService] Encryption is available: ",
								e,
							),
							Promise.resolve(e)
						);
					}
					getKeyStorageProvider() {
						if (T) return Promise.resolve("dpapi");
						if (N) return Promise.resolve("keychain_access");
						if (rr.getSelectedStorageBackend)
							try {
								this.a.trace(
									"[EncryptionMainService] Getting selected storage backend...",
								);
								const e = rr.getSelectedStorageBackend();
								return (
									this.a.trace(
										"[EncryptionMainService] Selected storage backend: ",
										e,
									),
									Promise.resolve(e)
								);
							} catch (e) {
								this.a.error(e);
							}
						return Promise.resolve("unknown");
					}
					async setUsePlainTextEncryption() {
						if (T)
							throw new Error(
								"Setting plain text encryption is not supported on Windows.",
							);
						if (N)
							throw new Error(
								"Setting plain text encryption is not supported on macOS.",
							);
						if (!rr.setUsePlainTextEncryption)
							throw new Error(
								"Setting plain text encryption is not supported.",
							);
						this.a.trace(
							"[EncryptionMainService] Setting usePlainTextEncryption to true...",
						),
							rr.setUsePlainTextEncryption(!0),
							this.a.trace(
								"[EncryptionMainService] Set usePlainTextEncryption to true",
							);
					}
				}),
				(uh = __decorate([__param(0, G)], uh));
		},
	});
import FD from "assert";
function ND(t, e) {
	const i = (c, l) => {
			console.warn(w(1798, null, c, l));
		},
		s = (c) => {
			console.warn(w(1799, null, c));
		},
		r = (c, l) => {
			console.warn(w(1800, null, c, l));
		},
		n = (c) => ({
			onUnknownOption: (l) => {
				R1.includes(c) || console.warn(w(1801, null, l, c));
			},
			onMultipleValues: i,
			onEmptyValue: s,
			onDeprecatedOption: r,
			getSubcommandReporter: R1.includes(c) ? n : void 0,
		}),
		a = _1(
			t,
			O1,
			e
				? {
						onUnknownOption: (c) => {
							console.warn(w(1802, null, c));
						},
						onMultipleValues: i,
						onEmptyValue: s,
						onDeprecatedOption: r,
						getSubcommandReporter: n,
					}
				: void 0,
		);
	return (
		a.goto &&
			a._.forEach((c) =>
				FD(/^(\w:)?[^:]+(:\d*){0,2}:?$/.test(c), w(1803, null)),
			),
		a
	);
}
function WD(t) {
	const e = t.findIndex((i) => !/^-/.test(i));
	if (e > -1) return [...t.slice(0, e), ...t.slice(e + 1)];
}
function jD(t) {
	let [, ...e] = t;
	process.env.VSCODE_DEV && (e = WD(e) || []);
	const i = !wn(process.env);
	return ND(e, i);
}
function TD(t, ...e) {
	const i = t.indexOf("--");
	return i === -1 ? t.push(...e) : t.splice(i, 0, ...e), t;
}
function wn(t) {
	return t.VSCODE_CLI === "1";
}
var bc = m({
	"out-build/vs/platform/environment/node/argvHelper.js"() {
		"use strict";
		ve(), j4();
	},
});
import * as UD from "os";
function qD({ useAlternateBitness: t = !1 } = {}) {
	return t
		? Ec === 0
			? process.env["ProgramFiles(x86)"] || null
			: (Io === 0 && process.env.ProgramW6432) || null
		: process.env.ProgramFiles || null;
}
async function hh({ useAlternateBitness: t = !1, findPreview: e = !1 } = {}) {
	const i = qD({ useAlternateBitness: t });
	if (!i) return null;
	const s = M(i, "PowerShell");
	if (!(await Wt.existsDirectory(s))) return null;
	let r = -1,
		n = null;
	for (const c of await ee.readdir(s)) {
		let l = -1;
		if (e) {
			const d = c.indexOf("-");
			if (d < 0) continue;
			const f = c.substring(0, d);
			if (!H1.test(f) || c.substring(d + 1) !== "preview") continue;
			l = parseInt(f, 10);
		} else {
			if (!H1.test(c)) continue;
			l = parseInt(c, 10);
		}
		if (l <= r) continue;
		const u = M(s, c, "pwsh.exe");
		(await Wt.existsFile(u)) && ((n = u), (r = l));
	}
	if (!n) return null;
	const o = i.includes("x86") ? " (x86)" : "",
		a = e ? " Preview" : "";
	return new Sc(n, `PowerShell${a}${o}`, !0);
}
async function h2({ findPreview: t } = {}) {
	if (!process.env.LOCALAPPDATA) return null;
	const e = M(process.env.LOCALAPPDATA, "Microsoft", "WindowsApps");
	if (!(await Wt.existsDirectory(e))) return null;
	const { pwshMsixDirRegex: i, pwshMsixName: s } = t
		? { pwshMsixDirRegex: p2, pwshMsixName: "PowerShell Preview (Store)" }
		: { pwshMsixDirRegex: f2, pwshMsixName: "PowerShell (Store)" };
	for (const r of await ee.readdir(e))
		if (i.test(r)) {
			const n = M(e, r, "pwsh.exe");
			return new Sc(n, s);
		}
	return null;
}
function BD() {
	const t = M(UD.homedir(), ".dotnet", "tools", "pwsh.exe");
	return new Sc(t, ".NET Core PowerShell Global Tool");
}
function zD() {
	const t = M(
		process.env.windir,
		Ec === 1 && Io !== 1 ? "SysNative" : "System32",
		"WindowsPowerShell",
		"v1.0",
		"powershell.exe",
	);
	return new Sc(t, "Windows PowerShell", !0);
}
async function* HD() {
	let t = await hh();
	t && (yield t),
		(t = await hh({ useAlternateBitness: !0 })),
		t && (yield t),
		(t = await h2()),
		t && (yield t),
		(t = BD()),
		t && (yield t),
		(t = await hh({ findPreview: !0 })),
		t && (yield t),
		(t = await h2({ findPreview: !0 })),
		t && (yield t),
		(t = await hh({ useAlternateBitness: !0, findPreview: !0 })),
		t && (yield t),
		(t = zD()),
		t && (yield t);
}
async function* d2() {
	for await (const t of HD()) (await t.exists()) && (yield t);
}
async function VD() {
	for await (const t of d2()) return t;
	return null;
}
var H1,
	f2,
	p2,
	m2,
	Ec,
	Io,
	Sc,
	g2 = m({
		"out-build/vs/base/node/powershell.js"() {
			"use strict";
			switch (
				(ge(),
				yt(),
				(H1 = /^\d+$/),
				(f2 = /^Microsoft.PowerShell_.*/),
				(p2 = /^Microsoft.PowerShellPreview_.*/),
				(function (t) {
					(t[(t.x64 = 0)] = "x64"),
						(t[(t.x86 = 1)] = "x86"),
						(t[(t.ARM = 2)] = "ARM");
				})(m2 || (m2 = {})),
				process.arch)
			) {
				case "ia32":
					Ec = 1;
					break;
				case "arm":
				case "arm64":
					Ec = 2;
					break;
				default:
					Ec = 0;
					break;
			}
			process.env.PROCESSOR_ARCHITEW6432
				? (Io = process.env.PROCESSOR_ARCHITEW6432 === "ARM64" ? 2 : 0)
				: process.env.PROCESSOR_ARCHITECTURE === "ARM64"
					? (Io = 2)
					: process.env.PROCESSOR_ARCHITECTURE === "X86"
						? (Io = 1)
						: (Io = 0),
				(Sc = class {
					constructor(t, e, i) {
						(this.exePath = t), (this.displayName = e), (this.a = i);
					}
					async exists() {
						return (
							this.a === void 0 && (this.a = await Wt.existsFile(this.exePath)),
							this.a
						);
					}
				});
		},
	});
import { promises as w2 } from "fs";
function v2(t = Di) {
	return t.comspec || "cmd.exe";
}
function GD(t) {
	let e = [],
		i = !1;
	const s = function (r) {
		if (i) {
			e.push(r);
			return;
		}
		(!t.send(r, (o) => {
			if ((o && console.error(o), (i = !1), e.length > 0)) {
				const a = e.slice(0);
				(e = []), a.forEach((c) => s(c));
			}
		}) ||
			T) &&
			(i = !0);
	};
	return { send: s };
}
var V1,
	G1 = m({
		"out-build/vs/base/node/processes.js"() {
			"use strict";
			ge(),
				z(),
				gs(),
				ah(),
				Ie(),
				yt(),
				(function (t) {
					async function e(i, s, r) {
						if (Gr(i)) return i;
						if (
							(s === void 0 && (s = ms()),
							Ke(i) !== "." ||
								(r === void 0 && mt(Di.PATH) && (r = Di.PATH.split(Bl)),
								r === void 0 || r.length === 0))
						)
							return M(s, i);
						async function o(a) {
							if (await ee.exists(a)) {
								let c;
								try {
									c = await w2.stat(a);
								} catch (l) {
									l.message.startsWith("EACCES") && (c = await w2.lstat(a));
								}
								return c ? !c.isDirectory() : !1;
							}
							return !1;
						}
						for (const a of r) {
							let c;
							if ((Gr(a) ? (c = M(a, i)) : (c = M(s, a, i)), await o(c)))
								return c;
							let l = c + ".com";
							if ((await o(l)) || ((l = c + ".exe"), await o(l))) return l;
						}
						return M(s, i);
					}
					t.findExecutable = e;
				})(V1 || (V1 = {}));
		},
	});
import { userInfo as JD } from "os";
async function y2(t, e) {
	return t === 1 ? (T ? KD() : v2(e)) : XD(t, e);
}
function XD(t, e) {
	if ((Ee && t === 2) || (N && t === 3)) return "/bin/bash";
	if (!dh) {
		let i;
		if (T) i = "/bin/bash";
		else {
			if (((i = e.SHELL), !i))
				try {
					i = JD().shell;
				} catch {}
			i || (i = "sh"), i === "/bin/false" && (i = "/bin/bash");
		}
		dh = i;
	}
	return dh;
}
async function KD() {
	return fh || (fh = (await VD()).exePath), fh;
}
var dh,
	fh,
	b2 = m({
		"out-build/vs/base/node/shell.js"() {
			"use strict";
			z(), g2(), G1(), (dh = null), (fh = null);
		},
	});
function YD(t, e, i) {
	return Math.min(Math.max(t, e), i);
}
var QD = m({
	"out-build/vs/base/common/numbers.js"() {
		"use strict";
	},
});
import { spawn as ZD } from "child_process";
async function J1(t, e, i, s) {
	return i["force-disable-user-env"]
		? (e.trace("resolveShellEnv(): skipped (--force-disable-user-env)"), {})
		: T
			? (e.trace("resolveShellEnv(): skipped (Windows)"), {})
			: wn(s) && !i["force-user-env"]
				? (e.trace("resolveShellEnv(): skipped (VSCODE_CLI is set)"), {})
				: (wn(s)
						? e.trace("resolveShellEnv(): running (--force-user-env)")
						: e.trace("resolveShellEnv(): running (macOS/Linux)"),
					ph ||
						(ph = Nt.withAsyncBody(async (r, n) => {
							const o = new ts();
							let a = 1e4;
							const c = t.getValue(
								"application.shellEnvironmentResolutionTimeout",
							);
							typeof c == "number" && (a = YD(c, 1, 120) * 1e3);
							const l = setTimeout(() => {
								o.dispose(!0), n(new Error(w(2116, null)));
							}, a);
							try {
								r(await eP(e, o.token));
							} catch (u) {
								!_l(u) && !o.token.isCancellationRequested
									? n(new Error(w(2117, null, Es(u))))
									: r({});
							} finally {
								clearTimeout(l), o.dispose();
							}
						})),
					ph);
}
async function eP(t, e) {
	const i = process.env.ELECTRON_RUN_AS_NODE;
	t.trace("getUnixShellEnvironment#runAsNode", i);
	const s = process.env.ELECTRON_NO_ATTACH_CONSOLE;
	t.trace("getUnixShellEnvironment#noAttach", s);
	const r = fi().replace(/-/g, "").substr(0, 12),
		n = new RegExp(r + "({.*})" + r),
		o = {
			...process.env,
			ELECTRON_RUN_AS_NODE: "1",
			ELECTRON_NO_ATTACH_CONSOLE: "1",
			VSCODE_RESOLVING_ENVIRONMENT: "1",
		};
	t.trace("getUnixShellEnvironment#env", o);
	const a = await y2(Ri, o);
	return (
		t.trace("getUnixShellEnvironment#shell", a),
		new Promise((c, l) => {
			if (e.isCancellationRequested) return l(new ai());
			const u = Te(a);
			let d, f;
			const p = "";
			/^pwsh(-preview)?$/.test(u)
				? ((d = `& '${process.execPath}' ${p} -p '''${r}'' + JSON.stringify(process.env) + ''${r}'''`),
					(f = ["-Login", "-Command"]))
				: u === "nu"
					? ((d = `^'${process.execPath}' ${p} -p '"${r}" + JSON.stringify(process.env) + "${r}"'`),
						(f = ["-i", "-l", "-c"]))
					: u === "xonsh"
						? ((d = `import os, json; print("${r}", json.dumps(dict(os.environ)), "${r}")`),
							(f = ["-i", "-l", "-c"]))
						: ((d = `'${process.execPath}' ${p} -p '"${r}" + JSON.stringify(process.env) + "${r}"'`),
							u === "tcsh" || u === "csh"
								? (f = ["-ic"])
								: (f = ["-i", "-l", "-c"])),
				t.trace("getUnixShellEnvironment#spawn", JSON.stringify(f), d);
			const v = ZD(a, [...f, d], {
				detached: !0,
				stdio: ["ignore", "pipe", "pipe"],
				env: o,
			});
			e.onCancellationRequested(() => (v.kill(), l(new ai()))),
				v.on("error", (y) => {
					t.error("getUnixShellEnvironment#errorChildProcess", Es(y)), l(y);
				});
			const g = [];
			v.stdout.on("data", (y) => g.push(y));
			const b = [];
			v.stderr.on("data", (y) => b.push(y)),
				v.on("close", (y, k) => {
					const I = Buffer.concat(g).toString("utf8");
					t.trace("getUnixShellEnvironment#raw", I);
					const C = Buffer.concat(b).toString("utf8");
					if (
						(C.trim() && t.trace("getUnixShellEnvironment#stderr", C), y || k)
					)
						return l(new Error(w(2118, null, y, k)));
					const _ = n.exec(I),
						K = _ ? _[1] : "{}";
					try {
						const se = JSON.parse(K);
						i ? (se.ELECTRON_RUN_AS_NODE = i) : delete se.ELECTRON_RUN_AS_NODE,
							s
								? (se.ELECTRON_NO_ATTACH_CONSOLE = s)
								: delete se.ELECTRON_NO_ATTACH_CONSOLE,
							delete se.VSCODE_RESOLVING_ENVIRONMENT,
							delete se.XDG_RUNTIME_DIR,
							t.trace("getUnixShellEnvironment#result", se),
							c(se);
					} catch (se) {
						t.error("getUnixShellEnvironment#errorCaught", Es(se)), l(se);
					}
				});
		})
	);
}
var ph,
	X1 = m({
		"out-build/vs/platform/shell/node/shellEnv.js"() {
			"use strict";
			ge(),
				ve(),
				Mt(),
				Yr(),
				Ae(),
				z(),
				Oi(),
				b2(),
				bc(),
				ae(),
				QD(),
				(ph = void 0);
		},
	}),
	K1,
	E2,
	tP = m({
		"out-build/vs/platform/extensions/common/extensionHostStarter.js"() {
			"use strict";
			Y(), (K1 = B("extensionHostStarter")), (E2 = "extensionHostStarter");
		},
	}),
	Y1,
	mh,
	iP = m({
		"out-build/vs/platform/extensions/electron-main/extensionHostStarter.js"() {
			"use strict";
			ae(),
				Ae(),
				q(),
				F(),
				ot(),
				Q(),
				St(),
				Ao(),
				si(),
				(mh = class extends j {
					static {
						Y1 = this;
					}
					static {
						this.a = 0;
					}
					constructor(e, i, s, r) {
						super(),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.j = r),
							(this.b = new Map()),
							(this.c = !1),
							this.D(
								this.g.onWillShutdown((n) => {
									(this.c = !0),
										n.join("extHostStarter", this._waitForAllExit(6e3));
								}),
							);
					}
					dispose() {
						super.dispose();
					}
					m(e) {
						const i = this.b.get(e);
						if (!i) throw new Error("Unknown extension host!");
						return i;
					}
					onDynamicStdout(e) {
						return this.m(e).onStdout;
					}
					onDynamicStderr(e) {
						return this.m(e).onStderr;
					}
					onDynamicMessage(e) {
						return this.m(e).onMessage;
					}
					onDynamicExit(e) {
						return this.m(e).onExit;
					}
					async createExtensionHost() {
						if (this.c) throw Vn();
						const e = String(++Y1.a),
							i = new yc(this.f, this.h, this.j, this.g);
						this.b.set(e, i);
						const s = i.onExit(({ pid: r, code: n, signal: o }) => {
							s.dispose(),
								this.f.info(
									`Extension host with pid ${r} exited with code: ${n}, signal: ${o}.`,
								),
								setTimeout(() => {
									i.dispose(), this.b.delete(e);
								}),
								setTimeout(() => {
									try {
										process.kill(r, 0),
											this.f.error(
												`Extension host with pid ${r} still exists, forcefully killing it...`,
											),
											process.kill(r);
									} catch {}
								}, 1e3);
						});
						return { id: e };
					}
					async start(e, i) {
						if (this.c) throw Vn();
						const s = this.m(e);
						return (
							s.start({
								...i,
								processTitle: `extension-host [${i.responseWindowId}-${e}]`,
								type: "extensionHost",
								entryPoint: "vs/workbench/api/node/extensionHostProcess",
								args: ["--skipWorkspaceStorageLock"],
								execArgv: i.execArgv,
								allowLoadingUnsignedLibraries: !0,
								respondToAuthRequestsFromMainProcess: !0,
								correlationId: e,
							}),
							{ pid: await x.toPromise(s.onSpawn) }
						);
					}
					async enableInspectPort(e) {
						if (this.c) throw Vn();
						const i = this.b.get(e);
						return i ? i.enableInspectPort() : !1;
					}
					async kill(e) {
						if (this.c) throw Vn();
						const i = this.b.get(e);
						i && i.kill();
					}
					async _killAllNow() {
						for (const [, e] of this.b) e.kill();
					}
					async _waitForAllExit(e) {
						const i = [];
						for (const [, s] of this.b) i.push(s.waitForExit(e));
						return Nt.settled(i).then(() => {});
					}
				}),
				(mh = Y1 =
					__decorate(
						[__param(0, G), __param(1, Ne), __param(2, _t), __param(3, It)],
						mh,
					));
		},
	}),
	kc,
	sP = m({
		"out-build/vs/platform/externalTerminal/electron-main/externalTerminal.js"() {
			"use strict";
			Y(), (kc = B("externalTerminal"));
		},
	}),
	rP,
	xc,
	nP = m({
		"out-build/vs/platform/externalTerminal/common/externalTerminal.js"() {
			"use strict";
			Y(), (rP = B("externalTerminal")), (xc = "Terminal.app");
		},
	});
import * as Co from "child_process";
function _o(t) {
	const e = { ...t.env };
	return $D(e), e;
}
function Q1(t) {
	return "errno" in t &&
		t.errno === "ENOENT" &&
		"path" in t &&
		typeof t.path == "string"
		? new Error(w(1907, null, t.path))
		: t;
}
function oP(t) {
	let e = "";
	for (const i of t)
		i.indexOf(" ") >= 0 ? (e += '"' + i + '"') : (e += i), (e += " ");
	return e;
}
var Z1,
	gh,
	wh,
	S2,
	em,
	aP = m({
		"out-build/vs/platform/externalTerminal/node/externalTerminalService.js"() {
			"use strict";
			Zr(),
				Ce(),
				ge(),
				z(),
				ah(),
				yt(),
				G1(),
				ve(),
				nP(),
				(Z1 = w(1902, null)),
				(gh = class {
					async getDefaultTerminalForPlatforms() {
						return {
							windows: wh.getDefaultTerminalWindows(),
							linux: await em.getDefaultTerminalLinuxReady(),
							osx: "xterm",
						};
					}
				}),
				(wh = class cr extends gh {
					static {
						this.CMD = "cmd.exe";
					}
					openTerminal(e, i) {
						return this.spawnTerminal(Co, e, v2(), i);
					}
					spawnTerminal(e, i, s, r) {
						const n = i.windowsExec || cr.getDefaultTerminalWindows();
						r && r[1] === ":" && (r = r[0].toUpperCase() + r.substr(1));
						const o = Te(n, ".exe").toLowerCase();
						if (o === "cmder")
							return e.spawn(n, r ? [r] : void 0), Promise.resolve(void 0);
						const a = ["/c", "start", "/wait"];
						return (
							n.indexOf(" ") >= 0 && a.push(n),
							a.push(n),
							o === "wt" && a.push("-d ."),
							new Promise((c, l) => {
								const u = _o(process),
									d = e.spawn(s, a, { cwd: r, env: u, detached: !0 });
								d.on("error", l), d.on("exit", () => c());
							})
						);
					}
					async runInTerminal(e, i, s, r, n) {
						const o =
								"windowsExec" in n && n.windowsExec
									? n.windowsExec
									: cr.getDefaultTerminalWindows(),
							a = await cr.getWtExePath();
						return new Promise((c, l) => {
							const u = `"${i} - ${Z1}"`,
								d = `"${s.join('" "')}" & pause`,
								f = Object.assign({}, _o(process), r);
							Object.keys(f)
								.filter((y) => f[y] === null)
								.forEach((y) => delete f[y]);
							const p = { cwd: i, env: f, windowsVerbatimArguments: !0 };
							let v, g;
							Te(o, ".exe") === "wt"
								? ((v = o), (g = ["-d", ".", cr.CMD, "/c", d]))
								: a
									? ((v = a), (g = ["-d", ".", o, "/c", d]))
									: ((v = cr.CMD),
										(g = ["/c", "start", u, "/wait", o, "/c", `"${d}"`])),
								Co.spawn(v, g, p).on("error", (y) => {
									l(Q1(y));
								}),
								c(void 0);
						});
					}
					static getDefaultTerminalWindows() {
						if (!cr._DEFAULT_TERMINAL_WINDOWS) {
							const e = !!process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432");
							cr._DEFAULT_TERMINAL_WINDOWS = `${process.env.windir ? process.env.windir : "C:\\Windows"}\\${e ? "Sysnative" : "System32"}\\cmd.exe`;
						}
						return cr._DEFAULT_TERMINAL_WINDOWS;
					}
					static async getWtExePath() {
						try {
							const e = await V1.findExecutable("wt");
							return (await ee.exists(e)) ? e : void 0;
						} catch {
							return;
						}
					}
				}),
				__decorate([de], wh, "getWtExePath", null),
				(S2 = class H3 extends gh {
					static {
						this.OSASCRIPT = "/usr/bin/osascript";
					}
					openTerminal(e, i) {
						return this.spawnTerminal(Co, e, i);
					}
					runInTerminal(e, i, s, r, n) {
						const o = n.osxExec || xc;
						return new Promise((a, c) => {
							if (o === xc || o === "iTerm.app") {
								const l = o === xc ? "TerminalHelper" : "iTermHelper",
									d = [
										$t.asFileUri(
											`vs/workbench/contrib/externalTerminal/node/${l}.scpt`,
										).fsPath,
										"-t",
										e || Z1,
										"-w",
										i,
									];
								for (const v of s) d.push("-a"), d.push(v);
								if (r) {
									const v = Object.assign({}, _o(process), r);
									for (const g in v) {
										const b = v[g];
										b === null
											? (d.push("-u"), d.push(g))
											: (d.push("-e"), d.push(`${g}=${b}`));
									}
								}
								let f = "";
								const p = Co.spawn(H3.OSASCRIPT, d);
								p.on("error", (v) => {
									c(Q1(v));
								}),
									p.stderr.on("data", (v) => {
										f += v.toString();
									}),
									p.on("exit", (v) => {
										if (v === 0) a(void 0);
										else if (f) {
											const g = f.split(
												`
`,
												1,
											);
											c(new Error(g[0]));
										} else c(new Error(w(1903, null, l, v)));
									});
							} else c(new Error(w(1904, null, o)));
						});
					}
					spawnTerminal(e, i, s) {
						const r = i.osxExec || xc;
						return new Promise((n, o) => {
							const a = ["-a", r];
							s && a.push(s);
							const c = _o(process),
								l = e.spawn("/usr/bin/open", a, { cwd: s, env: c });
							l.on("error", o), l.on("exit", () => n());
						});
					}
				}),
				(em = class Nr extends gh {
					static {
						this.WAIT_MESSAGE = w(1905, null);
					}
					openTerminal(e, i) {
						return this.spawnTerminal(Co, e, i);
					}
					runInTerminal(e, i, s, r, n) {
						const o = n.linuxExec
							? Promise.resolve(n.linuxExec)
							: Nr.getDefaultTerminalLinuxReady();
						return new Promise((a, c) => {
							const l = [];
							o.then((u) => {
								u.indexOf("gnome-terminal") >= 0 ? l.push("-x") : l.push("-e"),
									l.push("bash"),
									l.push("-c");
								const d = `${oP(s)}; echo; read -p "${Nr.WAIT_MESSAGE}" -n1;`;
								l.push(`''${d}''`);
								const f = Object.assign({}, _o(process), r);
								Object.keys(f)
									.filter((b) => f[b] === null)
									.forEach((b) => delete f[b]);
								const p = { cwd: i, env: f };
								let v = "";
								const g = Co.spawn(u, l, p);
								g.on("error", (b) => {
									c(Q1(b));
								}),
									g.stderr.on("data", (b) => {
										v += b.toString();
									}),
									g.on("exit", (b) => {
										if (b === 0) a(void 0);
										else if (v) {
											const y = v.split(
												`
`,
												1,
											);
											c(new Error(y[0]));
										} else c(new Error(w(1906, null, u, b)));
									});
							});
						});
					}
					static async getDefaultTerminalLinuxReady() {
						if (!Nr._DEFAULT_TERMINAL_LINUX_READY)
							if (!Ee)
								Nr._DEFAULT_TERMINAL_LINUX_READY = Promise.resolve("xterm");
							else {
								const e = await ee.exists("/etc/debian_version");
								Nr._DEFAULT_TERMINAL_LINUX_READY = new Promise((i) => {
									e
										? i("x-terminal-emulator")
										: process.env.DESKTOP_SESSION === "gnome" ||
												process.env.DESKTOP_SESSION === "gnome-classic"
											? i("gnome-terminal")
											: process.env.DESKTOP_SESSION === "kde-plasma"
												? i("konsole")
												: process.env.COLORTERM
													? i(process.env.COLORTERM)
													: process.env.TERM
														? i(process.env.TERM)
														: i("xterm");
								});
							}
						return Nr._DEFAULT_TERMINAL_LINUX_READY;
					}
					spawnTerminal(e, i, s) {
						const r = i.linuxExec
							? Promise.resolve(i.linuxExec)
							: Nr.getDefaultTerminalLinuxReady();
						return new Promise((n, o) => {
							r.then((a) => {
								const c = _o(process),
									l = e.spawn(a, [], { cwd: s, env: c });
								l.on("error", o), l.on("exit", () => n());
							});
						});
					}
				});
		},
	});
function k2(t, e) {
	switch (t) {
		case 0:
			return "";
		case 1:
			return `${Pc}*?`;
		default:
			return `(?:${Dc}|${Pc}+${Dc}${e ? `|${Dc}${Pc}+` : ""})*?`;
	}
}
function x2(t, e) {
	if (!t) return [];
	const i = [];
	let s = !1,
		r = !1,
		n = "";
	for (const o of t) {
		switch (o) {
			case e:
				if (!s && !r) {
					i.push(n), (n = "");
					continue;
				}
				break;
			case "{":
				s = !0;
				break;
			case "}":
				s = !1;
				break;
			case "[":
				r = !0;
				break;
			case "]":
				r = !1;
				break;
		}
		n += o;
	}
	return n && i.push(n), i;
}
function D2(t) {
	if (!t) return "";
	let e = "";
	const i = x2(t, sm);
	if (i.every((s) => s === Ro)) e = ".*";
	else {
		let s = !1;
		i.forEach((r, n) => {
			if (r === Ro) {
				if (s) return;
				e += k2(2, n === i.length - 1);
			} else {
				let o = !1,
					a = "",
					c = !1,
					l = "";
				for (const u of r) {
					if (u !== "}" && o) {
						a += u;
						continue;
					}
					if (c && (u !== "]" || !l)) {
						let d;
						u === "-"
							? (d = u)
							: (u === "^" || u === "!") && !l
								? (d = "^")
								: u === sm
									? (d = "")
									: (d = Na(u)),
							(l += d);
						continue;
					}
					switch (u) {
						case "{":
							o = !0;
							continue;
						case "[":
							c = !0;
							continue;
						case "}": {
							const f = `(?:${x2(a, ",")
								.map((p) => D2(p))
								.join("|")})`;
							(e += f), (o = !1), (a = "");
							break;
						}
						case "]": {
							(e += "[" + l + "]"), (c = !1), (l = "");
							break;
						}
						case "?":
							e += Pc;
							continue;
						case "*":
							e += k2(1);
							continue;
						default:
							e += Na(u);
					}
				}
				n < i.length - 1 && (i[n + 1] !== Ro || n + 2 < i.length) && (e += Dc);
			}
			s = r === Ro;
		});
	}
	return e;
}
function tm(t, e) {
	if (!t) return os;
	let i;
	typeof t != "string" ? (i = t.pattern) : (i = t), (i = i.trim());
	const s = `${i}_${!!e.trimForExclusions}`;
	let r = rm.get(s);
	if (r) return P2(r, t);
	let n;
	return (
		_2.test(i)
			? (r = cP(i.substr(4), i))
			: (n = R2.exec(im(i, e)))
				? (r = lP(n[1], i))
				: (e.trimForExclusions ? L2 : O2).test(i)
					? (r = uP(i, e))
					: (n = M2.exec(im(i, e)))
						? (r = $2(n[1].substr(1), i, !0))
						: (n = F2.exec(im(i, e)))
							? (r = $2(n[1], i, !1))
							: (r = hP(i)),
		rm.set(s, r),
		P2(r, t)
	);
}
function P2(t, e) {
	if (typeof e == "string") return t;
	const i = function (s, r) {
		return ja(s, e.base, !Ee) ? t(nv(s.substr(e.base.length), Bt), r) : null;
	};
	return (
		(i.allBasenames = t.allBasenames),
		(i.allPaths = t.allPaths),
		(i.basenames = t.basenames),
		(i.patterns = t.patterns),
		i
	);
}
function im(t, e) {
	return e.trimForExclusions && t.endsWith("/**")
		? t.substr(0, t.length - 2)
		: t;
}
function cP(t, e) {
	return function (i, s) {
		return typeof i == "string" && i.endsWith(t) ? e : null;
	};
}
function lP(t, e) {
	const i = `/${t}`,
		s = `\\${t}`,
		r = function (o, a) {
			return typeof o != "string"
				? null
				: a
					? a === t
						? e
						: null
					: o === t || o.endsWith(i) || o.endsWith(s)
						? e
						: null;
		},
		n = [t];
	return (r.basenames = n), (r.patterns = [e]), (r.allBasenames = n), r;
}
function uP(t, e) {
	const i = A2(
			t
				.slice(1, -1)
				.split(",")
				.map((a) => tm(a, e))
				.filter((a) => a !== os),
			t,
		),
		s = i.length;
	if (!s) return os;
	if (s === 1) return i[0];
	const r = function (a, c) {
			for (let l = 0, u = i.length; l < u; l++) if (i[l](a, c)) return t;
			return null;
		},
		n = i.find((a) => !!a.allBasenames);
	n && (r.allBasenames = n.allBasenames);
	const o = i.reduce((a, c) => (c.allPaths ? a.concat(c.allPaths) : a), []);
	return o.length && (r.allPaths = o), r;
}
function $2(t, e, i) {
	const s = Bt === oe.sep,
		r = s ? t : t.replace(C2, Bt),
		n = Bt + r,
		o = oe.sep + t;
	let a;
	return (
		i
			? (a = function (c, l) {
					return typeof c == "string" &&
						(c === r || c.endsWith(n) || (!s && (c === t || c.endsWith(o))))
						? e
						: null;
				})
			: (a = function (c, l) {
					return typeof c == "string" && (c === r || (!s && c === t))
						? e
						: null;
				}),
		(a.allPaths = [(i ? "*/" : "./") + t]),
		a
	);
}
function hP(t) {
	try {
		const e = new RegExp(`^${D2(t)}$`);
		return function (i) {
			return (e.lastIndex = 0), typeof i == "string" && e.test(i) ? t : null;
		};
	} catch {
		return os;
	}
}
function dP(t, e = {}) {
	if (!t) return nm;
	if (typeof t == "string" || fP(t)) {
		const i = tm(t, e);
		if (i === os) return nm;
		const s = function (r, n) {
			return !!i(r, n);
		};
		return (
			i.allBasenames && (s.allBasenames = i.allBasenames),
			i.allPaths && (s.allPaths = i.allPaths),
			s
		);
	}
	return pP(t, e);
}
function fP(t) {
	const e = t;
	return e ? typeof e.base == "string" && typeof e.pattern == "string" : !1;
}
function pP(t, e) {
	const i = A2(
			Object.getOwnPropertyNames(t)
				.map((a) => mP(a, t[a], e))
				.filter((a) => a !== os),
		),
		s = i.length;
	if (!s) return os;
	if (!i.some((a) => !!a.requiresSiblings)) {
		if (s === 1) return i[0];
		const a = function (u, d) {
				let f;
				for (let p = 0, v = i.length; p < v; p++) {
					const g = i[p](u, d);
					if (typeof g == "string") return g;
					gp(g) && (f || (f = []), f.push(g));
				}
				return f
					? (async () => {
							for (const p of f) {
								const v = await p;
								if (typeof v == "string") return v;
							}
							return null;
						})()
					: null;
			},
			c = i.find((u) => !!u.allBasenames);
		c && (a.allBasenames = c.allBasenames);
		const l = i.reduce((u, d) => (d.allPaths ? u.concat(d.allPaths) : u), []);
		return l.length && (a.allPaths = l), a;
	}
	const r = function (a, c, l) {
			let u, d;
			for (let f = 0, p = i.length; f < p; f++) {
				const v = i[f];
				v.requiresSiblings &&
					l &&
					(c || (c = Te(a)), u || (u = c.substr(0, c.length - ql(a).length)));
				const g = v(a, c, u, l);
				if (typeof g == "string") return g;
				gp(g) && (d || (d = []), d.push(g));
			}
			return d
				? (async () => {
						for (const f of d) {
							const p = await f;
							if (typeof p == "string") return p;
						}
						return null;
					})()
				: null;
		},
		n = i.find((a) => !!a.allBasenames);
	n && (r.allBasenames = n.allBasenames);
	const o = i.reduce((a, c) => (c.allPaths ? a.concat(c.allPaths) : a), []);
	return o.length && (r.allPaths = o), r;
}
function mP(t, e, i) {
	if (e === !1) return os;
	const s = tm(t, i);
	if (s === os) return os;
	if (typeof e == "boolean") return s;
	if (e) {
		const r = e.when;
		if (typeof r == "string") {
			const n = (o, a, c, l) => {
				if (!l || !s(o, a)) return null;
				const u = r.replace("$(basename)", () => c),
					d = l(u);
				return gp(d) ? d.then((f) => (f ? t : null)) : d ? t : null;
			};
			return (n.requiresSiblings = !0), n;
		}
	}
	return s;
}
function A2(t, e) {
	const i = t.filter((a) => !!a.basenames);
	if (i.length < 2) return t;
	const s = i.reduce((a, c) => {
		const l = c.basenames;
		return l ? a.concat(l) : a;
	}, []);
	let r;
	if (e) {
		r = [];
		for (let a = 0, c = s.length; a < c; a++) r.push(e);
	} else
		r = i.reduce((a, c) => {
			const l = c.patterns;
			return l ? a.concat(l) : a;
		}, []);
	const n = function (a, c) {
		if (typeof a != "string") return null;
		if (!c) {
			let u;
			for (u = a.length; u > 0; u--) {
				const d = a.charCodeAt(u - 1);
				if (d === 47 || d === 92) break;
			}
			c = a.substr(u);
		}
		const l = s.indexOf(c);
		return l !== -1 ? r[l] : null;
	};
	(n.basenames = s), (n.patterns = r), (n.allBasenames = s);
	const o = t.filter((a) => !a.basenames);
	return o.push(n), o;
}
function I2(t, e) {
	return ba(t, e, (i, s) =>
		typeof i == "string" && typeof s == "string"
			? i === s
			: typeof i != "string" && typeof s != "string"
				? i.base === s.base && i.pattern === s.pattern
				: !1,
	);
}
var Ro,
	sm,
	Dc,
	Pc,
	C2,
	_2,
	R2,
	O2,
	L2,
	M2,
	F2,
	rm,
	nm,
	os,
	N2 = m({
		"out-build/vs/base/common/glob.js"() {
			"use strict";
			Ut(),
				ae(),
				hi(),
				xi(),
				ge(),
				z(),
				Ft(),
				(Ro = "**"),
				(sm = "/"),
				(Dc = "[/\\\\]"),
				(Pc = "[^/\\\\]"),
				(C2 = /\//g),
				(_2 = /^\*\*\/\*\.[\w\.-]+$/),
				(R2 = /^\*\*\/([\w\.-]+)\/?$/),
				(O2 = /^{\*\*\/\*?[\w\.-]+\/?(,\*\*\/\*?[\w\.-]+\/?)*}$/),
				(L2 =
					/^{\*\*\/\*?[\w\.-]+(\/(\*\*)?)?(,\*\*\/\*?[\w\.-]+(\/(\*\*)?)?)*}$/),
				(M2 = /^\*\*((\/[\w\.-]+)+)\/?$/),
				(F2 = /^([\w\.-]+(\/[\w\.-]+)*)\/?$/),
				(rm = new Ea(1e4)),
				(nm = function () {
					return !1;
				}),
				(os = function () {
					return null;
				});
		},
	});
function W2(t) {
	return typeof t.correlationId == "number";
}
function gP(t) {
	return t.recursive === !0;
}
function j2(t) {
	return t.map((e) => ({
		type: e.type,
		resource: P.revive(e.resource),
		cId: e.cId,
	}));
}
function wP(t) {
	const e = new B2();
	for (const i of t) e.processEvent(i);
	return e.coalesce();
}
function vP(t, e) {
	return typeof e == "string" && !e.startsWith(Ro) && !Gr(e)
		? { base: t, pattern: e }
		: e;
}
function T2(t, e) {
	const i = [];
	for (const s of e) i.push(dP(vP(t, s)));
	return i;
}
function yP(t, e) {
	if (typeof e == "number")
		switch (t.type) {
			case 1:
				return (e & 4) === 0;
			case 2:
				return (e & 8) === 0;
			case 0:
				return (e & 2) === 0;
		}
	return !1;
}
function bP(t) {
	if (typeof t == "number") {
		const e = [];
		return (
			t & 4 && e.push("Added"),
			t & 8 && e.push("Deleted"),
			t & 2 && e.push("Updated"),
			e.length === 0 ? "<all>" : `[${e.join(", ")}]`
		);
	}
	return "<none>";
}
var om,
	U2,
	q2,
	B2,
	Oo = m({
		"out-build/vs/platform/files/common/watcher.js"() {
			"use strict";
			N2(),
				F(),
				ge(),
				z(),
				ie(),
				Be(),
				(om = class V3 extends j {
					static {
						this.a = 5;
					}
					constructor(e, i, s, r) {
						super(),
							(this.h = e),
							(this.j = i),
							(this.m = s),
							(this.n = r),
							(this.c = this.D(new zr())),
							(this.f = void 0),
							(this.g = 0);
					}
					r() {
						const e = new De();
						(this.c.value = e),
							(this.b = this.q(e)),
							this.b.setVerboseLogging(this.m),
							e.add(this.b.onDidChangeFile((i) => this.h(i))),
							e.add(this.b.onDidLogMessage((i) => this.j(i))),
							e.add(this.b.onDidError((i) => this.s(i.error, i.request)));
					}
					s(e, i) {
						this.t(e, i)
							? this.g < V3.a && this.f
								? (this.w(`restarting watcher after unexpected error: ${e}`),
									this.u(this.f))
								: this.w(
										`gave up attempting to restart watcher after unexpected error: ${e}`,
									)
							: this.w(e);
					}
					t(e, i) {
						return !(
							!this.n.restartOnError ||
							i ||
							e.indexOf("No space left on device") !== -1 ||
							e.indexOf("EMFILE") !== -1
						);
					}
					u(e) {
						this.g++, this.r(), this.watch(e);
					}
					async watch(e) {
						(this.f = e), await this.b?.watch(e);
					}
					async setVerboseLogging(e) {
						(this.m = e), await this.b?.setVerboseLogging(e);
					}
					w(e) {
						this.j({
							type: "error",
							message: `[File Watcher (${this.n.type})] ${e}`,
						});
					}
					y(e) {
						this.j({
							type: "trace",
							message: `[File Watcher (${this.n.type})] ${e}`,
						});
					}
					dispose() {
						return (this.b = void 0), super.dispose();
					}
				}),
				(U2 = class extends om {
					constructor(t, e, i) {
						super(t, e, i, { type: "node.js", restartOnError: !1 });
					}
				}),
				(q2 = class extends om {
					constructor(t, e, i) {
						super(t, e, i, { type: "universal", restartOnError: !0 });
					}
				}),
				(B2 = class {
					constructor() {
						(this.a = new Set()), (this.b = new Map());
					}
					c(t) {
						return Ee ? t.resource.fsPath : t.resource.fsPath.toLowerCase();
					}
					processEvent(t) {
						const e = this.b.get(this.c(t));
						let i = !1;
						if (e) {
							const s = e.type,
								r = t.type;
							e.resource.fsPath !== t.resource.fsPath &&
							(t.type === 2 || t.type === 1)
								? (i = !0)
								: s === 1 && r === 2
									? (this.b.delete(this.c(t)), this.a.delete(e))
									: s === 2 && r === 1
										? (e.type = 0)
										: (s === 1 && r === 0) || (e.type = r);
						} else i = !0;
						i && (this.a.add(t), this.b.set(this.c(t), t));
					}
					coalesce() {
						const t = [],
							e = [];
						return Array.from(this.a)
							.filter((i) => (i.type !== 2 ? (t.push(i), !1) : !0))
							.sort(
								(i, s) => i.resource.fsPath.length - s.resource.fsPath.length,
							)
							.filter((i) =>
								e.some((s) => px(i.resource.fsPath, s, !Ee))
									? !1
									: (e.push(i.resource.fsPath), !0),
							)
							.concat(t);
					}
				});
		},
	}),
	am,
	EP = m({
		"out-build/vs/platform/files/common/diskFileSystemProviderClient.js"() {
			"use strict";
			Je(),
				Yr(),
				Ae(),
				q(),
				F(),
				Va(),
				Oi(),
				Be(),
				Oo(),
				(am = "localFilesystem");
		},
	});
async function z2(t, e, i, s, r, n) {
	let o;
	try {
		await SP(t, e, i, s, r, n);
	} catch (a) {
		o = a;
	} finally {
		o && r.errorTransformer && (o = r.errorTransformer(o)),
			typeof o < "u" && i.error(o),
			i.end();
	}
}
async function SP(t, e, i, s, r, n) {
	cm(n);
	const o = await t.open(e, { create: !1 });
	try {
		cm(n);
		let a = 0,
			c = 0,
			l = r && typeof r.length == "number" ? r.length : void 0,
			u = H.alloc(
				Math.min(r.bufferSize, typeof l == "number" ? l : r.bufferSize),
			),
			d = r && typeof r.position == "number" ? r.position : 0,
			f = 0;
		do
			(c = await t.read(o, d, u.buffer, f, u.byteLength - f)),
				(d += c),
				(f += c),
				(a += c),
				typeof l == "number" && (l -= c),
				f === u.byteLength &&
					(await i.write(s(u)),
					(u = H.alloc(
						Math.min(r.bufferSize, typeof l == "number" ? l : r.bufferSize),
					)),
					(f = 0));
		while (c > 0 && (typeof l != "number" || l > 0) && cm(n) && kP(a, r));
		if (f > 0) {
			let p = f;
			typeof l == "number" && (p = Math.min(f, l)), i.write(s(u.slice(0, p)));
		}
	} catch (a) {
		throw sn(a);
	} finally {
		await t.close(o);
	}
}
function cm(t) {
	if (t.isCancellationRequested) throw Vn();
	return !0;
}
function kP(t, e) {
	if (typeof e?.limits?.size == "number" && t > e.limits.size)
		throw ss(w(1949, null), ne.FileTooLarge);
	return !0;
}
var H2 = m({
		"out-build/vs/platform/files/common/io.js"() {
			"use strict";
			Je(), Ae(), ve(), Be();
		},
	}),
	V2,
	xP = m({
		"out-build/vs/platform/files/common/diskFileSystemProvider.js"() {
			"use strict";
			Ut(),
				ae(),
				Ae(),
				q(),
				hi(),
				F(),
				ge(),
				Oo(),
				Q(),
				(V2 = class extends j {
					constructor(t, e) {
						super(),
							(this.a = t),
							(this.b = e),
							(this.c = this.D(new $())),
							(this.onDidChangeFile = this.c.event),
							(this.g = this.D(new $())),
							(this.onDidWatchError = this.g.event),
							(this.j = []),
							(this.m = this.D(new Js(0))),
							(this.w = []),
							(this.y = this.D(new Js(0)));
					}
					watch(t, e) {
						return e.recursive || this.b?.watcher?.forceUniversal
							? this.n(t, e)
							: this.z(t, e);
					}
					n(t, e) {
						const i = this.q(t, e),
							s = tw(this.j, i);
						return (
							this.r(),
							ke(() => {
								s(), this.r();
							})
						);
					}
					q(t, e) {
						const i = {
							path: this.L(t),
							excludes: e.excludes,
							includes: e.includes,
							recursive: e.recursive,
							filter: e.filter,
							correlationId: e.correlationId,
						};
						if (gP(i)) {
							const s = this.b?.watcher?.recursive?.usePolling;
							s === !0
								? (i.pollingInterval =
										this.b?.watcher?.recursive?.pollingInterval ?? 5e3)
								: Array.isArray(s) &&
									s.includes(i.path) &&
									(i.pollingInterval =
										this.b?.watcher?.recursive?.pollingInterval ?? 5e3);
						}
						return i;
					}
					r() {
						this.m.trigger(() => this.s()).catch((t) => Ot(t));
					}
					s() {
						return (
							this.h ||
								((this.h = this.D(
									this.t(
										(t) => this.c.fire(j2(t)),
										(t) => this.H(t),
										this.a.getLevel() === J.Trace,
									),
								)),
								this.D(
									this.a.onDidChangeLogLevel(() => {
										this.h?.setVerboseLogging(this.a.getLevel() === J.Trace);
									}),
								)),
							this.h.watch(this.j)
						);
					}
					z(t, e) {
						const i = {
								path: this.L(t),
								excludes: e.excludes,
								includes: e.includes,
								recursive: !1,
								filter: e.filter,
								correlationId: e.correlationId,
							},
							s = tw(this.w, i);
						return (
							this.C(),
							ke(() => {
								s(), this.C();
							})
						);
					}
					C() {
						this.y.trigger(() => this.F()).catch((t) => Ot(t));
					}
					F() {
						return (
							this.u ||
								((this.u = this.D(
									this.G(
										(t) => this.c.fire(j2(t)),
										(t) => this.H(t),
										this.a.getLevel() === J.Trace,
									),
								)),
								this.D(
									this.a.onDidChangeLogLevel(() => {
										this.u?.setVerboseLogging(this.a.getLevel() === J.Trace);
									}),
								)),
							this.u.watch(this.w)
						);
					}
					H(t) {
						t.type === "error" && this.g.fire(t.message), this.I(t);
					}
					I(t) {
						this.a[t.type](t.message);
					}
					J(t) {
						return ui(t.fsPath);
					}
					L(t) {
						const e = this.J(t);
						return fv(e);
					}
				});
		},
	});
function DP(t) {
	const e = t;
	return e && typeof e.type == "string" && typeof e.severity == "string";
}
function PP(t) {
	const e = [];
	let i;
	try {
		const s = JSON.parse(t.arguments),
			r = s[s.length - 1];
		r && r.__$stack && (s.pop(), (i = r.__$stack)), e.push(...s);
	} catch {
		e.push("Unable to log remote console arguments", t.arguments);
	}
	return { args: e, stack: i };
}
function $P(t) {
	if (!t) return t;
	const e = t.indexOf(`
`);
	return e === -1 ? t : t.substring(0, e);
}
function AP(t, e) {
	const { args: i, stack: s } = PP(t),
		r = typeof i[0] == "string" && i.length === 1;
	let n = $P(s);
	n && (n = `(${n.trim()})`);
	let o = [];
	if (
		(typeof i[0] == "string"
			? n && r
				? (o = [`%c[${e}] %c${i[0]} %c${n}`, Lo("blue"), Lo(""), Lo("grey")])
				: (o = [`%c[${e}] %c${i[0]}`, Lo("blue"), Lo(""), ...i.slice(1)])
			: (o = [`%c[${e}]%`, Lo("blue"), ...i]),
		n && !r && o.push(n),
		typeof console[t.severity] != "function")
	)
		throw new Error("Unknown console method");
	console[t.severity].apply(console, o);
}
function Lo(t) {
	return `color: ${t}`;
}
var IP = m({
	"out-build/vs/base/common/console.js"() {
		"use strict";
		ie();
	},
});
import { fork as CP } from "child_process";
var G2,
	_P = m({
		"out-build/vs/base/parts/ipc/node/ipc.cp.js"() {
			"use strict";
			ae(),
				Je(),
				Mt(),
				IP(),
				Ae(),
				q(),
				F(),
				ns(),
				G1(),
				ah(),
				Ks(),
				(G2 = class {
					constructor(t, e) {
						(this.i = t),
							(this.j = e),
							(this.c = new Set()),
							(this.g = new Map()),
							(this.h = new $()),
							(this.onDidProcessExit = this.h.event);
						const i = e && e.timeout ? e.timeout : 6e4;
						(this.b = new vp(i)), (this.d = null), (this.f = null);
					}
					getChannel(t) {
						const e = this;
						return {
							call(i, s, r) {
								return e.k(t, i, s, r);
							},
							listen(i, s) {
								return e.l(t, i, s);
							},
						};
					}
					k(t, e, i, s = Ge.None) {
						if (!this.b) return Promise.reject(new Error("disposed"));
						if (s.isCancellationRequested) return Promise.reject(Vn());
						this.b.cancel();
						const r = this.n(t),
							n = Yn((c) => r.call(e, i, c)),
							o = s.onCancellationRequested(() => n.cancel()),
							a = ke(() => n.cancel());
						return (
							this.c.add(a),
							n.finally(() => {
								o.dispose(),
									this.c.delete(a),
									this.c.size === 0 && this.b && this.b.trigger(() => this.o());
							}),
							n
						);
					}
					l(t, e, i) {
						if (!this.b) return x.None;
						this.b.cancel();
						let s;
						const r = new $({
							onWillAddFirstListener: () => {
								(s = this.n(t).listen(e, i)(r.fire, r)), this.c.add(s);
							},
							onDidRemoveLastListener: () => {
								this.c.delete(s),
									s.dispose(),
									this.c.size === 0 && this.b && this.b.trigger(() => this.o());
							},
						});
						return r.event;
					}
					get m() {
						if (!this.f) {
							const t = this.j && this.j.args ? this.j.args : [],
								e = Object.create(null);
							(e.env = {
								...rs(process.env),
								VSCODE_PARENT_PID: String(process.pid),
							}),
								this.j && this.j.env && (e.env = { ...e.env, ...this.j.env }),
								this.j && this.j.freshExecArgv && (e.execArgv = []),
								this.j &&
									typeof this.j.debug == "number" &&
									(e.execArgv = ["--nolazy", "--inspect=" + this.j.debug]),
								this.j &&
									typeof this.j.debugBrk == "number" &&
									(e.execArgv = [
										"--nolazy",
										"--inspect-brk=" + this.j.debugBrk,
									]),
								e.execArgv === void 0 &&
									(e.execArgv = process.execArgv
										.filter((u) => !/^--inspect(-brk)?=/.test(u))
										.filter((u) => !u.startsWith("--vscode-"))),
								r2(e.env),
								(this.d = CP(this.i, t, e));
							const i = new $(),
								r = x.fromNodeEventEmitter(
									this.d,
									"message",
									(u) => u,
								)((u) => {
									if (DP(u)) {
										AP(u, `IPC Library: ${this.j.serverName}`);
										return;
									}
									i.fire(H.wrap(Buffer.from(u, "base64")));
								}),
								n = this.j.useQueue ? GD(this.d) : this.d,
								o = (u) =>
									this.d &&
									this.d.connected &&
									n.send(u.buffer.toString("base64")),
								a = i.event,
								c = { send: o, onMessage: a };
							this.f = new Xa(c);
							const l = () => this.o();
							process.once("exit", l),
								this.d.on("error", (u) =>
									console.warn(
										'IPC "' + this.j.serverName + '" errored with ' + u,
									),
								),
								this.d.on("exit", (u, d) => {
									process.removeListener("exit", l),
										r.dispose(),
										this.c.forEach((f) => vt(f)),
										this.c.clear(),
										u !== 0 &&
											d !== "SIGTERM" &&
											console.warn(
												'IPC "' +
													this.j.serverName +
													'" crashed with exit code ' +
													u +
													" and signal " +
													d,
											),
										this.b?.cancel(),
										this.o(),
										this.h.fire({ code: u, signal: d });
								});
						}
						return this.f;
					}
					n(t) {
						let e = this.g.get(t);
						return e || ((e = this.m.getChannel(t)), this.g.set(t, e)), e;
					}
					o() {
						this.f &&
							(this.d && (this.d.kill(), (this.d = null)),
							(this.f = null),
							this.g.clear());
					}
					dispose() {
						this.h.dispose(),
							this.b?.cancel(),
							(this.b = void 0),
							this.o(),
							this.c.clear();
					}
				});
		},
	}),
	J2,
	RP = m({
		"out-build/vs/platform/files/node/watcher/watcherClient.js"() {
			"use strict";
			Ce(),
				Ks(),
				_P(),
				Oo(),
				(J2 = class extends q2 {
					constructor(t, e, i) {
						super(t, e, i), this.r();
					}
					q(t) {
						const e = t.add(
							new G2($t.asFileUri("bootstrap-fork").fsPath, {
								serverName: "File Watcher",
								args: ["--type=fileWatcher"],
								env: {
									VSCODE_ESM_ENTRYPOINT:
										"vs/platform/files/node/watcher/watcherMain",
									VSCODE_PIPE_LOGGING: "true",
									VSCODE_VERBOSE_LOGGING: "true",
								},
							}),
						);
						return (
							t.add(
								e.onDidProcessExit(({ code: i, signal: s }) =>
									this.s(
										`terminated by itself with code ${i}, signal: ${s} (ETERM)`,
									),
								),
							),
							Xe.toService(Ak(e.getChannel("watcher")))
						);
					}
				});
		},
	});
import { watchFile as OP, unwatchFile as LP } from "fs";
var X2,
	MP = m({
		"out-build/vs/platform/files/node/watcher/baseWatcher.js"() {
			"use strict";
			F(),
				Oo(),
				q(),
				ie(),
				ae(),
				Qs(),
				Ae(),
				(X2 = class extends j {
					constructor() {
						super(),
							(this.a = this.D(new $())),
							(this.onDidChangeFile = this.a.event),
							(this.b = this.D(new $())),
							(this.onDidLogMessage = this.b.event),
							(this.c = this.D(new $())),
							(this.f = this.c.event),
							(this.g = new Map()),
							(this.h = new Map()),
							(this.j = this.D(new Tf())),
							(this.m = new Set()),
							(this.n = this.D(new Js(this.w()))),
							(this.q = 5007),
							(this.r = new Xs()),
							(this.R = !1),
							this.D(
								this.f((t) =>
									this.y({
										id: this.t(t),
										correlationId: this.s(t) ? t.correlationId : void 0,
										path: t.path,
									}),
								),
							);
					}
					s(t) {
						return W2(t);
					}
					t(t) {
						return this.s(t) ? t.correlationId : Ss(t);
					}
					async watch(t) {
						this.r.isSettled || this.r.complete(), (this.r = new Xs());
						try {
							this.g.clear(), this.h.clear();
							for (const e of t)
								this.s(e)
									? this.g.set(e.correlationId, e)
									: this.h.set(this.t(e), e);
							for (const [e] of this.j)
								!this.h.has(e) &&
									!this.g.has(e) &&
									(this.j.deleteAndDispose(e), this.m.delete(e));
							return await this.u(!1);
						} finally {
							this.r.complete();
						}
					}
					u(t) {
						const e = [];
						for (const [i, s] of [...this.h, ...this.g])
							this.j.has(i) || e.push(s);
						return this.n
							.trigger(() => this.N(e), t ? this.w() : 0)
							.catch((i) => Ot(i));
					}
					w() {
						return 800;
					}
					isSuspended(t) {
						const e = this.t(t);
						return this.m.has(e) ? "polling" : this.j.has(e);
					}
					async y(t) {
						if (this.j.has(t.id)) return;
						const e = new De();
						this.j.set(t.id, e),
							await this.r.p,
							!e.isDisposed && (this.C(t, e), this.u(!0));
					}
					z(t) {
						this.j.deleteAndDispose(t.id), this.m.delete(t.id), this.u(!1);
					}
					C(t, e) {
						this.F(t, e)
							? (this.P(
									`reusing an existing recursive watcher to monitor ${t.path}`,
								),
								this.m.delete(t.id))
							: (this.G(t, e), this.m.add(t.id));
					}
					F(t, e) {
						const i = this.O?.subscribe(t.path, (s, r) => {
							e.isDisposed || (s ? this.C(t, e) : r?.type === 1 && this.H(t));
						});
						return i ? (e.add(i), !0) : !1;
					}
					G(t, e) {
						let i = !1;
						const s = (r, n) => {
							if (e.isDisposed) return;
							const o = this.I(r),
								a = this.I(n),
								c = i;
							(i = o), !o && (a || c) && this.H(t);
						};
						this.P(
							`starting fs.watchFile() on ${t.path} (correlationId: ${t.correlationId})`,
						);
						try {
							OP(t.path, { persistent: !1, interval: this.q }, s);
						} catch (r) {
							this.Q(
								`fs.watchFile() failed with error ${r} on path ${t.path} (correlationId: ${t.correlationId})`,
							);
						}
						e.add(
							ke(() => {
								this.P(
									`stopping fs.watchFile() on ${t.path} (correlationId: ${t.correlationId})`,
								);
								try {
									LP(t.path, s);
								} catch (r) {
									this.Q(
										`fs.unwatchFile() failed with error ${r} on path ${t.path} (correlationId: ${t.correlationId})`,
									);
								}
							}),
						);
					}
					H(t) {
						this.P(
							`detected ${t.path} exists again, resuming watcher (correlationId: ${t.correlationId})`,
						);
						const e = {
							resource: P.file(t.path),
							type: 1,
							cId: t.correlationId,
						};
						this.a.fire([e]), this.J(e, t), this.z(t);
					}
					I(t) {
						return t.ctimeMs === 0 && t.ino === 0;
					}
					async stop() {
						this.j.clearAndDisposeAll(), this.m.clear();
					}
					J(t, e) {
						if (this.R) {
							const i = ` >> normalized ${t.type === 1 ? "[ADDED]" : t.type === 2 ? "[DELETED]" : "[CHANGED]"} ${t.resource.fsPath}`;
							this.L(i, e);
						}
					}
					L(t, e) {
						this.R &&
							this.P(
								`${t}${typeof e.correlationId == "number" ? ` <${e.correlationId}> ` : ""}`,
							);
					}
					M(t) {
						return `${t.path} (excludes: ${t.excludes.length > 0 ? t.excludes : "<none>"}, includes: ${t.includes && t.includes.length > 0 ? JSON.stringify(t.includes) : "<all>"}, filter: ${bP(t.filter)}, correlationId: ${typeof t.correlationId == "number" ? t.correlationId : "<none>"})`;
					}
					async setVerboseLogging(t) {
						this.R = t;
					}
				});
		},
	});
import * as K2 from "fs";
async function lm(t, e) {
	if (Ee) return t;
	const i = Ke(t);
	if (t === i) return t;
	const s = (Te(t) || t).toLowerCase();
	try {
		if (e?.isCancellationRequested) return null;
		const n = (await ee.readdir(i)).filter((o) => o.toLowerCase() === s);
		if (n.length === 1) {
			const o = await lm(i, e);
			if (o) return M(o, n[0]);
		} else if (n.length > 1) {
			const o = n.indexOf(s);
			if (o >= 0) {
				const a = await lm(i, e);
				if (a) return M(a, n[o]);
			}
		}
	} catch {}
	return null;
}
async function Y2(t) {
	try {
		return await ee.realpath(t);
	} catch {
		const i = FP(t);
		return await K2.promises.access(i, K2.constants.R_OK), i;
	}
}
function FP(t) {
	return Kr(ui(t), Bt);
}
var Q2 = m({
	"out-build/vs/base/node/extpath.js"() {
		"use strict";
		ge(), z(), Ft(), yt();
	},
});
import { watch as NP, promises as WP } from "fs";
var Z2,
	jP = m({
		"out-build/vs/platform/files/node/watcher/nodejs/nodejsWatcherLib.js"() {
			"use strict";
			ae(),
				Mt(),
				hi(),
				F(),
				Ql(),
				ge(),
				z(),
				rt(),
				ie(),
				Q2(),
				yt(),
				Oo(),
				(Z2 = class mf extends j {
					static {
						this.a = 100;
					}
					static {
						this.b = 75;
					}
					get isReusingRecursiveWatcher() {
						return this.n;
					}
					get failed() {
						return this.q;
					}
					constructor(e, i, s, r, n, o) {
						super(),
							(this.r = e),
							(this.s = i),
							(this.t = s),
							(this.u = r),
							(this.w = n),
							(this.y = o),
							(this.c = this.D(
								new Ov(
									{
										maxWorkChunkSize: 100,
										throttleDelay: 200,
										maxBufferedWork: 1e4,
									},
									(a) => this.t(a),
								),
							)),
							(this.f = this.D(new Rv((a) => this.M(a), mf.b))),
							(this.g = T2(this.r.path, this.r.excludes)),
							(this.h = this.r.includes
								? T2(this.r.path, this.r.includes)
								: void 0),
							(this.j = W2(this.r) ? this.r.filter : void 0),
							(this.m = new ts()),
							(this.ready = this.z()),
							(this.n = !1),
							(this.q = !1);
					}
					async z() {
						try {
							const e = await this.F(this.r);
							if (this.m.token.isCancellationRequested) return;
							const i = await WP.stat(e);
							if (this.m.token.isCancellationRequested) return;
							this.D(await this.G(e, i.isDirectory()));
						} catch (e) {
							e.code !== "ENOENT"
								? this.O(e)
								: this.Q(
										`ignoring a path for watching who's stat info failed to resolve: ${this.r.path} (error: ${e})`,
									),
								this.C();
						}
					}
					C() {
						(this.q = !0), this.u?.();
					}
					async F(e) {
						let i = e.path;
						try {
							(i = await ee.realpath(e.path)),
								e.path === i &&
									(i = (await lm(e.path, this.m.token)) ?? e.path),
								e.path !== i &&
									this.Q(
										`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${e.path}, real: ${i})`,
									);
						} catch {}
						return i;
					}
					async G(e, i) {
						const s = new De();
						return (
							this.H(e, i, s)
								? (this.Q(
										`reusing an existing recursive watcher for ${this.r.path}`,
									),
									(this.n = !0))
								: ((this.n = !1), await this.I(e, i, s)),
							s
						);
					}
					H(e, i, s) {
						if (i) return !1;
						const r = P.file(this.r.path),
							n = this.s?.subscribe(this.r.path, async (o, a) => {
								if (!s.isDisposed)
									if (o) {
										const c = await this.G(e, i);
										s.isDisposed ? c.dispose() : s.add(c);
									} else
										a &&
											(typeof a.cId == "number" ||
												typeof this.r.correlationId == "number") &&
											this.L(
												{
													resource: r,
													type: a.type,
													cId: this.r.correlationId,
												},
												!0,
											);
							});
						return n ? (s.add(n), !0) : !1;
					}
					async I(e, i, s) {
						if (N && ja(e, "/Volumes/", !0)) {
							this.O(
								`Refusing to watch ${e} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`,
							);
							return;
						}
						const r = new ts(this.m.token);
						s.add(ke(() => r.dispose(!0)));
						const n = new De();
						s.add(n);
						try {
							const o = P.file(this.r.path),
								a = Te(e),
								c = NP(e);
							n.add(
								ke(() => {
									c.removeAllListeners(), c.close();
								}),
							),
								this.Q(`Started watching: '${e}'`);
							const l = new Set();
							if (i)
								try {
									for (const d of await ee.readdir(e)) l.add(d);
								} catch (d) {
									this.O(d);
								}
							if (r.token.isCancellationRequested) return;
							const u = new Map();
							n.add(
								ke(() => {
									for (const [, d] of u) d.dispose();
									u.clear();
								}),
							),
								c.on("error", (d, f) => {
									r.token.isCancellationRequested ||
										(this.O(
											`Failed to watch ${e} for changes using fs.watch() (${d}, ${f})`,
										),
										this.C());
								}),
								c.on("change", (d, f) => {
									if (r.token.isCancellationRequested) return;
									this.y && this.R(`[raw] ["${d}"] ${f}`);
									let p = "";
									if (
										(f && ((p = f.toString()), N && (p = eo(p))),
										!(!p || (d !== "change" && d !== "rename")))
									)
										if (i)
											if (d === "rename") {
												u.get(p)?.dispose();
												const v = setTimeout(async () => {
													if ((u.delete(p), p === a && !(await ee.exists(e)))) {
														this.J(o);
														return;
													}
													if (r.token.isCancellationRequested) return;
													const g = await this.N(M(e, p));
													if (r.token.isCancellationRequested) return;
													let b;
													g
														? l.has(p)
															? (b = 0)
															: ((b = 1), l.add(p))
														: (l.delete(p), (b = 2)),
														this.L({
															resource: he(o, p),
															type: b,
															cId: this.r.correlationId,
														});
												}, mf.a);
												u.set(
													p,
													ke(() => clearTimeout(v)),
												);
											} else {
												let v;
												l.has(p) ? (v = 0) : ((v = 1), l.add(p)),
													this.L({
														resource: he(o, p),
														type: v,
														cId: this.r.correlationId,
													});
											}
										else if (d === "rename" || p !== a) {
											const v = setTimeout(async () => {
												const g = await ee.exists(e);
												r.token.isCancellationRequested ||
													(g
														? (this.L(
																{
																	resource: o,
																	type: 0,
																	cId: this.r.correlationId,
																},
																!0,
															),
															n.add(await this.G(e, !1)))
														: this.J(o));
											}, mf.a);
											n.clear(), n.add(ke(() => clearTimeout(v)));
										} else
											this.L(
												{ resource: o, type: 0, cId: this.r.correlationId },
												!0,
											);
								});
						} catch (o) {
							r.token.isCancellationRequested ||
								this.O(
									`Failed to watch ${e} for changes using fs.watch() (${o.toString()})`,
								),
								this.C();
						}
					}
					J(e) {
						this.P("Watcher shutdown because watched path got deleted"),
							this.L({ resource: e, type: 2, cId: this.r.correlationId }, !0),
							this.f.flush(),
							this.C();
					}
					L(e, i = !1) {
						this.m.token.isCancellationRequested ||
							(this.y &&
								this.R(
									`${e.type === 1 ? "[ADDED]" : e.type === 2 ? "[DELETED]" : "[CHANGED]"} ${e.resource.fsPath}`,
								),
							!i && this.g.some((s) => s(e.resource.fsPath))
								? this.y &&
									this.R(` >> ignored (excluded) ${e.resource.fsPath}`)
								: !i &&
										this.h &&
										this.h.length > 0 &&
										!this.h.some((s) => s(e.resource.fsPath))
									? this.y &&
										this.R(` >> ignored (not included) ${e.resource.fsPath}`)
									: this.f.work(e));
					}
					M(e) {
						const i = wP(e),
							s = [];
						for (const n of i) {
							if (yP(n, this.j)) {
								this.y && this.R(` >> ignored (filtered) ${n.resource.fsPath}`);
								continue;
							}
							s.push(n);
						}
						if (s.length === 0) return;
						if (this.y)
							for (const n of s)
								this.R(
									` >> normalized ${n.type === 1 ? "[ADDED]" : n.type === 2 ? "[DELETED]" : "[CHANGED]"} ${n.resource.fsPath}`,
								);
						this.c.work(s)
							? this.c.pending > 0 &&
								this.Q(
									`started throttling events due to large amount of file change events at once (pending: ${this.c.pending}, most recent change: ${s[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`,
								)
							: this.P(
									`started ignoring events due to too many file change events at once (incoming: ${s.length}, most recent change: ${s[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`,
								);
					}
					async N(e) {
						if (Ee) return ee.exists(e);
						try {
							const i = Te(e);
							return (await ee.readdir(Ke(e))).some((r) => r === i);
						} catch (i) {
							return this.Q(i), !1;
						}
					}
					setVerboseLogging(e) {
						this.y = e;
					}
					O(e) {
						this.m.token.isCancellationRequested ||
							this.w?.({
								type: "error",
								message: `[File Watcher (node.js)] ${e}`,
							});
					}
					P(e) {
						this.m.token.isCancellationRequested ||
							this.w?.({
								type: "warn",
								message: `[File Watcher (node.js)] ${e}`,
							});
					}
					Q(e) {
						!this.m.token.isCancellationRequested &&
							this.y &&
							this.w?.({
								type: "trace",
								message: `[File Watcher (node.js)] ${e}`,
							});
					}
					R(e) {
						!this.m.token.isCancellationRequested &&
							this.y &&
							this.Q(
								`${e}${typeof this.r.correlationId == "number" ? ` <${this.r.correlationId}> ` : ""}`,
							);
					}
					dispose() {
						this.m.dispose(!0), super.dispose();
					}
				});
		},
	}),
	e5,
	TP = m({
		"out-build/vs/platform/files/node/watcher/nodejs/nodejsWatcher.js"() {
			"use strict";
			q(),
				N2(),
				MP(),
				z(),
				jP(),
				hi(),
				(e5 = class extends X2 {
					constructor(t) {
						super(),
							(this.O = t),
							(this.onDidError = x.None),
							(this.watchers = new Set());
					}
					async N(t) {
						t = this.Z(t);
						const e = [],
							i = new Set(Array.from(this.watchers));
						for (const s of t) {
							const r = this.W(s);
							r &&
							I2(r.request.excludes, s.excludes) &&
							I2(r.request.includes, s.includes)
								? i.delete(r)
								: e.push(s);
						}
						e.length &&
							this.P(
								`Request to start watching: ${e.map((s) => this.M(s)).join(",")}`,
							),
							i.size &&
								this.P(
									`Request to stop watching: ${Array.from(i)
										.map((s) => this.M(s.request))
										.join(",")}`,
								);
						for (const s of i) this.Y(s);
						for (const s of e) this.X(s);
					}
					W(t) {
						for (const e of this.watchers)
							if (
								typeof t.correlationId == "number" ||
								typeof e.request.correlationId == "number"
							) {
								if (e.request.correlationId === t.correlationId) return e;
							} else if (Jl(e.request.path, t.path, !Ee)) return e;
					}
					X(t) {
						const e = new Z2(
								t,
								this.O,
								(s) => this.a.fire(s),
								() => this.c.fire(t),
								(s) => this.b.fire(s),
								this.R,
							),
							i = { request: t, instance: e };
						this.watchers.add(i);
					}
					async stop() {
						await super.stop();
						for (const t of this.watchers) this.Y(t);
					}
					Y(t) {
						this.P("stopping file watcher", t),
							this.watchers.delete(t),
							t.instance.dispose();
					}
					Z(t) {
						const e = new Map();
						for (const i of t) {
							const s = Ee ? i.path : i.path.toLowerCase();
							let r = e.get(i.correlationId);
							r || ((r = new Map()), e.set(i.correlationId, r)),
								r.has(s) &&
									this.P(
										`ignoring a request for watching who's path is already watched: ${this.M(i)}`,
									),
								r.set(s, i);
						}
						return Array.from(e.values())
							.map((i) => Array.from(i.values()))
							.flat();
					}
					async setVerboseLogging(t) {
						super.setVerboseLogging(t);
						for (const e of this.watchers) e.instance.setVerboseLogging(t);
					}
					P(t, e) {
						this.R && this.b.fire({ type: "trace", message: this.bb(t, e) });
					}
					Q(t) {
						this.b.fire({ type: "warn", message: this.bb(t) });
					}
					bb(t, e) {
						return e
							? `[File Watcher (node.js)] ${t} (${this.M(e.request)})`
							: `[File Watcher (node.js)] ${t}`;
					}
				});
		},
	}),
	t5,
	UP = m({
		"out-build/vs/platform/files/node/watcher/nodejs/nodejsClient.js"() {
			"use strict";
			Oo(),
				TP(),
				(t5 = class extends U2 {
					constructor(t, e, i) {
						super(t, e, i), this.r();
					}
					q(t) {
						return t.add(new e5(void 0));
					}
				});
		},
	});
import { promises as vn } from "fs";
var vh,
	um = m({
		"out-build/vs/platform/files/node/diskFileSystemProvider.js"() {
			"use strict";
			ae(),
				xi(),
				Je(),
				q(),
				hi(),
				F(),
				ge(),
				z(),
				rt(),
				Va(),
				yt(),
				ve(),
				Be(),
				H2(),
				xP(),
				RP(),
				UP(),
				(vh = class El extends V2 {
					static {
						this.M = !1;
					}
					constructor(e, i) {
						super(e, i),
							(this.onDidChangeCapabilities = x.None),
							(this.Q = new qt((s) => Ze.getComparisonKey(s))),
							(this.Y = new Map()),
							(this.Z = new Map()),
							(this.$ = new Map());
					}
					get capabilities() {
						return (
							this.N || ((this.N = 253982), Ee && (this.N |= 1024)), this.N
						);
					}
					async stat(e) {
						try {
							const { stat: i, symbolicLink: s } = await Wt.stat(this.J(e));
							return {
								type: this.P(i, s),
								ctime: i.birthtime.getTime(),
								mtime: i.mtime.getTime(),
								size: i.size,
								permissions: i.mode & 128 ? void 0 : po.Locked,
							};
						} catch (i) {
							throw this.ib(i);
						}
					}
					async O(e) {
						try {
							return await this.stat(e);
						} catch {
							return;
						}
					}
					async readdir(e) {
						try {
							const i = await ee.readdir(this.J(e), { withFileTypes: !0 }),
								s = [];
							return (
								await Promise.all(
									i.map(async (r) => {
										try {
											let n;
											r.isSymbolicLink()
												? (n = (await this.stat(he(e, r.name))).type)
												: (n = this.P(r)),
												s.push([r.name, n]);
										} catch (n) {
											this.a.trace(n);
										}
									}),
								),
								s
							);
						} catch (i) {
							throw this.ib(i);
						}
					}
					P(e, i) {
						let s;
						return (
							i?.dangling
								? (s = At.Unknown)
								: e.isFile()
									? (s = At.File)
									: e.isDirectory()
										? (s = At.Directory)
										: (s = At.Unknown),
							i && (s |= At.SymbolicLink),
							s
						);
					}
					async R(e) {
						const i = this.J(e);
						this.S(
							`[Disk FileSystemProvider]: createResourceLock() - request to acquire resource lock (${i})`,
						);
						let s;
						for (; (s = this.Q.get(e)); )
							this.S(
								`[Disk FileSystemProvider]: createResourceLock() - waiting for resource lock to be released (${i})`,
							),
								await s.wait();
						const r = new za();
						return (
							this.Q.set(e, r),
							this.S(
								`[Disk FileSystemProvider]: createResourceLock() - new resource lock created (${i})`,
							),
							ke(() => {
								this.S(
									`[Disk FileSystemProvider]: createResourceLock() - resource lock dispose() (${i})`,
								),
									this.Q.get(e) === r &&
										(this.S(
											`[Disk FileSystemProvider]: createResourceLock() - resource lock removed from resource-lock map (${i})`,
										),
										this.Q.delete(e)),
									this.S(
										`[Disk FileSystemProvider]: createResourceLock() - resource lock barrier open() (${i})`,
									),
									r.open();
							})
						);
					}
					async readFile(e, i) {
						let s;
						try {
							i?.atomic &&
								(this.S(
									`[Disk FileSystemProvider]: atomic read operation started (${this.J(e)})`,
								),
								(s = await this.R(e)));
							const r = this.J(e);
							return await vn.readFile(r);
						} catch (r) {
							throw this.ib(r);
						} finally {
							s?.dispose();
						}
					}
					S(e) {
						El.M && this.a.trace(e);
					}
					readFileStream(e, i, s) {
						const r = tu((n) => H.concat(n.map((o) => H.wrap(o))).buffer);
						return (
							z2(
								this,
								e,
								r,
								(n) => n.buffer,
								{ ...i, bufferSize: 256 * 1024 },
								s,
							),
							r
						);
					}
					async writeFile(e, i, s) {
						return s?.atomic !== !1 && s?.atomic?.postfix && (await this.U(e))
							? this.W(e, he(xv(e), `${ys(e)}${s.atomic.postfix}`), i, s)
							: this.X(e, i, s);
					}
					async U(e) {
						try {
							const i = this.J(e),
								{ symbolicLink: s } = await Wt.stat(i);
							if (s) return !1;
						} catch {}
						return !0;
					}
					async W(e, i, s, r) {
						const n = new De();
						try {
							n.add(await this.R(e)),
								n.add(await this.R(i)),
								await this.X(i, s, r, !0);
							try {
								await this.rename(i, e, { overwrite: !0 });
							} catch (o) {
								try {
									await this.delete(i, {
										recursive: !1,
										useTrash: !1,
										atomic: !1,
									});
								} catch {}
								throw o;
							}
						} finally {
							n.dispose();
						}
					}
					async X(e, i, s, r) {
						let n;
						try {
							const o = this.J(e);
							if (!s.create || !s.overwrite) {
								if (await ee.exists(o)) {
									if (!s.overwrite) throw ss(w(1952, null), ne.FileExists);
								} else if (!s.create) throw ss(w(1953, null), ne.FileNotFound);
							}
							(n = await this.open(e, { create: !0, unlock: s.unlock }, r)),
								await this.write(n, 0, i, 0, i.byteLength);
						} catch (o) {
							throw await this.jb(e, o);
						} finally {
							typeof n == "number" && (await this.close(n));
						}
					}
					static {
						this.ab = !0;
					}
					static configureFlushOnWrite(e) {
						El.ab = e;
					}
					async open(e, i, s) {
						const r = this.J(e);
						let n;
						fo(i) && !s && (n = await this.R(e));
						let o;
						try {
							if (fo(i) && i.unlock)
								try {
									const { stat: a } = await Wt.stat(r);
									a.mode & 128 || (await vn.chmod(r, a.mode | 128));
								} catch (a) {
									a.code !== "ENOENT" && this.a.trace(a);
								}
							if (T && fo(i))
								try {
									(o = await ee.open(r, "r+")), await ee.ftruncate(o, 0);
								} catch (a) {
									if (
										(a.code !== "ENOENT" && this.a.trace(a),
										typeof o == "number")
									) {
										try {
											await ee.close(o);
										} catch (c) {
											this.a.trace(c);
										}
										o = void 0;
									}
								}
							typeof o != "number" && (o = await ee.open(r, fo(i) ? "w" : "r"));
						} catch (a) {
							throw (n?.dispose(), fo(i) ? await this.jb(e, a) : this.ib(a));
						}
						if ((this.Y.set(o, 0), fo(i) && this.$.set(o, e), n)) {
							const a = this.Z.get(o);
							this.S(
								`[Disk FileSystemProvider]: open() - storing lock for handle ${o} (${r})`,
							),
								this.Z.set(o, n),
								a &&
									(this.S(
										`[Disk FileSystemProvider]: open() - disposing a previous lock that was still stored on same handle ${o} (${r})`,
									),
									a.dispose());
						}
						return o;
					}
					async close(e) {
						const i = this.Z.get(e);
						try {
							if ((this.Y.delete(e), this.$.delete(e) && El.ab))
								try {
									await ee.fdatasync(e);
								} catch (s) {
									El.configureFlushOnWrite(!1), this.a.error(s);
								}
							return await ee.close(e);
						} catch (s) {
							throw this.ib(s);
						} finally {
							i &&
								(this.Z.get(e) === i &&
									(this.S(
										`[Disk FileSystemProvider]: close() - resource lock removed from handle-lock map ${e}`,
									),
									this.Z.delete(e)),
								this.S(
									`[Disk FileSystemProvider]: close() - disposing lock for handle ${e}`,
								),
								i.dispose());
						}
					}
					async read(e, i, s, r, n) {
						const o = this.bb(e, i);
						let a = null;
						try {
							a = (await ee.read(e, s, r, n, o)).bytesRead;
						} catch (c) {
							throw this.ib(c);
						} finally {
							this.cb(e, o, a);
						}
						return a;
					}
					bb(e, i) {
						return i === this.Y.get(e) ? null : i;
					}
					cb(e, i, s) {
						const r = this.Y.get(e);
						typeof r == "number" &&
							(typeof i == "number" ||
								(typeof s == "number"
									? this.Y.set(e, r + s)
									: this.Y.delete(e)));
					}
					async write(e, i, s, r, n) {
						return US(() => this.db(e, i, s, r, n), 100, 3);
					}
					async db(e, i, s, r, n) {
						const o = this.bb(e, i);
						let a = null;
						try {
							a = (await ee.write(e, s, r, n, o)).bytesWritten;
						} catch (c) {
							throw await this.jb(this.$.get(e), c);
						} finally {
							this.cb(e, o, a);
						}
						return a;
					}
					async mkdir(e) {
						try {
							await vn.mkdir(this.J(e));
						} catch (i) {
							throw this.ib(i);
						}
					}
					async delete(e, i) {
						try {
							const s = this.J(e);
							if (i.recursive) {
								let r;
								i?.atomic !== !1 &&
									i.atomic.postfix &&
									(r = M(Ke(s), `${Te(s)}${i.atomic.postfix}`)),
									await ee.rm(s, Qr.MOVE, r);
							} else
								try {
									await vn.unlink(s);
								} catch (r) {
									if (r.code === "EPERM" || r.code === "EISDIR") {
										let n = !1;
										try {
											const { stat: o, symbolicLink: a } = await Wt.stat(s);
											n = o.isDirectory() && !a;
										} catch {}
										if (n) await vn.rmdir(s);
										else throw r;
									} else throw r;
								}
						} catch (s) {
							throw this.ib(s);
						}
					}
					async rename(e, i, s) {
						const r = this.J(e),
							n = this.J(i);
						if (r !== n)
							try {
								await this.eb(e, i, "move", s.overwrite), await ee.rename(r, n);
							} catch (o) {
								throw (
									((o.code === "EINVAL" ||
										o.code === "EBUSY" ||
										o.code === "ENAMETOOLONG") &&
										(o = new Error(
											w(1954, null, Te(r), Te(Ke(n)), o.toString()),
										)),
									this.ib(o))
								);
							}
					}
					async copy(e, i, s) {
						const r = this.J(e),
							n = this.J(i);
						if (r !== n)
							try {
								await this.eb(e, i, "copy", s.overwrite),
									await ee.copy(r, n, { preserveSymlinks: !0 });
							} catch (o) {
								throw (
									((o.code === "EINVAL" ||
										o.code === "EBUSY" ||
										o.code === "ENAMETOOLONG") &&
										(o = new Error(
											w(1955, null, Te(r), Te(Ke(n)), o.toString()),
										)),
									this.ib(o))
								);
							}
					}
					async eb(e, i, s, r) {
						const n = this.J(e),
							o = this.J(i);
						let a = !1;
						if ((!!(this.capabilities & 1024) || (a = Jl(n, o, !0)), a)) {
							if (s === "copy") throw ss(w(1956, null), ne.FileExists);
							if (s === "move") return;
						}
						const l = await this.O(e);
						if (!l) throw ss(w(1957, null), ne.FileNotFound);
						const u = await this.O(i);
						if (u) {
							if (!r) throw ss(w(1958, null), ne.FileExists);
							(l.type & At.File && u.type & At.File) ||
								(await this.delete(i, {
									recursive: !0,
									useTrash: !1,
									atomic: !1,
								}));
						}
					}
					async cloneFile(e, i) {
						return this.fb(e, i, !1);
					}
					async fb(e, i, s) {
						const r = this.J(e),
							n = this.J(i),
							o = !!(this.capabilities & 1024);
						if (Jl(r, n, !o)) return;
						const a = new De();
						try {
							a.add(await this.R(e)),
								a.add(await this.R(i)),
								s && (await vn.mkdir(Ke(n), { recursive: !0 })),
								await vn.copyFile(r, n);
						} catch (c) {
							if (c.code === "ENOENT" && !s) return this.fb(e, i, !0);
							throw this.ib(c);
						} finally {
							a.dispose();
						}
					}
					t(e, i, s) {
						return new J2(
							(r) => e(r),
							(r) => i(r),
							s,
						);
					}
					G(e, i, s) {
						return new t5(
							(r) => e(r),
							(r) => i(r),
							s,
						);
					}
					ib(e) {
						if (e instanceof Du) return e;
						let i = e,
							s;
						switch (e.code) {
							case "ENOENT":
								s = ne.FileNotFound;
								break;
							case "EISDIR":
								s = ne.FileIsADirectory;
								break;
							case "ENOTDIR":
								s = ne.FileNotADirectory;
								break;
							case "EEXIST":
								s = ne.FileExists;
								break;
							case "EPERM":
							case "EACCES":
								s = ne.NoPermissions;
								break;
							case "ERR_UNC_HOST_NOT_ALLOWED":
								(i = `${e.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`),
									(s = ne.Unknown);
								break;
							default:
								s = ne.Unknown;
						}
						return ss(i, s);
					}
					async jb(e, i) {
						let s = this.ib(i);
						if (e && s.code === ne.NoPermissions)
							try {
								const { stat: r } = await Wt.stat(this.J(e));
								r.mode & 128 || (s = ss(i, ne.FileWriteLocked));
							} catch (r) {
								this.a.trace(r);
							}
						return s;
					}
				});
		},
	}),
	i5,
	s5,
	qP = m({
		"out-build/vs/platform/files/node/diskFileSystemProviderServer.js"() {
			"use strict";
			q(),
				um(),
				F(),
				Je(),
				Va(),
				Mt(),
				(i5 = class extends j {
					constructor(t, e) {
						super(),
							(this.a = t),
							(this.b = e),
							(this.F = new Map()),
							(this.G = new Map());
					}
					call(t, e, i) {
						const s = this.c(t);
						switch (e) {
							case "stat":
								return this.g(s, i[0]);
							case "readdir":
								return this.h(s, i[0]);
							case "open":
								return this.q(s, i[0], i[1]);
							case "close":
								return this.r(i[0]);
							case "read":
								return this.s(i[0], i[1], i[2]);
							case "readFile":
								return this.j(s, i[0], i[1]);
							case "write":
								return this.t(i[0], i[1], i[2], i[3], i[4]);
							case "writeFile":
								return this.n(s, i[0], i[1], i[2]);
							case "rename":
								return this.y(s, i[0], i[1], i[2]);
							case "copy":
								return this.z(s, i[0], i[1], i[2]);
							case "cloneFile":
								return this.C(s, i[0], i[1]);
							case "mkdir":
								return this.u(s, i[0]);
							case "delete":
								return this.w(s, i[0], i[1]);
							case "watch":
								return this.I(s, i[0], i[1], i[2], i[3]);
							case "unwatch":
								return this.J(i[0], i[1]);
						}
						throw new Error(`IPC Command ${e} not found`);
					}
					listen(t, e, i) {
						const s = this.c(t);
						switch (e) {
							case "fileChange":
								return this.H(s, i[0]);
							case "readFileStream":
								return this.m(s, i[0], i[1]);
						}
						throw new Error(`Unknown event ${e}`);
					}
					g(t, e) {
						const i = this.f(t, e, !0);
						return this.a.stat(i);
					}
					h(t, e) {
						const i = this.f(t, e);
						return this.a.readdir(i);
					}
					async j(t, e, i) {
						const s = this.f(t, e, !0),
							r = await this.a.readFile(s, i);
						return H.wrap(r);
					}
					m(t, e, i) {
						const s = this.f(t, e, !0),
							r = new ts(),
							n = new $({
								onDidRemoveLastListener: () => {
									r.cancel();
								},
							}),
							o = this.a.readFileStream(s, i, r.token);
						return (
							iu(o, {
								onData: (a) => n.fire(H.wrap(a)),
								onError: (a) => n.fire(a),
								onEnd: () => {
									n.fire("end"), n.dispose(), r.dispose();
								},
							}),
							n.event
						);
					}
					n(t, e, i, s) {
						const r = this.f(t, e);
						return this.a.writeFile(r, i.buffer, s);
					}
					q(t, e, i) {
						const s = this.f(t, e, !0);
						return this.a.open(s, i);
					}
					r(t) {
						return this.a.close(t);
					}
					async s(t, e, i) {
						const s = H.alloc(i),
							n = await this.a.read(t, e, s.buffer, 0, i);
						return [s, n];
					}
					t(t, e, i, s, r) {
						return this.a.write(t, e, i.buffer, s, r);
					}
					u(t, e) {
						const i = this.f(t, e);
						return this.a.mkdir(i);
					}
					w(t, e, i) {
						const s = this.f(t, e);
						return this.a.delete(s, i);
					}
					y(t, e, i, s) {
						const r = this.f(t, e),
							n = this.f(t, i);
						return this.a.rename(r, n, s);
					}
					z(t, e, i, s) {
						const r = this.f(t, e),
							n = this.f(t, i);
						return this.a.copy(r, n, s);
					}
					C(t, e, i) {
						const s = this.f(t, e),
							r = this.f(t, i);
						return this.a.cloneFile(s, r);
					}
					H(t, e) {
						const i = new $({
							onWillAddFirstListener: () => {
								this.F.set(e, this.L(t, i));
							},
							onDidRemoveLastListener: () => {
								vt(this.F.get(e)), this.F.delete(e);
							},
						});
						return i.event;
					}
					async I(t, e, i, s, r) {
						const n = this.F.get(e);
						if (n) {
							const o = this.f(t, s),
								a = n.watch(i, o, r);
							this.G.set(e + i, a);
						}
					}
					async J(t, e) {
						const i = t + e,
							s = this.G.get(i);
						s && (vt(s), this.G.delete(i));
					}
					dispose() {
						super.dispose();
						for (const [, t] of this.G) t.dispose();
						this.G.clear();
						for (const [, t] of this.F) t.dispose();
						this.F.clear();
					}
				}),
				(s5 = class extends j {
					constructor(t, e, i, s) {
						super(),
							(this.c = t),
							(this.f = i),
							(this.g = s),
							(this.a = new Map()),
							(this.b = this.D(new vh(this.f))),
							this.h(e);
					}
					h(t) {
						const e = this.D(new $());
						this.D(
							e.event((i) => {
								t.fire(
									i.map((s) => ({
										resource: this.c.transformOutgoingURI(s.resource),
										type: s.type,
										cId: s.cId,
									})),
								);
							}),
						),
							this.D(this.b.onDidChangeFile((i) => e.fire(i))),
							this.D(this.b.onDidWatchError((i) => t.fire(i)));
					}
					j(t) {}
					m(t) {}
					watch(t, e, i) {
						const s = this.m(this.g);
						return (
							Array.isArray(s) && (i.excludes = [...i.excludes, ...s]),
							this.a.set(t, this.b.watch(e, i)),
							ke(() => {
								vt(this.a.get(t)), this.a.delete(t);
							})
						);
					}
					dispose() {
						for (const [, t] of this.a) t.dispose();
						this.a.clear(), super.dispose();
					}
				});
		},
	}),
	r5,
	BP = m({
		"out-build/vs/base/common/uriIpc.js"() {
			"use strict";
			Je(),
				ie(),
				(r5 = new (class {
					transformIncoming(t) {
						return t;
					}
					transformOutgoing(t) {
						return t;
					}
					transformOutgoingURI(t) {
						return t;
					}
					transformOutgoingScheme(t) {
						return t;
					}
				})());
		},
	});
import { shell as zP } from "electron";
var n5,
	o5,
	HP = m({
		"out-build/vs/platform/files/electron-main/diskFileSystemProviderServer.js"() {
			"use strict";
			ve(),
				z(),
				ie(),
				Be(),
				ge(),
				qP(),
				BP(),
				Yr(),
				(n5 = class extends i5 {
					constructor(t, e, i) {
						super(t, e), (this.M = i);
					}
					c(t) {
						return r5;
					}
					f(t, e) {
						return P.revive(e);
					}
					async w(t, e, i) {
						if (!i.useTrash) return super.w(t, e, i);
						const s = this.f(t, e),
							r = ui(s.fsPath);
						try {
							await zP.trashItem(r);
						} catch (n) {
							throw ss(w(T ? 1950 : 1951, null, Te(r), Es(n)), ne.Unknown);
						}
					}
					L(t, e) {
						return new o5(t, e, this.b, this.M);
					}
				}),
				(o5 = class extends s5 {
					watch(t, e, i) {
						if (i.recursive)
							throw ss(
								"Recursive file watching is not supported from main process for performance reasons.",
								ne.Unavailable,
							);
						return super.watch(t, e, i);
					}
				});
		},
	}),
	le,
	yh = m({
		"out-build/vs/platform/instantiation/common/descriptors.js"() {
			"use strict";
			le = class {
				constructor(t, e = [], i = !1) {
					(this.ctor = t),
						(this.staticArguments = e),
						(this.supportsDelayedInstantiation = i);
				}
			};
		},
	}),
	bh,
	hm = m({
		"out-build/vs/platform/instantiation/common/serviceCollection.js"() {
			"use strict";
			bh = class {
				constructor(...t) {
					this.a = new Map();
					for (const [e, i] of t) this.set(e, i);
				}
				set(t, e) {
					const i = this.a.get(t);
					return this.a.set(t, e), i;
				}
				has(t) {
					return this.a.has(t);
				}
				get(t) {
					return this.a.get(t);
				}
			};
		},
	}),
	a5,
	dm,
	VP = m({
		"out-build/vs/platform/process/common/process.js"() {
			"use strict";
			Y(),
				(function (t) {
					(t.VSCode = "vscode"),
						(t.Extension = "extension"),
						(t.Marketplace = "marketplace");
				})(a5 || (a5 = {})),
				(dm = B("processService"));
		},
	});
import { exec as Eh } from "child_process";
function fm(t) {
	return new Promise((e, i) => {
		let s;
		const r = new Map();
		function n(c, l, u, d, f) {
			const p = r.get(l);
			if (c === t || p) {
				const v = { name: o(u), cmd: u, pid: c, ppid: l, load: d, mem: f };
				r.set(c, v),
					c === t && (s = v),
					p &&
						(p.children || (p.children = []),
						p.children.push(v),
						p.children.length > 1 &&
							(p.children = p.children.sort((g, b) => g.pid - b.pid)));
			}
		}
		function o(c) {
			const l = /--utility-sub-type=network/i,
				u = /--crashes-directory/i,
				d = /\\pipe\\winpty-control/i,
				f = /conhost\.exe.+--headless/i,
				p = /--type=([a-zA-Z-]+)/;
			if (u.exec(c)) return "electron-crash-reporter";
			if (d.exec(c)) return "winpty-agent";
			if (f.exec(c)) return "conpty-agent";
			let v = p.exec(c);
			if (v && v.length === 2)
				return v[1] === "renderer"
					? "window"
					: v[1] === "utility"
						? l.exec(c)
							? "utility-network-service"
							: "utility-process"
						: v[1] === "extensionHost"
							? "extension-host"
							: v[1];
			const g = /[a-zA-Z-]+\.js/g;
			let b = "";
			do (v = g.exec(c)), v && (b += v + " ");
			while (v);
			return b && c.indexOf("node ") < 0 && c.indexOf("node.exe") < 0
				? `electron-nodejs (${b})`
				: c;
		}
		if (process.platform === "win32") {
			const c = (l) =>
				l.indexOf("\\\\?\\") === 0 || l.indexOf("\\??\\") === 0
					? l.substring(4)
					: l.indexOf('"\\\\?\\') === 0 || l.indexOf('"\\??\\') === 0
						? '"' + l.substring(5)
						: l;
			import("@vscode/windows-process-tree").then((l) => {
				l.getProcessList(
					t,
					(u) => {
						if (!u) {
							i(new Error(`Root process ${t} not found`));
							return;
						}
						l.getProcessCpuUsage(u, (d) => {
							const f = new Map();
							d.forEach((p) => {
								const v = c(p.commandLine || "");
								f.set(p.pid, {
									name: o(v),
									cmd: v,
									pid: p.pid,
									ppid: p.ppid,
									load: p.cpu || 0,
									mem: p.memory || 0,
								});
							}),
								(s = f.get(t)),
								s
									? (f.forEach((p) => {
											const v = f.get(p.ppid);
											v &&
												(v.children || (v.children = []), v.children.push(p));
										}),
										f.forEach((p) => {
											p.children &&
												(p.children = p.children.sort((v, g) => v.pid - g.pid));
										}),
										e(s))
									: i(new Error(`Root process ${t} not found`));
						});
					},
					l.ProcessDataFlag.CommandLine | l.ProcessDataFlag.Memory,
				);
			});
		} else {
			let c = function () {
				let l = [s];
				const u = [];
				for (; l.length; ) {
					const f = l.shift();
					f && (u.push(f.pid), f.children && (l = l.concat(f.children)));
				}
				let d = JSON.stringify($t.asFileUri("vs/base/node/cpuUsage.sh").fsPath);
				(d += " " + u.join(" ")),
					Eh(d, {}, (f, p, v) => {
						if (f || v) i(f || new Error(v.toString()));
						else {
							const g = p.toString().split(`
`);
							for (let b = 0; b < u.length; b++) {
								const y = r.get(u[b]);
								y.load = parseFloat(g[b]);
							}
							if (!s) {
								i(new Error(`Root process ${t} not found`));
								return;
							}
							e(s);
						}
					});
			};
			var a = c;
			Eh("which ps", {}, (l, u, d) => {
				if (l || d)
					if (process.platform !== "linux") i(l || new Error(d.toString()));
					else {
						const f = JSON.stringify($t.asFileUri("vs/base/node/ps.sh").fsPath);
						Eh(f, {}, (p, v, g) => {
							p || g ? i(p || new Error(g.toString())) : (c5(v, n), c());
						});
					}
				else {
					const f = u.toString().trim();
					Eh(
						`${f} -ax -o pid=,ppid=,pcpu=,pmem=,command=`,
						{ maxBuffer: 1e3 * 1024, env: { LC_NUMERIC: "en_US.UTF-8" } },
						(v, g, b) => {
							v || (b && !b.includes("screen size is bogus"))
								? i(v || new Error(b.toString()))
								: (c5(g, n),
									process.platform === "linux"
										? c()
										: s
											? e(s)
											: i(new Error(`Root process ${t} not found`)));
						},
					);
				}
			});
		}
	});
}
function c5(t, e) {
	const i =
			/^\s*([0-9]+)\s+([0-9]+)\s+([0-9]+\.[0-9]+)\s+([0-9]+\.[0-9]+)\s+(.+)$/,
		s = t.toString().split(`
`);
	for (const r of s) {
		const n = i.exec(r.trim());
		n &&
			n.length === 6 &&
			e(
				parseInt(n[1]),
				parseInt(n[2]),
				n[5],
				parseFloat(n[3]),
				parseFloat(n[4]),
			);
	}
}
var l5 = m({
	"out-build/vs/base/node/ps.js"() {
		"use strict";
		Ce();
	},
});
import { spawn as GP } from "child_process";
import { relative as u5, join as h5 } from "path";
import { createHash as d5 } from "crypto";
import { promises as f5 } from "fs";
var Mo,
	Sh,
	$c = m({
		"out-build/vs/platform/cssDev/node/cssDevService.js"() {
			"use strict";
			Ce(),
				Gn(),
				Gi(),
				Y(),
				Q(),
				q(),
				F(),
				Be(),
				ie(),
				(Mo = B("ICSSDevelopmentService")),
				(Sh = class extends j {
					constructor(e, i, s) {
						super(),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.b = new Set()),
							(this.c = this.D(new $())),
							(this.onDidChangeCssModules = this.c.event),
							this.isEnabled &&
								(this.D(this.h.onDidFilesChange(this.n.bind(this))), this.m());
					}
					get isEnabled() {
						return !this.f.isBuilt;
					}
					getCssModules(e) {
						return e && (this.a = void 0), (this.a ??= this.j()), this.a;
					}
					async j() {
						if (!this.isEnabled) return new Map();
						const e = await import("@vscode/ripgrep");
						return await new Promise((i) => {
							const s = Hr.create(),
								r = [],
								n = new TextDecoder(),
								o = $t.asFileUri("").fsPath,
								a = GP(
									e.rgPath,
									[
										"-g",
										"**/*.css",
										"-g",
										"!**/fixtures/**",
										"--files",
										"--no-ignore",
										o,
									],
									{},
								);
							a.stdout.on("data", (c) => {
								const l = n.decode(c, { stream: !0 });
								r.push(
									l
										.split(`
`)
										.filter(Boolean),
								);
							}),
								a.on("error", (c) => {
									i(new Map());
								}),
								a.on("close", async () => {
									const c = r
											.flat()
											.map((u) => u5(o, u).replace(/\\/g, "/"))
											.filter(Boolean)
											.sort(),
										l = new Map();
									for (const u of c)
										try {
											const d = h5(o, u),
												f = await f5.readFile(d),
												p = d5("sha256").update(f).digest("hex");
											l.set(u, p);
										} catch {
											l.set(u, Date.now().toString());
										}
									i(l);
								});
						});
					}
					async m() {
						const e = await this.getCssModules();
						for (const [i] of e) {
							const s = P.file(h5($t.asFileUri("").fsPath, i));
							this.b.add(i), this.D(this.h.watch(s));
						}
					}
					async n(e) {
						if (!this.isEnabled) return;
						const i = $t.asFileUri("").fsPath,
							s = [];
						for (const r of e.rawUpdated) {
							const n = u5(i, r.fsPath).replace(/\\/g, "/");
							if (this.b.has(n)) {
								let o;
								try {
									const a = await f5.readFile(r.fsPath);
									o = d5("sha256").update(a).digest("hex");
								} catch {
									continue;
								}
								s.push({ path: n, newHash: o });
							}
						}
						s.length > 0 &&
							(this.c.fire(new Map(s.map((r) => [r.path, r.newHash]))),
							(this.a = void 0));
					}
				}),
				(Sh = __decorate([__param(0, ks), __param(1, G), __param(2, nt)], Sh));
		},
	});
import { networkInterfaces as JP } from "os";
function XP(t) {
	const e = t.replace(/\-/g, ":").toLowerCase();
	return !p5.has(e);
}
function KP() {
	const t = JP();
	for (const e in t) {
		const i = t[e];
		if (i) {
			for (const { mac: s } of i) if (XP(s)) return s;
		}
	}
	throw new Error("Unable to retrieve mac address (unexpected format)");
}
var p5,
	YP = m({
		"out-build/vs/base/node/macAddress.js"() {
			"use strict";
			p5 = new Set([
				"00:00:00:00:00:00",
				"ff:ff:ff:ff:ff:ff",
				"ac:de:48:00:11:22",
			]);
		},
	});
import { networkInterfaces as QP } from "os";
import { platform as pm } from "process";
import { execSync as ZP } from "child_process";
async function e$(t) {
	return (
		mm ||
			(mm = (async () => {
				let e;
				try {
					e = await g5(!1);
				} catch (i) {
					t(i);
				}
				return e || fi();
			})()),
		mm
	);
}
async function m5(t) {
	try {
		const e = await import("crypto"),
			i = KP();
		return e.createHash("sha256").update(i, "utf8").digest("hex");
	} catch (e) {
		t(e);
		return;
	}
}
function t$() {
	return pm !== "win32"
		? "notdefined"
		: process.arch === "ia32" &&
				process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432")
			? "mixed"
			: "native";
}
function i$(t) {
	switch (pm) {
		case "darwin":
			return t
				.split("IOPlatformUUID")[1]
				.split(`
`)[0]
				.replace(/\=|\s+|\"/gi, "")
				.toLowerCase();
		case "win32":
			return t
				.toString()
				.split("REG_SZ")[1]
				.replace(/\r+|\n+|\s+/gi, "")
				.toLowerCase();
		case "linux":
			return t
				.toString()
				.replace(/\r+|\n+|\s+/gi, "")
				.toLowerCase();
		case "freebsd":
			return t
				.toString()
				.replace(/\r+|\n+|\s+/gi, "")
				.toLowerCase();
		default:
			throw new Error(`Unsupported platform: ${process.platform}`);
	}
}
async function g5(t) {
	let e = i$(ZP(y5[pm], { timeout: 5e3 }).toString()),
		i;
	try {
		i = (await import("crypto"))
			.createHash("sha256")
			.update(e, "utf8")
			.digest("hex");
	} catch {
		i = fi();
	}
	return t ? e : i;
}
async function s$(t) {
	if (T) {
		const e = await import("@vscode/windows-registry");
		try {
			return e.GetStringRegKey("HKEY_LOCAL_MACHINE", b5, "MachineId") || "";
		} catch (i) {
			return t(i), "";
		}
	}
	return "";
}
async function w5(t) {
	try {
		return await (await import("@vscode/deviceid")).getDeviceId();
	} catch (e) {
		return t(e), fi();
	}
}
var kh,
	mm,
	v5,
	y5,
	b5,
	Ac = m({
		"out-build/vs/base/node/id.js"() {
			"use strict";
			ho(),
				Oi(),
				YP(),
				z(),
				(kh = new (class {
					c(t) {
						return (
							this.a ||
								((this.a = kr.forStrings()),
								this.a.set("00-50-56", !0),
								this.a.set("00-0C-29", !0),
								this.a.set("00-05-69", !0),
								this.a.set("00-03-FF", !0),
								this.a.set("00-1C-42", !0),
								this.a.set("00-16-3E", !0),
								this.a.set("08-00-27", !0),
								this.a.set("00:50:56", !0),
								this.a.set("00:0C:29", !0),
								this.a.set("00:05:69", !0),
								this.a.set("00:03:FF", !0),
								this.a.set("00:1C:42", !0),
								this.a.set("00:16:3E", !0),
								this.a.set("08:00:27", !0)),
							!!this.a.findSubstr(t)
						);
					}
					value() {
						if (this.b === void 0) {
							let t = 0,
								e = 0;
							const i = QP();
							for (const s in i) {
								const r = i[s];
								if (r)
									for (const { mac: n, internal: o } of r)
										o || ((e += 1), this.c(n.toUpperCase()) && (t += 1));
							}
							this.b = e > 0 ? t / e : 0;
						}
						return this.b;
					}
				})()),
				(v5 = {
					native: "%windir%\\System32",
					mixed: "%windir%\\sysnative\\cmd.exe /c %windir%\\System32",
					notdefined: "",
				}),
				(y5 = {
					darwin: "ioreg -rd1 -c IOPlatformExpertDevice",
					win32: `${v5[t$()]}\\REG.exe QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid`,
					linux:
						"( cat /var/lib/dbus/machine-id /etc/machine-id 2> /dev/null || hostname ) | head -n 1 || :",
					freebsd: "kenv -q smbios.system.uuid || sysctl -n kern.hostuuid",
				}),
				(b5 = "Software\\Microsoft\\SQMClient");
		},
	});
import * as E5 from "net";
function r$(t, e, i, s = 1) {
	let r = !1;
	return new Promise((n) => {
		const o = setTimeout(() => {
			if (!r) return (r = !0), n(0);
		}, i);
		gm(t, e, s, (a) => {
			if (!r) return (r = !0), clearTimeout(o), n(a);
		});
	});
}
function gm(t, e, i, s) {
	if (e === 0) return s(0);
	const r = new E5.Socket();
	r.once("connect", () => (S5(r), gm(t + i, e - 1, i, s))),
		r.once("data", () => {}),
		r.once(
			"error",
			(n) => (S5(r), n.code !== "ECONNREFUSED" ? gm(t + i, e - 1, i, s) : s(t)),
		),
		r.connect(t, "127.0.0.1");
}
function n$(t, e, i, s = "127.0.0.1") {
	let r = !1,
		n,
		o = 1;
	const a = E5.createServer({ pauseOnConnect: !0 });
	function c(l, u) {
		r ||
			((r = !0), a.removeAllListeners(), a.close(), n && clearTimeout(n), u(l));
	}
	return new Promise((l) => {
		(n = setTimeout(() => {
			c(0, l);
		}, i)),
			a.on("listening", () => {
				c(t, l);
			}),
			a.on("error", (u) => {
				u && (u.code === "EADDRINUSE" || u.code === "EACCES") && o < e
					? (t++, o++, a.listen(t, s))
					: c(0, l);
			}),
			a.on("close", () => {
				c(0, l);
			}),
			a.listen(t, s);
	});
}
function S5(t) {
	try {
		t.removeAllListeners("connect"),
			t.removeAllListeners("error"),
			t.end(),
			t.destroy(),
			t.unref();
	} catch (e) {
		console.error(e);
	}
}
var wm,
	k5 = m({
		"out-build/vs/base/node/ports.js"() {
			"use strict";
			wm = {
				1: !0,
				7: !0,
				9: !0,
				11: !0,
				13: !0,
				15: !0,
				17: !0,
				19: !0,
				20: !0,
				21: !0,
				22: !0,
				23: !0,
				25: !0,
				37: !0,
				42: !0,
				43: !0,
				53: !0,
				69: !0,
				77: !0,
				79: !0,
				87: !0,
				95: !0,
				101: !0,
				102: !0,
				103: !0,
				104: !0,
				109: !0,
				110: !0,
				111: !0,
				113: !0,
				115: !0,
				117: !0,
				119: !0,
				123: !0,
				135: !0,
				137: !0,
				139: !0,
				143: !0,
				161: !0,
				179: !0,
				389: !0,
				427: !0,
				465: !0,
				512: !0,
				513: !0,
				514: !0,
				515: !0,
				526: !0,
				530: !0,
				531: !0,
				532: !0,
				540: !0,
				548: !0,
				554: !0,
				556: !0,
				563: !0,
				587: !0,
				601: !0,
				636: !0,
				989: !0,
				990: !0,
				993: !0,
				995: !0,
				1719: !0,
				1720: !0,
				1723: !0,
				2049: !0,
				3659: !0,
				4045: !0,
				5060: !0,
				5061: !0,
				6e3: !0,
				6566: !0,
				6665: !0,
				6666: !0,
				6667: !0,
				6668: !0,
				6669: !0,
				6697: !0,
				10080: !0,
			};
		},
	});
import * as o$ from "fs";
import * as a$ from "os";
import * as c$ from "child_process";
import * as l$ from "path";
async function u$(t = !1) {
	return (vm === void 0 || t) && (vm = h$()), vm;
}
async function h$() {
	const t = d$();
	if (t === void 0) return !1;
	if (t >= 22e3) {
		const e = f$();
		if (e)
			return new Promise((i) => {
				try {
					c$.execFile(e, ["--status"], (s) => i(!s));
				} catch {
					i(!1);
				}
			});
	} else {
		const e = p$();
		if (e)
			try {
				if ((await o$.promises.stat(e)).isFile()) return !0;
			} catch {}
	}
	return !1;
}
function d$() {
	const t = /(\d+)\.(\d+)\.(\d+)/g.exec(a$.release());
	if (t) return parseInt(t[3]);
}
function x5(t) {
	const e = process.env.SystemRoot;
	if (e) {
		const i = process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432");
		return l$.join(e, i ? "Sysnative" : "System32", t);
	}
}
function f$() {
	return x5("wsl.exe");
}
function p$() {
	return x5("lxss\\LxssManager.dll");
}
var vm,
	m$ = m({
		"out-build/vs/platform/remote/node/wsl.js"() {
			"use strict";
		},
	}),
	xh,
	g$ = m({
		"out-build/vs/platform/profiling/electron-main/windowProfiling.js"() {
			"use strict";
			ae(),
				Q(),
				(xh = class {
					constructor(e, i, s) {
						(this.a = e), (this.b = i), (this.c = s);
					}
					async inspect(e) {
						await this.d();
						const i = this.a.webContents.debugger;
						await i.sendCommand("Profiler.start"),
							this.c.warn("[perf] profiling STARTED", this.b),
							await Ai(e);
						const s = await i.sendCommand("Profiler.stop");
						return (
							this.c.warn("[perf] profiling DONE", this.b),
							await this.e(),
							s.profile
						);
					}
					async d() {
						const e = this.a.webContents.debugger;
						e.attach(), await e.sendCommand("Profiler.enable");
					}
					async e() {
						const e = this.a.webContents.debugger;
						await e.sendCommand("Profiler.disable"), e.detach();
					}
				}),
				(xh = __decorate([__param(2, G)], xh));
		},
	}),
	Fo,
	Dh = m({
		"out-build/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.js"() {
			"use strict";
			Y(), (Fo = B("auxiliaryWindowsMainService"));
		},
	});
function ym(t) {
	return (
		(t.res.statusCode && t.res.statusCode >= 200 && t.res.statusCode < 300) ||
		t.res.statusCode === 1223
	);
}
function D5(t) {
	return t.res.statusCode === 204;
}
async function P5(t) {
	if (!ym(t)) throw new Error("Server returned " + t.res.statusCode);
	if (D5(t)) return null;
	const i = (await Ga(t.stream)).toString();
	try {
		return JSON.parse(i);
	} catch (s) {
		throw (
			((s.message +=
				`:
` + i),
			s)
		);
	}
}
function w$(t) {
	const e = zt.as(Pi.Configuration),
		i = bm;
	(bm = {
		id: "http",
		order: 15,
		title: w(2101, null),
		type: "object",
		scope: t,
		properties: {
			"http.proxy": {
				type: "string",
				pattern:
					"^(https?|socks|socks4a?|socks5h?)://([^:]*(:[^@]*)?@)?([^:]+|\\[[:0-9a-fA-F]+\\])(:\\d+)?/?$|^$",
				markdownDescription: w(2102, null),
				restricted: !0,
			},
			"http.proxyStrictSSL": {
				type: "boolean",
				default: !0,
				description: w(2103, null),
				restricted: !0,
			},
			"http.proxyKerberosServicePrincipal": {
				type: "string",
				markdownDescription: w(2104, null),
				restricted: !0,
			},
			"http.noProxy": {
				type: "array",
				items: { type: "string" },
				markdownDescription: w(2105, null),
				restricted: !0,
			},
			"http.proxyAuthorization": {
				type: ["null", "string"],
				default: null,
				markdownDescription: w(2106, null),
				restricted: !0,
			},
			"http.proxySupport": {
				type: "string",
				enum: ["off", "on", "fallback", "override"],
				enumDescriptions: [
					w(2107, null),
					w(2108, null),
					w(2109, null),
					w(2110, null),
				],
				default: "override",
				description: w(2111, null),
				restricted: !0,
			},
			"http.systemCertificates": {
				type: "boolean",
				default: !0,
				description: w(2112, null),
				restricted: !0,
			},
			"http.experimental.systemCertificatesV2": {
				type: "boolean",
				tags: ["experimental"],
				default: !1,
				description: w(2113, null),
				restricted: !0,
			},
			"http.electronFetch": {
				type: "boolean",
				default: !1,
				description: w(2114, null),
				restricted: !0,
			},
			"http.fetchAdditionalSupport": {
				type: "boolean",
				default: !0,
				markdownDescription: w(
					2115,
					null,
					"`#http.proxySupport#`",
					"`#http.systemCertificates#`",
				),
				restricted: !0,
			},
		},
	}),
		e.updateConfigurations({ add: [bm], remove: i ? [i] : [] });
}
var yn,
	$5,
	A5,
	bm,
	bn = m({
		"out-build/vs/platform/request/common/request.js"() {
			"use strict";
			Je(),
				Ae(),
				F(),
				ve(),
				Xr(),
				Y(),
				Gs(),
				(yn = B("requestService")),
				($5 = class {
					constructor(t) {
						this.b = t;
					}
					toJSON() {
						if (!this.a) {
							const t = Object.create(null);
							for (const e in this.b)
								e.toLowerCase() === "authorization" ||
								e.toLowerCase() === "proxy-authorization"
									? (t[e] = "*****")
									: (t[e] = this.b[e]);
							this.a = t;
						}
						return this.a;
					}
				}),
				(A5 = class extends j {
					constructor(t) {
						super(), (this.b = t), (this.a = 0);
					}
					async c(t, e) {
						const i = `[network] #${++this.a}: ${t.url}`;
						this.b.trace(`${i} - begin`, t.type, new $5(t.headers ?? {}));
						try {
							const s = await e();
							return (
								this.b.trace(
									`${i} - end`,
									t.type,
									s.res.statusCode,
									s.res.headers,
								),
								s
							);
						} catch (s) {
							throw (this.b.error(`${i} - error`, t.type, Bi(s)), s);
						}
					}
				}),
				w$(1);
		},
	});
import { Readable as v$ } from "stream";
import * as No from "fs";
import { exec as Wo, spawn as y$ } from "child_process";
import {
	app as Ic,
	BrowserWindow as Em,
	clipboard as Ar,
	Menu as Cc,
	powerMonitor as b$,
	screen as _c,
	shell as En,
	webContents as E$,
} from "electron";
import {
	arch as S$,
	cpus as k$,
	freemem as x$,
	loadavg as D$,
	platform as P$,
	release as $$,
	totalmem as A$,
	type as I$,
} from "os";
import { promisify as jo } from "util";
var Ir,
	Rc,
	Oc = m({
		"out-build/vs/platform/native/electron-main/nativeHostMainService.js"() {
			"use strict";
			Zr(),
				q(),
				F(),
				Ce(),
				ge(),
				z(),
				ie(),
				Q2(),
				Ac(),
				yt(),
				k5(),
				ve(),
				mn(),
				bt(),
				Y(),
				ot(),
				Q(),
				Ct(),
				hc(),
				fc(),
				si(),
				ti(),
				gn(),
				Je(),
				m$(),
				g$(),
				Dh(),
				Ae(),
				Ve(),
				M4(),
				bn(),
				hi(),
				$c(),
				(Ir = B("nativeHostMainService")),
				(Rc = class extends j {
					constructor(e, i, s, r, n, o, a, c, l, u, d, f, p, v) {
						super(),
							(this.b = e),
							(this.c = i),
							(this.f = s),
							(this.g = r),
							(this.h = n),
							(this.j = o),
							(this.m = a),
							(this.n = c),
							(this.q = l),
							(this.r = u),
							(this.s = d),
							(this.t = f),
							(this.u = p),
							(this.w = v),
							(this.a = this.D(new $())),
							(this.onDidChangeCssModules = this.a.event),
							(this.onDidOpenMainWindow = x.map(
								this.b.onDidOpenWindow,
								(g) => g.id,
							)),
							(this.onDidTriggerWindowSystemContextMenu = x.any(
								x.map(
									this.b.onDidTriggerSystemContextMenu,
									({ window: g, x: b, y }) => ({ windowId: g.id, x: b, y }),
								),
								x.map(
									this.c.onDidTriggerSystemContextMenu,
									({ window: g, x: b, y }) => ({ windowId: g.id, x: b, y }),
								),
							)),
							(this.onDidMaximizeWindow = x.any(
								x.map(this.b.onDidMaximizeWindow, (g) => g.id),
								x.map(this.c.onDidMaximizeWindow, (g) => g.id),
							)),
							(this.onDidUnmaximizeWindow = x.any(
								x.map(this.b.onDidUnmaximizeWindow, (g) => g.id),
								x.map(this.c.onDidUnmaximizeWindow, (g) => g.id),
							)),
							(this.onDidChangeWindowFullScreen = x.any(
								x.map(this.b.onDidChangeFullScreen, (g) => ({
									windowId: g.window.id,
									fullscreen: g.fullscreen,
								})),
								x.map(this.c.onDidChangeFullScreen, (g) => ({
									windowId: g.window.id,
									fullscreen: g.fullscreen,
								})),
							)),
							(this.onDidBlurMainWindow = x.filter(
								x.fromNodeEventEmitter(
									Ic,
									"browser-window-blur",
									(g, b) => b.id,
								),
								(g) => !!this.b.getWindowById(g),
							)),
							(this.onDidFocusMainWindow = x.any(
								x.map(
									x.filter(
										x.map(this.b.onDidChangeWindowsCount, () =>
											this.b.getLastActiveWindow(),
										),
										(g) => !!g,
									),
									(g) => g.id,
								),
								x.filter(
									x.fromNodeEventEmitter(
										Ic,
										"browser-window-focus",
										(g, b) => b.id,
									),
									(g) => !!this.b.getWindowById(g),
								),
							)),
							(this.onDidBlurMainOrAuxiliaryWindow = x.any(
								this.onDidBlurMainWindow,
								x.map(
									x.filter(
										x.fromNodeEventEmitter(Ic, "browser-window-blur", (g, b) =>
											this.c.getWindowByWebContents(b.webContents),
										),
										(g) => !!g,
									),
									(g) => g.id,
								),
							)),
							(this.onDidFocusMainOrAuxiliaryWindow = x.any(
								this.onDidFocusMainWindow,
								x.map(
									x.filter(
										x.fromNodeEventEmitter(Ic, "browser-window-focus", (g, b) =>
											this.c.getWindowByWebContents(b.webContents),
										),
										(g) => !!g,
									),
									(g) => g.id,
								),
							)),
							(this.onDidResumeOS = x.fromNodeEventEmitter(b$, "resume")),
							(this.onDidChangeColorScheme = this.n.onDidChangeColorScheme),
							(this.z = this.D(new $())),
							(this.onDidChangePassword = this.z.event),
							(this.onDidChangeDisplay = x.debounce(
								x.any(
									x.filter(
										x.fromNodeEventEmitter(
											_c,
											"display-metrics-changed",
											(g, b, y) => y,
										),
										(g) =>
											!(
												Array.isArray(g) &&
												g.length === 1 &&
												g[0] === "workArea"
											),
									),
									x.fromNodeEventEmitter(_c, "display-added"),
									x.fromNodeEventEmitter(_c, "display-removed"),
								),
								() => {},
								100,
							)),
							v.isEnabled &&
								this.D(
									v.onDidChangeCssModules((g) => {
										this.a.fire(Object.fromEntries(g));
									}),
								);
					}
					get windowId() {
						throw new Error("Not implemented in electron-main");
					}
					async getWindows(e, i) {
						const s = this.b
								.getWindows()
								.map((n) => ({
									id: n.id,
									workspace:
										n.openedWorkspace ??
										_u(n.backupPath, n.isExtensionDevelopmentHost),
									title: n.win?.getTitle() ?? "",
									filename: n.getRepresentedFilename(),
									dirty: n.isDocumentEdited(),
								})),
							r = [];
						return (
							i.includeAuxiliaryWindows &&
								r.push(
									...this.c
										.getWindows()
										.map((n) => ({
											id: n.id,
											parentId: n.parentId,
											title: n.win?.getTitle() ?? "",
											filename: n.getRepresentedFilename(),
										})),
								),
							[...s, ...r]
						);
					}
					async getWindowCount(e) {
						return this.b.getWindowCount();
					}
					async getActiveWindowId(e) {
						const i = this.b.getFocusedWindow() || this.b.getLastActiveWindow();
						if (i) return i.id;
					}
					async getActiveWindowPosition() {
						const e = this.b.getFocusedWindow() || this.b.getLastActiveWindow();
						if (e) return e.getBounds();
					}
					async getNativeWindowHandle(e, i) {
						const s = this.M(i, e);
						if (s?.win) return H.wrap(s.win.getNativeWindowHandle());
					}
					openWindow(e, i, s) {
						return Array.isArray(i) ? this.C(e, i, s) : this.F(e, i);
					}
					exec2(e, i, s) {
						return (
							this.j.debug(
								"NativeHostMainService:exec2 called with command",
								i,
							),
							new Promise((r, n) => {
								try {
									Wo(i, { ...s, encoding: "utf8" }, (o, a, c) => {
										r({ stdout: a, stderr: c, error: o ?? void 0 });
									});
								} catch {
									r({
										stdout: "",
										stderr: "",
										error: {
											name: "unknown-error",
											message: "Unknown error running command",
										},
									});
								}
							})
						);
					}
					async exec4(e, i, s) {
						return (
							this.j.debug(
								"NativeHostMainService:exec4 called with command",
								i,
							),
							new Promise((r, n) => {
								try {
									const o = process.env.SHELL || "/bin/sh",
										a = y$(o, ["-c", i], s);
									let c = "",
										l = "";
									a.stdout.on("data", (u) => {
										c += u;
									}),
										a.stderr.on("data", (u) => {
											l += u;
										}),
										a.on("error", (u) => {
											r({ stdout: c, stderr: l, error: u });
										}),
										a.on("close", (u) => {
											r({
												stdout: c,
												stderr: l,
												error:
													u !== 0
														? new Error(`Command exited with code ${u}`)
														: void 0,
											});
										});
								} catch {
									r({
										stdout: "",
										stderr: "",
										error: {
											name: "unknown-error",
											message: "Unknown error running command",
										},
									});
								}
							})
						);
					}
					async *exec3(e) {
						this.j.debug("NativeHostMainService:exec3 called with command", e);
						const i = Wo(e),
							s = new v$({ read() {} });
						i.stdout?.on("data", (r) => {
							s.push(r);
						}),
							i.on("exit", () => {
								s.push(null);
							});
						for await (const r of s) r !== null && (yield r);
					}
					async C(e, i, s = Object.create(null)) {
						return i.length > 0
							? (
									await this.b.open({
										context: 5,
										contextWindowId: e,
										urisToOpen: i,
										cli: this.h.args,
										forceNewWindow: s.forceNewWindow,
										forceReuseWindow: s.forceReuseWindow,
										preferNewWindow: s.preferNewWindow,
										diffMode: s.diffMode,
										mergeMode: s.mergeMode,
										addMode: s.addMode,
										gotoLineMode: s.gotoLineMode,
										noRecentEntry: s.noRecentEntry,
										waitMarkerFileURI: s.waitMarkerFileURI,
										remoteAuthority: s.remoteAuthority || void 0,
										forceProfile: s.forceProfile,
										forceTempProfile: s.forceTempProfile,
										shadowWindowForWorkspaceId: s.shadowWindowForWorkspaceId,
									})
								).map((r) => ({ windowId: r.id }))
							: [];
					}
					async F(e, i) {
						return (
							await this.b.openEmptyWindow(
								{ context: 5, contextWindowId: e },
								i,
							)
						).map((s) => ({ windowId: s.id }));
					}
					async isFullScreen(e, i) {
						return this.M(i?.targetWindowId, e)?.isFullScreen ?? !1;
					}
					async toggleFullScreen(e, i) {
						this.M(i?.targetWindowId, e)?.toggleFullScreen();
					}
					async handleTitleDoubleClick(e, i) {
						this.M(i?.targetWindowId, e)?.handleTitleDoubleClick();
					}
					async getCursorScreenPoint(e) {
						const i = _c.getCursorScreenPoint(),
							s = _c.getDisplayNearestPoint(i);
						return { point: i, display: s.bounds };
					}
					async isMaximized(e, i) {
						return this.M(i?.targetWindowId, e)?.win?.isMaximized() ?? !1;
					}
					async maximizeWindow(e, i) {
						this.M(i?.targetWindowId, e)?.win?.maximize();
					}
					async unmaximizeWindow(e, i) {
						this.M(i?.targetWindowId, e)?.win?.unmaximize();
					}
					async minimizeWindow(e, i) {
						this.M(i?.targetWindowId, e)?.win?.minimize();
					}
					async moveWindowTop(e, i) {
						this.M(i?.targetWindowId, e)?.win?.moveTop();
					}
					async positionWindow(e, i, s) {
						const r = this.M(s?.targetWindowId, e);
						if (r?.win) {
							if (r.win.isFullScreen()) {
								const n = x.toPromise(
									x.once(x.fromNodeEventEmitter(r.win, "leave-full-screen")),
								);
								r.win.setFullScreen(!1), await n;
							}
							r.win.setBounds(i);
						}
					}
					async updateWindowControls(e, i) {
						this.M(i?.targetWindowId, e)?.updateWindowControls(i);
					}
					async focusWindow(e, i) {
						this.M(i?.targetWindowId, e)?.focus({ force: i?.force ?? !1 });
					}
					async setMinimumSize(e, i, s) {
						const r = this.N(e);
						if (r?.win) {
							const [n, o] = r.win.getSize(),
								[a, c] = r.win.getMinimumSize(),
								[l, u] = [i ?? a, s ?? c],
								[d, f] = [Math.max(n, l), Math.max(o, u)];
							(a !== l || c !== u) && r.win.setMinimumSize(l, u),
								(n !== d || o !== f) && r.win.setSize(d, f);
						}
					}
					async saveWindowSplash(e, i) {
						this.n.saveWindowSplash(e, i);
					}
					async replaceShellCommand(e) {
						const i = async () => {
								const n = zi(this.h.appRoot, "bin", "code"),
									o = "/usr/local/bin/code";
								if (!(await ee.exists(n))) throw new Error(w(2043, null, n));
								return { source: o, target: n };
							},
							{ source: s, target: r } = await i();
						try {
							const { symbolicLink: n } = await Wt.stat(s);
							if (n && !n.dangling) {
								const o = await Y2(s);
								if (r === o) return;
							}
							await No.promises.unlink(s);
						} catch (n) {
							if (n.code !== "EACCES" && n.code !== "ENOENT") throw n;
						}
						try {
							await No.promises.symlink(r, s);
						} catch (n) {
							if (
								n.code !== "EACCES" &&
								n.code !== "ENOENT" &&
								n.code !== "EEXIST"
							)
								throw n;
							const { response: o } = await this.showMessageBox(e, {
								type: "info",
								message: w(2044, null, this.m.nameShort),
								buttons: [w(2045, null), w(2046, null)],
							});
							if (o === 0)
								try {
									const a = `osascript -e "do shell script \\"mkdir -p /usr/local/bin && ln -sf '${r}' '${s}'\\" with administrator privileges"`;
									await jo(Wo)(a);
								} catch {
									throw new Error(w(2047, null, s));
								}
						}
					}
					async fixWSL() {
						try {
							const e = zi(this.h.appRoot),
								i = zi(this.h.appRoot, "bin"),
								s = i + "\\fixWSLNew.ps1",
								r = i + "\\server-env-setup";
							console.log(
								await jo(Wo)(
									`powershell.exe -ExecutionPolicy Bypass -File "${s}" -pathToAdd "${e}" -scriptPath "${r}"`,
								),
							);
						} catch (e) {
							console.error(e);
						}
					}
					async installShellCommandWindows() {
						const e = zi(this.h.appRoot, "bin");
						try {
							const i = process.env.PATH || "",
								s = T ? ";" : ":",
								r = await import("@vscode/sudo-prompt"),
								n = e + "\\setPath.ps1";
							i.split(s).indexOf(e) === -1 &&
								console.log(
									await jo(r.exec)(
										`powershell.exe -ExecutionPolicy Bypass -File "${n}" -pathToAdd "${e}"`,
									),
								);
						} catch (i) {
							throw (console.error(i), new Error(w(2048, null, e)));
						}
					}
					async replaceShellCommandWindows() {
						const e = zi(this.h.appRoot, "bin");
						try {
							const i = process.env.PATH || "",
								s = T ? ";" : ":",
								r = await import("@vscode/sudo-prompt"),
								n = i
									.split(s)
									.filter((a) => !a.toLowerCase().includes("vs code"))
									.join(s),
								o = e + s + n + s + e;
							console.log(process.env),
								console.log(process.env.PATH),
								console.log(n),
								console.log(o),
								o !== i && console.log(await jo(r.exec)(`setx /M PATH "${o}"`));
						} catch (i) {
							throw (console.error(i), new Error(w(2049, null)));
						}
					}
					async installShellCommand(e) {
						const { source: i, target: s } = await this.G();
						try {
							const { symbolicLink: r } = await Wt.stat(i);
							if (r && !r.dangling) {
								const n = await Y2(i);
								if (s === n) return;
							}
							await No.promises.unlink(i);
						} catch (r) {
							if (r.code !== "EACCES" && r.code !== "ENOENT") throw r;
						}
						try {
							await No.promises.symlink(s, i);
						} catch (r) {
							if (
								r.code !== "EACCES" &&
								r.code !== "ENOENT" &&
								r.code !== "EEXIST"
							)
								throw r;
							const { response: n } = await this.showMessageBox(e, {
								type: "info",
								message: w(2050, null, this.m.nameShort),
								buttons: [w(2051, null), w(2052, null)],
							});
							if (n === 1) throw new ai();
							try {
								const o = `osascript -e "do shell script \\"mkdir -p /usr/local/bin && ln -sf '${s}' '${i}'\\" with administrator privileges"`;
								await jo(Wo)(o);
							} catch {
								throw new Error(w(2053, null, i));
							}
						}
					}
					async uninstallShellCommand(e) {
						const { source: i } = await this.G();
						try {
							await No.promises.unlink(i);
						} catch (s) {
							switch (s.code) {
								case "EACCES": {
									const { response: r } = await this.showMessageBox(e, {
										type: "info",
										message: w(2054, null, this.m.nameShort),
										buttons: [w(2055, null), w(2056, null)],
									});
									if (r === 1) throw new ai();
									try {
										const n = `osascript -e "do shell script \\"rm '${i}'\\" with administrator privileges"`;
										await jo(Wo)(n);
									} catch {
										throw new Error(w(2057, null, i));
									}
									break;
								}
								case "ENOENT":
									break;
								default:
									throw s;
							}
						}
					}
					async G() {
						const e = zi(this.h.appRoot, "bin", "code"),
							i = `/usr/local/bin/${this.m.applicationName}`;
						if (!(await ee.exists(e))) throw new Error(w(2058, null, e));
						return { source: i, target: e };
					}
					async showMessageBox(e, i) {
						const s = this.M(i?.targetWindowId, e);
						return this.f.showMessageBox(i, s?.win ?? void 0);
					}
					async showSaveDialog(e, i) {
						const s = this.M(i?.targetWindowId, e);
						return this.f.showSaveDialog(i, s?.win ?? void 0);
					}
					async showOpenDialog(e, i) {
						const s = this.M(i?.targetWindowId, e);
						return this.f.showOpenDialog(i, s?.win ?? void 0);
					}
					async pickFileFolderAndOpen(e, i) {
						const s = await this.f.pickFileFolder(i);
						s &&
							(await this.H(
								await Promise.all(
									s.map(async (r) =>
										(await Wt.existsDirectory(r))
											? { folderUri: P.file(r) }
											: { fileUri: P.file(r) },
									),
								),
								i,
								e,
							));
					}
					async pickFolderAndOpen(e, i) {
						const s = await this.f.pickFolder(i);
						s &&
							(await this.H(
								s.map((r) => ({ folderUri: P.file(r) })),
								i,
								e,
							));
					}
					async pickFolder(e, i) {
						return await this.f.pickFolder(i);
					}
					async pickFileAndOpen(e, i) {
						const s = await this.f.pickFile(i);
						s &&
							(await this.H(
								s.map((r) => ({ fileUri: P.file(r) })),
								i,
								e,
							));
					}
					async pickWorkspaceAndOpen(e, i) {
						const s = await this.f.pickWorkspace(i);
						s &&
							(await this.H(
								s.map((r) => ({ workspaceUri: P.file(r) })),
								i,
								e,
							));
					}
					async H(e, i, s) {
						await this.b.open({
							context: 3,
							contextWindowId: s,
							cli: this.h.args,
							urisToOpen: e,
							forceNewWindow: i.forceNewWindow,
						});
					}
					async showItemInFolder(e, i) {
						En.showItemInFolder(i);
					}
					async setRepresentedFilename(e, i, s) {
						this.M(s?.targetWindowId, e)?.setRepresentedFilename(i);
					}
					async setDocumentEdited(e, i, s) {
						this.M(s?.targetWindowId, e)?.setDocumentEdited(i);
					}
					async openExternal(e, i, s) {
						this.h.unsetSnapExportedVariables();
						try {
							CS(i, R.http, R.https) ? this.I(i, s) : En.openExternal(i);
						} finally {
							this.h.restoreSnapExportedVariables();
						}
						return !0;
					}
					async I(e, i) {
						const s = i ?? this.r.getValue("workbench.externalBrowser");
						if (!s) return En.openExternal(e);
						if (
							(s.includes(oe.sep) || s.includes(ze.sep)) &&
							!(await ee.exists(s))
						)
							return (
								this.j.error(
									`Configured external browser path does not exist: ${s}`,
								),
								En.openExternal(e)
							);
						try {
							const { default: r } = await import("open"),
								n = await r(e, {
									app: { name: Object.hasOwn(r.apps, s) ? r.apps[s] : s },
								});
							T ||
								n.stderr?.once(
									"data",
									(o) => (
										this.j.error(
											`Error openening external URL '${e}' using browser '${s}': ${o.toString()}`,
										),
										En.openExternal(e)
									),
								);
						} catch (r) {
							return (
								this.j.error(
									`Unable to open external URL '${e}' using browser '${s}' due to ${r}.`,
								),
								En.openExternal(e)
							);
						}
					}
					moveItemToTrash(e, i) {
						return En.trashItem(i);
					}
					async isAdmin() {
						let e;
						return (
							T
								? (e = (await import("native-is-elevated")).default())
								: (e = process.getuid?.() === 0),
							e
						);
					}
					async writeElevated(e, i, s, r) {
						const n = await import("@vscode/sudo-prompt"),
							o = Ta(this.h.userDataPath, "code-elevated");
						await ee.writeFile(
							o,
							JSON.stringify({ source: i.fsPath, target: s.fsPath }),
						);
						try {
							await new Promise((a, c) => {
								const l = [`"${this.J}"`];
								r?.unlock && l.push("--file-chmod"),
									l.push("--file-write", `"${o}"`);
								const u = {
									name: this.m.nameLong.replace("-", ""),
									icns:
										N && this.h.isBuilt
											? M(Ke(this.h.appRoot), `${this.m.nameShort}.icns`)
											: void 0,
								};
								this.j.trace(`[sudo-prompt] running command: ${l.join(" ")}`),
									n.exec(l.join(" "), u, (d, f, p) => {
										f && this.j.trace(`[sudo-prompt] received stdout: ${f}`),
											p && this.j.error(`[sudo-prompt] received stderr: ${p}`),
											d ? c(d) : a(void 0);
									});
							});
						} finally {
							await No.promises.unlink(o);
						}
					}
					async isRunningUnderARM64Translation() {
						return Ee || T ? !1 : Ic.runningUnderARM64Translation;
					}
					get J() {
						return T
							? this.h.isBuilt
								? M(
										Ke(process.execPath),
										"bin",
										`${this.m.applicationName}.cmd`,
									)
								: M(this.h.appRoot, "scripts", "code-cli.bat")
							: Ee
								? this.h.isBuilt
									? M(Ke(process.execPath), "bin", `${this.m.applicationName}`)
									: M(this.h.appRoot, "scripts", "code-cli.sh")
								: this.h.isBuilt
									? M(this.h.appRoot, "bin", "code")
									: M(this.h.appRoot, "scripts", "code-cli.sh");
					}
					async getOSStatistics() {
						return { totalmem: A$(), freemem: x$(), loadavg: D$() };
					}
					async getOSProperties() {
						return {
							arch: S$(),
							platform: P$(),
							release: $$(),
							type: I$(),
							cpus: k$(),
						};
					}
					async getOSVirtualMachineHint() {
						return kh.value();
					}
					async getOSColorScheme() {
						return this.n.getColorScheme();
					}
					async hasWSLFeatureInstalled() {
						return T && u$();
					}
					async getScreenshot(e, i) {
						return (
							await this.M(i?.targetWindowId, e)?.win?.webContents.capturePage()
						)?.toJPEG(95);
					}
					async getProcessId(e) {
						return this.M(void 0, e)?.win?.webContents.getOSProcessId();
					}
					async killProcess(e, i, s) {
						process.kill(i, s);
					}
					async readClipboardText(e, i) {
						return Ar.readText(i);
					}
					async readImage() {
						return Ar.readImage().toPNG();
					}
					async writeClipboardText(e, i, s) {
						return Ar.writeText(i, s);
					}
					async readClipboardFindText(e) {
						return Ar.readFindText();
					}
					async writeClipboardFindText(e, i) {
						return Ar.writeFindText(i);
					}
					async writeClipboardBuffer(e, i, s, r) {
						return Ar.writeBuffer(i, Buffer.from(s.buffer), r);
					}
					async readClipboardBuffer(e, i) {
						return H.wrap(Ar.readBuffer(i));
					}
					async hasClipboard(e, i, s) {
						return Ar.has(i, s);
					}
					async newWindowTab() {
						await this.b.open({
							context: 5,
							cli: this.h.args,
							forceNewTabbedWindow: !0,
							forceEmpty: !0,
							remoteAuthority: this.h.args.remote || void 0,
						});
					}
					async showPreviousWindowTab() {
						Cc.sendActionToFirstResponder("selectPreviousTab:");
					}
					async showNextWindowTab() {
						Cc.sendActionToFirstResponder("selectNextTab:");
					}
					async moveWindowTabToNewWindow() {
						Cc.sendActionToFirstResponder("moveTabToNewWindow:");
					}
					async mergeAllWindowTabs() {
						Cc.sendActionToFirstResponder("mergeAllWindows:");
					}
					async toggleWindowTabsBar() {
						Cc.sendActionToFirstResponder("toggleTabBar:");
					}
					async updateTouchBar(e, i) {
						this.N(e)?.updateTouchBar(i);
					}
					async notifyReady(e) {
						this.N(e)?.setReady();
					}
					async relaunch(e, i) {
						return this.g.relaunch(i);
					}
					async reload(e, i) {
						const s = this.N(e);
						if (s) {
							if (Vt(s.openedWorkspace)) {
								const r = s.openedWorkspace.configPath;
								if (
									r.scheme === R.file &&
									(await this.q.resolveLocalWorkspace(r))?.transient
								) {
									await this.openWindow(s.id, { forceReuseWindow: !0 });
									return;
								}
							}
							return this.g.reload(
								s,
								i?.disableExtensions !== void 0 || i?.hmr !== void 0
									? {
											_: [],
											"disable-extensions": i.disableExtensions,
											hmr: i.hmr,
										}
									: void 0,
							);
						}
					}
					async destroyWindowNoFallback(e, i) {
						return this.N(i?.targetWindowId)?.win?.destroy();
					}
					async closeWindowNoFallback(e, i) {
						return this.N(i?.targetWindowId)?.win?.close();
					}
					async closeWindow(e, i) {
						return this.M(i?.targetWindowId, e)?.win?.close();
					}
					async quit(e) {
						const i = this.b.getLastActiveWindow();
						i?.isExtensionDevelopmentHost &&
						this.b.getWindowCount() > 1 &&
						i.win
							? i.win.close()
							: this.g.quit();
					}
					async exit(e, i) {
						await this.g.kill(i);
					}
					async resolveProxy(e, i) {
						if (this.h.extensionTestsLocationURI) {
							const n = this.r.getValue("integration-test.http.proxy");
							if (n) return n;
						}
						return this.N(e)?.win?.webContents?.session?.resolveProxy(i);
					}
					async lookupAuthorization(e, i) {
						return this.t.lookupAuthorization(i);
					}
					async lookupKerberosAuthorization(e, i) {
						return this.s.lookupKerberosAuthorization(i);
					}
					async loadCertificates(e) {
						return this.s.loadCertificates();
					}
					findFreePort(e, i, s, r, n = 1) {
						return r$(i, s, r, n);
					}
					async openDevTools(e, i) {
						this.M(i?.targetWindowId, e)?.win?.webContents.openDevTools(
							i?.mode ? { mode: i.mode, activate: i.activate } : void 0,
						);
					}
					async toggleDevTools(e, i) {
						this.M(i?.targetWindowId, e)?.win?.webContents.toggleDevTools();
					}
					async openGPUInfoWindow(e) {
						const i = this.N(e);
						if (i) {
							if (typeof this.L != "number") {
								const s = this.u.invokeFunction(P1, hn(), {
									forceNativeTitlebar: !0,
									hideBecauseShadowWindow: !1,
								});
								s.backgroundColor = void 0;
								const r = new Em(s);
								r.setMenuBarVisibility(!1),
									r.loadURL("chrome://gpu"),
									r.once("ready-to-show", () => r.show()),
									r.once("close", () => (this.L = void 0)),
									i.win?.on("close", () => {
										this.L && (Em.fromId(this.L)?.close(), (this.L = void 0));
									}),
									(this.L = r.id);
							}
							if (typeof this.L == "number") {
								const s = Em.fromId(this.L);
								s?.isMinimized() && s?.restore(), s?.focus();
							}
						}
					}
					async reloadWindowCSS(e) {
						const i = this.N(e);
						if (!i || !i.win) throw new Error();
						if (!this.w.isEnabled) throw new Error("CSS Dev is not enabled");
						const s = await this.w.getCssModules(!0);
						return i.config && (i.config.cssModules = s), Object.fromEntries(s);
					}
					async profileRenderer(e, i, s) {
						const r = this.N(e);
						if (!r || !r.win) throw new Error();
						return await new xh(r.win, i, this.j).inspect(s);
					}
					async windowsGetStringRegKey(e, i, s, r) {
						if (!T) return;
						const n = await import("@vscode/windows-registry");
						try {
							return n.GetStringRegKey(i, s, r);
						} catch {
							return;
						}
					}
					M(e, i) {
						return this.N(e) ?? this.O(e) ?? this.N(i);
					}
					N(e) {
						if (typeof e == "number") return this.b.getWindowById(e);
					}
					O(e) {
						if (typeof e != "number") return;
						const i = E$.fromId(e);
						if (i) return this.c.getWindowByWebContents(i);
					}
				}),
				__decorate([de], Rc.prototype, "J", null),
				(Rc = __decorate(
					[
						__param(0, _t),
						__param(1, Fo),
						__param(2, sr),
						__param(3, Ne),
						__param(4, ut),
						__param(5, G),
						__param(6, tt),
						__param(7, yo),
						__param(8, Pr),
						__param(9, He),
						__param(10, yn),
						__param(11, Ku),
						__param(12, ws),
						__param(13, Mo),
					],
					Rc,
				));
		},
	}),
	Lc,
	Ph = m({
		"out-build/vs/platform/protocol/electron-main/protocol.js"() {
			"use strict";
			Y(), (Lc = B("protocolMainService"));
		},
	});
import {
	BrowserWindow as Sm,
	contentTracing as km,
	screen as Mc,
} from "electron";
function C$(t) {
	return typeof t != "object" || t === null
		? !1
		: "x" in t && "y" in t && "width" in t && "height" in t;
}
var xm,
	Dm,
	$h,
	_$ = m({
		"out-build/vs/platform/process/electron-main/processMainService.js"() {
			"use strict";
			hi(),
				F(),
				Ce(),
				z(),
				l5(),
				is(),
				ve(),
				F1(),
				u2(),
				mn(),
				bt(),
				$c(),
				Q(),
				Oc(),
				dc(),
				Ct(),
				Ph(),
				Li(),
				Ao(),
				un(),
				(Dm = "issue.processExplorerWindowState"),
				($h = class {
					static {
						xm = this;
					}
					static {
						this.a = "#1E1E1E";
					}
					constructor(e, i, s, r, n, o, a, c, l, u, d) {
						(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.i = r),
							(this.j = n),
							(this.k = o),
							(this.l = a),
							(this.m = c),
							(this.n = l),
							(this.o = u),
							(this.p = d),
							(this.b = null),
							(this.c = null),
							(this.d = !1),
							this.q();
					}
					q() {
						et.on("vscode:listProcesses", async (e) => {
							const i = [];
							try {
								i.push({
									name: w(2059, null),
									rootProcess: await fm(process.pid),
								}),
									(
										await this.j.getRemoteDiagnostics({ includeProcesses: !0 })
									).forEach((r) => {
										L1(r)
											? i.push({ name: r.hostName, rootProcess: r })
											: r.processes &&
												i.push({ name: r.hostName, rootProcess: r.processes });
									});
							} catch (s) {
								this.h.error(`Listing processes failed: ${s}`);
							}
							this.u(e, "vscode:listProcessesResponse", i);
						}),
							et.on("vscode:workbenchCommand", (e, i) => {
								const { id: s, from: r, args: n } = i;
								let o;
								switch (r) {
									case "processExplorer":
										o = this.c;
										break;
									default:
										throw new Error(`Unexpected command source: ${r}`);
								}
								o?.webContents.send("vscode:runAction", {
									id: s,
									from: r,
									args: n,
								});
							}),
							et.on("vscode:closeProcessExplorer", (e) => {
								this.b?.close();
							}),
							et.on("vscode:pidToNameRequest", async (e) => {
								const i = await this.j.getMainDiagnostics(),
									s = [];
								for (const r of i.windows)
									s.push([r.pid, `window [${r.id}] (${r.title})`]);
								for (const { pid: r, name: n } of $r.getAll()) s.push([r, n]);
								this.u(e, "vscode:pidToNameResponse", s);
							});
					}
					async openProcessExplorer(e) {
						if (!this.b && ((this.c = Sm.getFocusedWindow()), this.c)) {
							const i = new De(),
								s = i.add(this.m.createIPCObjectUrl()),
								r = this.o.getItem(Dm, void 0),
								n = C$(r) ? r : this.s(this.c, 800, 500);
							(this.b = this.t(
								n,
								s,
								{
									backgroundColor: e.styles.backgroundColor,
									title: w(2060, null),
									zoomLevel: e.zoomLevel,
									alwaysOnTop: !0,
								},
								"process-explorer",
							)),
								s.update({
									appRoot: this.g.appRoot,
									windowId: this.b.id,
									userEnv: this.f,
									data: e,
									product: bo,
									nls: { messages: Pf(), language: Al() },
									cssModules: this.p.isEnabled
										? await this.p.getCssModules()
										: void 0,
								}),
								this.b.loadURL(
									$t
										.asBrowserUri(
											`vs/code/electron-sandbox/processExplorer/processExplorer${this.g.isBuilt ? "" : "-dev"}.html`,
										)
										.toString(!0),
								),
								this.b.on("close", () => {
									(this.b = null), i.dispose();
								}),
								this.c.on("close", () => {
									this.b && (this.b.close(), (this.b = null), i.dispose());
								});
							const o = () => {
								if (!this.b) return;
								const a = this.b.getSize(),
									c = this.b.getPosition();
								if (!a || !c) return;
								const l = { width: a[0], height: a[1], x: c[0], y: c[1] };
								this.o.setItem(Dm, l);
							};
							this.b.on("moved", o), this.b.on("resized", o);
						}
						this.b && this.r(this.b);
					}
					r(e) {
						e.isMinimized() && e.restore(), e.focus();
					}
					s(e, i, s) {
						let r;
						const n = Mc.getAllDisplays();
						if (n.length === 1) r = n[0];
						else {
							if (N) {
								const c = Mc.getCursorScreenPoint();
								r = Mc.getDisplayNearestPoint(c);
							}
							!r && e && (r = Mc.getDisplayMatching(e.getBounds())),
								r || (r = Mc.getPrimaryDisplay() || n[0]);
						}
						const o = r.bounds,
							a = {
								width: i,
								height: s,
								x: o.x + o.width / 2 - i / 2,
								y: o.y + o.height / 2 - s / 2,
							};
						return (
							o.width > 0 &&
								o.height > 0 &&
								(a.x < o.x && (a.x = o.x),
								a.y < o.y && (a.y = o.y),
								a.x > o.x + o.width && (a.x = o.x),
								a.y > o.y + o.height && (a.y = o.y),
								a.width > o.width && (a.width = o.width),
								a.height > o.height && (a.height = o.height)),
							a
						);
					}
					async isProfilerRunning() {
						return this.d;
					}
					async startProfiler() {
						if (this.d) return;
						this.d = !0;
						const e = this.g.args,
							i = {
								categoryFilter:
									e["trace-category-filter"] ||
									"-*,disabled-by-default-v8.cpu_profile*",
								traceOptions:
									e["trace-options"] || "record-until-full,enable-sampling",
							};
						await km.startRecording(i);
					}
					async stopProfiler() {
						if (!this.d) return;
						this.d = !1;
						const e = `${Ta(this.g.userHome.fsPath, this.n.applicationName)}-${this.n.commit ?? "dev"}.profile.txt`,
							i = await km.stopRecording(e);
						this.l.showItemInFolder(void 0, i);
					}
					async stopTracing() {
						if (!this.g.args.trace) return;
						const e = await km.stopRecording(
							`${Ta(this.g.userHome.fsPath, this.n.applicationName)}.trace.txt`,
						);
						await this.k.showMessageBox(
							{
								type: "info",
								message: w(2061, null),
								detail: w(2062, null, e),
								buttons: [w(2063, null)],
							},
							Sm.getFocusedWindow() ?? void 0,
						),
							this.l.showItemInFolder(void 0, e);
					}
					async getSystemStatus() {
						const [e, i] = await Promise.all([
							this.j.getMainDiagnostics(),
							this.j.getRemoteDiagnostics({
								includeProcesses: !1,
								includeWorkspaceMetadata: !1,
							}),
						]);
						return this.i.getDiagnostics(e, i);
					}
					async $getSystemInfo() {
						const [e, i] = await Promise.all([
							this.j.getMainDiagnostics(),
							this.j.getRemoteDiagnostics({
								includeProcesses: !1,
								includeWorkspaceMetadata: !1,
							}),
						]);
						return await this.i.getSystemInfo(e, i);
					}
					async $getPerformanceInfo() {
						try {
							const [e, i] = await Promise.all([
								this.j.getMainDiagnostics(),
								this.j.getRemoteDiagnostics({
									includeProcesses: !0,
									includeWorkspaceMetadata: !0,
								}),
							]);
							return await this.i.getPerformanceInfo(e, i);
						} catch (e) {
							throw (
								(this.h.warn("issueService#getPerformanceInfo ", e.message), e)
							);
						}
					}
					t(e, i, s, r) {
						const n = {
								fullscreen: !1,
								skipTaskbar: !1,
								resizable: !0,
								width: e.width,
								height: e.height,
								minWidth: 300,
								minHeight: 200,
								x: e.x,
								y: e.y,
								title: s.title,
								backgroundColor: s.backgroundColor || xm.a,
								webPreferences: {
									preload: $t.asFileUri(
										"vs/base/parts/sandbox/electron-sandbox/preload.js",
									).fsPath,
									additionalArguments: [
										`--vscode-window-config=${i.resource.toString()}`,
									],
									v8CacheOptions: this.g.useCodeCache
										? "bypassHeatCheck"
										: "none",
									enableWebSQL: !1,
									spellcheck: !1,
									zoomFactor: S4(s.zoomLevel),
									sandbox: !0,
								},
								alwaysOnTop: s.alwaysOnTop,
								experimentalDarkMode: !0,
							},
							o = new Sm(n);
						return o.setMenuBarVisibility(!1), o;
					}
					u(e, i, ...s) {
						e.sender.isDestroyed() || e.sender.send(i, ...s);
					}
					async closeProcessExplorer() {
						this.b?.close();
					}
				}),
				($h = xm =
					__decorate(
						[
							__param(1, ut),
							__param(2, G),
							__param(3, M1),
							__param(4, ch),
							__param(5, sr),
							__param(6, Ir),
							__param(7, Lc),
							__param(8, tt),
							__param(9, Ii),
							__param(10, Mo),
						],
						$h,
					));
		},
	});
function I5(t) {
	const e = t.getKeyMap(),
		i = t.getCurrentKeyboardLayout();
	return { keyboardMapping: e, keyboardLayoutInfo: i };
}
var Pm,
	Ah,
	R$ = m({
		"out-build/vs/platform/keyboardLayout/electron-main/keyboardLayoutMainService.js"() {
			"use strict";
			z(),
				q(),
				F(),
				Y(),
				ot(),
				(Pm = B("keyboardLayoutMainService")),
				(Ah = class extends j {
					constructor(e) {
						super(),
							(this.a = this.D(new $())),
							(this.onDidChangeKeyboardLayout = this.a.event),
							(this.b = null),
							(this.c = null),
							e.when(3).then(() => this.f());
					}
					f() {
						return this.b || (this.b = this.g()), this.b;
					}
					async g() {
						const e = await import("native-keymap");
						(this.c = I5(e)),
							z0 ||
								e.onDidChangeKeyboardLayout(() => {
									(this.c = I5(e)), this.a.fire(this.c);
								});
					}
					async getKeyboardLayoutData() {
						return await this.f(), this.c;
					}
				}),
				(Ah = __decorate([__param(0, Ne)], Ah));
		},
	}),
	Fc,
	C5 = m({
		"out-build/vs/platform/url/common/url.js"() {
			"use strict";
			Y(), (Fc = B("urlService"));
		},
	});
import { app as O$ } from "electron";
var _5,
	$m,
	Ih,
	L$ = m({
		"out-build/vs/platform/launch/electron-main/launchMainService.js"() {
			"use strict";
			Ut(),
				z(),
				ie(),
				yt(),
				Ve(),
				bc(),
				Y(),
				Q(),
				C5(),
				si(),
				(_5 = "launchMainService"),
				($m = B(_5)),
				(Ih = class {
					constructor(e, i, s, r) {
						(this.a = e), (this.b = i), (this.c = s), (this.d = r);
					}
					async start(e, i) {
						this.a.trace("Received data from other instance: ", e, i),
							N && O$.focus({ steal: !0 });
						const s = this.e(e);
						if (s.length) {
							let r = Promise.resolve();
							if (this.b.getWindowCount() === 0) {
								const n = (await this.b.openEmptyWindow({ context: 4 })).at(0);
								n && (r = n.ready());
							}
							r.then(() => {
								for (const { uri: n, originalUrl: o } of s)
									this.c.open(n, { originalUrl: o });
							});
						} else return this.f(e, i);
					}
					e(e) {
						return e["open-url"] && e._urls && e._urls.length > 0
							? Dt(
									e._urls.map((i) => {
										try {
											return { uri: P.parse(i), originalUrl: i };
										} catch {
											return null;
										}
									}),
								)
							: [];
					}
					async f(e, i) {
						const s = wn(i) ? 0 : 4;
						let r = [];
						const n =
								e.wait && e.waitMarkerFilePath
									? P.file(e.waitMarkerFilePath)
									: void 0,
							o = e.remote || void 0,
							a = {
								context: s,
								cli: e,
								userEnv: e["preserve-env"] || s === 0 ? i : void 0,
								waitMarkerFileURI: n,
								remoteAuthority: o,
								forceProfile: e.profile,
								forceTempProfile: e["profile-temp"],
							};
						if (e.extensionDevelopmentPath)
							await this.b.openExtensionDevelopmentHostWindow(
								e.extensionDevelopmentPath,
								a,
							);
						else if (!e._.length && !e["folder-uri"] && !e["file-uri"]) {
							let c = !1;
							if (e["new-window"] || a.forceProfile || a.forceTempProfile)
								c = !0;
							else if (e["reuse-window"]) c = !1;
							else
								switch (
									this.d.getValue("window")?.openWithoutArgumentsInNewWindow ||
									"default"
								) {
									case "on":
										c = !0;
										break;
									case "off":
										c = !1;
										break;
									default:
										c = !N;
								}
							if (c)
								r = await this.b.open({
									...a,
									forceNewWindow: !0,
									forceEmpty: !0,
								});
							else {
								const l = this.b.getLastActiveWindow();
								l
									? (this.b.openExistingWindow(l, a), (r = [l]))
									: (r = await this.b.open({ ...a, forceEmpty: !0 }));
							}
						} else
							r = await this.b.open({
								...a,
								forceNewWindow: e["new-window"],
								preferNewWindow: !e["reuse-window"] && !e.wait,
								forceReuseWindow: e["reuse-window"],
								diffMode: e.diff,
								mergeMode: e.merge,
								addMode: e.add,
								noRecentEntry: !!e["skip-add-to-recently-opened"],
								gotoLineMode: e.goto,
							});
						if (n && r.length === 1 && r[0])
							return Promise.race([r[0].whenClosedOrLoaded, ek(n.fsPath)]).then(
								() => {},
								() => {},
							);
					}
					async getMainProcessId() {
						return (
							this.a.trace(
								"Received request for process ID from other instance.",
							),
							process.pid
						);
					}
				}),
				(Ih = __decorate(
					[__param(0, G), __param(1, _t), __param(2, Fc), __param(3, He)],
					Ih,
				));
		},
	});
function R5(t) {
	return t.submenu !== void 0;
}
function O5(t) {
	return t.id === "vscode.menubar.separator";
}
function L5(t) {
	return t.uri !== void 0;
}
function M$(t) {
	return !R5(t) && !O5(t) && !L5(t);
}
var F$ = m({
		"out-build/vs/platform/menubar/common/menubar.js"() {
			"use strict";
		},
	}),
	M5,
	F5,
	N5,
	me,
	Sn,
	Cr = m({
		"out-build/vs/platform/update/common/update.js"() {
			"use strict";
			Ie(),
				Y(),
				(function (t) {
					(t.Uninitialized = "uninitialized"),
						(t.Idle = "idle"),
						(t.Disabled = "disabled"),
						(t.CheckingForUpdates = "checking for updates"),
						(t.AvailableForDownload = "available for download"),
						(t.Downloading = "downloading"),
						(t.Downloaded = "downloaded"),
						(t.Updating = "updating"),
						(t.Ready = "ready");
				})(M5 || (M5 = {})),
				(function (t) {
					(t[(t.Setup = 0)] = "Setup"),
						(t[(t.Archive = 1)] = "Archive"),
						(t[(t.Snap = 2)] = "Snap");
				})(F5 || (F5 = {})),
				(function (t) {
					(t[(t.NotBuilt = 0)] = "NotBuilt"),
						(t[(t.DisabledByEnvironment = 1)] = "DisabledByEnvironment"),
						(t[(t.ManuallyDisabled = 2)] = "ManuallyDisabled"),
						(t[(t.MissingConfiguration = 3)] = "MissingConfiguration"),
						(t[(t.InvalidConfiguration = 4)] = "InvalidConfiguration"),
						(t[(t.RunningAsAdmin = 5)] = "RunningAsAdmin");
				})(N5 || (N5 = {})),
				(me = {
					Uninitialized: { type: "uninitialized" },
					Disabled: (t) => ({ type: "disabled", reason: t }),
					Idle: (t, e) => ({ type: "idle", updateType: t, error: e }),
					CheckingForUpdates: (t) => ({
						type: "checking for updates",
						explicit: t,
					}),
					AvailableForDownload: (t) => ({
						type: "available for download",
						update: t,
					}),
					Downloading: { type: "downloading" },
					Downloaded: (t) => ({ type: "downloaded", update: t }),
					Updating: (t) => ({ type: "updating", update: t }),
					Ready: (t) => ({ type: "ready", update: t }),
				}),
				(Sn = B("updateService"));
		},
	});
import { app as kn } from "electron";
var Fi,
	Nc,
	Ch,
	_h = m({
		"out-build/vs/platform/workspaces/electron-main/workspacesHistoryMainService.js"() {
			"use strict";
			Ut(),
				ae(),
				q(),
				vr(),
				F(),
				Ce(),
				z(),
				rt(),
				ie(),
				yt(),
				ve(),
				Y(),
				ot(),
				Q(),
				Hu(),
				z1(),
				ti(),
				gn(),
				xi(),
				mn(),
				(Nc = B("workspacesHistoryMainService")),
				(Ch = class extends j {
					static {
						Fi = this;
					}
					static {
						this.a = 500;
					}
					static {
						this.b = "history.recentlyOpenedPathsList";
					}
					constructor(e, i, s, r, n) {
						super(),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.j = r),
							(this.m = n),
							(this.c = this.D(new $())),
							(this.onDidChangeRecentlyOpened = this.c.event),
							(this.H = this.D(new Js(800))),
							this.n();
					}
					n() {
						this.h.when(4).then(() => this.I()),
							this.D(
								this.g.onDidEnterWorkspace((e) =>
									this.addRecentlyOpened([
										{
											workspace: e.workspace,
											remoteAuthority: e.window.remoteAuthority,
										},
									]),
								),
							);
					}
					async addRecentlyOpened(e) {
						let i = [],
							s = [];
						for (const n of e)
							if (q1(n))
								!this.g.isUntitledWorkspace(n.workspace) &&
									!this.u(i, n.workspace) &&
									i.push(n);
							else if (nh(n)) this.w(i, n.folderUri) || i.push(n);
							else {
								const o = this.y(s, n.fileUri),
									a =
										n.fileUri.scheme === R.file &&
										Fi.G.indexOf(ys(n.fileUri)) >= 0;
								!o &&
									!a &&
									(s.push(n),
									T &&
										n.fileUri.scheme === R.file &&
										kn.addRecentDocument(n.fileUri.fsPath));
							}
						const r = await this.q({ workspaces: i, files: s });
						(i = r.workspaces),
							(s = r.files),
							i.length > Fi.a && (i.length = Fi.a),
							s.length > Fi.a && (s.length = Fi.a),
							await this.s({ workspaces: i, files: s }),
							this.c.fire(),
							N && this.H.trigger(() => this.N());
					}
					async removeRecentlyOpened(e) {
						const i = (o) => {
								const a = this.t(o);
								for (const c of e) if (Ze.isEqual(c, a)) return !1;
								return !0;
							},
							s = await this.getRecentlyOpened(),
							r = s.workspaces.filter(i),
							n = s.files.filter(i);
						(r.length !== s.workspaces.length || n.length !== s.files.length) &&
							(await this.s({ files: n, workspaces: r }),
							this.c.fire(),
							N && this.H.trigger(() => this.N()));
					}
					async clearRecentlyOpened(e) {
						if (e?.confirm) {
							const { response: i } = await this.m.showMessageBox({
								type: "warning",
								buttons: [w(2535, null), w(2536, null)],
								message: w(2537, null),
								detail: w(2538, null),
								cancelId: 1,
							});
							if (i !== 0) return;
						}
						await this.s({ workspaces: [], files: [] }),
							kn.clearRecentDocuments(),
							this.c.fire();
					}
					async getRecentlyOpened() {
						return this.q();
					}
					async q(e) {
						const i = new qt((n) => Ze.getComparisonKey(n));
						if (e?.workspaces)
							for (const n of e.workspaces) i.set(this.t(n), n);
						const s = new qt((n) => Ze.getComparisonKey(n));
						if (e?.files) for (const n of e.files) s.set(this.t(n), n);
						const r = await this.r();
						for (const n of r.workspaces) {
							const o = i.get(this.t(n));
							o ? (o.label = o.label ?? n.label) : i.set(this.t(n), n);
						}
						for (const n of r.files) {
							const o = s.get(this.t(n));
							o ? (o.label = o.label ?? n.label) : s.set(this.t(n), n);
						}
						return { workspaces: [...i.values()], files: [...s.values()] };
					}
					async r() {
						await this.j.whenReady;
						let e;
						const i = this.j.get(Fi.b, -1);
						if (typeof i == "string")
							try {
								e = JSON.parse(i);
							} catch (s) {
								this.f.error("Unexpected error parsing opened paths list", s);
							}
						return xD(e, this.f);
					}
					async s(e) {
						await this.j.whenReady,
							this.j.store(Fi.b, JSON.stringify(DD(e)), -1, 1);
					}
					t(e) {
						return nh(e)
							? e.folderUri
							: wD(e)
								? e.fileUri
								: e.workspace.configPath;
					}
					u(e, i) {
						return !!e.find((s) => q1(s) && s.workspace.id === i.id);
					}
					w(e, i) {
						return !!e.find((s) => nh(s) && Ze.isEqual(s.folderUri, i));
					}
					y(e, i) {
						return !!e.find((s) => Ze.isEqual(s.fileUri, i));
					}
					static {
						this.z = 7;
					}
					static {
						this.C = 10;
					}
					static {
						this.F = 7;
					}
					static {
						this.G = ["COMMIT_EDITMSG", "MERGE_MSG", "git-rebase-todo"];
					}
					async I() {
						T &&
							(await this.J(),
							this.D(this.onDidChangeRecentlyOpened(() => this.J())));
					}
					async J() {
						if (!T) return;
						const e = [];
						if (
							(e.push({
								type: "tasks",
								items: [
									{
										type: "task",
										title: w(2539, null),
										description: w(2540, null),
										program: process.execPath,
										args: "-n",
										iconPath: process.execPath,
										iconIndex: 0,
									},
								],
							}),
							(await this.getRecentlyOpened()).workspaces.length > 0)
						) {
							const i = [];
							for (const n of kn.getJumpListSettings().removedItems) {
								const o = n.args;
								if (o) {
									const a = /^--(folder|file)-uri\s+"([^"]+)"$/.exec(o);
									a && i.push(P.parse(a[2]));
								}
							}
							await this.removeRecentlyOpened(i);
							let s = !1;
							const r = Dt(
								(await this.getRecentlyOpened()).workspaces
									.slice(0, Fi.F)
									.map((n) => {
										const o = q1(n) ? n.workspace : n.folderUri,
											{ title: a, description: c } = this.L(o, n.label);
										let l;
										return (
											P.isUri(o)
												? (l = `--folder-uri "${o.toString()}"`)
												: ((s = !0),
													(l = `--file-uri "${o.configPath.toString()}"`)),
											{
												type: "task",
												title: a.substr(0, 255),
												description: c.substr(0, 255),
												program: process.execPath,
												args: l,
												iconPath: "explorer.exe",
												iconIndex: 0,
											}
										);
									}),
							);
							r.length > 0 &&
								e.push({
									type: "custom",
									name: w(s ? 2541 : 2542, null),
									items: r,
								});
						}
						e.push({ type: "recent" });
						try {
							const i = kn.setJumpList(e);
							i &&
								i !== "ok" &&
								this.f.warn(
									`updateWindowsJumpList#setJumpList unexpected result: ${i}`,
								);
						} catch (i) {
							this.f.warn("updateWindowsJumpList#setJumpList", i);
						}
					}
					L(e, i) {
						if (i) return { title: VS(i).name, description: i };
						if (P.isUri(e)) return { title: ys(e), description: this.M(e) };
						if (this.g.isUntitledWorkspace(e))
							return { title: w(2543, null), description: "" };
						let s = ys(e.configPath);
						return (
							s.endsWith(nc) && (s = s.substr(0, s.length - nc.length - 1)),
							{ title: w(2544, null, s), description: this.M(e.configPath) }
						);
					}
					M(e) {
						return e.scheme === "file" ? Sp(e.fsPath) : e.toString();
					}
					async N() {
						if (!N) return;
						kn.clearRecentDocuments();
						const e = await this.getRecentlyOpened(),
							i = [];
						let s = 0;
						for (let n = 0; n < e.workspaces.length && s < Fi.z; n++) {
							const o = this.t(e.workspaces[n]);
							if (o.scheme === R.file) {
								const a = $i(o);
								(await ee.exists(a)) && (i.push(a), s++);
							}
						}
						const r = [];
						for (let n = 0; n < e.files.length && s < Fi.C; n++) {
							const o = this.t(e.files[n]);
							if (o.scheme === R.file) {
								const a = $i(o);
								if (Fi.G.includes(ys(o)) || i.includes(a)) continue;
								(await ee.exists(a)) && (r.push(a), s++);
							}
						}
						r.reverse().forEach((n) => kn.addRecentDocument(n)),
							i.reverse().forEach((n) => kn.addRecentDocument(n));
					}
				}),
				(Ch = Fi =
					__decorate(
						[
							__param(0, G),
							__param(1, Pr),
							__param(2, Ne),
							__param(3, lc),
							__param(4, sr),
						],
						Ch,
					));
		},
	});
import {
	app as N$,
	BrowserWindow as Rh,
	Menu as gt,
	MenuItem as _e,
} from "electron";
function nr() {
	return new _e({ type: "separator" });
}
var Oh,
	Wc,
	Lh,
	W$ = m({
		"out-build/vs/platform/menubar/electron-main/menubar.js"() {
			"use strict";
			ae(),
				Mt(),
				vr(),
				z(),
				ie(),
				ve(),
				Dh(),
				Ve(),
				bt(),
				ot(),
				Q(),
				F$(),
				Oc(),
				Ct(),
				Li(),
				St(),
				Cr(),
				un(),
				si(),
				_h(),
				F(),
				(Wc = "menu"),
				(Lh = class extends j {
					static {
						Oh = this;
					}
					static {
						this.a = "lastKnownMenubarData";
					}
					constructor(e, i, s, r, n, o, a, c, l, u, d, f) {
						super(),
							(this.s = e),
							(this.t = i),
							(this.u = s),
							(this.w = r),
							(this.y = n),
							(this.z = o),
							(this.C = a),
							(this.F = c),
							(this.G = l),
							(this.H = u),
							(this.I = d),
							(this.J = f),
							(this.r = Object.create(null)),
							(this.h = new bs(() => this.R(), 0)),
							(this.j = new bs(() => {
								this.m = [];
							}, 1e4)),
							(this.n = Object.create(null)),
							(this.q = Object.create(null)),
							(N || ln(i)) && this.L(),
							this.M(),
							(this.f = !1),
							(this.g = !1),
							(this.m = []),
							this.W(),
							this.N();
					}
					L() {
						const e = this.C.getItem(Oh.a);
						e &&
							(e.menus && (this.n = e.menus),
							e.keybindings && (this.q = e.keybindings));
					}
					M() {
						(this.r["workbench.action.files.newUntitledFile"] = (o, a, c) => {
							this.lb({
								type: "commandId",
								commandId: "workbench.action.files.newUntitledFile",
							}) ||
								this.u.openEmptyWindow({ context: 2, contextWindowId: a?.id });
						}),
							(this.r["workbench.action.newWindow"] = (o, a, c) =>
								this.u.openEmptyWindow({ context: 2, contextWindowId: a?.id })),
							(this.r["workbench.action.files.openFileFolder"] = (o, a, c) =>
								this.H.pickFileFolderAndOpen(void 0, {
									forceNewWindow: this.eb(c),
									telemetryExtraData: { from: Wc },
								})),
							(this.r["workbench.action.files.openFolder"] = (o, a, c) =>
								this.H.pickFolderAndOpen(void 0, {
									forceNewWindow: this.eb(c),
									telemetryExtraData: { from: Wc },
								})),
							(this.r["workbench.action.openWorkspace"] = (o, a, c) =>
								this.H.pickWorkspaceAndOpen(void 0, {
									forceNewWindow: this.eb(c),
									telemetryExtraData: { from: Wc },
								})),
							(this.r["workbench.action.clearRecentFiles"] = () =>
								this.z.clearRecentlyOpened({ confirm: !0 }));
						const e = this.I.youTubeUrl;
						e &&
							(this.r["workbench.action.openYouTubeUrl"] = () =>
								this.ob(e, "openYouTubeUrl"));
						const i = this.I.requestFeatureUrl;
						i &&
							(this.r["workbench.action.openRequestFeatureUrl"] = () =>
								this.ob(i, "openUserVoiceUrl"));
						const s = this.I.reportIssueUrl;
						s &&
							(this.r["workbench.action.openIssueReporter"] = () =>
								this.ob(s, "openReportIssues"));
						const r = this.I.licenseUrl;
						r &&
							(this.r["workbench.action.openLicenseUrl"] = () => {
								if (qi) {
									const o = r.indexOf("?") > 0 ? "&" : "?";
									this.ob(`${r}${o}lang=${qi}`, "openLicenseUrl");
								} else this.ob(r, "openLicenseUrl");
							});
						const n = this.I.privacyStatementUrl;
						n &&
							r &&
							(this.r["workbench.action.openPrivacyStatementUrl"] = () => {
								this.ob(n, "openPrivacyStatement");
							});
					}
					N() {
						this.D(this.F.onWillShutdown(() => (this.b = !0))),
							this.D(this.u.onDidChangeWindowsCount((e) => this.S(e))),
							this.D(this.H.onDidBlurMainWindow(() => this.U())),
							this.D(this.H.onDidFocusMainWindow(() => this.U()));
					}
					get O() {
						return !1;
					}
					get P() {
						if (!N) return !1;
						const e = this.t.getValue("window.nativeTabs");
						return typeof e != "boolean" ? !1 : e;
					}
					updateMenu(e, i) {
						(this.n = e.menus),
							(this.q = e.keybindings),
							this.C.setItem(Oh.a, e),
							this.Q();
					}
					Q() {
						this.h.schedule();
					}
					R() {
						this.b ||
							setTimeout(() => {
								this.b || this.W();
							}, 10);
					}
					S(e) {
						N &&
							((e.oldCount === 0 && e.newCount > 0) ||
								(e.oldCount > 0 && e.newCount === 0)) &&
							((this.f = e.newCount === 0), this.Q());
					}
					U() {
						if (!N) return;
						const e = Rh.getFocusedWindow();
						(this.g = !e || !!this.J.getWindowByWebContents(e.webContents)),
							this.Q();
					}
					W() {
						const e = gt.getApplicationMenu();
						if ((e && this.m.push(e), Object.keys(this.n).length === 0)) {
							this.X(N ? new gt() : null);
							return;
						}
						const i = new gt();
						let s;
						if (N) {
							const n = new gt();
							(s = new _e({ label: this.I.nameShort, submenu: n })),
								this.Y(n),
								i.append(s);
						}
						if (N && !this.c) {
							this.c = !0;
							const n = new gt();
							n.append(
								new _e({
									label: this.qb(w(2007, null)),
									click: () => this.u.openEmptyWindow({ context: 1 }),
								}),
							),
								N$.dock.setMenu(n);
						}
						if (this.$("File")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2008, null)), submenu: n });
							this.bb(n, "File"), i.append(o);
						}
						if (this.$("Edit")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2009, null)), submenu: n });
							this.bb(n, "Edit"), i.append(o);
						}
						if (this.$("Selection")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2010, null)), submenu: n });
							this.bb(n, "Selection"), i.append(o);
						}
						if (this.$("View")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2011, null)), submenu: n });
							this.bb(n, "View"), i.append(o);
						}
						if (this.$("Go")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2012, null)), submenu: n });
							this.bb(n, "Go"), i.append(o);
						}
						if (this.$("Run")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2013, null)), submenu: n });
							this.bb(n, "Run"), i.append(o);
						}
						if (this.$("Terminal")) {
							const n = new gt(),
								o = new _e({ label: this.qb(w(2014, null)), submenu: n });
							this.bb(n, "Terminal"), i.append(o);
						}
						let r;
						if (this.$("Window")) {
							const n = new gt();
							(r = new _e({
								label: this.qb(w(2015, null)),
								submenu: n,
								role: "window",
							})),
								this.hb(n);
						}
						if ((r && i.append(r), this.$("Help"))) {
							const n = new gt(),
								o = new _e({
									label: this.qb(w(2016, null)),
									submenu: n,
									role: "help",
								});
							this.bb(n, "Help"), i.append(o);
						}
						i.items && i.items.length > 0 ? this.X(i) : this.X(null),
							this.j.schedule();
					}
					X(e) {
						if ((gt.setApplicationMenu(e), e))
							for (const i of this.J.getWindows()) i.win?.setMenu(null);
					}
					Y(e) {
						const i = this.jb(
								w(2017, null, this.I.nameLong),
								"workbench.action.showAboutDialog",
							),
							s = this.ib();
						let r;
						if (this.$("Preferences")) {
							const f = new gt();
							this.bb(f, "Preferences"),
								(r = new _e({ label: this.qb(w(2018, null)), submenu: f }));
						}
						const n = new gt(),
							o = new _e({
								label: w(2019, null),
								role: "services",
								submenu: n,
							}),
							a = new _e({
								label: w(2020, null, this.I.nameLong),
								role: "hide",
								accelerator: "Command+H",
							}),
							c = new _e({
								label: w(2021, null),
								role: "hideOthers",
								accelerator: "Command+Alt+H",
							}),
							l = new _e({ label: w(2022, null), role: "unhide" }),
							u = new _e(
								this.nb("workbench.action.quit", {
									label: w(2023, null, this.I.nameLong),
									click: async (f, p, v) => {
										const g = this.u.getLastActiveWindow();
										(this.u.getWindowCount() === 0 ||
											Rh.getFocusedWindow() ||
											g?.win?.isMinimized()) &&
											(await this.Z(v)) &&
											this.H.quit(void 0);
									},
								}),
							),
							d = [i];
						d.push(...s),
							r && d.push(nr(), r),
							d.push(nr(), o, nr(), a, c, l, nr(), u),
							d.forEach((f) => e.append(f));
					}
					async Z(e) {
						if (this.u.getWindowCount() === 0) return !0;
						const i = this.t.getValue("window.confirmBeforeClose");
						if (i === "always" || (i === "keyboardOnly" && this.fb(e))) {
							const { response: s } = await this.H.showMessageBox(
								this.u.getFocusedWindow()?.id,
								{
									type: "question",
									buttons: [w(2024, null), w(2025, null)],
									message: w(2026, null),
								},
							);
							return s === 0;
						}
						return !0;
					}
					$(e) {
						if (!N && !ln(this.t)) return !1;
						switch (e) {
							case "File":
							case "Help":
								if (N)
									return (
										(this.u.getWindowCount() === 0 && this.f) ||
										(this.u.getWindowCount() > 0 && this.g) ||
										(!!this.n && !!this.n[e])
									);
							case "Window":
								if (N)
									return (
										(this.u.getWindowCount() === 0 && this.f) ||
										(this.u.getWindowCount() > 0 && this.g) ||
										!!this.n
									);
							default:
								return this.u.getWindowCount() > 0 && !!this.n && !!this.n[e];
						}
					}
					ab(e, i) {
						i.forEach((s) => {
							if (O5(s)) e.append(nr());
							else if (R5(s)) {
								const r = new gt(),
									n = new _e({ label: this.qb(s.label), submenu: r });
								this.ab(r, s.submenu.items), e.append(n);
							} else
								L5(s)
									? e.append(this.db(s))
									: M$(s) &&
										(s.id === "workbench.action.showAboutDialog" && this.cb(e),
										N
											? (this.u.getWindowCount() === 0 && this.f) ||
												(this.u.getWindowCount() > 0 && this.g)
												? this.r[s.id]
													? e.append(
															new _e(
																this.nb(s.id, {
																	label: this.qb(s.label),
																	click: this.r[s.id],
																}),
															),
														)
													: e.append(this.jb(s.label, s.id, !1, s.checked))
												: e.append(
														this.jb(
															s.label,
															s.id,
															s.enabled !== !1,
															!!s.checked,
														),
													)
											: e.append(
													this.jb(s.label, s.id, s.enabled !== !1, !!s.checked),
												));
						});
					}
					bb(e, i) {
						this.n && this.n[i] && this.ab(e, this.n[i].items);
					}
					cb(e) {
						const i = this.ib();
						i.length && (i.forEach((s) => e.append(s)), e.append(nr()));
					}
					db(e) {
						const i = P.revive(e.uri),
							s = e.id,
							r =
								s === "openRecentFile"
									? { fileUri: i }
									: s === "openRecentWorkspace"
										? { workspaceUri: i }
										: { folderUri: i };
						return new _e(
							this.nb(
								s,
								{
									label: e.label,
									click: async (n, o, a) => {
										const c = this.eb(a);
										(
											await this.u.open({
												context: 2,
												cli: this.w.args,
												urisToOpen: [r],
												forceNewWindow: c,
												gotoLineMode: !1,
												remoteAuthority: e.remoteAuthority,
											})
										).length > 0 || (await this.z.removeRecentlyOpened([i]));
									},
								},
								!1,
							),
						);
					}
					eb(e) {
						return !!(
							e &&
							((!N && (e.ctrlKey || e.shiftKey)) ||
								(N && (e.metaKey || e.altKey)))
						);
					}
					fb(e) {
						return !!(
							e.triggeredByAccelerator ||
							e.altKey ||
							e.ctrlKey ||
							e.metaKey ||
							e.shiftKey
						);
					}
					gb(e, i, s) {
						const r = { label: this.qb(e), role: s, enabled: !0 };
						return new _e(this.mb(i, r));
					}
					hb(e) {
						const i = new _e({
								label: w(2027, null),
								role: "minimize",
								accelerator: "Command+M",
								enabled: this.u.getWindowCount() > 0,
							}),
							s = new _e({
								label: w(2028, null),
								role: "zoom",
								enabled: this.u.getWindowCount() > 0,
							}),
							r = new _e({
								label: w(2029, null),
								role: "front",
								enabled: this.u.getWindowCount() > 0,
							}),
							n = this.jb(w(2030, null), "workbench.action.switchWindow"),
							o = [];
						this.P &&
							(o.push(nr()),
							o.push(this.jb(w(2031, null), "workbench.action.newWindowTab")),
							o.push(
								this.gb(
									w(2032, null),
									"workbench.action.showPreviousWindowTab",
									"selectPreviousTab",
								),
							),
							o.push(
								this.gb(
									w(2033, null),
									"workbench.action.showNextWindowTab",
									"selectNextTab",
								),
							),
							o.push(
								this.gb(
									w(2034, null),
									"workbench.action.moveWindowTabToNewWindow",
									"moveTabToNewWindow",
								),
							),
							o.push(
								this.gb(
									w(2035, null),
									"workbench.action.mergeAllWindowTabs",
									"mergeAllWindows",
								),
							)),
							[i, s, nr(), n, ...o, nr(), r].forEach((a) => e.append(a));
					}
					ib() {
						switch (this.s.state.type) {
							case "idle":
								return [
									new _e({
										label: this.qb(w(2036, null)),
										click: () =>
											setTimeout(() => {
												this.pb("CheckForUpdate"), this.s.checkForUpdates(!0);
											}, 0),
									}),
								];
							case "checking for updates":
								return [new _e({ label: w(2037, null), enabled: !1 })];
							case "available for download":
								return [
									new _e({
										label: this.qb(w(2038, null)),
										click: () => {
											this.s.downloadUpdate();
										},
									}),
								];
							case "downloading":
								return [new _e({ label: w(2039, null), enabled: !1 })];
							case "downloaded":
								return N
									? []
									: [
											new _e({
												label: this.qb(w(2040, null)),
												click: () => {
													this.pb("InstallUpdate"), this.s.applyUpdate();
												},
											}),
										];
							case "updating":
								return [new _e({ label: w(2041, null), enabled: !1 })];
							case "ready":
								return [
									new _e({
										label: this.qb(w(2042, null)),
										click: () => {
											this.pb("RestartToUpdate"), this.s.quitAndInstall();
										},
									}),
								];
							default:
								return [];
						}
					}
					jb(e, i, s, r) {
						const n = this.qb(e),
							o =
								typeof i == "function"
									? i
									: (d, f, p) => {
											const v = d ? d.userSettingsLabel : null;
											let g = i;
											Array.isArray(i) && (g = this.eb(p) ? i[1] : i[0]),
												v && p.triggeredByAccelerator
													? this.lb({
															type: "keybinding",
															userSettingsLabel: v,
														})
													: this.lb({ type: "commandId", commandId: g });
										},
							a = typeof s == "boolean" ? s : this.u.getWindowCount() > 0,
							c = typeof r == "boolean" ? r : !1,
							l = { label: n, click: o, enabled: a };
						c && ((l.type = "checkbox"), (l.checked = c));
						let u;
						return (
							typeof i == "string" ? (u = i) : Array.isArray(i) && (u = i[0]),
							N &&
								(u === "editor.action.clipboardCutAction"
									? (l.role = "cut")
									: u === "editor.action.clipboardCopyAction"
										? (l.role = "copy")
										: u === "editor.action.clipboardPasteAction" &&
											(l.role = "paste"),
								u === "undo"
									? (l.click = this.kb(o, {
											inDevTools: (d) => d.undo(),
											inNoWindow: () => gt.sendActionToFirstResponder("undo:"),
										}))
									: u === "redo"
										? (l.click = this.kb(o, {
												inDevTools: (d) => d.redo(),
												inNoWindow: () =>
													gt.sendActionToFirstResponder("redo:"),
											}))
										: u === "editor.action.selectAll" &&
											(l.click = this.kb(o, {
												inDevTools: (d) => d.selectAll(),
												inNoWindow: () =>
													gt.sendActionToFirstResponder("selectAll:"),
											}))),
							new _e(this.mb(u, l))
						);
					}
					kb(e, i) {
						return (s, r, n) => {
							const o = Rh.getFocusedWindow();
							if (!o) return i.inNoWindow();
							if (
								o.webContents.isDevToolsFocused() &&
								o.webContents.devToolsWebContents
							)
								return i.inDevTools(o.webContents.devToolsWebContents);
							e(s, r || o, n);
						};
					}
					lb(e) {
						let i = Rh.getFocusedWindow();
						if (i) {
							const r = this.J.getWindowByWebContents(i.webContents);
							r && (i = this.u.getWindowById(r.parentId)?.win ?? null);
						}
						if (!i) {
							const r = this.u.getLastActiveWindow();
							r?.win?.isMinimized() && (i = r.win);
						}
						const s = i ? this.u.getWindowById(i.id) : void 0;
						if (s) {
							if (
								(this.G.trace("menubar#runActionInRenderer", e),
								N &&
									!this.w.isBuilt &&
									!s.isReady &&
									((e.type === "commandId" &&
										e.commandId === "workbench.action.toggleDevTools") ||
										(e.type !== "commandId" &&
											e.userSettingsLabel === "alt+cmd+i")))
							)
								return !1;
							if (e.type === "commandId") {
								const r = { id: e.commandId, from: "menu" };
								s.sendWhenReady("vscode:runAction", Ge.None, r);
							} else {
								const r = { userSettingsLabel: e.userSettingsLabel };
								s.sendWhenReady("vscode:runKeybinding", Ge.None, r);
							}
							return !0;
						} else
							return (
								this.G.trace(
									"menubar#runActionInRenderer: no active window found",
									e,
								),
								!1
							);
					}
					mb(e, i) {
						const s = typeof e == "string" ? this.q[e] : void 0;
						if (s?.label) {
							if (s.isNative !== !1)
								(i.accelerator = s.label),
									(i.userSettingsLabel = s.userSettingsLabel);
							else if (typeof i.label == "string") {
								const r = i.label.indexOf("[");
								r >= 0
									? (i.label = `${i.label.substr(0, r)} [${s.label}]`)
									: (i.label = `${i.label} [${s.label}]`);
							}
						} else i.accelerator = void 0;
						return i;
					}
					nb(e, i, s = !i.accelerator) {
						s && (i = this.mb(e, i));
						const r = i.click;
						return (
							(i.click = (n, o, a) => {
								this.pb(e), r?.(n, o, a);
							}),
							i
						);
					}
					ob(e, i) {
						this.H.openExternal(void 0, e), this.pb(i);
					}
					pb(e) {
						this.y.publicLog2("workbenchActionExecuted", { id: e, from: Wc });
					}
					qb(e) {
						return HS(e, !this.O);
					}
				}),
				(Lh = Oh =
					__decorate(
						[
							__param(0, Sn),
							__param(1, He),
							__param(2, _t),
							__param(3, ut),
							__param(4, It),
							__param(5, Nc),
							__param(6, Ii),
							__param(7, Ne),
							__param(8, G),
							__param(9, Ir),
							__param(10, tt),
							__param(11, Fo),
						],
						Lh,
					));
		},
	}),
	Am,
	Mh,
	j$ = m({
		"out-build/vs/platform/menubar/electron-main/menubarMainService.js"() {
			"use strict";
			Y(),
				ot(),
				Q(),
				W$(),
				F(),
				(Am = B("menubarMainService")),
				(Mh = class extends j {
					constructor(e, i, s) {
						super(),
							(this.b = e),
							(this.c = i),
							(this.f = s),
							(this.a = this.g());
					}
					async g() {
						return await this.c.when(3), this.D(this.b.createInstance(Lh));
					}
					async updateMenubar(e, i) {
						this.f.trace("menubarService#updateMenubar", e),
							(await this.a).updateMenu(i, e);
					}
				}),
				(Mh = __decorate([__param(0, ws), __param(1, Ne), __param(2, G)], Mh));
		},
	}),
	xn,
	Im,
	Cm,
	Rs = m({
		"out-build/vs/platform/policy/common/policy.js"() {
			"use strict";
			q(),
				Ml(),
				F(),
				Y(),
				(xn = B("policy")),
				(Im = class extends j {
					constructor() {
						super(...arguments),
							(this.f = {}),
							(this.g = new Map()),
							(this.h = this.D(new $())),
							(this.onDidChange = this.h.event);
					}
					async updatePolicyDefinitions(t) {
						const e = Object.keys(this.f).length;
						return (
							(this.f = { ...t, ...this.f }),
							e !== Object.keys(this.f).length && (await this.j(t)),
							qr.reduce(this.g.entries(), (i, [s, r]) => ({ ...i, [s]: r }), {})
						);
					}
					getPolicyValue(t) {
						return this.g.get(t);
					}
					serialize() {
						return qr.reduce(
							Object.entries(this.f),
							(t, [e, i]) => ({
								...t,
								[e]: { definition: i, value: this.g.get(e) },
							}),
							{},
						);
					}
				}),
				(Cm = class {
					constructor() {
						this.onDidChange = x.None;
					}
					async updatePolicyDefinitions() {
						return {};
					}
					getPolicyValue() {}
					serialize() {}
				});
		},
	});
async function T$(t, e, i, s, r) {
	try {
		const n = await import("@vscode/spdlog");
		n.setFlushOn(or.Trace);
		const o = await n.createAsyncRotatingLogger(t, e, i, s);
		return (
			r ? o.clearFormatters() : o.setPattern("%Y-%m-%d %H:%M:%S.%e [%l] %v"), o
		);
	} catch (n) {
		console.error(n);
	}
	return null;
}
function W5(t, e, i) {
	switch (e) {
		case J.Trace:
			t.trace(i);
			break;
		case J.Debug:
			t.debug(i);
			break;
		case J.Info:
			t.info(i);
			break;
		case J.Warning:
			t.warn(i);
			break;
		case J.Error:
			t.error(i);
			break;
		case J.Off:
			break;
		default:
			throw new Error(`Invalid log level ${e}`);
	}
}
function j5(t, e) {
	switch (e) {
		case J.Trace:
			t.setLevel(or.Trace);
			break;
		case J.Debug:
			t.setLevel(or.Debug);
			break;
		case J.Info:
			t.setLevel(or.Info);
			break;
		case J.Warning:
			t.setLevel(or.Warning);
			break;
		case J.Error:
			t.setLevel(or.Error);
			break;
		case J.Off:
			t.setLevel(or.Off);
			break;
		default:
			throw new Error(`Invalid log level ${e}`);
	}
}
var or,
	T5,
	U$ = m({
		"out-build/vs/platform/log/node/spdlogLog.js"() {
			"use strict";
			Be(),
				Q(),
				(function (t) {
					(t[(t.Trace = 0)] = "Trace"),
						(t[(t.Debug = 1)] = "Debug"),
						(t[(t.Info = 2)] = "Info"),
						(t[(t.Warning = 3)] = "Warning"),
						(t[(t.Error = 4)] = "Error"),
						(t[(t.Critical = 5)] = "Critical"),
						(t[(t.Off = 6)] = "Off");
				})(or || (or = {})),
				(T5 = class extends Xp {
					constructor(t, e, i, s, r) {
						super(),
							(this.n = []),
							this.setLevel(r),
							(this.q = this.s(t, e, i, s)),
							this.D(
								this.onDidChangeLogLevel((n) => {
									this.r && j5(this.r, n);
								}),
							);
					}
					async s(t, e, i, s) {
						const r = i ? 6 : 1,
							n = (30 / r) * nn.MB,
							o = await T$(t, e, n, r, s);
						if (o) {
							(this.r = o), j5(this.r, this.getLevel());
							for (const { level: a, message: c } of this.n) W5(this.r, a, c);
							this.n = [];
						}
					}
					m(t, e) {
						this.r
							? W5(this.r, t, e)
							: this.getLevel() <= t && this.n.push({ level: t, message: e });
					}
					flush() {
						this.r ? this.u() : this.q.then(() => this.u());
					}
					dispose() {
						this.r ? this.w() : this.q.then(() => this.w()), super.dispose();
					}
					u() {
						this.r && this.r.flush();
					}
					w() {
						this.r && (this.r.drop(), (this.r = void 0));
					}
				});
		},
	}),
	U5,
	q$ = m({
		"out-build/vs/platform/log/node/loggerService.js"() {
			"use strict";
			Oi(),
				Q(),
				U$(),
				(U5 = class extends hb {
					q(t, e, i) {
						return new T5(
							fi(),
							t.fsPath,
							!i?.donotRotate,
							!!i?.donotUseFormatters,
							e,
						);
					}
				});
		},
	}),
	To,
	q5,
	jc = m({
		"out-build/vs/platform/log/electron-main/loggerService.js"() {
			"use strict";
			xi(),
				q(),
				Y(),
				Q(),
				q$(),
				(To = ec),
				(q5 = class extends U5 {
					constructor() {
						super(...arguments), (this.t = new qt());
					}
					createLogger(t, e, i) {
						i !== void 0 && this.t.set(this.n(t), i);
						try {
							return super.createLogger(t, e);
						} catch (s) {
							throw (this.t.delete(this.n(t)), s);
						}
					}
					registerLogger(t, e) {
						e !== void 0 && this.t.set(t.resource, e), super.registerLogger(t);
					}
					deregisterLogger(t) {
						this.t.delete(t), super.deregisterLogger(t);
					}
					getRegisteredLoggers(t) {
						const e = [];
						for (const i of super.getRegisteredLoggers())
							t === this.t.get(i.resource) && e.push(i);
						return e;
					}
					getOnDidChangeLogLevelEvent(t) {
						return x.filter(
							this.onDidChangeLogLevel,
							(e) => cb(e) || this.u(e[0], t),
						);
					}
					getOnDidChangeVisibilityEvent(t) {
						return x.filter(this.onDidChangeVisibility, ([e]) => this.u(e, t));
					}
					getOnDidChangeLoggersEvent(t) {
						return x.filter(
							x.map(this.onDidChangeLoggers, (e) => ({
								added: [...e.added].filter((s) => this.u(s.resource, t)),
								removed: [...e.removed].filter((s) => this.u(s.resource, t)),
							})),
							(e) => e.added.length > 0 || e.removed.length > 0,
						);
					}
					deregisterLoggers(t) {
						for (const [e, i] of this.t) i === t && this.deregisterLogger(e);
					}
					u(t, e) {
						const i = this.t.get(t);
						return i === void 0 || i === e;
					}
					dispose() {
						super.dispose(), this.t.clear();
					}
				});
		},
	});
function B$(t) {
	if (va === 2 && /^penguin(\.|$)/i.test(t)) return "chromebook";
}
function z$(t, e, i, s, r, n, o, a, c, l, u) {
	const d = Object.create(null);
	(d["common.machineId"] = n),
		(d["common.macMachineId"] = o),
		(d["common.sqmId"] = a),
		(d["common.devDeviceId"] = c),
		(d.sessionID = fi() + Date.now()),
		(d.commitHash = s),
		(d.version = r),
		(d["common.platformVersion"] = (t || "").replace(
			/^(\d+)(\.\d+)?(\.\d+)?(.*)/,
			"$1$2$3",
		)),
		(d["common.platform"] = N0(va)),
		(d["common.nodePlatform"] = Vf),
		(d["common.nodeArch"] = i),
		(d["common.product"] = u || "desktop"),
		l && (d["common.msftInternal"] = l);
	let f = 0;
	const p = Date.now();
	Object.defineProperties(d, {
		timestamp: { get: () => new Date(), enumerable: !0 },
		"common.timesincesessionstart": {
			get: () => Date.now() - p,
			enumerable: !0,
		},
		"common.sequence": { get: () => f++, enumerable: !0 },
	}),
		Lf && (d["common.snap"] = "true");
	const v = B$(e);
	return v && (d["common.platformDetail"] = v), d;
}
function H$(t) {
	const e = Di.USERDNSDOMAIN;
	if (!e) return !1;
	const i = e.toLowerCase();
	return t.some((s) => i === s);
}
var B5 = m({
	"out-build/vs/platform/telemetry/common/commonProperties.js"() {
		"use strict";
		z(), gs(), Oi();
	},
});
function z5(t, e) {
	return !e.isBuilt && !e.disableTelemetry
		? !0
		: !(e.disableTelemetry || !t.enableTelemetry);
}
function _m(t) {
	const e = t.getValue(Fu),
		i = t.getValue(h1);
	if (t.getValue(d1) === !1 || i === !1) return 0;
	switch (e ?? "all") {
		case "all":
			return 3;
		case "off":
			return 0;
	}
}
function V$(t, e) {
	const i = t.msftInternalDomains || [],
		s = e.getValue("telemetry.internalTesting");
	return H$(i) || s;
}
function G$(t) {
	return [
		t.appRoot,
		t.extensionsPath,
		t.userHome.fsPath,
		t.tmpDir.fsPath,
		t.userDataPath,
	];
}
function J$(t, e) {
	if (!t || (!t.includes("/") && !t.includes("\\"))) return t;
	let i = t;
	const s = [];
	for (const a of e)
		for (;;) {
			const c = a.exec(t);
			if (!c) break;
			s.push([c.index, a.lastIndex]);
		}
	const r = /^[\\\/]?(node_modules|node_modules\.asar)[\\\/]/,
		n =
			/(file:\/\/)?([a-zA-Z]:(\\\\|\\|\/)|(\\\\|\\|\/))?([\w-\._]+(\\\\|\\|\/))+[\w-\._]*/g;
	let o = 0;
	for (i = ""; ; ) {
		const a = n.exec(t);
		if (!a) break;
		const c = s.some(([l, u]) => a.index < u && l < n.lastIndex);
		!r.test(a[0]) &&
			!c &&
			((i += t.substring(o, a.index) + "<REDACTED: user-file-path>"),
			(o = n.lastIndex));
	}
	return o < t.length && (i += t.substr(o)), i;
}
function X$(t) {
	if (!t) return t;
	const e = [
		{ label: "Google API Key", regex: /AIza[A-Za-z0-9_\\\-]{35}/ },
		{ label: "Slack Token", regex: /xox[pbar]\-[A-Za-z0-9]/ },
		{
			label: "GitHub Token",
			regex:
				/(gh[psuro]_[a-zA-Z0-9]{36}|github_pat_[a-zA-Z0-9]{22}_[a-zA-Z0-9]{59})/,
		},
		{
			label: "Generic Secret",
			regex:
				/(key|token|sig|secret|signature|password|passwd|pwd|android:value)[^a-zA-Z0-9]/i,
		},
		{
			label: "CLI Credentials",
			regex:
				/((login|psexec|(certutil|psexec)\.exe).{1,50}(\s-u(ser(name)?)?\s+.{3,100})?\s-(admin|user|vm|root)?p(ass(word)?)?\s+["']?[^$\-\/\s]|(^|[\s\r\n\\])net(\.exe)?.{1,5}(user\s+|share\s+\/user:| user -? secrets ? set) \s + [^ $\s \/])/,
		},
		{
			label: "Microsoft Entra ID",
			regex: /eyJ(?:0eXAiOiJKV1Qi|hbGci|[a-zA-Z0-9\-_]+\.[a-zA-Z0-9\-_]+\.)/,
		},
		{ label: "Email", regex: /@[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+/ },
	];
	for (const i of e) if (i.regex.test(t)) return `<REDACTED: ${i.label}>`;
	return t;
}
function H5(t, e) {
	return nD(t, (i) => {
		if (
			i instanceof V5 ||
			Object.hasOwnProperty.call(i, "isTrustedTelemetryValue")
		)
			return i.value;
		if (typeof i == "string") {
			let s = i.replaceAll("%20", " ");
			s = J$(s, e);
			for (const r of e) s = s.replace(r, "");
			return (s = X$(s)), s;
		}
	});
}
var V5,
	G5,
	Tc,
	Dn = m({
		"out-build/vs/platform/telemetry/common/telemetryUtils.js"() {
			"use strict";
			ns(),
				Ie(),
				vc(),
				B5(),
				St(),
				(V5 = class {
					constructor(t) {
						(this.value = t), (this.isTrustedTelemetryValue = !0);
					}
				}),
				(G5 = class {
					constructor() {
						(this.telemetryLevel = 0),
							(this.sessionId = "someValue.sessionId"),
							(this.machineId = "someValue.machineId"),
							(this.macMachineId = "someValue.macMachineId"),
							(this.sqmId = "someValue.sqmId"),
							(this.devDeviceId = "someValue.devDeviceId"),
							(this.firstSessionDate = "someValue.firstSessionDate"),
							(this.sendErrorTelemetry = !1);
					}
					registerAuthId() {}
					publicLog() {}
					publicLog2() {}
					publicLogError() {}
					publicLogError2() {}
					publicLogCapture() {}
					setExperimentProperty() {}
				}),
				(Tc = new G5());
		},
	}),
	Fh,
	Rm,
	Om,
	K$ = m({
		"out-build/vs/platform/sharedProcess/common/sharedProcess.js"() {
			"use strict";
			(Fh = {
				exit: "vscode:electron-main->shared-process=exit",
				ipcReady: "vscode:shared-process->electron-main=ipc-ready",
				initDone: "vscode:shared-process->electron-main=init-done",
			}),
				(Rm = {
					request: "vscode:createSharedProcessChannelConnection",
					response: "vscode:createSharedProcessChannelConnectionResult",
				}),
				(Om = {
					request: "vscode:createSharedProcessRawConnection",
					response: "vscode:createSharedProcessRawConnectionResult",
				});
		},
	}),
	Nh,
	Y$ = m({
		"out-build/vs/platform/sharedProcess/electron-main/sharedProcess.js"() {
			"use strict";
			is(),
				ae(),
				F(),
				bt(),
				ot(),
				Q(),
				Is(),
				Rs(),
				jc(),
				Ao(),
				Dn(),
				Up(),
				Ie(),
				K$(),
				q(),
				(Nh = class extends j {
					constructor(e, i, s, r, n, o, a, c, l, u) {
						super(),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = n),
							(this.q = o),
							(this.r = a),
							(this.s = c),
							(this.t = l),
							(this.u = u),
							(this.a = new za()),
							(this.b = void 0),
							(this.c = void 0),
							(this.f = this.D(new $())),
							(this.onDidCrash = this.f.event),
							(this.C = void 0),
							(this.F = void 0),
							this.w();
					}
					w() {
						et.on(Rm.request, (e, i) => this.y(e, i, Rm.response)),
							et.on(Om.request, (e, i) => this.y(e, i, Om.response)),
							this.D(this.r.onWillShutdown(() => this.z()));
					}
					async y(e, i, s) {
						this.s.trace(`[SharedProcess] onWindowConnection for: ${s}`),
							this.a.isOpen() || this.a.open(),
							await this.whenReady();
						const r = await this.connect(s);
						if (e.sender.isDestroyed()) return r.close();
						e.sender.postMessage(s, i, [r]);
					}
					z() {
						this.s.trace("[SharedProcess] onWillShutdown"),
							this.b?.postMessage(Fh.exit),
							(this.b = void 0);
					}
					whenReady() {
						return (
							this.C ||
								(this.C = (async () => {
									await this.G;
									const e = new Xs();
									this.b?.once(Fh.initDone, () => e.complete()),
										await e.p,
										this.c?.dispose(),
										this.s.trace("[SharedProcess] Overall ready");
								})()),
							this.C
						);
					}
					get G() {
						return (
							this.F ||
								(this.F = (async () => {
									await this.a.wait(), this.H();
									const e = new Xs();
									this.b?.once(Fh.ipcReady, () => e.complete()),
										await e.p,
										this.s.trace("[SharedProcess] IPC ready");
								})()),
							this.F
						);
					}
					H() {
						(this.b = this.D(new $r(this.s, Tc, this.r))),
							(this.c = this.b.onMessage((s) => {
								typeof s.warning == "string"
									? this.s.warn(s.warning)
									: typeof s.error == "string" && this.s.error(s.error);
							}));
						const e = nx(this.n.args, this.n.isBuilt);
						let i;
						e.port &&
							((i = ["--nolazy"]),
							e.break
								? i.push(`--inspect-brk=${e.port}`)
								: i.push(`--inspect=${e.port}`)),
							this.b.start({
								processTitle: "shared-process",
								type: "shared-process",
								entryPoint:
									"vs/code/electron-utility/sharedProcess/sharedProcessMain",
								payload: this.I(),
								respondToAuthRequestsFromMainProcess: !0,
								execArgv: i,
							}),
							this.D(this.b.onCrash(() => this.f.fire()));
					}
					I() {
						return {
							machineId: this.g,
							macMachineId: this.h,
							sqmId: this.j,
							devDeviceId: this.m,
							codeCachePath: this.n.codeCachePath,
							profiles: { home: this.q.profilesHome, all: this.q.profiles },
							args: this.n.args,
							logLevel: this.t.getLogLevel(),
							loggers: this.t.getRegisteredLoggers(),
							policiesData: this.u.serialize(),
						};
					}
					async connect(e) {
						return await this.G, Pa(this.b).connect(e);
					}
				}),
				(Nh = __decorate(
					[
						__param(4, ut),
						__param(5, As),
						__param(6, Ne),
						__param(7, G),
						__param(8, To),
						__param(9, xn),
					],
					Nh,
				));
		},
	}),
	J5,
	Uo,
	Lm = m({
		"out-build/vs/platform/sign/common/sign.js"() {
			"use strict";
			Y(), (J5 = "signService"), (Uo = B(J5));
		},
	});
function Q$(t) {
	return (
		typeof t == "object" && t !== null && "key" in t && typeof t.key == "string"
	);
}
function Z$(t) {
	return (
		typeof t == "object" &&
		t !== null &&
		"key" in t &&
		typeof t.key == "string" &&
		"value" in t &&
		typeof t.value == "string"
	);
}
function eA(t) {
	return (
		typeof t == "object" &&
		t !== null &&
		"prefix" in t &&
		typeof t.prefix == "string"
	);
}
var tA = m({
		"out-build/vs/platform/storage/common/storageIpc.js"() {
			"use strict";
			q(), F();
		},
	}),
	X5,
	iA = m({
		"out-build/vs/platform/storage/electron-main/storageIpc.js"() {
			"use strict";
			q(),
				F(),
				su(),
				tA(),
				ti(),
				(X5 = class G3 extends j {
					static {
						this.a = 100;
					}
					constructor(e, i) {
						super(),
							(this.f = e),
							(this.g = i),
							(this.b = this.D(new $())),
							(this.c = new Map()),
							this.h(i.applicationStorage, this.b);
					}
					h(e, i) {
						this.D(
							x.debounce(
								e.onDidChangeStorage,
								(s, r) => (s ? s.push(r) : (s = [r]), s),
								G3.a,
							)((s) => {
								s.length && i.fire(this.j(s, e));
							}),
						);
					}
					j(e, i) {
						const s = new Map(),
							r = new Set();
						return (
							e.forEach((n) => {
								const o = i.get(n.key);
								typeof o == "string" ? s.set(n.key, o) : r.add(n.key);
							}),
							{
								changed: Array.from(s.entries()),
								deleted: Array.from(r.values()),
							}
						);
					}
					listen(e, i, s) {
						switch (i) {
							case "onDidChangeStorage": {
								const r = s.profile ? yr(s.profile) : void 0;
								if (!r) return this.b.event;
								let n = this.c.get(r.id);
								return (
									n ||
										((n = this.D(new $())),
										this.h(this.g.profileStorage(r), n),
										this.c.set(r.id, n)),
									n.event
								);
							}
						}
						throw new Error(`Event not found: ${i}`);
					}
					async call(e, i, s) {
						const r = s.profile ? yr(s.profile) : void 0,
							n = mx(s.workspace),
							o = await this.m(r, n);
						switch (i) {
							case "getItems":
								return Array.from(o.items.entries());
							case "updateItems": {
								const a = s;
								if (a.insert) for (const [c, l] of a.insert) o.set(c, l);
								a.delete?.forEach((c) => o.delete(c));
								break;
							}
							case "optimize":
								return o.optimize();
							case "isUsed": {
								const a = s.payload;
								if (typeof a == "string") return this.g.isUsed(a);
							}
							case "cursorDiskKVGet": {
								if (!Q$(s))
									throw new Error("Invalid request for cursorDiskKVGet");
								const a = s;
								return o.cursorDiskKVGet(a.key);
							}
							case "cursorDiskKVSet": {
								if (!Z$(s))
									throw new Error("Invalid request for cursorDiskKVSet");
								const a = s;
								return o.cursorDiskKVSet(a.key, a.value);
							}
							case "cursorDiskKVClearPrefix": {
								if (!eA(s))
									throw new Error(
										"Invalid request for cursorDiskKVClearPrefix",
									);
								const a = s;
								return o.cursorDiskKVClearPrefix(a.prefix);
							}
							default:
								throw new Error(`Call not found: ${i}`);
						}
					}
					async m(e, i) {
						let s;
						i
							? (s = this.g.workspaceStorage(i))
							: e
								? (s = this.g.profileStorage(e))
								: (s = this.g.applicationStorage);
						try {
							await s.init();
						} catch (r) {
							this.f.error(
								`StorageIPC#init: Unable to init ${i ? "workspace" : e ? "profile" : "application"} storage due to ${r}`,
							);
						}
						return s;
					}
				});
		},
	}),
	K5,
	sA = m({
		"out-build/vs/platform/telemetry/common/telemetryIpc.js"() {
			"use strict";
			K5 = class {
				constructor(t) {
					this.b = t;
				}
				log(t, e) {
					return (
						this.b
							.call("log", { eventName: t, data: e })
							.then(
								void 0,
								(i) => `Failed to log telemetry: ${console.warn(i)}`,
							),
						Promise.resolve(null)
					);
				}
				flush() {
					return Promise.resolve();
				}
				registerAuthId(t) {
					this.b.call("registerAuthId", {
						eventName: "registerAuthId",
						data: t,
					});
				}
				capture(t, e) {
					return (
						this.b
							.call("capture", { eventName: t, data: e })
							.then(
								void 0,
								(i) => `Failed to log telemetry: ${console.warn(i)}`,
							),
						Promise.resolve(null)
					);
				}
			};
		},
	});
function rA() {
	const t = w(2120, null, bo.nameLong),
		e = w(
			2121,
			null,
			"https://cursor.com/privacy",
			"https://cursor.com/security",
		),
		i = hr ? "" : w(2122, null);
	return `
${t} ${e} ${i}
`;
}
var Wh,
	nA = m({
		"out-build/vs/platform/telemetry/common/telemetryService.js"() {
			"use strict";
			F(),
				ns(),
				z(),
				Ft(),
				ve(),
				Ve(),
				Xr(),
				dc(),
				Ct(),
				Gs(),
				St(),
				Dn(),
				(Wh = class {
					static {
						this.IDLE_START_EVENT_NAME = "UserIdleStart";
					}
					static {
						this.IDLE_STOP_EVENT_NAME = "UserIdleStop";
					}
					constructor(e, i, s) {
						(this.k = i),
							(this.l = s),
							(this.d = {}),
							(this.i = new De()),
							(this.j = []),
							(this.b = e.appenders),
							(this.c = e.commonProperties ?? Object.create(null)),
							(this.sessionId = this.c.sessionID),
							(this.machineId = this.c["common.machineId"]),
							(this.macMachineId = this.c["common.macMachineId"]),
							(this.sqmId = this.c["common.sqmId"]),
							(this.devDeviceId = this.c["common.devDeviceId"]),
							(this.firstSessionDate = this.c["common.firstSessionDate"]),
							(this.msftInternal = this.c["common.msftInternal"]),
							(this.f = e.piiPaths || []),
							(this.g = 3),
							(this.h = !!e.sendErrorTelemetry),
							(this.j = [/(vscode-)?file:\/\/\/.*?\/resources\/app\//gi]);
						for (const r of this.f)
							this.j.push(new RegExp(Na(r), "gi")),
								r.indexOf("\\") >= 0 &&
									this.j.push(new RegExp(Na(r.replace(/\\/g, "/")), "gi"));
						this.m(),
							this.i.add(
								this.k.onDidChangeConfiguration((r) => {
									(r.affectsConfiguration(Fu) ||
										r.affectsConfiguration(d1) ||
										r.affectsConfiguration(h1)) &&
										this.m();
								}),
							);
					}
					setExperimentProperty(e, i) {
						this.d[e] = i;
					}
					m() {
						let e = _m(this.k);
						const i = this.l.enabledTelemetryLevels;
						if (i) {
							this.h = this.sendErrorTelemetry ? i.error : !1;
							const s = i.usage ? 3 : i.error ? 2 : 0;
							e = Math.min(e, s);
						}
						this.g = e;
					}
					get sendErrorTelemetry() {
						return this.h;
					}
					get telemetryLevel() {
						return this.g;
					}
					dispose() {
						this.i.dispose();
					}
					n(e, i, s) {
						this.g < i ||
							((s = wc(s, this.d)),
							(s = H5(s, this.j)),
							(s = wc(s, this.c)),
							this.b.forEach((r) => r.log(e, s)));
					}
					o(e, i, s) {
						this.g < i ||
							((s = wc(s, this.d)),
							(s = H5(s, this.j)),
							(s = wc(s, this.c)),
							this.b.forEach((r) => {
								r.capture(e, s);
							}));
					}
					registerAuthId(e) {
						this.b.forEach((i) => i.registerAuthId(e));
					}
					publicLog(e, i) {
						this.n(e, 3, i);
					}
					publicLog2(e, i) {
						this.publicLog(e, i);
					}
					publicLogError(e, i) {
						this.h && this.n(e, 2, i);
					}
					publicLogError2(e, i) {
						this.publicLogError(e, i);
					}
					publicLogCapture(e, i) {
						this.o(e, 3, i);
					}
				}),
				(Wh = __decorate([__param(1, He), __param(2, tt)], Wh)),
				zt
					.as(Pi.Configuration)
					.registerConfiguration({
						id: Zb,
						order: 1,
						type: "object",
						title: "Crash Reporting",
						properties: {
							[Fu]: {
								type: "string",
								enum: ["all", "off"],
								enumDescriptions: [
									"Send OS-level crash reports.",
									"Disable crash reporting.",
								],
								markdownDescription: rA(),
								default: "all",
								restricted: !0,
								scope: 1,
							},
						},
					});
		},
	}),
	Y5,
	oA = m({
		"out-build/vs/platform/update/common/updateIpc.js"() {
			"use strict";
			q(),
				F(),
				Cr(),
				(Y5 = class {
					constructor(t) {
						this.a = t;
					}
					listen(t, e) {
						switch (e) {
							case "onStateChange":
								return this.a.onStateChange;
						}
						throw new Error(`Event not found: ${e}`);
					}
					call(t, e, i) {
						switch (e) {
							case "checkForUpdates":
								return this.a.checkForUpdates(i);
							case "downloadUpdate":
								return this.a.downloadUpdate();
							case "applyUpdate":
								return this.a.applyUpdate();
							case "quitAndInstall":
								return this.a.quitAndInstall();
							case "_getInitialState":
								return Promise.resolve(this.a.state);
							case "isLatestVersion":
								return this.a.isLatestVersion();
							case "_applySpecificUpdate":
								return this.a._applySpecificUpdate(i);
						}
						throw new Error(`Call not found: ${e}`);
					}
				});
		},
	});
import * as Q5 from "original-fs";
import aA from "path";
import cA from "os";
var qo,
	Mm = m({
		"out-build/vs/platform/update/electron-main/abstractUpdateService.js"() {
			"use strict";
			ae(),
				Mt(),
				q(),
				Ve(),
				bt(),
				ot(),
				Q(),
				Ct(),
				bn(),
				Cr(),
				(qo = class {
					get state() {
						return this.c;
					}
					f(e) {
						this.k.info("update#setState", e.type),
							(this.c = e),
							this.d.fire(e);
					}
					constructor(e, i, s, r, n, o) {
						(this.g = e),
							(this.h = i),
							(this.i = s),
							(this.j = r),
							(this.k = n),
							(this.l = o),
							(this.c = me.Uninitialized),
							(this.d = new $()),
							(this.onStateChange = this.d.event),
							e.when(3).finally(() => this.m());
					}
					async m() {
						if (!this.i.isBuilt) {
							this.f(me.Disabled(0));
							return;
						}
						if (this.i.disableUpdates) {
							this.f(me.Disabled(1)),
								this.k.info(
									"update#ctor - updates are disabled by the environment",
								);
							return;
						}
						if (!this.l.updateUrl || !this.l.commit) {
							this.f(me.Disabled(3)),
								this.k.info(
									"update#ctor - updates are disabled as there is no update URL",
								);
							return;
						}
						const e = this.h.getValue("update.mode"),
							i = this.n(e);
						if (!i) {
							this.f(me.Disabled(2)),
								this.k.info(
									"update#ctor - updates are disabled by user preference",
								);
							return;
						}
						if (((this.a = this.x(i, !1)), !this.a)) {
							this.f(me.Disabled(4)),
								this.k.info(
									"update#ctor - updates are disabled as the update URL is badly formed",
								);
							return;
						}
						if (this.h.getValue("_update.prss")) {
							const s = new URL(this.a);
							s.searchParams.set("prss", "true"), (this.a = s.toString());
						}
						if ((this.f(me.Idle(this.r())), e === "manual")) {
							this.k.info(
								"update#ctor - manual checks only; automatic updates are disabled by user preference",
							);
							return;
						}
						e === "start"
							? (this.k.info(
									"update#ctor - startup checks only; automatic updates are disabled by user preference",
								),
								setTimeout(() => this.checkForUpdates(!1), 30 * 1e3))
							: this.o(30 * 1e3).then(void 0, (s) => this.k.error(s));
					}
					n(e) {
						return e === "none" ? void 0 : this.l.quality;
					}
					o(e = 60 * 60 * 1e3) {
						return Ai(e)
							.then(() => this.checkForUpdates(!1))
							.then(() => this.o(60 * 60 * 1e3));
					}
					async checkForUpdates(e) {
						this.k.trace("update#checkForUpdates, state = ", this.state.type),
							this.state.type === "idle" && this.y(e);
					}
					async downloadUpdate() {
						this.k.trace("update#downloadUpdate, state = ", this.state.type),
							this.state.type === "available for download" &&
								(await this.p(this.state));
					}
					async p(e) {}
					async applyUpdate() {
						this.k.trace("update#applyUpdate, state = ", this.state.type),
							this.state.type === "downloaded" && (await this.q());
					}
					async q() {}
					quitAndInstall() {
						return (
							this.k.trace("update#quitAndInstall, state = ", this.state.type),
							this.state.type !== "ready" ||
								(this.k.trace(
									"update#quitAndInstall(): before lifecycle quit()",
								),
								this.g.quit(!0).then((e) => {
									this.k.trace(
										`update#quitAndInstall(): after lifecycle quit() with veto: ${e}`,
									),
										!e &&
											(this.k.trace(
												"update#quitAndInstall(): running raw#quitAndInstall()",
											),
											this.s());
								})),
							Promise.resolve(void 0)
						);
					}
					async isLatestVersion() {
						if (!this.a) return;
						if (this.h.getValue("update.mode") === "none") return !1;
						for (const i of [this.a])
							if (i)
								try {
									const s = await this.j.request({ url: i }, Ge.None);
									if (!ym(s))
										throw new Error("Server returned " + s.res.statusCode);
									return s.res.statusCode === 204;
								} catch (s) {
									this.k.error(
										"update#isLatestVersion(): failed to check for updates",
									),
										this.k.error(s);
									return;
								}
					}
					async _applySpecificUpdate(e) {}
					r() {
						return 1;
					}
					s() {}
					t(e, i, s, r = !1) {
						const n = s.nameShort.replace(/ /g, "-").toLowerCase(),
							o = `${s.updateUrl}/api/update/${e}/${n}/${s.version}/${this.b}`;
						return this.k.info("updateURL", o), o;
					}
					u() {
						try {
							Q5.writeFileSync(this.w(), "1");
						} catch (e) {
							this.k.error("Failed to write shouldUpdate file", e);
						}
					}
					v() {
						try {
							Q5.unlinkSync(this.w());
						} catch (e) {
							this.k.error("Failed to remove shouldUpdate file", e);
						}
					}
					w() {
						const e = this.l.dataFolderName ?? ".cursor";
						return aA.join(cA.homedir(), e, "shouldUpdate");
					}
				}),
				(qo = __decorate(
					[
						__param(0, Ne),
						__param(1, He),
						__param(2, ut),
						__param(3, yn),
						__param(4, G),
						__param(5, tt),
					],
					qo,
				));
		},
	});
import * as Pn from "electron";
var _r,
	lA = m({
		"out-build/vs/platform/update/electron-main/updateService.darwin.js"() {
			"use strict";
			Zr(),
				q(),
				Qs(),
				F(),
				Ve(),
				bt(),
				ot(),
				Q(),
				Ct(),
				bn(),
				St(),
				Cr(),
				Mm(),
				(_r = class extends qo {
					get A() {
						return x.fromNodeEventEmitter(Pn.autoUpdater, "error", (e, i) => i);
					}
					get B() {
						return x.fromNodeEventEmitter(
							Pn.autoUpdater,
							"update-not-available",
						);
					}
					get C() {
						return x.fromNodeEventEmitter(Pn.autoUpdater, "update-available");
					}
					get D() {
						return x.fromNodeEventEmitter(
							Pn.autoUpdater,
							"update-downloaded",
							(e, i, s, r) => ({ version: s, productVersion: s, timestamp: r }),
						);
					}
					constructor(e, i, s, r, n, o, a, c) {
						super(i, s, n, o, a, c),
							(this.b = e),
							(this.G = r),
							(this.z = new De()),
							(this.E = !1),
							i.setRelaunchHandler(this);
					}
					handleRelaunch(e) {
						return e?.addArgs || e?.removeArgs || this.state.type !== "ready"
							? !1
							: (this.k.trace(
									"update#handleRelaunch(): running raw#quitAndInstall()",
								),
								this.s(),
								!0);
					}
					async m() {
						await super.m(),
							this.A(this.I, this, this.z),
							this.C(this.L, this, this.z),
							this.D(this.M, this, this.z),
							this.B(this.N, this, this.z);
					}
					I(e) {
						this.k.info("UpdateService onError()"),
							this.E ||
								this.G.publicLog2("update:error", {
									messageHash: String(Ss(String(e))),
								}),
							this.k.error(
								"UpdateService (using backup url: " + this.E + ") error:",
								e,
							);
						const i =
							this.state.type === "checking for updates" && this.state.explicit
								? e
								: void 0;
						this.f(me.Idle(1, i));
					}
					x(e, i = !1) {
						let s;
						this.l.darwinUniversalAssetId
							? (s = this.l.darwinUniversalAssetId)
							: (s = process.arch === "x64" ? "darwin" : "darwin-arm64");
						const r = this.t(s, e, this.l, i);
						if (i) return r;
						try {
							Pn.autoUpdater.setFeedURL({ url: r });
						} catch (n) {
							this.k.error("Failed to set update feed URL", n);
							return;
						}
						return r;
					}
					y(e) {
						this.f(me.CheckingForUpdates(e)), Pn.autoUpdater.checkForUpdates();
					}
					L() {
						this.k.info("UpdateService onUpdateAvailable()"),
							this.state.type === "checking for updates" &&
								this.f(me.Downloading);
					}
					M(e) {
						this.k.info("UpdateService onUpdateDownloaded()"),
							this.state.type === "downloading" &&
								(this.f(me.Downloaded(e)),
								this.u(),
								this.G.publicLog2("update:downloaded", { version: e.version }),
								this.f(me.Ready(e)));
					}
					N() {
						this.k.info("UpdateService onUpdateNotAvailable()"),
							this.state.type === "checking for updates" &&
								(this.G.publicLog2("update:notAvailable", {
									explicit: this.state.explicit,
								}),
								this.f(me.Idle(1)));
					}
					s() {
						this.k.info("UpdateService doQuitAndInstall()"),
							this.k.trace(
								"update#quitAndInstall(): running raw#quitAndInstall()",
							),
							this.v(),
							Pn.autoUpdater.quitAndInstall();
					}
					dispose() {
						this.z.dispose();
					}
				}),
				__decorate([de], _r.prototype, "A", null),
				__decorate([de], _r.prototype, "B", null),
				__decorate([de], _r.prototype, "C", null),
				__decorate([de], _r.prototype, "D", null),
				(_r = __decorate(
					[
						__param(1, Ne),
						__param(2, He),
						__param(3, It),
						__param(4, ut),
						__param(5, yn),
						__param(6, G),
						__param(7, tt),
					],
					_r,
				));
		},
	});
import { spawn as uA } from "node:child_process";
import { tmpdir as hA } from "os";
var jh,
	dA = m({
		"out-build/vs/platform/update/electron-main/updateService.linux.js"() {
			"use strict";
			Mt(),
				Ve(),
				bt(),
				ot(),
				Q(),
				Oc(),
				Ct(),
				bn(),
				Cr(),
				St(),
				Mm(),
				ge(),
				yt(),
				(jh = class extends qo {
					constructor(e, i, s, r, n, o, a, c, l) {
						super(i, s, n, o, a, l),
							(this.b = e),
							(this.A = r),
							(this.B = c),
							i.setRelaunchHandler(this);
					}
					x(e, i = !1) {
						return this.t(`linux-${process.arch}`, e, this.l, i);
					}
					D() {
						return process.env.APPIMAGE !== void 0;
					}
					handleRelaunch(e) {
						return e?.addArgs || e?.removeArgs || this.state.type !== "ready"
							? !1
							: (this.k.trace(
									"update#handleRelaunch(): running raw#quitAndInstall()",
								),
								this.D()
									? (this.s(), !0)
									: (this.k.info(
											"Not running in an appimage; cannot auto-update",
										),
										!1));
					}
					async E(e, i) {
						try {
							const s = await this.j.request({ url: i }, Ge.None),
								r = await P5(s);
							return !r || !r.url || !r.version || !r.productVersion
								? (this.A.publicLog2("update:notAvailable", { explicit: !!e }),
									this.f(me.Idle(1)),
									!1)
								: ((this.a = i),
									this.D()
										? (this.f(me.Ready(r)), this.u())
										: this.f(me.AvailableForDownload(r)),
									!0);
						} catch (s) {
							this.k.error(s);
							const r = e ? s.message || s : void 0;
							return this.f(me.Idle(1, r)), !1;
						}
					}
					async y(e) {
						this.k.debug("UpdateService: doCheckForUpdates"),
							this.f(me.CheckingForUpdates(e));
						for (const i of [this.a])
							if (i)
								try {
									if (await this.E(e, i)) return;
								} catch (s) {
									this.k.error("Failed to check for updates:", s);
								}
					}
					async p(e) {
						this.l.downloadUrl && this.l.downloadUrl.length > 0
							? this.B.openExternal(void 0, this.l.downloadUrl)
							: e.update.url && this.B.openExternal(void 0, e.update.url),
							this.f(me.Idle(1));
					}
					s() {
						if (this.state.type !== "ready") {
							this.k.info("update#quitAndInstall(): Not ready; skippingupdate");
							return;
						}
						if (process.env.APPIMAGE !== void 0) {
							const e = process.env.APPIMAGE;
							this.k.debug(
								"update#quitAndInstall(): updating appImmage at " + e,
							);
							const i = M(process.resourcesPath, "appimageupdatetool.AppImage");
							ee.exists(i)
								.then((s) => {
									let r;
									if (s) r = `${i} -O ${e}; ${e} &`;
									else {
										let n,
											o,
											a = "dev";
										this.l.applicationName === "cursor" && (a = "production"),
											this.l.applicationName === "cursor-lab" && (a = "lab"),
											this.l.applicationName === "cursor-nightly" &&
												(a = "nightly"),
											this.l.applicationName === "cursor-profiler" &&
												(a = "perf"),
											process.arch === "arm64" || process.arch === "arm"
												? ((n =
														"https://downloads.cursor.com/production/appimageupdatetool/linux/arm64/appimageupdatetool_arm64.AppImage"),
													(o = `zsync|https://downloads.cursor.com/${a}/client/linux/arm64/appimage/cursor-latest.appimage.zsync`))
												: ((n =
														"https://downloads.cursor.com/production/appimageupdatetool/linux/x64/appimageupdatetool_x64.AppImage"),
													(o = `zsync|https://downloads.cursor.com/${a}/client/linux/x64/appimage/cursor-latest.appimage.zsync`));
										const c = Date.now();
										let l = M(hA(), `appimageupdatetool_${c}.AppImage`);
										r = `curl -L "${n}" -o "${l}"; chmod +x "${l}"; ${l} -u "${o}" -O "${e}"; ${e} &`;
									}
									this.v(),
										this.k.info(
											"update#quitAndInstall(): starting updater with command " +
												r,
										),
										uA(r, { detached: !0, stdio: "inherit", shell: !0 });
								})
								.catch((s) => {
									this.k.error(
										s,
										"update#quitAndInstall(): error checking to see if appimageupdatetoolPath exists",
									);
								});
							return;
						}
						this.k.info(
							"update#quitAndInstall(): Unsupported installer type; skipping update",
						);
					}
				}),
				(jh = __decorate(
					[
						__param(1, Ne),
						__param(2, He),
						__param(3, It),
						__param(4, ut),
						__param(5, yn),
						__param(6, G),
						__param(7, Ir),
						__param(8, tt),
					],
					jh,
				));
		},
	});
import { spawn as fA } from "child_process";
import { realpath as pA, watch as mA } from "fs";
var Th,
	Uh,
	gA = m({
		"out-build/vs/platform/update/electron-main/updateService.snap.js"() {
			"use strict";
			ae(),
				q(),
				ge(),
				bt(),
				ot(),
				Q(),
				St(),
				Cr(),
				(Th = class {
					get state() {
						return this.a;
					}
					d(e) {
						this.g.info("update#setState", e.type),
							(this.a = e),
							this.b.fire(e);
					}
					constructor(e, i, s) {
						if (
							((this.f = e),
							(this.g = s),
							(this.a = me.Uninitialized),
							(this.b = new $()),
							(this.onStateChange = this.b.event),
							i.disableUpdates)
						) {
							this.g.info("update#ctor - updates are disabled");
							return;
						}
						this.d(me.Idle(this.k())),
							this.h(30 * 1e3).then(void 0, (r) => this.g.error(r));
					}
					h(e = 60 * 60 * 1e3) {
						return Ai(e)
							.then(() => this.checkForUpdates(!1))
							.then(() => this.h(60 * 60 * 1e3));
					}
					async checkForUpdates(e) {
						this.g.trace("update#checkForUpdates, state = ", this.state.type),
							this.state.type === "idle" && this.m(e);
					}
					async downloadUpdate() {
						this.g.trace("update#downloadUpdate, state = ", this.state.type),
							this.state.type === "available for download" &&
								(await this.i(this.state));
					}
					i(e) {
						return Promise.resolve(void 0);
					}
					async applyUpdate() {
						this.g.trace("update#applyUpdate, state = ", this.state.type),
							this.state.type === "downloaded" && (await this.j());
					}
					j() {
						return Promise.resolve(void 0);
					}
					quitAndInstall() {
						return (
							this.g.trace("update#quitAndInstall, state = ", this.state.type),
							this.state.type !== "ready" ||
								(this.g.trace(
									"update#quitAndInstall(): before lifecycle quit()",
								),
								this.f.quit(!0).then((e) => {
									this.g.trace(
										`update#quitAndInstall(): after lifecycle quit() with veto: ${e}`,
									),
										!e &&
											(this.g.trace(
												"update#quitAndInstall(): running raw#quitAndInstall()",
											),
											this.l());
								})),
							Promise.resolve(void 0)
						);
					}
					k() {
						return 2;
					}
					l() {}
					async _applySpecificUpdate(e) {}
				}),
				(Th = __decorate([__param(0, Ne), __param(1, ut), __param(2, G)], Th)),
				(Uh = class extends Th {
					constructor(e, i, s, r, n, o) {
						super(s, r, n), (this.o = e), (this.p = i), (this.q = o);
						const a = mA(Ke(this.o)),
							c = x.fromNodeEventEmitter(a, "change", (f, p) => p),
							l = x.filter(c, (f) => f === "current"),
							d = x.debounce(
								l,
								(f, p) => p,
								2e3,
							)(() => this.checkForUpdates(!1));
						s.onWillShutdown(() => {
							d.dispose(), a.close();
						});
					}
					m() {
						this.d(me.CheckingForUpdates(!1)),
							this.u().then(
								(e) => {
									e
										? this.d(me.Ready({ version: "something" }))
										: (this.q.publicLog2("update:notAvailable", {
												explicit: !1,
											}),
											this.d(me.Idle(2)));
								},
								(e) => {
									this.g.error(e),
										this.q.publicLog2("update:notAvailable", { explicit: !1 }),
										this.d(me.Idle(2, e.message || e));
								},
							);
					}
					l() {
						this.g.trace(
							"update#quitAndInstall(): running raw#quitAndInstall()",
						),
							fA("sleep 3 && " + Te(process.argv[0]), {
								shell: !0,
								detached: !0,
								stdio: "ignore",
							});
					}
					async u() {
						const e = await new Promise((s, r) =>
								pA(`${Ke(this.o)}/current`, (n, o) => (n ? r(n) : s(o))),
							),
							i = Te(e);
						return this.p !== i;
					}
					isLatestVersion() {
						return this.u().then(void 0, (e) => {
							this.g.error(
								"update#checkForSnapUpdate(): Could not get realpath of application.",
							);
						});
					}
				}),
				(Uh = __decorate(
					[__param(2, Ne), __param(3, ut), __param(4, G), __param(5, It)],
					Uh,
				));
		},
	});
import * as wA from "crypto";
import * as vA from "fs";
async function yA(t, e) {
	if (
		(await new Promise((r, n) => {
			const o = vA.createReadStream(t),
				a = wA.createHash("sha256");
			o.pipe(a);
			const c = Ol((l, u) => {
				o.removeAllListeners(), a.removeAllListeners(), l ? n(l) : r(u);
			});
			o.once("error", c),
				o.once("end", c),
				a.once("error", c),
				a.once("data", (l) => c(void 0, l.toString("hex")));
		})) !== e
	)
		throw new Error("Hash mismatch");
}
var bA = m({
	"out-build/vs/base/node/crypto.js"() {
		"use strict";
		Ll();
	},
});
import { spawn as Fm } from "child_process";
import * as qh from "fs";
import { tmpdir as EA } from "os";
async function SA(t, e = 1e3) {
	for (; !t(); ) await Ai(e);
}
function $n() {
	if (typeof Bh > "u") {
		const e = [
			M(Ke(process.execPath), "unins000.exe"),
			M(Ke(process.execPath), "Uninstall Cursor.exe"),
			M(Ke(process.execPath), "Uninstall Cursor Nightly.exe"),
			M(Ke(process.execPath), "Uninstall Cursor Lab.exe"),
		].find((i) => {
			try {
				return qh.existsSync(i);
			} catch {
				return !1;
			}
		});
		(zh = e?.includes("Uninstall Cursor")), (Bh = e ? 0 : 1);
	}
	return Bh;
}
var Bh,
	zh,
	Uc,
	kA = m({
		"out-build/vs/platform/update/electron-main/updateService.win32.js"() {
			"use strict";
			ae(),
				Mt(),
				Zr(),
				Qs(),
				ge(),
				ie(),
				bA(),
				yt(),
				Ve(),
				bt(),
				Be(),
				ot(),
				Q(),
				Oc(),
				Ct(),
				bn(),
				St(),
				Cr(),
				Mm(),
				(Bh = void 0),
				(zh = void 0),
				(Uc = class extends qo {
					get cachePath() {
						const e = Math.random().toString(36).substring(2, 15),
							i = M(
								EA(),
								`vscode-${this.l.quality}-${this.l.target}-${process.arch}-${e}`,
							);
						return qh.promises.mkdir(i, { recursive: !0 }).then(() => i);
					}
					constructor(e, i, s, r, n, o, a, c, l, u) {
						super(i, s, n, o, a, u),
							(this.b = e),
							(this.B = r),
							(this.C = c),
							(this.D = l),
							i.setRelaunchHandler(this);
					}
					handleRelaunch(e) {
						return e?.addArgs ||
							e?.removeArgs ||
							this.state.type !== "ready" ||
							!this.z
							? !1
							: (this.k.trace(
									"update#handleRelaunch(): running raw#quitAndInstall()",
								),
								this.s(),
								!0);
					}
					async m() {
						if (this.l.target === "user" && (await this.D.isAdmin(void 0))) {
							this.f(me.Disabled(5)),
								this.k.info(
									"update#ctor - updates are disabled due to running as Admin in user setup",
								);
							return;
						}
						await super.m();
					}
					x(e, i = !1) {
						let s = `win32-${process.arch}`;
						return (
							$n() === 1
								? (s += "-archive")
								: this.l.target === "user" && (s += "-user"),
							this.t(s, e, this.l, i)
						);
					}
					y(e) {
						this.a &&
							(this.f(me.CheckingForUpdates(e)),
							this.j
								.request({ url: this.a }, Ge.None)
								.then(P5)
								.then((i) => {
									const s = $n();
									return !i || !i.url || !i.version || !i.productVersion
										? (this.B.publicLog2("update:notAvailable", {
												explicit: !!e,
											}),
											this.f(me.Idle(s)),
											Promise.resolve(null))
										: s === 1
											? (this.f(me.AvailableForDownload(i)),
												Promise.resolve(null))
											: (this.f(me.Downloading),
												this.J(i.version).then(() =>
													this.I(i.version)
														.then((r) =>
															ee.exists(r).then((n) => {
																if (n) return Promise.resolve(r);
																const o = `${r}.tmp`;
																return this.j
																	.request({ url: i.url }, Ge.None)
																	.then((a) => {
																		if (!ym(a))
																			throw new Error(
																				"Server returned " + a.res.statusCode,
																			);
																		if (D5(a))
																			throw new Error(
																				"Server returned no content",
																			);
																		return a;
																	})
																	.then((a) =>
																		this.C.writeFile(P.file(o), a.stream),
																	)
																	.then(
																		i.sha256hash
																			? () => yA(o, i.sha256hash)
																			: () => {},
																	)
																	.then(() => ee.rename(o, r, !1))
																	.then(() => r);
															}),
														)
														.then((r) => {
															(this.z = { packagePath: r }),
																this.f(me.Downloaded(i)),
																this.u(),
																this.h.getValue(
																	"update.enableWindowsBackgroundUpdates",
																) && !zh
																	? this.l.target === "user" && this.q()
																	: this.f(me.Ready(i));
														}),
												));
								})
								.catch((i) => {
									this.B.publicLog2("update:error", {
										messageHash: String(Ss(String(i))),
									}),
										this.k.error(i);
									const s = e ? i.message || i : void 0;
									this.f(me.Idle($n(), s));
								}));
					}
					async p(e) {
						e.update.url && this.D.openExternal(void 0, e.update.url),
							this.f(me.Idle($n()));
					}
					async I(e) {
						const i = await this.cachePath;
						return M(i, `CodeSetup-${this.l.quality}-${e}.exe`);
					}
					async J(e = null) {
						const i = e
								? (o) => !new RegExp(`${this.l.quality}-${e}\\.exe$`).test(o)
								: () => !0,
							s = await this.cachePath,
							n = (await ee.readdir(s)).filter(i).map(async (o) => {
								try {
									await qh.promises.unlink(M(s, o));
								} catch {}
							});
						await Promise.all(n);
					}
					async q() {
						if (this.state.type !== "downloaded" || !this.z)
							return Promise.resolve(void 0);
						const e = this.state.update;
						this.f(me.Updating(e));
						const i = await this.cachePath;
						(this.z.updateFilePath = M(
							i,
							`CodeSetup-${this.l.quality}-${e.version}.flag`,
						)),
							await ee.writeFile(this.z.updateFilePath, "flag"),
							Fm(
								this.z.packagePath,
								[
									"/verysilent",
									"/log",
									`/update="${this.z.updateFilePath}"`,
									"/nocloseapplications",
									"/mergetasks=runcode,!desktopicon,!quicklaunchicon",
								],
								{
									detached: !0,
									stdio: ["ignore", "ignore", "ignore"],
									windowsVerbatimArguments: !0,
								},
							).once("exit", () => {
								(this.z = void 0), this.f(me.Idle($n()));
							});
						const r = `${this.l.win32MutexName}-ready`,
							n = await import("@vscode/windows-mutex");
						SA(() => n.isActive(r)).then(() => this.f(me.Ready(e)));
					}
					s() {
						if (!(this.state.type !== "ready" || !this.z))
							if (
								(this.v(),
								this.k.trace(
									"update#quitAndInstall(): running raw#quitAndInstall()",
								),
								this.z.updateFilePath)
							)
								qh.unlinkSync(this.z.updateFilePath);
							else {
								if (this.M(this.z.packagePath)) return;
								Fm(
									this.z.packagePath,
									[
										"/silent",
										"/log",
										"/mergetasks=runcode,!desktopicon,!quicklaunchicon",
									],
									{ detached: !0, stdio: ["ignore", "ignore", "ignore"] },
								);
							}
					}
					M(e) {
						if (($n(), !zh)) return !1;
						const i = Fm(
							e,
							[
								"/silent",
								"/log",
								"/mergetasks=runcode,!desktopicon,!quicklaunchicon",
							],
							{
								detached: !0,
								stdio: ["ignore", "ignore", "ignore"],
								windowsVerbatimArguments: !0,
							},
						);
						return this.g.quit(), !0;
					}
					r() {
						return $n();
					}
					async _applySpecificUpdate(e) {
						if (this.state.type !== "idle") return;
						const i = this.h.getValue("update.enableWindowsBackgroundUpdates"),
							s = { version: "unknown", productVersion: "unknown" };
						this.f(me.Downloading),
							(this.z = { packagePath: e }),
							this.f(me.Downloaded(s)),
							i ? this.l.target === "user" && this.q() : this.f(me.Ready(s));
					}
				}),
				__decorate([de], Uc.prototype, "cachePath", null),
				(Uc = __decorate(
					[
						__param(1, Ne),
						__param(2, He),
						__param(3, It),
						__param(4, ut),
						__param(5, yn),
						__param(6, G),
						__param(7, nt),
						__param(8, Ir),
						__param(9, tt),
					],
					Uc,
				));
		},
	}),
	Z5,
	e6,
	xA = m({
		"out-build/vs/platform/url/common/urlIpc.js"() {
			"use strict";
			ie(),
				(Z5 = class {
					constructor(t) {
						this.a = t;
					}
					handleURL(t, e) {
						return this.a.call("handleURL", [t.toJSON(), e]);
					}
				}),
				(e6 = class {
					constructor(t, e) {
						(this.a = t), (this.b = e);
					}
					async routeCall(t, e, i, s) {
						if (e !== "handleURL") throw new Error(`Call not found: ${e}`);
						if (Array.isArray(i) && i.length > 0) {
							const r = P.revive(i[0]);
							if (
								(this.b.trace(
									"URLHandlerRouter#routeCall() with URI argument",
									r.toString(!0),
								),
								r.query)
							) {
								const n = /\bwindowId=(\d+)/.exec(r.query);
								if (n) {
									const o = n[1];
									this.b.trace(
										`URLHandlerRouter#routeCall(): found windowId query parameter with value "${o}"`,
										r.toString(!0),
									);
									const a = new RegExp(`window:${o}`),
										c = t.connections.find(
											(l) => (
												this.b.trace(
													"URLHandlerRouter#routeCall(): testing connection",
													l.ctx,
												),
												a.test(l.ctx)
											),
										);
									if (c)
										return (
											this.b.trace(
												"URLHandlerRouter#routeCall(): found a connection to route",
												r.toString(!0),
											),
											c
										);
									this.b.trace(
										"URLHandlerRouter#routeCall(): did not find a connection to route",
										r.toString(!0),
									);
								} else
									this.b.trace(
										"URLHandlerRouter#routeCall(): did not find windowId query parameter",
										r.toString(!0),
									);
							}
						} else
							this.b.trace("URLHandlerRouter#routeCall() without URI argument");
						return this.a.routeCall(t, e, i, s);
					}
					routeEvent(t, e) {
						throw new Error(`Event not found: ${e}`);
					}
				});
		},
	}),
	t6,
	Hh,
	DA = m({
		"out-build/vs/platform/url/common/urlService.js"() {
			"use strict";
			ae(),
				F(),
				ie(),
				Ct(),
				(t6 = class extends j {
					constructor() {
						super(...arguments), (this.a = new Set());
					}
					open(t, e) {
						const i = [...this.a.values()];
						return TS(
							i.map((s) => () => s.handleURL(t, e)),
							void 0,
							!1,
						).then((s) => s || !1);
					}
					registerHandler(t) {
						return this.a.add(t), ke(() => this.a.delete(t));
					}
				}),
				(Hh = class extends t6 {
					constructor(e) {
						super(), (this.b = e);
					}
					create(e) {
						let {
							authority: i,
							path: s,
							query: r,
							fragment: n,
						} = e || {
							authority: void 0,
							path: void 0,
							query: void 0,
							fragment: void 0,
						};
						return (
							i && s && s.indexOf("/") !== 0 && (s = `/${s}`),
							P.from({
								scheme: this.b.urlProtocol,
								authority: i,
								path: s,
								query: r,
								fragment: n,
							})
						);
					}
				}),
				(Hh = __decorate([__param(0, tt)], Hh));
		},
	});
import { app as i6 } from "electron";
var s6,
	PA = m({
		"out-build/vs/platform/url/electron-main/electronUrlListener.js"() {
			"use strict";
			ae(),
				q(),
				F(),
				z(),
				ie(),
				(s6 = class extends j {
					constructor(t, e, i, s, r, n) {
						if (
							(super(),
							(this.c = e),
							(this.f = n),
							(this.a = []),
							(this.b = 0),
							t &&
								(n.trace(
									"ElectronURLListener initialUrisToHandle:",
									t.map((c) => c.originalUrl),
								),
								(this.a = t)),
							T)
						) {
							const c = s.isBuilt ? [] : [`"${s.appRoot}"`];
							c.push("--open-url", "--"),
								i6.setAsDefaultProtocolClient(
									r.urlProtocol,
									process.execPath,
									c,
								);
						}
						const o = x.map(
							x.fromNodeEventEmitter(i6, "open-url", (c, l) => ({
								event: c,
								url: l,
							})),
							({ event: c, url: l }) => (c.preventDefault(), l),
						);
						this.D(
							o((c) => {
								const l = this.g(c);
								l && this.c.open(l, { originalUrl: c });
							}),
						),
							i.getWindows().filter((c) => c.isReady).length > 0
								? (n.trace(
										"ElectronURLListener: window is ready to handle URLs",
									),
									this.h())
								: (n.trace(
										"ElectronURLListener: waiting for window to be ready to handle URLs...",
									),
									this.D(x.once(i.onDidSignalReadyWindow)(() => this.h())));
					}
					g(t) {
						try {
							return P.parse(t);
						} catch {
							return;
						}
					}
					async h() {
						if (this.b++ > 10) {
							this.f.trace(
								"ElectronURLListener#flush(): giving up after 10 retries",
							);
							return;
						}
						this.f.trace("ElectronURLListener#flush(): flushing URLs");
						const t = [];
						for (const e of this.a)
							(await this.c.open(e.uri, { originalUrl: e.originalUrl }))
								? this.f.trace(
										"ElectronURLListener#flush(): URL was handled",
										e.originalUrl,
									)
								: (this.f.trace(
										"ElectronURLListener#flush(): URL was not yet handled",
										e.originalUrl,
									),
									t.push(e));
						t.length !== 0 && ((this.a = t), jS(() => this.h(), 500, this.B));
					}
				});
		},
	}),
	Nm,
	$A = m({
		"out-build/vs/platform/webview/common/webviewManagerService.js"() {
			"use strict";
			Y(), (Nm = B("webviewManagerService"));
		},
	});
import { protocol as AA } from "electron";
var r6,
	IA = m({
		"out-build/vs/platform/webview/electron-main/webviewProtocolProvider.js"() {
			"use strict";
			F(),
				Ce(),
				ie(),
				(r6 = class J3 extends j {
					static {
						this.a = new Map([
							["/index.html", "index.html"],
							["/fake.html", "fake.html"],
							["/service-worker.js", "service-worker.js"],
						]);
					}
					constructor() {
						super();
						const e = this.b.bind(this);
						AA.registerFileProtocol(R.vscodeWebview, e);
					}
					b(e, i) {
						try {
							const s = P.parse(e.url),
								r = J3.a.get(s.path);
							if (typeof r == "string") {
								const n = `vs/workbench/contrib/webview/browser/pre/${r}`,
									o = $t.asFileUri(n);
								return i({
									path: o.fsPath,
									headers: {
										...qa.getHeadersFromQuery(e.url),
										"Cross-Origin-Resource-Policy": "cross-origin",
									},
								});
							} else return i({ error: -10 });
						} catch {}
						return i({ error: -2 });
					}
				});
		},
	});
import { webContents as CA } from "electron";
var Vh,
	_A = m({
		"out-build/vs/platform/webview/electron-main/webviewMainService.js"() {
			"use strict";
			q(),
				F(),
				IA(),
				si(),
				(Vh = class extends j {
					constructor(e) {
						super(),
							(this.b = e),
							(this.a = this.D(new $())),
							(this.onFoundInFrame = this.a.event),
							this.D(new r6());
					}
					async setIgnoreMenuShortcuts(e, i) {
						let s;
						if (typeof e.windowId == "number") {
							const { windowId: r } = e,
								n = this.b.getWindowById(r);
							if (!n?.win) throw new Error(`Invalid windowId: ${r}`);
							s = n.win.webContents;
						} else {
							const { webContentsId: r } = e;
							if (((s = CA.fromId(r)), !s))
								throw new Error(`Invalid webContentsId: ${r}`);
						}
						s.isDestroyed() || s.setIgnoreMenuShortcuts(i);
					}
					async findInFrame(e, i, s, r) {
						const o = this.c(e, i);
						if (typeof o.findInFrame == "function") {
							o.findInFrame(s, { findNext: r.findNext, forward: r.forward });
							const a = (c, l) => {
								l.finalUpdate &&
									(this.a.fire(l), o.removeListener("found-in-frame", a));
							};
							o.on("found-in-frame", a);
						}
					}
					async stopFindInFrame(e, i, s) {
						const n = this.c(e, i);
						typeof n.stopFindInFrame == "function" &&
							n.stopFindInFrame(
								s.keepSelection ? "keepSelection" : "clearSelection",
							);
					}
					c(e, i) {
						const s = this.b.getWindowById(e.windowId);
						if (!s?.win) throw new Error(`Invalid windowId: ${e}`);
						const r = s.win.webContents.mainFrame.framesInSubtree.find(
							(n) => n.name === i,
						);
						if (!r) throw new Error(`Unknown frame: ${i}`);
						return r;
					}
				}),
				(Vh = __decorate([__param(0, _t)], Vh));
		},
	});
async function RA(t, e, i) {
	let s = (i && i.get("storage.serviceMachineId", -1)) || null;
	if (s) return s;
	try {
		const n = (await e.readFile(t.serviceMachineIdResource)).value.toString();
		s = Ik(n) ? n : null;
	} catch {
		s = null;
	}
	if (!s) {
		s = fi();
		try {
			await e.writeFile(t.serviceMachineIdResource, H.fromString(s));
		} catch {}
	}
	return i?.store("storage.serviceMachineId", s, -1, 1), s;
}
var OA = m({
	"out-build/vs/platform/externalServices/common/serviceMachineId.js"() {
		"use strict";
		Je(), Oi();
	},
});
async function LA(t, e, i, s, r, n) {
	const o = {
		"X-Market-Client-Id": `${Wm(t)} ${n6(t)}`,
		"User-Agent": `${Wm(t)} ${n6(t)} (${MA(t)})`,
	};
	if (z5(t, e) && _m(i) === 3) {
		const a = await RA(e, s, r);
		(o["X-Market-User-Id"] = a), (o[`${Wm(t)}-SessionId`] = n.machineId || a);
	}
	return o;
}
function Wm(t) {
	return t.extensionsGallery?.galleryId === "vscode" ||
		t.extensionsGallery?.galleryId === "cursor"
		? "VSCode"
		: "Cursor";
}
function n6(t) {
	return t.vscodeVersion;
}
function MA(t) {
	return t.extensionsGallery?.galleryId === "vscode" ||
		t.extensionsGallery?.galleryId === "cursor"
		? "Code"
		: t.nameShort;
}
var FA = m({
	"out-build/vs/platform/externalServices/common/marketplace.js"() {
		"use strict";
		OA(), Dn();
	},
});
function h(t, e) {
	if (mt(e)) {
		const i = jm[e];
		if (i === void 0)
			throw new Error(`${t} references an unknown codicon: ${e}`);
		e = i;
	}
	return (jm[t] = e), { id: t };
}
var jm,
	o6 = m({
		"out-build/vs/base/common/codiconsUtil.js"() {
			"use strict";
			Ie(), (jm = Object.create(null));
		},
	}),
	a6,
	NA = m({
		"out-build/vs/base/common/codiconsLibrary.js"() {
			"use strict";
			o6(),
				(a6 = {
					semantic: h("semantic", 62e3),
					githubCopilot: h("github-copilot", 62001),
					plusCircle: h("plus-circle", 62002),
					smileySad: h("smiley-sad", 62003),
					smileyHappy: h("smiley-happy", 62004),
					smileyMedium: h("smiley-medium", 62005),
					sparkleStrikethrough: h("sparkle-strikethrough", 62006),
					keyPlusSparkle: h("key-plus-sparkle", 62007),
					paperclip: h("paperclip", 60500),
					atSign: h("at-sign", 60501),
					image: h("image", 60502),
					logo: h("logo", 60503),
					sparkleTwo: h("sparkle-two", 60504),
					logoSlash: h("logo-slash", 60505),
					add: h("add", 6e4),
					plus: h("plus", 6e4),
					gistNew: h("gist-new", 6e4),
					repoCreate: h("repo-create", 6e4),
					lightbulb: h("lightbulb", 60001),
					lightBulb: h("light-bulb", 60001),
					repo: h("repo", 60002),
					repoDelete: h("repo-delete", 60002),
					gistFork: h("gist-fork", 60003),
					repoForked: h("repo-forked", 60003),
					gitPullRequest: h("git-pull-request", 60004),
					gitPullRequestAbandoned: h("git-pull-request-abandoned", 60004),
					recordKeys: h("record-keys", 60005),
					keyboard: h("keyboard", 60005),
					tag: h("tag", 60006),
					gitPullRequestLabel: h("git-pull-request-label", 60006),
					tagAdd: h("tag-add", 60006),
					tagRemove: h("tag-remove", 60006),
					person: h("person", 60007),
					personFollow: h("person-follow", 60007),
					personOutline: h("person-outline", 60007),
					personFilled: h("person-filled", 60007),
					gitBranch: h("git-branch", 60008),
					gitBranchCreate: h("git-branch-create", 60008),
					gitBranchDelete: h("git-branch-delete", 60008),
					sourceControl: h("source-control", 60008),
					mirror: h("mirror", 60009),
					mirrorPublic: h("mirror-public", 60009),
					star: h("star", 60010),
					starAdd: h("star-add", 60010),
					starDelete: h("star-delete", 60010),
					starEmpty: h("star-empty", 60010),
					comment: h("comment", 60011),
					commentAdd: h("comment-add", 60011),
					alert: h("alert", 60012),
					warning: h("warning", 60012),
					search: h("search", 60013),
					searchSave: h("search-save", 60013),
					logOut: h("log-out", 60014),
					signOut: h("sign-out", 60014),
					logIn: h("log-in", 60015),
					signIn: h("sign-in", 60015),
					eye: h("eye", 60016),
					eyeUnwatch: h("eye-unwatch", 60016),
					eyeWatch: h("eye-watch", 60016),
					circleFilled: h("circle-filled", 60017),
					primitiveDot: h("primitive-dot", 60017),
					closeDirty: h("close-dirty", 60017),
					debugBreakpoint: h("debug-breakpoint", 60017),
					debugBreakpointDisabled: h("debug-breakpoint-disabled", 60017),
					debugHint: h("debug-hint", 60017),
					terminalDecorationSuccess: h("terminal-decoration-success", 60017),
					primitiveSquare: h("primitive-square", 60018),
					edit: h("edit", 60019),
					pencil: h("pencil", 60019),
					info: h("info", 60020),
					issueOpened: h("issue-opened", 60020),
					gistPrivate: h("gist-private", 60021),
					gitForkPrivate: h("git-fork-private", 60021),
					lock: h("lock", 60021),
					mirrorPrivate: h("mirror-private", 60021),
					close: h("close", 60022),
					removeClose: h("remove-close", 60022),
					x: h("x", 60022),
					repoSync: h("repo-sync", 60023),
					sync: h("sync", 60023),
					clone: h("clone", 60024),
					desktopDownload: h("desktop-download", 60024),
					beaker: h("beaker", 60025),
					microscope: h("microscope", 60025),
					vm: h("vm", 60026),
					deviceDesktop: h("device-desktop", 60026),
					file: h("file", 60027),
					fileText: h("file-text", 60027),
					more: h("more", 60028),
					ellipsis: h("ellipsis", 60028),
					kebabHorizontal: h("kebab-horizontal", 60028),
					mailReply: h("mail-reply", 60029),
					reply: h("reply", 60029),
					organization: h("organization", 60030),
					organizationFilled: h("organization-filled", 60030),
					organizationOutline: h("organization-outline", 60030),
					newFile: h("new-file", 60031),
					fileAdd: h("file-add", 60031),
					newFolder: h("new-folder", 60032),
					fileDirectoryCreate: h("file-directory-create", 60032),
					trash: h("trash", 60033),
					trashcan: h("trashcan", 60033),
					history: h("history", 60034),
					clock: h("clock", 60034),
					folder: h("folder", 60035),
					fileDirectory: h("file-directory", 60035),
					symbolFolder: h("symbol-folder", 60035),
					logoGithub: h("logo-github", 60036),
					markGithub: h("mark-github", 60036),
					github: h("github", 60036),
					terminal: h("terminal", 60037),
					console: h("console", 60037),
					repl: h("repl", 60037),
					zap: h("zap", 60038),
					symbolEvent: h("symbol-event", 60038),
					error: h("error", 60039),
					stop: h("stop", 60039),
					variable: h("variable", 60040),
					symbolVariable: h("symbol-variable", 60040),
					array: h("array", 60042),
					symbolArray: h("symbol-array", 60042),
					symbolModule: h("symbol-module", 60043),
					symbolPackage: h("symbol-package", 60043),
					symbolNamespace: h("symbol-namespace", 60043),
					symbolObject: h("symbol-object", 60043),
					symbolMethod: h("symbol-method", 60044),
					symbolFunction: h("symbol-function", 60044),
					symbolConstructor: h("symbol-constructor", 60044),
					symbolBoolean: h("symbol-boolean", 60047),
					symbolNull: h("symbol-null", 60047),
					symbolNumeric: h("symbol-numeric", 60048),
					symbolNumber: h("symbol-number", 60048),
					symbolStructure: h("symbol-structure", 60049),
					symbolStruct: h("symbol-struct", 60049),
					symbolParameter: h("symbol-parameter", 60050),
					symbolTypeParameter: h("symbol-type-parameter", 60050),
					symbolKey: h("symbol-key", 60051),
					symbolText: h("symbol-text", 60051),
					symbolReference: h("symbol-reference", 60052),
					goToFile: h("go-to-file", 60052),
					symbolEnum: h("symbol-enum", 60053),
					symbolValue: h("symbol-value", 60053),
					symbolRuler: h("symbol-ruler", 60054),
					symbolUnit: h("symbol-unit", 60054),
					activateBreakpoints: h("activate-breakpoints", 60055),
					archive: h("archive", 60056),
					arrowBoth: h("arrow-both", 60057),
					arrowDown: h("arrow-down", 60058),
					arrowLeft: h("arrow-left", 60059),
					arrowRight: h("arrow-right", 60060),
					arrowSmallDown: h("arrow-small-down", 60061),
					arrowSmallLeft: h("arrow-small-left", 60062),
					arrowSmallRight: h("arrow-small-right", 60063),
					arrowSmallUp: h("arrow-small-up", 60064),
					arrowUp: h("arrow-up", 60065),
					bell: h("bell", 60066),
					bold: h("bold", 60067),
					book: h("book", 60068),
					bookmark: h("bookmark", 60069),
					debugBreakpointConditionalUnverified: h(
						"debug-breakpoint-conditional-unverified",
						60070,
					),
					debugBreakpointConditional: h("debug-breakpoint-conditional", 60071),
					debugBreakpointConditionalDisabled: h(
						"debug-breakpoint-conditional-disabled",
						60071,
					),
					debugBreakpointDataUnverified: h(
						"debug-breakpoint-data-unverified",
						60072,
					),
					debugBreakpointData: h("debug-breakpoint-data", 60073),
					debugBreakpointDataDisabled: h(
						"debug-breakpoint-data-disabled",
						60073,
					),
					debugBreakpointLogUnverified: h(
						"debug-breakpoint-log-unverified",
						60074,
					),
					debugBreakpointLog: h("debug-breakpoint-log", 60075),
					debugBreakpointLogDisabled: h("debug-breakpoint-log-disabled", 60075),
					briefcase: h("briefcase", 60076),
					broadcast: h("broadcast", 60077),
					browser: h("browser", 60078),
					bug: h("bug", 60079),
					calendar: h("calendar", 60080),
					caseSensitive: h("case-sensitive", 60081),
					check: h("check", 60082),
					checklist: h("checklist", 60083),
					chevronDown: h("chevron-down", 60084),
					chevronLeft: h("chevron-left", 60085),
					chevronRight: h("chevron-right", 60086),
					chevronUp: h("chevron-up", 60087),
					chromeClose: h("chrome-close", 60088),
					chromeMaximize: h("chrome-maximize", 60089),
					chromeMinimize: h("chrome-minimize", 60090),
					chromeRestore: h("chrome-restore", 60091),
					circleOutline: h("circle-outline", 60092),
					circle: h("circle", 60092),
					debugBreakpointUnverified: h("debug-breakpoint-unverified", 60092),
					terminalDecorationIncomplete: h(
						"terminal-decoration-incomplete",
						60092,
					),
					circleSlash: h("circle-slash", 60093),
					circuitBoard: h("circuit-board", 60094),
					clearAll: h("clear-all", 60095),
					clippy: h("clippy", 60096),
					closeAll: h("close-all", 60097),
					cloudDownload: h("cloud-download", 60098),
					cloudUpload: h("cloud-upload", 60099),
					code: h("code", 60100),
					collapseAll: h("collapse-all", 60101),
					colorMode: h("color-mode", 60102),
					commentDiscussion: h("comment-discussion", 60103),
					creditCard: h("credit-card", 60105),
					dash: h("dash", 60108),
					dashboard: h("dashboard", 60109),
					database: h("database", 60110),
					debugContinue: h("debug-continue", 60111),
					debugDisconnect: h("debug-disconnect", 60112),
					debugPause: h("debug-pause", 60113),
					debugRestart: h("debug-restart", 60114),
					debugStart: h("debug-start", 60115),
					debugStepInto: h("debug-step-into", 60116),
					debugStepOut: h("debug-step-out", 60117),
					debugStepOver: h("debug-step-over", 60118),
					debugStop: h("debug-stop", 60119),
					debug: h("debug", 60120),
					deviceCameraVideo: h("device-camera-video", 60121),
					deviceCamera: h("device-camera", 60122),
					deviceMobile: h("device-mobile", 60123),
					diffAdded: h("diff-added", 60124),
					diffIgnored: h("diff-ignored", 60125),
					diffModified: h("diff-modified", 60126),
					diffRemoved: h("diff-removed", 60127),
					diffRenamed: h("diff-renamed", 60128),
					diff: h("diff", 60129),
					diffSidebyside: h("diff-sidebyside", 60129),
					discard: h("discard", 60130),
					editorLayout: h("editor-layout", 60131),
					emptyWindow: h("empty-window", 60132),
					exclude: h("exclude", 60133),
					extensions: h("extensions", 60134),
					eyeClosed: h("eye-closed", 60135),
					fileBinary: h("file-binary", 60136),
					fileCode: h("file-code", 60137),
					fileMedia: h("file-media", 60138),
					filePdf: h("file-pdf", 60139),
					fileSubmodule: h("file-submodule", 60140),
					fileSymlinkDirectory: h("file-symlink-directory", 60141),
					fileSymlinkFile: h("file-symlink-file", 60142),
					fileZip: h("file-zip", 60143),
					files: h("files", 60144),
					filter: h("filter", 60145),
					flame: h("flame", 60146),
					foldDown: h("fold-down", 60147),
					foldUp: h("fold-up", 60148),
					fold: h("fold", 60149),
					folderActive: h("folder-active", 60150),
					folderOpened: h("folder-opened", 60151),
					gear: h("gear", 60152),
					gift: h("gift", 60153),
					gistSecret: h("gist-secret", 60154),
					gist: h("gist", 60155),
					gitCommit: h("git-commit", 60156),
					gitCompare: h("git-compare", 60157),
					compareChanges: h("compare-changes", 60157),
					gitMerge: h("git-merge", 60158),
					githubAction: h("github-action", 60159),
					githubAlt: h("github-alt", 60160),
					globe: h("globe", 60161),
					grabber: h("grabber", 60162),
					graph: h("graph", 60163),
					gripper: h("gripper", 60164),
					heart: h("heart", 60165),
					home: h("home", 60166),
					horizontalRule: h("horizontal-rule", 60167),
					hubot: h("hubot", 60168),
					inbox: h("inbox", 60169),
					issueReopened: h("issue-reopened", 60171),
					issues: h("issues", 60172),
					italic: h("italic", 60173),
					jersey: h("jersey", 60174),
					json: h("json", 60175),
					kebabVertical: h("kebab-vertical", 60176),
					key: h("key", 60177),
					law: h("law", 60178),
					lightbulbAutofix: h("lightbulb-autofix", 60179),
					linkExternal: h("link-external", 60180),
					link: h("link", 60181),
					listOrdered: h("list-ordered", 60182),
					listUnordered: h("list-unordered", 60183),
					liveShare: h("live-share", 60184),
					loading: h("loading", 60185),
					location: h("location", 60186),
					mailRead: h("mail-read", 60187),
					mail: h("mail", 60188),
					markdown: h("markdown", 60189),
					megaphone: h("megaphone", 60190),
					mention: h("mention", 60191),
					milestone: h("milestone", 60192),
					gitPullRequestMilestone: h("git-pull-request-milestone", 60192),
					mortarBoard: h("mortar-board", 60193),
					move: h("move", 60194),
					multipleWindows: h("multiple-windows", 60195),
					mute: h("mute", 60196),
					noNewline: h("no-newline", 60197),
					note: h("note", 60198),
					octoface: h("octoface", 60199),
					openPreview: h("open-preview", 60200),
					package: h("package", 60201),
					paintcan: h("paintcan", 60202),
					pin: h("pin", 60203),
					play: h("play", 60204),
					run: h("run", 60204),
					plug: h("plug", 60205),
					preserveCase: h("preserve-case", 60206),
					preview: h("preview", 60207),
					project: h("project", 60208),
					pulse: h("pulse", 60209),
					question: h("question", 60210),
					quote: h("quote", 60211),
					radioTower: h("radio-tower", 60212),
					reactions: h("reactions", 60213),
					references: h("references", 60214),
					refresh: h("refresh", 60215),
					regex: h("regex", 60216),
					remoteExplorer: h("remote-explorer", 60217),
					remote: h("remote", 60218),
					remove: h("remove", 60219),
					replaceAll: h("replace-all", 60220),
					replace: h("replace", 60221),
					repoClone: h("repo-clone", 60222),
					repoForcePush: h("repo-force-push", 60223),
					repoPull: h("repo-pull", 60224),
					repoPush: h("repo-push", 60225),
					report: h("report", 60226),
					requestChanges: h("request-changes", 60227),
					rocket: h("rocket", 60228),
					rootFolderOpened: h("root-folder-opened", 60229),
					rootFolder: h("root-folder", 60230),
					rss: h("rss", 60231),
					ruby: h("ruby", 60232),
					saveAll: h("save-all", 60233),
					saveAs: h("save-as", 60234),
					save: h("save", 60235),
					screenFull: h("screen-full", 60236),
					screenNormal: h("screen-normal", 60237),
					searchStop: h("search-stop", 60238),
					server: h("server", 60240),
					settingsGear: h("settings-gear", 60241),
					settings: h("settings", 60242),
					shield: h("shield", 60243),
					smiley: h("smiley", 60244),
					sortPrecedence: h("sort-precedence", 60245),
					splitHorizontal: h("split-horizontal", 60246),
					splitVertical: h("split-vertical", 60247),
					squirrel: h("squirrel", 60248),
					starFull: h("star-full", 60249),
					starHalf: h("star-half", 60250),
					symbolClass: h("symbol-class", 60251),
					symbolColor: h("symbol-color", 60252),
					symbolConstant: h("symbol-constant", 60253),
					symbolEnumMember: h("symbol-enum-member", 60254),
					symbolField: h("symbol-field", 60255),
					symbolFile: h("symbol-file", 60256),
					symbolInterface: h("symbol-interface", 60257),
					symbolKeyword: h("symbol-keyword", 60258),
					symbolMisc: h("symbol-misc", 60259),
					symbolOperator: h("symbol-operator", 60260),
					symbolProperty: h("symbol-property", 60261),
					wrench: h("wrench", 60261),
					wrenchSubaction: h("wrench-subaction", 60261),
					symbolSnippet: h("symbol-snippet", 60262),
					tasklist: h("tasklist", 60263),
					telescope: h("telescope", 60264),
					textSize: h("text-size", 60265),
					threeBars: h("three-bars", 60266),
					thumbsdown: h("thumbsdown", 60267),
					thumbsup: h("thumbsup", 60268),
					tools: h("tools", 60269),
					triangleDown: h("triangle-down", 60270),
					triangleLeft: h("triangle-left", 60271),
					triangleRight: h("triangle-right", 60272),
					triangleUp: h("triangle-up", 60273),
					twitter: h("twitter", 60274),
					unfold: h("unfold", 60275),
					unlock: h("unlock", 60276),
					unmute: h("unmute", 60277),
					unverified: h("unverified", 60278),
					verified: h("verified", 60279),
					versions: h("versions", 60280),
					vmActive: h("vm-active", 60281),
					vmOutline: h("vm-outline", 60282),
					vmRunning: h("vm-running", 60283),
					watch: h("watch", 60284),
					whitespace: h("whitespace", 60285),
					wholeWord: h("whole-word", 60286),
					window: h("window", 60287),
					wordWrap: h("word-wrap", 60288),
					zoomIn: h("zoom-in", 60289),
					zoomOut: h("zoom-out", 60290),
					listFilter: h("list-filter", 60291),
					listFlat: h("list-flat", 60292),
					listSelection: h("list-selection", 60293),
					selection: h("selection", 60293),
					listTree: h("list-tree", 60294),
					debugBreakpointFunctionUnverified: h(
						"debug-breakpoint-function-unverified",
						60295,
					),
					debugBreakpointFunction: h("debug-breakpoint-function", 60296),
					debugBreakpointFunctionDisabled: h(
						"debug-breakpoint-function-disabled",
						60296,
					),
					debugStackframeActive: h("debug-stackframe-active", 60297),
					circleSmallFilled: h("circle-small-filled", 60298),
					debugStackframeDot: h("debug-stackframe-dot", 60298),
					terminalDecorationMark: h("terminal-decoration-mark", 60298),
					debugStackframe: h("debug-stackframe", 60299),
					debugStackframeFocused: h("debug-stackframe-focused", 60299),
					debugBreakpointUnsupported: h("debug-breakpoint-unsupported", 60300),
					symbolString: h("symbol-string", 60301),
					debugReverseContinue: h("debug-reverse-continue", 60302),
					debugStepBack: h("debug-step-back", 60303),
					debugRestartFrame: h("debug-restart-frame", 60304),
					debugAlt: h("debug-alt", 60305),
					callIncoming: h("call-incoming", 60306),
					callOutgoing: h("call-outgoing", 60307),
					menu: h("menu", 60308),
					expandAll: h("expand-all", 60309),
					feedback: h("feedback", 60310),
					gitPullRequestReviewer: h("git-pull-request-reviewer", 60310),
					groupByRefType: h("group-by-ref-type", 60311),
					ungroupByRefType: h("ungroup-by-ref-type", 60312),
					account: h("account", 60313),
					gitPullRequestAssignee: h("git-pull-request-assignee", 60313),
					bellDot: h("bell-dot", 60314),
					debugConsole: h("debug-console", 60315),
					library: h("library", 60316),
					output: h("output", 60317),
					runAll: h("run-all", 60318),
					syncIgnored: h("sync-ignored", 60319),
					pinned: h("pinned", 60320),
					githubInverted: h("github-inverted", 60321),
					serverProcess: h("server-process", 60322),
					serverEnvironment: h("server-environment", 60323),
					pass: h("pass", 60324),
					issueClosed: h("issue-closed", 60324),
					stopCircle: h("stop-circle", 60325),
					playCircle: h("play-circle", 60326),
					record: h("record", 60327),
					debugAltSmall: h("debug-alt-small", 60328),
					vmConnect: h("vm-connect", 60329),
					cloud: h("cloud", 60330),
					merge: h("merge", 60331),
					export: h("export", 60332),
					graphLeft: h("graph-left", 60333),
					magnet: h("magnet", 60334),
					notebook: h("notebook", 60335),
					redo: h("redo", 60336),
					checkAll: h("check-all", 60337),
					pinnedDirty: h("pinned-dirty", 60338),
					passFilled: h("pass-filled", 60339),
					circleLargeFilled: h("circle-large-filled", 60340),
					circleLarge: h("circle-large", 60341),
					circleLargeOutline: h("circle-large-outline", 60341),
					combine: h("combine", 60342),
					gather: h("gather", 60342),
					table: h("table", 60343),
					variableGroup: h("variable-group", 60344),
					typeHierarchy: h("type-hierarchy", 60345),
					typeHierarchySub: h("type-hierarchy-sub", 60346),
					typeHierarchySuper: h("type-hierarchy-super", 60347),
					gitPullRequestCreate: h("git-pull-request-create", 60348),
					runAbove: h("run-above", 60349),
					runBelow: h("run-below", 60350),
					notebookTemplate: h("notebook-template", 60351),
					debugRerun: h("debug-rerun", 60352),
					workspaceTrusted: h("workspace-trusted", 60353),
					workspaceUntrusted: h("workspace-untrusted", 60354),
					workspaceUnknown: h("workspace-unknown", 60355),
					terminalCmd: h("terminal-cmd", 60356),
					terminalDebian: h("terminal-debian", 60357),
					terminalLinux: h("terminal-linux", 60358),
					terminalPowershell: h("terminal-powershell", 60359),
					terminalTmux: h("terminal-tmux", 60360),
					terminalUbuntu: h("terminal-ubuntu", 60361),
					terminalBash: h("terminal-bash", 60362),
					arrowSwap: h("arrow-swap", 60363),
					copy: h("copy", 60364),
					personAdd: h("person-add", 60365),
					filterFilled: h("filter-filled", 60366),
					wand: h("wand", 60367),
					debugLineByLine: h("debug-line-by-line", 60368),
					inspect: h("inspect", 60369),
					layers: h("layers", 60370),
					layersDot: h("layers-dot", 60371),
					layersActive: h("layers-active", 60372),
					compass: h("compass", 60373),
					compassDot: h("compass-dot", 60374),
					compassActive: h("compass-active", 60375),
					azure: h("azure", 60376),
					issueDraft: h("issue-draft", 60377),
					gitPullRequestClosed: h("git-pull-request-closed", 60378),
					gitPullRequestDraft: h("git-pull-request-draft", 60379),
					debugAll: h("debug-all", 60380),
					debugCoverage: h("debug-coverage", 60381),
					runErrors: h("run-errors", 60382),
					folderLibrary: h("folder-library", 60383),
					debugContinueSmall: h("debug-continue-small", 60384),
					beakerStop: h("beaker-stop", 60385),
					graphLine: h("graph-line", 60386),
					graphScatter: h("graph-scatter", 60387),
					pieChart: h("pie-chart", 60388),
					bracket: h("bracket", 60175),
					bracketDot: h("bracket-dot", 60389),
					bracketError: h("bracket-error", 60390),
					lockSmall: h("lock-small", 60391),
					azureDevops: h("azure-devops", 60392),
					verifiedFilled: h("verified-filled", 60393),
					newline: h("newline", 60394),
					layout: h("layout", 60395),
					layoutActivitybarLeft: h("layout-activitybar-left", 60396),
					layoutActivitybarRight: h("layout-activitybar-right", 60397),
					layoutPanelLeft: h("layout-panel-left", 60398),
					layoutPanelCenter: h("layout-panel-center", 60399),
					layoutPanelJustify: h("layout-panel-justify", 60400),
					layoutPanelRight: h("layout-panel-right", 60401),
					layoutPanel: h("layout-panel", 60402),
					layoutSidebarLeft: h("layout-sidebar-left", 60403),
					layoutSidebarRight: h("layout-sidebar-right", 60404),
					layoutStatusbar: h("layout-statusbar", 60405),
					layoutMenubar: h("layout-menubar", 60406),
					layoutCentered: h("layout-centered", 60407),
					target: h("target", 60408),
					indent: h("indent", 60409),
					recordSmall: h("record-small", 60410),
					errorSmall: h("error-small", 60411),
					terminalDecorationError: h("terminal-decoration-error", 60411),
					arrowCircleDown: h("arrow-circle-down", 60412),
					arrowCircleLeft: h("arrow-circle-left", 60413),
					arrowCircleRight: h("arrow-circle-right", 60414),
					arrowCircleUp: h("arrow-circle-up", 60415),
					layoutSidebarRightOff: h("layout-sidebar-right-off", 60416),
					layoutPanelOff: h("layout-panel-off", 60417),
					layoutSidebarLeftOff: h("layout-sidebar-left-off", 60418),
					blank: h("blank", 60419),
					heartFilled: h("heart-filled", 60420),
					map: h("map", 60421),
					mapHorizontal: h("map-horizontal", 60421),
					foldHorizontal: h("fold-horizontal", 60421),
					mapFilled: h("map-filled", 60422),
					mapHorizontalFilled: h("map-horizontal-filled", 60422),
					foldHorizontalFilled: h("fold-horizontal-filled", 60422),
					circleSmall: h("circle-small", 60423),
					bellSlash: h("bell-slash", 60424),
					bellSlashDot: h("bell-slash-dot", 60425),
					commentUnresolved: h("comment-unresolved", 60426),
					gitPullRequestGoToChanges: h("git-pull-request-go-to-changes", 60427),
					gitPullRequestNewChanges: h("git-pull-request-new-changes", 60428),
					searchFuzzy: h("search-fuzzy", 60429),
					commentDraft: h("comment-draft", 60430),
					send: h("send", 60431),
					sparkle: h("sparkle", 60432),
					insert: h("insert", 60433),
					mic: h("mic", 60434),
					thumbsdownFilled: h("thumbsdown-filled", 60435),
					thumbsupFilled: h("thumbsup-filled", 60436),
					coffee: h("coffee", 60437),
					snake: h("snake", 60438),
					game: h("game", 60439),
					vr: h("vr", 60440),
					chip: h("chip", 60441),
					piano: h("piano", 60442),
					music: h("music", 60443),
					micFilled: h("mic-filled", 60444),
					repoFetch: h("repo-fetch", 60445),
					copilot: h("copilot", 60446),
					lightbulbSparkle: h("lightbulb-sparkle", 60447),
					robot: h("robot", 60448),
					sparkleFilled: h("sparkle-filled", 60449),
					diffSingle: h("diff-single", 60450),
					diffMultiple: h("diff-multiple", 60451),
					surroundWith: h("surround-with", 60452),
					share: h("share", 60453),
					gitStash: h("git-stash", 60454),
					gitStashApply: h("git-stash-apply", 60455),
					gitStashPop: h("git-stash-pop", 60456),
					vscode: h("vscode", 60457),
					vscodeInsiders: h("vscode-insiders", 60458),
					codeOss: h("code-oss", 60459),
					runCoverage: h("run-coverage", 60460),
					runAllCoverage: h("run-all-coverage", 60461),
					coverage: h("coverage", 60462),
					githubProject: h("github-project", 60463),
					mapVertical: h("map-vertical", 60464),
					foldVertical: h("fold-vertical", 60464),
					mapVerticalFilled: h("map-vertical-filled", 60465),
					foldVerticalFilled: h("fold-vertical-filled", 60465),
					goToSearch: h("go-to-search", 60466),
					percentage: h("percentage", 60467),
					sortPercentage: h("sort-percentage", 60467),
					attach: h("attach", 60468),
					goToEditingSession: h("go-to-editing-session", 60469),
					editSession: h("edit-session", 60470),
					codeReview: h("code-review", 60471),
					copilotWarning: h("copilot-warning", 60472),
					python: h("python", 60473),
					copilotLarge: h("copilot-large", 60474),
					copilotWarningLarge: h("copilot-warning-large", 60475),
					terminalTwo: h("terminal-two", 60800),
					checkTwo: h("check-two", 60801),
					xTwo: h("x-two", 60802),
					expander: h("expander", 60803),
					restore: h("restore", 60804),
					pinTwo: h("pin-two", 60805),
					stopTwo: h("stop-two", 60806),
					brain: h("brain", 60807),
					magnifyingGlass: h("magnifying-glass", 60808),
					imageTwo: h("image-two", 60809),
					microphone: h("microphone", 60810),
					submit: h("submit", 60811),
					running: h("running", 60812),
					fileAddTwo: h("file-add-two", 60813),
					infinity: h("infinity", 60814),
					editTwo: h("edit-two", 60815),
					stopThree: h("stop-three", 60816),
					warningTwo: h("warning-two", 60817),
					arrowLeftTwo: h("arrow-left-two", 60818),
					redoTwo: h("redo-two", 60819),
					infoTwo: h("info-two", 60820),
					chat: h("chat", 60821),
					thumbsDown: h("thumbs-down", 60822),
					thumbsUp: h("thumbs-up", 60823),
					thumbsDownFilled: h("thumbs-down-filled", 60824),
					thumbsUpFilled: h("thumbs-up-filled", 60825),
					copyTwo: h("copy-two", 60826),
					ellipsisTwo: h("ellipsis-two", 60827),
				});
		},
	});
function c6() {
	return Object.values(Ni);
}
var l6,
	Ni,
	Gh = m({
		"out-build/vs/base/common/codicons.js"() {
			"use strict";
			o6(),
				NA(),
				(l6 = {
					dialogError: h("dialog-error", "error"),
					dialogWarning: h("dialog-warning", "warning"),
					dialogInfo: h("dialog-info", "info"),
					dialogClose: h("dialog-close", "close"),
					treeItemExpanded: h("tree-item-expanded", "chevron-down"),
					treeFilterOnTypeOn: h("tree-filter-on-type-on", "list-filter"),
					treeFilterOnTypeOff: h("tree-filter-on-type-off", "list-selection"),
					treeFilterClear: h("tree-filter-clear", "close"),
					treeItemLoading: h("tree-item-loading", "loading"),
					menuSelection: h("menu-selection", "check"),
					menuSubmenu: h("menu-submenu", "chevron-right"),
					menuBarMore: h("menubar-more", "more"),
					scrollbarButtonLeft: h("scrollbar-button-left", "triangle-left"),
					scrollbarButtonRight: h("scrollbar-button-right", "triangle-right"),
					scrollbarButtonUp: h("scrollbar-button-up", "triangle-up"),
					scrollbarButtonDown: h("scrollbar-button-down", "triangle-down"),
					toolBarMore: h("toolbar-more", "more"),
					quickInputBack: h("quick-input-back", "arrow-left"),
					dropDownButton: h("drop-down-button", 60084),
					symbolCustomColor: h("symbol-customcolor", 60252),
					exportIcon: h("export", 60332),
					workspaceUnspecified: h("workspace-unspecified", 60355),
					newLine: h("newline", 60394),
					gitFetch: h("git-fetch", 60445),
					lightbulbSparkleAutofix: h("lightbulb-sparkle-autofix", 60447),
					debugBreakpointPending: h("debug-breakpoint-pending", 60377),
				}),
				(Ni = { ...a6, ...l6 });
		},
	}),
	Tm,
	qc,
	u6 = m({
		"out-build/vs/base/common/themables.js"() {
			"use strict";
			Gh(),
				(function (t) {
					function e(i) {
						return i && typeof i == "object" && typeof i.id == "string";
					}
					t.isThemeColor = e;
				})(Tm || (Tm = {})),
				(function (t) {
					(t.iconNameSegment = "[A-Za-z0-9]+"),
						(t.iconNameExpression = "[A-Za-z0-9-]+"),
						(t.iconModifierExpression = "~[A-Za-z]+"),
						(t.iconNameCharacter = "[A-Za-z0-9~-]");
					const e = new RegExp(
						`^(${t.iconNameExpression})(${t.iconModifierExpression})?$`,
					);
					function i(f) {
						const p = e.exec(f.id);
						if (!p) return i(Ni.error);
						const [, v, g] = p,
							b = ["codicon", "codicon-" + v];
						return g && b.push("codicon-modifier-" + g.substring(1)), b;
					}
					t.asClassNameArray = i;
					function s(f) {
						return i(f).join(" ");
					}
					t.asClassName = s;
					function r(f) {
						return "." + i(f).join(".");
					}
					t.asCSSSelector = r;
					function n(f) {
						return (
							f &&
							typeof f == "object" &&
							typeof f.id == "string" &&
							(typeof f.color > "u" || Tm.isThemeColor(f.color))
						);
					}
					t.isThemeIcon = n;
					const o = new RegExp(
						`^\\$\\((${t.iconNameExpression}(?:${t.iconModifierExpression})?)\\)$`,
					);
					function a(f) {
						const p = o.exec(f);
						if (!p) return;
						const [, v] = p;
						return { id: v };
					}
					t.fromString = a;
					function c(f) {
						return { id: f };
					}
					t.fromId = c;
					function l(f, p) {
						let v = f.id;
						const g = v.lastIndexOf("~");
						return (
							g !== -1 && (v = v.substring(0, g)),
							p && (v = `${v}~${p}`),
							{ id: v }
						);
					}
					t.modify = l;
					function u(f) {
						const p = f.id.lastIndexOf("~");
						if (p !== -1) return f.id.substring(p + 1);
					}
					t.getModifier = u;
					function d(f, p) {
						return f.id === p.id && f.color?.id === p.color?.id;
					}
					t.isEqual = d;
				})(qc || (qc = {}));
		},
	});
import Wi from "electron";
import { release as WA } from "os";
var h6,
	Um,
	Bc,
	d6 = m({
		"out-build/vs/platform/windows/electron-main/windowImpl.js"() {
			"use strict";
			ae(),
				Mt(),
				Yr(),
				q(),
				F(),
				Ce(),
				qs(),
				z(),
				ie(),
				ve(),
				pc(),
				Ve(),
				mn(),
				bt(),
				bc(),
				Be(),
				ot(),
				Q(),
				Ct(),
				Ph(),
				FA(),
				Hu(),
				St(),
				u6(),
				hc(),
				un(),
				si(),
				ti(),
				gn(),
				fc(),
				Rs(),
				Li(),
				an(),
				jc(),
				Y(),
				Xb(),
				Je(),
				$c(),
				(function (t) {
					(t[(t.NONE = 0)] = "NONE"),
						(t[(t.NAVIGATING = 1)] = "NAVIGATING"),
						(t[(t.READY = 2)] = "READY");
				})(h6 || (h6 = {})),
				(Um = class X3 extends j {
					get lastFocusTime() {
						return this.j;
					}
					get win() {
						return this.m;
					}
					n(e, i) {
						(this.m = e),
							this.D(
								x.fromNodeEventEmitter(e, "maximize")(() => this.b.fire()),
							),
							this.D(
								x.fromNodeEventEmitter(e, "unmaximize")(() => this.c.fire()),
							),
							this.D(
								x.fromNodeEventEmitter(
									e,
									"closed",
								)(() => {
									this.a.fire(), this.dispose();
								}),
							),
							this.D(
								x.fromNodeEventEmitter(
									e,
									"focus",
								)(() => {
									this.j = Date.now();
								}),
							),
							this.D(
								x.fromNodeEventEmitter(
									this.m,
									"enter-full-screen",
								)(() => this.g.fire()),
							),
							this.D(
								x.fromNodeEventEmitter(
									this.m,
									"leave-full-screen",
								)(() => this.h.fire()),
							);
						const s = !ln(
							this.q,
							i?.titleBarStyle === "hidden" ? "custom" : void 0,
						);
						if (
							(N && s && e.setSheetOffset(EE(WA()) ? 28 : 22),
							s && (x1(this.q) || N))
						) {
							const r = this.r.getItem(X3.C);
							r
								? this.updateWindowControls({ height: r })
								: this.updateWindowControls({ height: P4 });
						}
						T &&
							s &&
							e.hookWindowMessage(278, () => {
								const [n, o] = e.getPosition(),
									a = Wi.screen.getCursorScreenPoint(),
									c = a.x - n,
									l = a.y - o;
								return (
									!(
										c > 30 &&
										l >= 0 &&
										l <= Math.max(e.getBounds().height * 0.15, 35)
									) ||
										(e.setEnabled(!1),
										e.setEnabled(!0),
										this.f.fire({ x: c, y: l })),
									0
								);
							}),
							this.s.args["open-devtools"] === !0 &&
								e.webContents.openDevTools(),
							N &&
								(this.D(
									this.onDidEnterFullScreen(() => {
										this.H?.complete(!0);
									}),
								),
								this.D(
									this.onDidLeaveFullScreen(() => {
										this.H?.complete(!0);
									}),
								));
					}
					constructor(e, i, s, r) {
						super(),
							(this.q = e),
							(this.r = i),
							(this.s = s),
							(this.t = r),
							(this.a = this.D(new $())),
							(this.onDidClose = this.a.event),
							(this.b = this.D(new $())),
							(this.onDidMaximize = this.b.event),
							(this.c = this.D(new $())),
							(this.onDidUnmaximize = this.c.event),
							(this.f = this.D(new $())),
							(this.onDidTriggerSystemContextMenu = this.f.event),
							(this.g = this.D(new $())),
							(this.onDidEnterFullScreen = this.g.event),
							(this.h = this.D(new $())),
							(this.onDidLeaveFullScreen = this.h.event),
							(this.j = Date.now()),
							(this.m = null),
							(this.F = x1(this.q)),
							(this.G = void 0),
							(this.H = void 0);
					}
					u(e, i, s = Wi.screen.getAllDisplays().length > 0) {
						const r = this.q.getValue("window"),
							n = N && r?.nativeTabs === !0;
						(N || T) &&
							s &&
							(!n || Wi.BrowserWindow.getAllWindows().length === 1) &&
							[e.width, e.height, e.x, e.y].every(
								(o) => typeof o == "number",
							) &&
							this.m?.setBounds({
								width: e.width,
								height: e.height,
								x: e.x,
								y: e.y,
							}),
							(e.mode === 0 || e.mode === 3) &&
								!i.hideBecauseShadowWindow &&
								(this.m?.maximize(),
								e.mode === 3 && this.I(!0, !0),
								this.m?.show());
					}
					setRepresentedFilename(e) {
						N ? this.win?.setRepresentedFilename(e) : (this.w = e);
					}
					getRepresentedFilename() {
						return N ? this.win?.getRepresentedFilename() : this.w;
					}
					setDocumentEdited(e) {
						N && this.win?.setDocumentEdited(e), (this.z = e);
					}
					isDocumentEdited() {
						return N ? !!this.win?.isDocumentEdited() : !!this.z;
					}
					focus(e) {
						N && e?.force && Wi.app.focus({ steal: !0 });
						const i = this.win;
						i && (i.isMinimized() && i.restore(), i.focus());
					}
					handleTitleDoubleClick() {
						const e = this.win;
						if (e)
							if (N)
								switch (
									Wi.systemPreferences.getUserDefault(
										"AppleActionOnDoubleClick",
										"string",
									)
								) {
									case "Minimize":
										e.minimize();
										break;
									case "None":
										break;
									case "Maximize":
									default:
										e.isMaximized() ? e.unmaximize() : e.maximize();
								}
							else e.isMaximized() ? e.unmaximize() : e.maximize();
					}
					static {
						this.C = "windowControlHeight";
					}
					updateWindowControls(e) {
						const i = this.win;
						if (i) {
							if ((e.height && this.r.setItem(Bc.C, e.height), this.F))
								i.setTitleBarOverlay({
									color:
										e.backgroundColor?.trim() === ""
											? void 0
											: e.backgroundColor,
									symbolColor:
										e.foregroundColor?.trim() === ""
											? void 0
											: e.foregroundColor,
									height: e.height ? e.height - 1 : void 0,
								});
							else if (N && e.height !== void 0) {
								const s = (e.height - 15) / 2;
								s
									? i.setWindowButtonPosition({ x: s, y: s })
									: i.setWindowButtonPosition(null);
							}
						}
					}
					toggleFullScreen() {
						this.I(!this.isFullScreen, !1);
					}
					I(e, i) {
						E4(this.q) ? this.J(e, i) : this.M(e);
					}
					get isFullScreen() {
						if (N && typeof this.G == "boolean") return this.G;
						const e = this.win,
							i = e?.isFullScreen(),
							s = e?.isSimpleFullScreen();
						return !!(i || s);
					}
					J(e, i) {
						const s = this.win;
						s?.isSimpleFullScreen() && s?.setSimpleFullScreen(!1), this.L(e, i);
					}
					L(e, i) {
						if (N) {
							this.G = e;
							const r = (this.H = new Xs());
							(async () => {
								const n = await Promise.race([r.p, Ai(1e4).then(() => !1)]);
								this.H === r &&
									((this.G = void 0),
									(this.H = void 0),
									!n &&
										e &&
										i &&
										this.win &&
										!this.win.isFullScreen() &&
										(this.t.warn(
											"window: native macOS fullscreen transition did not happen within 10s from restoring",
										),
										this.h.fire()));
							})();
						}
						this.win?.setFullScreen(e);
					}
					M(e) {
						const i = this.win;
						i?.isFullScreen() && this.L(!1, !1),
							i?.setSimpleFullScreen(e),
							i?.webContents.focus();
					}
					dispose() {
						super.dispose(), (this.m = null);
					}
				}),
				(Bc = class extends Um {
					get id() {
						return this.Q;
					}
					get backupPath() {
						return this.S?.backupPath;
					}
					get openedWorkspace() {
						return this.S?.workspace;
					}
					get profile() {
						if (!this.config) return;
						const e = this.hb.profiles.find(
							(i) => i.id === this.config?.profiles.profile.id,
						);
						return this.isExtensionDevelopmentHost && e
							? e
							: (this.hb.getProfileForWorkspace(
									this.config.workspace ??
										_u(this.backupPath, this.isExtensionDevelopmentHost),
								) ?? this.hb.defaultProfile);
					}
					get remoteAuthority() {
						return this.S?.remoteAuthority;
					}
					get config() {
						return this.S;
					}
					get isExtensionDevelopmentHost() {
						return !!this.S?.extensionDevelopmentPath;
					}
					get isExtensionTestHost() {
						return !!this.S?.extensionTestsPath;
					}
					get isExtensionDevelopmentTestFromCli() {
						return (
							this.isExtensionDevelopmentHost &&
							this.isExtensionTestHost &&
							!this.S?.debugId
						);
					}
					constructor(
						e,
						i,
						s,
						r,
						n,
						o,
						a,
						c,
						l,
						u,
						d,
						f,
						p,
						v,
						g,
						b,
						y,
						k,
						I,
						C,
						_,
						K,
					) {
						super(u, C, r, i),
							(this.fb = s),
							(this.gb = n),
							(this.hb = o),
							(this.ib = a),
							(this.jb = c),
							(this.kb = l),
							(this.lb = d),
							(this.mb = f),
							(this.nb = p),
							(this.ob = v),
							(this.pb = g),
							(this.qb = b),
							(this.rb = y),
							(this.sb = k),
							(this.tb = I),
							(this.ub = K),
							(this.N = this.D(new $())),
							(this.onWillLoad = this.N.event),
							(this.O = this.D(new $())),
							(this.onDidSignalReady = this.O.event),
							(this.P = this.D(new $())),
							(this.onDidDestroy = this.P.event),
							(this.X = []),
							(this.Y = []),
							(this.Z = void 0),
							(this.$ = void 0),
							(this.ab = void 0),
							(this.bb = this.D(this.sb.createIPCObjectUrl())),
							(this.eb = !1),
							(this.vb = 0);
						{
							const [se, xe] = this.Fb(e.state);
							(this.U = se),
								this.t.trace("window#ctor: using window state", se);
							const W =
									e.shadowWindowForWorkspaceId !== void 0 &&
									e.shadowWindowForWorkspaceId.length > 0 &&
									!Bb,
								ye = _.invokeFunction(
									P1,
									this.U,
									{ hideBecauseShadowWindow: W },
									{
										preload: $t.asFileUri(
											"vs/base/parts/sandbox/electron-sandbox/preload.js",
										).fsPath,
										additionalArguments: [
											`--vscode-window-config=${this.bb.resource.toString()}`,
										],
										v8CacheOptions: this.s.useCodeCache
											? "bypassHeatCheck"
											: "none",
									},
								);
							Fe("code/willCreateCodeBrowserWindow"),
								(this.m = new Wi.BrowserWindow(ye)),
								Fe("code/didCreateCodeBrowserWindow"),
								(this.Q = this.m.id),
								this.n(this.m, ye),
								this.u(this.U, { hideBecauseShadowWindow: W }, xe),
								(this.j = Date.now());
						}
						this.Cb(), this.Lb(), this.wb();
					}
					setReady() {
						for (
							this.t.trace(
								`window#load: window reported ready (id: ${this.Q})`,
							),
								this.vb = 2;
							this.X.length;
						)
							this.X.pop()(this);
						this.O.fire();
					}
					ready() {
						return new Promise((e) => {
							if (this.isReady) return e(this);
							this.X.push(e);
						});
					}
					get isReady() {
						return this.vb === 2;
					}
					get whenClosedOrLoaded() {
						return new Promise((e) => {
							function i() {
								s.dispose(), r.dispose(), e();
							}
							const s = this.onDidClose(() => i()),
								r = this.onWillLoad(() => i());
						});
					}
					wb() {
						this.D(
							x.fromNodeEventEmitter(this.m, "unresponsive")(() => this.zb(1)),
						),
							this.D(
								x.fromNodeEventEmitter(
									this.m.webContents,
									"render-process-gone",
									(i, s) => s,
								)((i) => this.zb(2, { ...i })),
							),
							this.D(
								x.fromNodeEventEmitter(
									this.m.webContents,
									"did-fail-load",
									(i, s, r) => ({ exitCode: s, reason: r }),
								)(({ exitCode: i, reason: s }) =>
									this.zb(3, { reason: s, exitCode: i }),
								),
							),
							this.D(
								x.fromNodeEventEmitter(
									this.m.webContents,
									"will-prevent-unload",
								)((i) => i.preventDefault()),
							),
							this.D(
								x.fromNodeEventEmitter(
									this.m.webContents,
									"did-finish-load",
								)(() => {
									this.db && ((this.S = this.db), (this.db = void 0));
								}),
							),
							this.D(
								this.onDidMaximize(() => {
									this.S && (this.S.maximized = !0);
								}),
							),
							this.D(
								this.onDidUnmaximize(() => {
									this.S && (this.S.maximized = !1);
								}),
							),
							this.D(
								this.onDidEnterFullScreen(() => {
									this.sendWhenReady("vscode:enterFullScreen", Ge.None);
								}),
							),
							this.D(
								this.onDidLeaveFullScreen(() => {
									this.sendWhenReady("vscode:leaveFullScreen", Ge.None);
								}),
							),
							this.D(this.q.onDidChangeConfiguration((i) => this.Cb(i))),
							this.D(this.mb.onDidDeleteUntitledWorkspace((i) => this.Bb(i)));
						const e = [
							"https://marketplace.visualstudio.com/*",
							"https://*.vsassets.io/*",
							"http://*.cursor.localhost:8001/*",
							"https://staging-marketplace.cursor.sh/*",
							"https://marketplace.cursor.sh/*",
						];
						this.m.webContents.session.webRequest.onBeforeSendHeaders(
							{ urls: e },
							async (i, s) => {
								const r = await this.yb();
								s({
									cancel: !1,
									requestHeaders: Object.assign(i.requestHeaders, r),
								});
							},
						);
					}
					yb() {
						return (
							this.xb ||
								(this.xb = LA(
									this.rb,
									this.s,
									this.q,
									this.ib,
									this.jb,
									this.ob,
								)),
							this.xb
						);
					}
					async zb(e, i) {
						switch (e) {
							case 2:
								this.t.error(
									`CodeWindow: renderer process gone (reason: ${i?.reason || "<unknown>"}, code: ${i?.exitCode || "<unknown>"})`,
								);
								break;
							case 1:
								this.t.error("CodeWindow: detected unresponsive");
								break;
							case 3:
								this.t.error(
									`CodeWindow: failed to load (reason: ${i?.reason || "<unknown>"}, code: ${i?.exitCode || "<unknown>"})`,
								);
								break;
						}
						switch (
							(this.ob.publicLog2("windowerror", {
								type: e,
								reason: i?.reason,
								code: i?.exitCode,
							}),
							e)
						) {
							case 1:
							case 2:
								if (this.isExtensionDevelopmentTestFromCli) {
									this.qb.kill(1);
									return;
								}
								if (this.s.args["enable-smoke-test-driver"]) {
									await this.Ab(!1, !1), this.qb.quit();
									return;
								}
								if (e === 1) {
									if (
										this.isExtensionDevelopmentHost ||
										this.isExtensionTestHost ||
										(this.m &&
											this.m.webContents &&
											this.m.webContents.isDevToolsOpened())
									)
										return;
									const { response: s, checkboxChecked: r } =
										await this.pb.showMessageBox(
											{
												type: "warning",
												buttons: [w(2508, null), w(2509, null), w(2510, null)],
												message: w(2511, null),
												detail: w(2512, null),
												checkboxLabel: this.S?.workspace
													? w(2513, null)
													: void 0,
											},
											this.m,
										);
									if (s !== 2) {
										const n = s === 0;
										await this.Ab(n, r);
									}
								} else if (e === 2) {
									let s;
									i
										? (s = w(2515, null, i.reason, i.exitCode ?? "<unknown>"))
										: (s = w(2514, null));
									const { response: r, checkboxChecked: n } =
											await this.pb.showMessageBox(
												{
													type: "warning",
													buttons: [
														this.S?.workspace ? w(2516, null) : w(2517, null),
														w(2518, null),
													],
													message: s,
													detail: this.S?.workspace
														? w(2519, null)
														: w(2520, null),
													checkboxLabel: this.S?.workspace
														? w(2521, null)
														: void 0,
												},
												this.m,
											),
										o = r === 0;
									await this.Ab(o, n);
								}
								break;
						}
					}
					async Ab(e, i) {
						const s = this.S?.workspace;
						if (i && s)
							try {
								const r = this.kb.workspaceStorage(s);
								await r.init(),
									r.delete("memento/workbench.parts.editor"),
									await r.close();
							} catch (r) {
								this.t.error(r);
							}
						this.P.fire();
						try {
							if (e && this.S) {
								let r, n;
								Ci(s)
									? (r = { folderUri: s.uri })
									: Vt(s)
										? (r = { workspaceUri: s.configPath })
										: (n = !0),
									(
										await this.tb.open({
											context: 5,
											userEnv: this.S.userEnv,
											cli: { ...this.s.args, _: [] },
											urisToOpen: r ? [r] : void 0,
											forceEmpty: n,
											forceNewWindow: !0,
											remoteAuthority: this.remoteAuthority,
										})
									)
										.at(0)
										?.focus();
							}
						} finally {
							this.m?.destroy();
						}
					}
					Bb(e) {
						this.S?.workspace?.id === e.id && (this.S.workspace = void 0);
					}
					Cb(e) {
						if (!e || e.affectsConfiguration("window.menuBarVisibility")) {
							const i = this.Hb();
							i !== this.W && ((this.W = i), this.Ib(i));
						}
						if (
							!e ||
							e.affectsConfiguration("http.proxy") ||
							e.affectsConfiguration("http.noProxy")
						) {
							let i =
								(this.q.getValue("http.proxy") || "").trim() ||
								(
									process.env.https_proxy ||
									process.env.HTTPS_PROXY ||
									process.env.http_proxy ||
									process.env.HTTP_PROXY ||
									""
								).trim() ||
								void 0;
							if (i?.indexOf("@") !== -1) {
								const r = P.parse(i),
									n = r.authority.indexOf("@");
								n !== -1 &&
									(i = r
										.with({ authority: r.authority.substring(n + 1) })
										.toString());
							}
							i?.endsWith("/") && (i = i.substr(0, i.length - 1));
							const s =
								(this.q.getValue("http.noProxy") || [])
									.map((r) => r.trim())
									.join(",") ||
								(process.env.no_proxy || process.env.NO_PROXY || "").trim() ||
								void 0;
							if (
								(i || "").indexOf("@") === -1 &&
								(i !== this.Z || s !== this.$)
							) {
								(this.Z = i), (this.$ = s);
								const r = i || "",
									n = s ? `${s},<local>` : "<local>";
								this.t.trace(`Setting proxy to '${r}', bypassing '${n}'`),
									this.m.webContents.session.setProxy({
										proxyRules: r,
										proxyBypassRules: n,
										pacScript: "",
									}),
									Wi.app.setProxy({
										proxyRules: r,
										proxyBypassRules: n,
										pacScript: "",
									});
							}
						}
					}
					addTabbedWindow(e) {
						N && e.win && this.m.addTabbedWindow(e.win);
					}
					load(e, i = Object.create(null)) {
						this.t.trace(`window#load: attempt to load window (id: ${this.Q})`),
							this.isDocumentEdited() &&
								(!i.isReload || !this.nb.isHotExitEnabled()) &&
								this.setDocumentEdited(!1),
							i.isReload ||
								(this.getRepresentedFilename() &&
									this.setRepresentedFilename(""),
								this.m.setTitle(this.rb.nameLong)),
							this.Db(e, i),
							this.vb === 0 ? (this.S = e) : (this.db = e),
							(this.vb = 1),
							this.m.loadURL(
								$t
									.asBrowserUri(
										`vs/code/electron-sandbox/workbench/workbench${this.s.isBuilt ? "" : "-dev"}.html`,
									)
									.toString(!0),
							);
						const s = this.eb;
						(this.eb = !0),
							!this.s.isBuilt &&
								!this.s.extensionTestsLocationURI &&
								this.D(
									new bs(() => {
										this.m &&
											!this.m.isVisible() &&
											!this.m.isMinimized() &&
											!e.shadowWindowForWorkspaceId &&
											(this.m.show(),
											this.focus({ force: !0 }),
											this.m.webContents.openDevTools());
									}, 1e4),
								).schedule(),
							this.N.fire({
								workspace: e.workspace,
								reason: i.isReload ? 3 : s ? 2 : 1,
							});
					}
					Db(e, i) {
						const s = (this.S ?? this.db)?.userEnv;
						if (s) {
							const r = wn(s) && !wn(e.userEnv),
								n = this.isExtensionDevelopmentHost;
							(r || n) && (e.userEnv = { ...s, ...e.userEnv });
						}
						process.env.CHROME_CRASHPAD_PIPE_NAME &&
							Object.assign(e.userEnv, {
								CHROME_CRASHPAD_PIPE_NAME:
									process.env.CHROME_CRASHPAD_PIPE_NAME,
							}),
							i.disableExtensions !== void 0 &&
								(e["disable-extensions"] = i.disableExtensions);
						try {
							e.handle = H.wrap(this.m.getNativeWindowHandle());
						} catch (r) {
							this.t.error(`Error getting native window handle: ${r}`);
						}
						(e.fullscreen = this.isFullScreen),
							(e.maximized = this.m.isMaximized()),
							(e.partsSplash = this.lb.getWindowSplash()),
							(e.zoomLevel = this.Kb()),
							(e.isCustomZoomLevel = typeof this.ab == "number"),
							e.isCustomZoomLevel &&
								e.partsSplash &&
								(e.partsSplash.zoomLevel = e.zoomLevel),
							Fe("code/willOpenNewWindow"),
							(e.perfMarks = Df()),
							this.bb.update(e);
					}
					async reload(e) {
						const i = Object.assign({}, this.S);
						(i.workspace = await this.Eb(i)),
							delete i.filesToOpenOrCreate,
							delete i.filesToDiff,
							delete i.filesToMerge,
							delete i.filesToWait,
							this.isExtensionDevelopmentHost &&
								e &&
								((i.verbose = e.verbose),
								(i.debugId = e.debugId),
								(i.extensionEnvironment = e.extensionEnvironment),
								(i["inspect-extensions"] = e["inspect-extensions"]),
								(i["inspect-brk-extensions"] = e["inspect-brk-extensions"]),
								(i["extensions-dir"] = e["extensions-dir"])),
							(i.accessibilitySupport = Wi.app.isAccessibilitySupportEnabled()),
							(i.isInitialStartup = !1),
							(i.policiesData = this.gb.serialize()),
							(i.continueOn = this.s.continueOn),
							(i.profiles = {
								all: this.hb.profiles,
								profile: this.profile || this.hb.defaultProfile,
								home: this.hb.profilesHome,
							}),
							(i.logLevel = this.fb.getLogLevel()),
							(i.loggers = {
								window: this.fb.getRegisteredLoggers(this.id),
								global: this.fb.getRegisteredLoggers(),
							}),
							(i.cssModules = this.ub.isEnabled
								? await this.ub.getCssModules(!0)
								: void 0),
							(i.hmr = e?.hmr),
							this.load(i, {
								isReload: !0,
								disableExtensions: e?.["disable-extensions"],
							});
					}
					async Eb(e) {
						if (Vt(e.workspace)) {
							const i = e.workspace.configPath;
							if (i.scheme === R.file && !(await this.ib.exists(i))) return;
						} else if (Ci(e.workspace)) {
							const i = e.workspace.uri;
							if (i.scheme === R.file && !(await this.ib.exists(i))) return;
						}
						return e.workspace;
					}
					serializeWindowState() {
						if (!this.m) return hn();
						if (this.isFullScreen) {
							let s;
							try {
								s = Wi.screen.getDisplayMatching(this.getBounds());
							} catch {}
							const r = hn();
							return {
								mode: 3,
								display: s ? s.id : void 0,
								width: this.U.width || r.width,
								height: this.U.height || r.height,
								x: this.U.x || 0,
								y: this.U.y || 0,
								zoomLevel: this.ab,
							};
						}
						const e = Object.create(null);
						let i;
						if (
							(!N && this.m.isMaximized() ? (i = 0) : (i = 1),
							i === 0 ? (e.mode = 0) : (e.mode = 1),
							i === 1 || i === 0)
						) {
							let s;
							i === 1 ? (s = this.getBounds()) : (s = this.m.getNormalBounds()),
								(e.x = s.x),
								(e.y = s.y),
								(e.width = s.width),
								(e.height = s.height);
						}
						return (e.zoomLevel = this.ab), e;
					}
					Fb(e) {
						Fe("code/willRestoreCodeWindowState");
						let i = !1;
						if (e) {
							this.ab = e.zoomLevel;
							try {
								const s = Wi.screen.getAllDisplays();
								(i = s.length > 1), (e = Xu.validateWindowState(this.t, e, s));
							} catch (s) {
								this.t.warn(`Unexpected error validating window state: ${s}
${s.stack}`);
							}
						}
						return Fe("code/didRestoreCodeWindowState"), [e || hn(), i];
					}
					getBounds() {
						const [e, i] = this.m.getPosition(),
							[s, r] = this.m.getSize();
						return { x: e, y: i, width: s, height: r };
					}
					I(e, i) {
						super.I(e, i),
							this.sendWhenReady(
								e ? "vscode:enterFullScreen" : "vscode:leaveFullScreen",
								Ge.None,
							),
							this.W && this.Ib(this.W, !1);
					}
					Hb() {
						let e = Tx(this.q);
						return (
							["visible", "toggle", "hidden"].indexOf(e) < 0 && (e = "classic"),
							e
						);
					}
					Ib(e, i = !0) {
						N ||
							(e === "toggle" &&
								i &&
								this.send("vscode:showInfoMessage", w(2522, null)),
							e === "hidden"
								? setTimeout(() => {
										this.Jb(e);
									})
								: this.Jb(e));
					}
					Jb(e) {
						const i = this.isFullScreen;
						switch (e) {
							case "classic":
								this.m.setMenuBarVisibility(!i), (this.m.autoHideMenuBar = i);
								break;
							case "visible":
								this.m.setMenuBarVisibility(!0), (this.m.autoHideMenuBar = !1);
								break;
							case "toggle":
								this.m.setMenuBarVisibility(!1), (this.m.autoHideMenuBar = !0);
								break;
							case "hidden":
								this.m.setMenuBarVisibility(!1), (this.m.autoHideMenuBar = !1);
								break;
						}
					}
					notifyZoomLevel(e) {
						this.ab = e;
					}
					Kb() {
						return typeof this.ab == "number"
							? this.ab
							: this.q.getValue("window")?.zoomLevel;
					}
					close() {
						this.m?.close();
					}
					sendWhenReady(e, i, ...s) {
						this.isReady
							? this.send(e, ...s)
							: this.ready().then(() => {
									i.isCancellationRequested || this.send(e, ...s);
								});
					}
					send(e, ...i) {
						if (this.m) {
							if (this.m.isDestroyed() || this.m.webContents.isDestroyed()) {
								this.t.warn(
									`Sending IPC message to channel '${e}' for window that is destroyed`,
								);
								return;
							}
							try {
								this.m.webContents.send(e, ...i);
							} catch (s) {
								this.t.warn(
									`Error sending IPC message to channel '${e}' of window ${this.Q}: ${Es(s)}`,
								);
							}
						}
					}
					updateTouchBar(e) {
						N &&
							this.Y.forEach((i, s) => {
								const r = e[s];
								i.segments = this.Nb(r);
							});
					}
					Lb() {
						if (N) {
							for (let e = 0; e < 10; e++) {
								const i = this.Mb();
								this.Y.push(i);
							}
							this.m.setTouchBar(new Wi.TouchBar({ items: this.Y }));
						}
					}
					Mb(e = []) {
						const i = this.Nb(e),
							s = new Wi.TouchBar.TouchBarSegmentedControl({
								segments: i,
								mode: "buttons",
								segmentStyle: "automatic",
								change: (r) => {
									this.sendWhenReady("vscode:runAction", Ge.None, {
										id: s.segments[r].id,
										from: "touchbar",
									});
								},
							});
						return s;
					}
					Nb(e = []) {
						return e.map((s) => {
							let r;
							s.icon &&
								!qc.isThemeIcon(s.icon) &&
								s.icon?.dark?.scheme === R.file &&
								((r = Wi.nativeImage.createFromPath(
									P.revive(s.icon.dark).fsPath,
								)),
								r.isEmpty() && (r = void 0));
							let n;
							return (
								typeof s.title == "string"
									? (n = s.title)
									: (n = s.title.value),
								{ id: s.id, label: r ? void 0 : n, icon: r }
							);
						});
					}
					matches(e) {
						return this.m?.webContents.id === e.id;
					}
					dispose() {
						super.dispose(), this.fb.deregisterLoggers(this.id);
					}
				}),
				(Bc = __decorate(
					[
						__param(1, G),
						__param(2, To),
						__param(3, ut),
						__param(4, xn),
						__param(5, Cs),
						__param(6, nt),
						__param(7, lc),
						__param(8, wo),
						__param(9, He),
						__param(10, yo),
						__param(11, Pr),
						__param(12, Eo),
						__param(13, It),
						__param(14, sr),
						__param(15, Ne),
						__param(16, tt),
						__param(17, Lc),
						__param(18, _t),
						__param(19, Ii),
						__param(20, ws),
						__param(21, Mo),
					],
					Bc,
				));
		},
	});
import Bo from "electron";
function jA(t) {
	const e = { openedWindows: [] },
		i = t || { openedWindows: [] };
	return (
		i.lastActiveWindow && (e.lastActiveWindow = qm(i.lastActiveWindow)),
		i.lastPluginDevelopmentHostWindow &&
			(e.lastPluginDevelopmentHostWindow = qm(
				i.lastPluginDevelopmentHostWindow,
			)),
		Array.isArray(i.openedWindows) &&
			(e.openedWindows = i.openedWindows.map((s) => qm(s))),
		e
	);
}
function qm(t) {
	const e = { uiState: t.uiState };
	return (
		t.backupPath && (e.backupPath = t.backupPath),
		t.remoteAuthority && (e.remoteAuthority = t.remoteAuthority),
		t.folder && (e.folderUri = P.parse(t.folder)),
		t.workspaceIdentifier &&
			(e.workspace = {
				id: t.workspaceIdentifier.id,
				configPath: P.parse(t.workspaceIdentifier.configURIPath),
			}),
		e
	);
}
function TA(t) {
	return {
		lastActiveWindow: t.lastActiveWindow && Bm(t.lastActiveWindow),
		lastPluginDevelopmentHostWindow:
			t.lastPluginDevelopmentHostWindow &&
			Bm(t.lastPluginDevelopmentHostWindow),
		openedWindows: t.openedWindows.map((e) => Bm(e)),
	};
}
function Bm(t) {
	return {
		workspaceIdentifier: t.workspace && {
			id: t.workspace.id,
			configURIPath: t.workspace.configPath.toString(),
		},
		folder: t.folderUri && t.folderUri.toString(),
		backupPath: t.backupPath,
		remoteAuthority: t.remoteAuthority,
		uiState: t.uiState,
	};
}
var Jh,
	Xh,
	UA = m({
		"out-build/vs/platform/windows/electron-main/windowsStateHandler.js"() {
			"use strict";
			F(),
				z(),
				rt(),
				ie(),
				Ve(),
				ot(),
				Q(),
				Li(),
				si(),
				fc(),
				ti(),
				(Xh = class extends j {
					static {
						Jh = this;
					}
					static {
						this.a = "windowsState";
					}
					get state() {
						return this.b;
					}
					constructor(e, i, s, r, n) {
						super(),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = n),
							(this.b = jA(this.h.getItem(Jh.a))),
							(this.c = void 0),
							(this.f = !1),
							this.q();
					}
					q() {
						Bo.app.on("browser-window-blur", () => {
							this.f || this.s();
						}),
							this.D(this.j.onBeforeCloseWindow((e) => this.t(e))),
							this.D(this.j.onBeforeShutdown(() => this.r())),
							this.D(
								this.g.onDidChangeWindowsCount((e) => {
									e.newCount - e.oldCount > 0 && (this.c = void 0);
								}),
							),
							this.D(this.g.onDidDestroyWindow((e) => this.t(e)));
					}
					r() {
						(this.f = !0), this.s();
					}
					s() {
						const e = new Set(),
							i = {
								openedWindows: [],
								lastPluginDevelopmentHostWindow:
									this.b.lastPluginDevelopmentHostWindow,
								lastActiveWindow: this.c,
							};
						if (!i.lastActiveWindow) {
							let n = this.g.getLastActiveWindow();
							(!n ||
								n.isExtensionDevelopmentHost ||
								n.config?.shadowWindowForWorkspaceId) &&
								(n = this.g
									.getWindows()
									.find(
										(o) =>
											!o.isExtensionDevelopmentHost &&
											!o.config?.shadowWindowForWorkspaceId,
									)),
								n &&
									((i.lastActiveWindow = this.u(n)),
									i.lastActiveWindow.uiState.mode === 3 &&
										e.add(i.lastActiveWindow.uiState.display));
						}
						const s = this.g
							.getWindows()
							.find(
								(n) => n.isExtensionDevelopmentHost && !n.isExtensionTestHost,
							);
						s &&
							((i.lastPluginDevelopmentHostWindow = this.u(s)),
							i.lastPluginDevelopmentHostWindow.uiState.mode === 3 &&
								(e.has(i.lastPluginDevelopmentHostWindow.uiState.display)
									? N &&
										!s.win?.isSimpleFullScreen() &&
										(i.lastPluginDevelopmentHostWindow.uiState.mode = 1)
									: e.add(i.lastPluginDevelopmentHostWindow.uiState.display))),
							this.g.getWindowCount() > 1 &&
								(i.openedWindows = this.g
									.getWindows()
									.filter(
										(n) =>
											!n.isExtensionDevelopmentHost &&
											!n.config?.shadowWindowForWorkspaceId,
									)
									.map((n) => {
										const o = this.u(n);
										return (
											o.uiState.mode === 3 &&
												(e.has(o.uiState.display)
													? N &&
														o.windowId !== i.lastActiveWindow?.windowId &&
														!n.win?.isSimpleFullScreen() &&
														(o.uiState.mode = 1)
													: e.add(o.uiState.display)),
											o
										);
									}));
						const r = TA(i);
						this.h.setItem(Jh.a, r),
							this.f &&
								this.m.trace("[WindowsStateHandler] onBeforeShutdown", r);
					}
					t(e) {
						if (this.j.quitRequested) return;
						const i = this.u(e);
						e.isExtensionDevelopmentHost && !e.isExtensionTestHost
							? (this.b.lastPluginDevelopmentHostWindow = i)
							: !e.isExtensionDevelopmentHost &&
								e.openedWorkspace &&
								!e.config?.shadowWindowForWorkspaceId &&
								this.b.openedWindows.forEach((s) => {
									const r =
											Vt(e.openedWorkspace) &&
											s.workspace?.id === e.openedWorkspace.id,
										n =
											Ci(e.openedWorkspace) &&
											s.folderUri &&
											Ze.isEqual(s.folderUri, e.openedWorkspace.uri);
									(r || n) && (s.uiState = i.uiState);
								}),
							this.g.getWindowCount() === 1 && (this.c = i);
					}
					u(e) {
						return {
							windowId: e.id,
							workspace: Vt(e.openedWorkspace) ? e.openedWorkspace : void 0,
							folderUri: Ci(e.openedWorkspace) ? e.openedWorkspace.uri : void 0,
							backupPath: e.backupPath,
							remoteAuthority: e.remoteAuthority,
							uiState: e.serializeWindowState(),
						};
					}
					getNewWindowState(e) {
						const i = this.w(e),
							s = this.n.getValue("window");
						if (i.mode === 3) {
							let r;
							i.hasDefaultState
								? (r = !!(
										s?.newWindowDimensions &&
										["fullscreen", "inherit", "offset"].indexOf(
											s.newWindowDimensions,
										) >= 0
									))
								: (r = !!(this.j.wasRestarted || s?.restoreFullscreen)),
								r || (i.mode = 1);
						}
						return i;
					}
					w(e) {
						const i = this.g.getLastActiveWindow();
						if (!e.extensionTestsPath) {
							if (
								e.extensionDevelopmentPath &&
								this.state.lastPluginDevelopmentHostWindow
							)
								return this.state.lastPluginDevelopmentHostWindow.uiState;
							const c = e.workspace;
							if (Vt(c)) {
								const u = this.state.openedWindows
									.filter((d) => d.workspace && d.workspace.id === c.id)
									.map((d) => d.uiState);
								if (u.length) return u[0];
							}
							if (Ci(c)) {
								const u = this.state.openedWindows
									.filter((d) => d.folderUri && Ze.isEqual(d.folderUri, c.uri))
									.map((d) => d.uiState);
								if (u.length) return u[0];
							} else if (e.backupPath) {
								const u = this.state.openedWindows
									.filter((d) => d.backupPath === e.backupPath)
									.map((d) => d.uiState);
								if (u.length) return u[0];
							}
							const l = this.c || this.state.lastActiveWindow;
							if (!i && l) return l.uiState;
						}
						let s;
						const r = Bo.screen.getAllDisplays();
						if (r.length === 1) s = r[0];
						else {
							if (N) {
								const c = Bo.screen.getCursorScreenPoint();
								s = Bo.screen.getDisplayNearestPoint(c);
							}
							!s && i && (s = Bo.screen.getDisplayMatching(i.getBounds())),
								s || (s = Bo.screen.getPrimaryDisplay() || r[0]);
						}
						let n = hn();
						(n.x = Math.round(s.bounds.x + s.bounds.width / 2 - n.width / 2)),
							(n.y = Math.round(
								s.bounds.y + s.bounds.height / 2 - n.height / 2,
							));
						const o = this.n.getValue("window");
						let a = !0;
						if (o?.newWindowDimensions) {
							if (o.newWindowDimensions === "maximized") (n.mode = 0), (a = !1);
							else if (o.newWindowDimensions === "fullscreen")
								(n.mode = 3), (a = !1);
							else if (
								(o.newWindowDimensions === "inherit" ||
									o.newWindowDimensions === "offset") &&
								i
							) {
								const c = i.serializeWindowState();
								c.mode === 3 ? (n.mode = 3) : (n = { ...c, zoomLevel: void 0 }),
									(a = n.mode !== 3 && o.newWindowDimensions === "offset");
							}
						}
						return a && (n = this.z(n)), (n.hasDefaultState = !0), n;
					}
					z(e) {
						if (this.g.getWindows().length === 0) return e;
						(e.x = typeof e.x == "number" ? e.x : 0),
							(e.y = typeof e.y == "number" ? e.y : 0);
						const i = this.g.getWindows().map((s) => s.getBounds());
						for (; i.some((s) => s.x === e.x || s.y === e.y); )
							(e.x += 30), (e.y += 30);
						return e;
					}
				}),
				(Xh = Jh =
					__decorate(
						[
							__param(0, _t),
							__param(1, Ii),
							__param(2, Ne),
							__param(3, G),
							__param(4, He),
						],
						Xh,
					));
		},
	});
import * as qA from "fs";
import { app as BA, BrowserWindow as Kh, shell as zA } from "electron";
import { hostname as HA, release as VA, arch as GA } from "os";
function Yh(t) {
	return Vt(t?.workspace);
}
function zo(t) {
	return Ci(t?.workspace);
}
var Qh,
	JA = m({
		"out-build/vs/platform/windows/electron-main/windowsMainService.js"() {
			"use strict";
			fa(),
				Ut(),
				Mt(),
				q(),
				hi(),
				vr(),
				F(),
				Ce(),
				ge(),
				qs(),
				z(),
				gs(),
				rt(),
				Ie(),
				ie(),
				ve(),
				pc(),
				Ve(),
				mn(),
				bt(),
				Be(),
				Y(),
				ot(),
				Q(),
				dc(),
				Ph(),
				vc(),
				Li(),
				un(),
				d6(),
				si(),
				Q4(),
				UA(),
				ti(),
				C1(),
				_h(),
				gn(),
				hc(),
				Rs(),
				an(),
				jc(),
				Dh(),
				$c(),
				(Qh = class extends j {
					constructor(
						e,
						i,
						s,
						r,
						n,
						o,
						a,
						c,
						l,
						u,
						d,
						f,
						p,
						v,
						g,
						b,
						y,
						k,
						I,
						C,
						_,
						K,
						se,
					) {
						super(),
							(this.r = e),
							(this.s = i),
							(this.t = s),
							(this.u = r),
							(this.w = n),
							(this.z = o),
							(this.C = a),
							(this.F = c),
							(this.G = l),
							(this.H = u),
							(this.I = d),
							(this.J = f),
							(this.L = p),
							(this.M = v),
							(this.N = g),
							(this.O = b),
							(this.P = y),
							(this.Q = k),
							(this.R = I),
							(this.S = C),
							(this.U = _),
							(this.W = K),
							(this.X = se),
							(this.a = this.D(new $())),
							(this.onDidOpenWindow = this.a.event),
							(this.b = this.D(new $())),
							(this.onDidSignalReadyWindow = this.b.event),
							(this.c = this.D(new $())),
							(this.onDidDestroyWindow = this.c.event),
							(this.f = this.D(new $())),
							(this.onDidChangeWindowsCount = this.f.event),
							(this.g = this.D(new $())),
							(this.onDidMaximizeWindow = this.g.event),
							(this.h = this.D(new $())),
							(this.onDidUnmaximizeWindow = this.h.event),
							(this.j = this.D(new $())),
							(this.onDidChangeFullScreen = this.j.event),
							(this.m = this.D(new $())),
							(this.onDidTriggerSystemContextMenu = this.m.event),
							(this.n = new Map()),
							(this.q = this.D(new Xh(this, this.F, this.J, this.z, this.M))),
							this.Y();
					}
					Y() {
						this.D(this.O.onDidEnterWorkspace((e) => this.b.fire(e.window))),
							this.D(
								this.onDidSignalReadyWindow((e) => {
									if (
										e.config?.extensionDevelopmentPath ||
										e.config?.extensionTestsPath
									) {
										const i = new De();
										if (
											(i.add(
												x.any(e.onDidClose, e.onDidDestroy)(() => i.dispose()),
											),
											e.config.extensionDevelopmentPath)
										)
											for (const s of e.config.extensionDevelopmentPath)
												i.add(this.S.addValidFileRoot(s));
										e.config.extensionTestsPath &&
											i.add(
												this.S.addValidFileRoot(e.config.extensionTestsPath),
											);
									}
								}),
							);
					}
					openEmptyWindow(e, i) {
						const s = this.H.args,
							r = i?.remoteAuthority || void 0,
							n = !0,
							o = i?.forceReuseWindow,
							a = !o;
						return this.open({
							...e,
							cli: s,
							forceEmpty: n,
							forceNewWindow: a,
							forceReuseWindow: o,
							remoteAuthority: r,
							forceTempProfile: i?.forceTempProfile,
							forceProfile: i?.forceProfile,
						});
					}
					openExistingWindow(e, i) {
						e.focus(), this.Z(i, [e]);
					}
					async open(e) {
						this.z.trace("windowsManager#open"),
							e.addMode &&
								(e.initialStartup || !this.getLastActiveWindow()) &&
								(e.addMode = !1);
						const i = [],
							s = [],
							r = [],
							n = [],
							o = [];
						let a,
							c = !1;
						const l = await this.fb(e);
						this.z.trace("windowsManager#open pathsToOpen", l);
						for (const v of l)
							zo(v)
								? e.addMode
									? i.push(v)
									: s.push(v)
								: Yh(v)
									? r.push(v)
									: v.fileUri
										? (a ||
												(a = {
													filesToOpenOrCreate: [],
													filesToDiff: [],
													filesToMerge: [],
													remoteAuthority: v.remoteAuthority,
												}),
											a.filesToOpenOrCreate.push(v))
										: v.backupPath
											? o.push({
													backupFolder: Te(v.backupPath),
													remoteAuthority: v.remoteAuthority,
												})
											: (c = !0);
						e.diffMode &&
							a &&
							a.filesToOpenOrCreate.length >= 2 &&
							((a.filesToDiff = a.filesToOpenOrCreate.slice(0, 2)),
							(a.filesToOpenOrCreate = [])),
							e.mergeMode &&
								a &&
								a.filesToOpenOrCreate.length === 4 &&
								((a.filesToMerge = a.filesToOpenOrCreate.slice(0, 4)),
								(a.filesToOpenOrCreate = []),
								(a.filesToDiff = [])),
							a &&
								e.waitMarkerFileURI &&
								(a.filesToWait = {
									paths: Dt([
										...a.filesToDiff,
										a.filesToMerge[3],
										...a.filesToOpenOrCreate,
									]),
									waitMarkerFileUri: e.waitMarkerFileURI,
								}),
							e.initialStartup
								? (n.push(...this.O.getUntitledWorkspaces()),
									r.push(...n),
									o.push(...this.L.getEmptyWindowBackups()))
								: (o.length = 0);
						const { windows: u, filesOpenedInWindow: d } = await this.$(
							e,
							r,
							s,
							o,
							c,
							a,
							i,
						);
						if (
							(this.z.trace(
								`windowsManager#open used window count ${u.length} (workspacesToOpen: ${r.length}, foldersToOpen: ${s.length}, emptyToRestore: ${o.length}, openOneEmptyWindow: ${c})`,
							),
							u.length > 1)
						)
							if (d) d.focus();
							else {
								const v =
									this.q.state.lastActiveWindow &&
									!e.forceEmpty &&
									!e.cli._.length &&
									!e.cli["file-uri"] &&
									!e.cli["folder-uri"] &&
									!(e.urisToOpen && e.urisToOpen.length);
								let g = !0,
									b = !0;
								if (v) {
									const y = u.filter(
										(k) =>
											this.q.state.lastActiveWindow &&
											k.backupPath === this.q.state.lastActiveWindow.backupPath,
									);
									y.length && (y[0].focus(), (g = !1), (b = !1));
								}
								if (g)
									for (let y = u.length - 1; y >= 0; y--) {
										const k = u[y];
										if (
											!(
												(k.openedWorkspace &&
													n.some(
														(I) =>
															k.openedWorkspace &&
															I.workspace.id === k.openedWorkspace.id,
													)) ||
												(k.backupPath &&
													o.some(
														(I) =>
															k.backupPath &&
															I.backupFolder === Te(k.backupPath),
													))
											)
										) {
											k.focus(), (b = !1);
											break;
										}
									}
								b && u[u.length - 1].focus();
							}
						const f = a && a.filesToDiff.length > 0,
							p = a && a.filesToMerge.length > 0;
						if (
							!u.some((v) => v.isExtensionDevelopmentHost) &&
							!f &&
							!p &&
							!e.noRecentEntry
						) {
							const v = [];
							for (const g of l)
								Yh(g) && !g.transient
									? v.push({
											label: g.label,
											workspace: g.workspace,
											remoteAuthority: g.remoteAuthority,
										})
									: zo(g)
										? v.push({
												label: g.label,
												folderUri: g.workspace.uri,
												remoteAuthority: g.remoteAuthority,
											})
										: g.fileUri &&
											v.push({
												label: g.label,
												fileUri: g.fileUri,
												remoteAuthority: g.remoteAuthority,
											});
							this.N.addRecentlyOpened(v);
						}
						return this.Z(e, u), u;
					}
					Z(e, i) {
						const s = e.waitMarkerFileURI;
						e.context === 0 &&
							s &&
							i.length === 1 &&
							i[0] &&
							(async () => {
								await i[0].whenClosedOrLoaded;
								try {
									await this.R.del(s);
								} catch {}
							})();
					}
					async $(e, i, s, r, n, o, a) {
						const c = [];
						let l;
						function u(y, k) {
							c.push(y), k && ((l = y), (o = void 0));
						}
						let { openFolderInNewWindow: d, openFilesInNewWindow: f } =
							this.rb(e);
						if (!e.initialStartup && a.length > 0) {
							const y = a[0].remoteAuthority,
								k = this.xb(y);
							k &&
								u(
									this.cb(
										k,
										a.map((I) => I.workspace.uri),
									),
								);
						}
						const p = s.length + i.length + r.length;
						if (o && p === 0) {
							const y =
									o.filesToOpenOrCreate[0] ||
									o.filesToDiff[0] ||
									o.filesToMerge[3],
								k = this.getWindows().filter(
									(C) => o && di(C.remoteAuthority, o.remoteAuthority),
								);
							let I;
							y?.fileUri &&
								!f &&
								((e.context === 4 ||
									e.context === 0 ||
									e.context === 1 ||
									e.context === 6) &&
									(I = await lD(k, y.fileUri, async (C) =>
										C.configPath.scheme === R.file
											? this.O.resolveLocalWorkspace(C.configPath)
											: void 0,
									)),
								I || (I = this.yb(k))),
								I
									? Vt(I.openedWorkspace)
										? i.push({
												workspace: I.openedWorkspace,
												remoteAuthority: I.remoteAuthority,
											})
										: Ci(I.openedWorkspace)
											? s.push({
													workspace: I.openedWorkspace,
													remoteAuthority: I.remoteAuthority,
												})
											: u(this.ab(e, I, o), !0)
									: u(
											await this.sb({
												userEnv: e.userEnv,
												cli: e.cli,
												initialStartup: e.initialStartup,
												shadowWindowForWorkspaceId:
													e.shadowWindowForWorkspaceId,
												filesToOpen: o,
												forceNewWindow: !0,
												remoteAuthority: o.remoteAuthority,
												forceNewTabbedWindow: e.forceNewTabbedWindow,
												forceProfile: e.forceProfile,
												forceTempProfile: e.forceTempProfile,
											}),
											!0,
										);
						}
						const v = Zi(i, (y) => y.workspace.id);
						if (v.length > 0) {
							const y = Dt(
								v.map((k) => xo(this.getWindows(), k.workspace.configPath)),
							);
							if (y.length > 0) {
								const k = y[0],
									I = di(o?.remoteAuthority, k.remoteAuthority) ? o : void 0;
								u(this.ab(e, k, I), !!I), (d = !0);
							}
							for (const k of v) {
								if (
									y.some(
										(_) =>
											_.openedWorkspace &&
											_.openedWorkspace.id === k.workspace.id,
									)
								)
									continue;
								const I = k.remoteAuthority,
									C = di(o?.remoteAuthority, I) ? o : void 0;
								u(await this.eb(e, k, d, C), !!C), (d = !0);
							}
						}
						const g = Zi(s, (y) => Ze.getComparisonKey(y.workspace.uri));
						if (g.length > 0) {
							const y = Dt(
								g.map((k) => xo(this.getWindows(), k.workspace.uri)),
							);
							if (y.length > 0) {
								const k = y[0],
									I = di(o?.remoteAuthority, k.remoteAuthority) ? o : void 0;
								u(this.ab(e, k, I), !!I), (d = !0);
							}
							for (const k of g) {
								if (
									y.some(
										(_) =>
											Ci(_.openedWorkspace) &&
											Ze.isEqual(_.openedWorkspace.uri, k.workspace.uri),
									)
								)
									continue;
								const I = k.remoteAuthority,
									C = di(o?.remoteAuthority, I) ? o : void 0;
								u(await this.eb(e, k, d, C), !!C), (d = !0);
							}
						}
						const b = Zi(r, (y) => y.backupFolder);
						if (b.length > 0)
							for (const y of b) {
								const k = y.remoteAuthority,
									I = di(o?.remoteAuthority, k) ? o : void 0;
								u(await this.db(e, !0, k, I, y), !!I), (d = !0);
							}
						if (o || n) {
							const y = o ? o.remoteAuthority : e.remoteAuthority;
							u(await this.db(e, d, y, o), !!o);
						}
						return { windows: Zi(c), filesOpenedInWindow: l };
					}
					ab(e, i, s) {
						this.z.trace("windowsManager#doOpenFilesInExistingWindow", {
							filesToOpen: s,
						}),
							this.bb(i);
						const r = {
							filesToOpenOrCreate: s?.filesToOpenOrCreate,
							filesToDiff: s?.filesToDiff,
							filesToMerge: s?.filesToMerge,
							filesToWait: s?.filesToWait,
							termProgram: e?.userEnv?.TERM_PROGRAM,
						};
						return i.sendWhenReady("vscode:openFiles", Ge.None, r), i;
					}
					bb(e) {
						let i = e;
						const s = Kh.getFocusedWindow();
						if (s && s.id !== e.id) {
							const r = this.W.getWindowByWebContents(s.webContents);
							r && r.parentId === e.id && (i = r);
						}
						i.focus();
					}
					cb(e, i) {
						this.z.trace("windowsManager#doAddFoldersToExistingWindow", {
							foldersToAdd: i,
						}),
							e.focus();
						const s = { foldersToAdd: i };
						return e.sendWhenReady("vscode:addFolders", Ge.None, s), e;
					}
					db(e, i, s, r, n) {
						this.z.trace("windowsManager#doOpenEmpty", {
							restore: !!n,
							remoteAuthority: s,
							filesToOpen: r,
							forceNewWindow: i,
						});
						let o;
						return (
							!i &&
								typeof e.contextWindowId == "number" &&
								(o = this.getWindowById(e.contextWindowId)),
							this.sb({
								userEnv: e.userEnv,
								cli: e.cli,
								initialStartup: e.initialStartup,
								remoteAuthority: s,
								forceNewWindow: i,
								forceNewTabbedWindow: e.forceNewTabbedWindow,
								shadowWindowForWorkspaceId: e.shadowWindowForWorkspaceId,
								filesToOpen: r,
								windowToUse: o,
								emptyWindowBackupInfo: n,
								forceProfile: e.forceProfile,
								forceTempProfile: e.forceTempProfile,
							})
						);
					}
					eb(e, i, s, r, n) {
						return (
							this.z.trace("windowsManager#doOpenFolderOrWorkspace", {
								folderOrWorkspace: i,
								filesToOpen: r,
							}),
							!s &&
								!n &&
								typeof e.contextWindowId == "number" &&
								(n = this.getWindowById(e.contextWindowId)),
							this.sb({
								workspace: i.workspace,
								userEnv: e.userEnv,
								cli: e.cli,
								initialStartup: e.initialStartup,
								remoteAuthority: i.remoteAuthority,
								forceNewWindow: s,
								forceNewTabbedWindow: e.forceNewTabbedWindow,
								filesToOpen: r,
								windowToUse: n,
								shadowWindowForWorkspaceId: e.shadowWindowForWorkspaceId,
								forceProfile: e.forceProfile,
								forceTempProfile: e.forceTempProfile,
							})
						);
					}
					async fb(e) {
						let i,
							s = !1,
							r = !1;
						if (
							(e.urisToOpen && e.urisToOpen.length > 0
								? ((i = await this.gb(e)), (s = !0))
								: e.forceEmpty
									? (i = [Object.create(null)])
									: e.cli._.length || e.cli["folder-uri"] || e.cli["file-uri"]
										? ((i = await this.hb(e.cli)),
											i.length === 0 && i.push(Object.create(null)),
											(s = !0))
										: ((i = await this.jb()),
											i.length === 0 && i.push(Object.create(null)),
											(r = !0)),
							!e.addMode && s)
						) {
							const n = i.filter((o) => zo(o));
							if (n.length > 1) {
								const o = n[0].remoteAuthority;
								if (n.every((a) => di(a.remoteAuthority, o))) {
									const a = await this.O.createUntitledWorkspace(
										n.map((c) => ({ uri: c.workspace.uri })),
									);
									i.push({ workspace: a, remoteAuthority: o }),
										(i = i.filter((c) => !zo(c)));
								}
							}
						}
						if (
							e.initialStartup &&
							!r &&
							this.M.getValue("window")?.restoreWindows === "preserve"
						) {
							const n = await this.jb();
							i.unshift(...n.filter((o) => Yh(o) || zo(o) || o.backupPath));
						}
						return i;
					}
					async gb(e) {
						const i = {
								gotoLineMode: e.gotoLineMode,
								remoteAuthority: e.remoteAuthority,
							},
							s = await Promise.all(
								Dt(e.urisToOpen || []).map(async (r) => {
									const n = await this.lb(r, i);
									if (n) return (n.label = r.label), n;
									const o = this.nb(r);
									this.Q.showMessageBox(
										{
											type: "info",
											buttons: [w(2523, null)],
											message:
												o.scheme === R.file ? w(2524, null) : w(2525, null),
											detail:
												o.scheme === R.file
													? w(2526, null, Zn(o, { os: Ri, tildify: this.H }))
													: w(2527, null, o.toString(!0)),
										},
										Kh.getFocusedWindow() ?? void 0,
									);
								}),
							);
						return Dt(s);
					}
					async hb(e) {
						const i = [],
							s = {
								ignoreFileNotFound: !0,
								gotoLineMode: e.goto,
								remoteAuthority: e.remote || void 0,
								forceOpenWorkspaceAsFile:
									(e.diff && e._.length === 2) || (e.merge && e._.length === 4),
							},
							r = e["folder-uri"];
						if (r) {
							const a = await Promise.all(
								r.map((c) => {
									const l = this.ib(c);
									if (l) return this.lb({ folderUri: l }, s);
								}),
							);
							i.push(...Dt(a));
						}
						const n = e["file-uri"];
						if (n) {
							const a = await Promise.all(
								n.map((c) => {
									const l = this.ib(c);
									if (l)
										return this.lb(
											on(c) ? { workspaceUri: l } : { fileUri: l },
											s,
										);
								}),
							);
							i.push(...Dt(a));
						}
						const o = await Promise.all(
							e._.map((a) =>
								s.remoteAuthority ? this.qb(a, s) : this.ob(a, s),
							),
						);
						return i.push(...Dt(o)), i;
					}
					ib(e) {
						try {
							const i = P.parse(e);
							if (!i.scheme) {
								this.z.error(`Invalid URI input string, scheme missing: ${e}`);
								return;
							}
							return i.path ? i : i.with({ path: "/" });
						} catch (i) {
							this.z.error(`Invalid URI input string: ${e}, ${i.message}`);
						}
					}
					async jb() {
						const e = this.kb();
						switch (e) {
							case "none":
								return [];
							case "one":
							case "all":
							case "preserve":
							case "folders": {
								const i = [];
								e !== "one" && i.push(...this.q.state.openedWindows),
									this.q.state.lastActiveWindow &&
										i.push(this.q.state.lastActiveWindow);
								const s = await Promise.all(
									i.map(async (r) => {
										if (r.workspace) {
											const n = await this.lb(
												{ workspaceUri: r.workspace.configPath },
												{
													remoteAuthority: r.remoteAuthority,
													rejectTransientWorkspaces: !0,
												},
											);
											if (Yh(n)) return n;
										} else if (r.folderUri) {
											const n = await this.lb(
												{ folderUri: r.folderUri },
												{ remoteAuthority: r.remoteAuthority },
											);
											if (zo(n)) return n;
										} else if (e !== "folders" && r.backupPath)
											return {
												backupPath: r.backupPath,
												remoteAuthority: r.remoteAuthority,
											};
									}),
								);
								return Dt(s);
							}
						}
					}
					kb() {
						let e;
						return (
							this.J.wasRestarted
								? (e = "all")
								: ((e = this.M.getValue("window")?.restoreWindows || "all"),
									["preserve", "all", "folders", "one", "none"].includes(e) ||
										(e = "all")),
							e
						);
					}
					async lb(e, i = Object.create(null)) {
						const s = this.nb(e);
						return s.scheme === R.file
							? (b4(e) && (i = { ...i, forceOpenWorkspaceAsFile: !0 }),
								this.ob(s.fsPath, i))
							: this.mb(e, i);
					}
					mb(e, i) {
						let s = this.nb(e);
						const r = Po(s) || i.remoteAuthority;
						if (((s = Pv(pp(s))), b4(e))) {
							if (i.gotoLineMode) {
								const { path: n, line: o, column: a } = Xl(s.path);
								return {
									fileUri: s.with({ path: n }),
									options: {
										selection: o
											? { startLineNumber: o, startColumn: a || 1 }
											: void 0,
									},
									remoteAuthority: r,
								};
							}
							return { fileUri: s, remoteAuthority: r };
						} else if (k1(e)) return { workspace: dn(s), remoteAuthority: r };
						return { workspace: A1(s), remoteAuthority: r };
					}
					nb(e) {
						return k1(e) ? e.workspaceUri : y4(e) ? e.folderUri : e.fileUri;
					}
					async ob(e, i, s) {
						let r, n;
						i.gotoLineMode && ({ path: e, line: r, column: n } = Xl(e)),
							(e = dv(ui(e), ms()));
						try {
							const o = await qA.promises.stat(e);
							if (o.isFile()) {
								if (!i.forceOpenWorkspaceAsFile) {
									const a = await this.O.resolveLocalWorkspace(P.file(e));
									if (a)
										return a.transient && i.rejectTransientWorkspaces
											? void 0
											: {
													workspace: { id: a.id, configPath: a.configPath },
													type: At.File,
													exists: !0,
													remoteAuthority: a.remoteAuthority,
													transient: a.transient,
												};
								}
								return {
									fileUri: P.file(e),
									type: At.File,
									exists: !0,
									options: {
										selection: r
											? { startLineNumber: r, startColumn: n || 1 }
											: void 0,
									},
								};
							} else {
								if (o.isDirectory())
									return {
										workspace: A1(P.file(e), o),
										type: At.Directory,
										exists: !0,
									};
								if (!T && e === "/dev/null")
									return { fileUri: P.file(e), type: At.File, exists: !0 };
							}
						} catch (o) {
							if (o.code === "ERR_UNC_HOST_NOT_ALLOWED" && !s)
								return this.pb(e, i);
							const a = P.file(e);
							if ((this.N.removeRecentlyOpened([a]), i.ignoreFileNotFound))
								return { fileUri: a, type: At.File, exists: !1 };
						}
					}
					async pb(e, i) {
						const s = P.file(e),
							{ response: r, checkboxChecked: n } = await this.Q.showMessageBox(
								{
									type: "warning",
									buttons: [w(2528, null), w(2529, null), w(2530, null)],
									message: w(2531, null, s.authority),
									detail: w(2532, null, Zn(s, { os: Ri, tildify: this.H })),
									checkboxLabel: w(2533, null, s.authority),
									cancelId: 1,
								},
							);
						if (r === 0) {
							if ((da(s.authority), n)) {
								const o = {
									channel: "vscode:configureAllowedUNCHost",
									args: s.authority,
								};
								this.sendToFocused(o.channel, o.args),
									this.sendToOpeningWindow(o.channel, o.args);
							}
							return this.ob(e, i, !0);
						}
						if (r === 2)
							return (
								zA.openExternal("https://aka.ms/vscode-windows-unc"),
								this.pb(e, i)
							);
					}
					qb(e, i) {
						const s = e.charCodeAt(0),
							r = i.remoteAuthority;
						let n, o;
						i.gotoLineMode && ({ path: e, line: n, column: o } = Xl(e)),
							s !== 47 &&
								(lp(s) && e.charCodeAt(e.charCodeAt(1)) === 58 && (e = Kn(e)),
								(e = `/${e}`));
						const a = P.from({ scheme: R.vscodeRemote, authority: r, path: e });
						if (e.charCodeAt(e.length - 1) !== 47) {
							if (on(e))
								return i.forceOpenWorkspaceAsFile
									? {
											fileUri: a,
											options: {
												selection: n
													? { startLineNumber: n, startColumn: o || 1 }
													: void 0,
											},
											remoteAuthority: i.remoteAuthority,
										}
									: { workspace: dn(a), remoteAuthority: r };
							if (i.gotoLineMode || oe.basename(e).indexOf(".") !== -1)
								return {
									fileUri: a,
									options: {
										selection: n
											? { startLineNumber: n, startColumn: o || 1 }
											: void 0,
									},
									remoteAuthority: r,
								};
						}
						return { workspace: A1(a), remoteAuthority: r };
					}
					rb(e) {
						const i = this.M.getValue("window"),
							s = i?.openFoldersInNewWindow || "default",
							r = i?.openFilesInNewWindow || "off";
						let n =
							(e.preferNewWindow || e.forceNewWindow) && !e.forceReuseWindow;
						!e.forceNewWindow &&
							!e.forceReuseWindow &&
							(s === "on" || s === "off") &&
							(n = s === "on");
						let o = !1;
						return (
							e.forceNewWindow || e.forceReuseWindow
								? (o = !!e.forceNewWindow && !e.forceReuseWindow)
								: (N
										? e.context === 1 && (o = !0)
										: e.context !== 3 &&
											e.context !== 2 &&
											!(e.userEnv && e.userEnv.TERM_PROGRAM === "vscode") &&
											(o = !0),
									!e.cli.extensionDevelopmentPath &&
										(r === "on" || r === "off") &&
										(o = r === "on")),
							{ openFolderInNewWindow: !!n, openFilesInNewWindow: o }
						);
					}
					async openExtensionDevelopmentHostWindow(e, i) {
						const s = uD(this.getWindows(), e);
						if (s) return this.J.reload(s, i.cli), s.focus(), [s];
						let r = i.cli["folder-uri"] || [],
							n = i.cli["file-uri"] || [],
							o = i.cli._;
						if (
							!o.length &&
							!r.length &&
							!n.length &&
							!i.cli.extensionTestsPath
						) {
							const l = this.q.state.lastPluginDevelopmentHostWindow,
								u = l?.workspace ?? l?.folderUri;
							u &&
								(P.isUri(u)
									? u.scheme === R.file
										? (o = [u.fsPath])
										: (r = [u.toString()])
									: u.configPath.scheme === R.file
										? (o = [$i(u.configPath)])
										: (n = [u.configPath.toString()]));
						}
						let a = i.remoteAuthority;
						for (const l of e)
							if (l.match(/^[a-zA-Z][a-zA-Z0-9\+\-\.]+:/)) {
								const u = P.parse(l),
									d = Po(u);
								d &&
									(a
										? di(d, a) ||
											this.z.error(
												"more than one extension development path authority",
											)
										: (a = d));
							}
						(o = o.filter((l) => {
							const u = P.file(l);
							return xo(this.getWindows(), u) ? !1 : di(Po(u), a);
						})),
							(r = r.filter((l) => {
								const u = this.ib(l);
								return u && xo(this.getWindows(), u)
									? !1
									: u
										? di(Po(u), a)
										: !1;
							})),
							(n = n.filter((l) => {
								const u = this.ib(l);
								return u && xo(this.getWindows(), u)
									? !1
									: u
										? di(Po(u), a)
										: !1;
							})),
							(i.cli._ = o),
							(i.cli["folder-uri"] = r),
							(i.cli["file-uri"] = n);
						const c = {
							context: i.context,
							cli: i.cli,
							forceNewWindow: !0,
							forceEmpty: !o.length && !r.length && !n.length,
							userEnv: i.userEnv,
							noRecentEntry: !0,
							waitMarkerFileURI: i.waitMarkerFileURI,
							remoteAuthority: a,
							forceProfile: i.forceProfile,
							forceTempProfile: i.forceTempProfile,
						};
						return this.open(c);
					}
					async sb(e) {
						const i = this.M.getValue("window"),
							s = this.getLastActiveWindow(),
							n =
								(i?.newWindowProfile
									? this.I.profiles.find((c) => c.name === i.newWindowProfile)
									: void 0) ??
								s?.profile ??
								this.I.defaultProfile;
						let o;
						!e.forceNewWindow &&
							!e.forceNewTabbedWindow &&
							((o = e.windowToUse || s), o && o.focus());
						const a = {
							...this.H.args,
							...e.cli,
							machineId: this.r,
							macMachineId: this.s,
							sqmId: this.t,
							devDeviceId: this.u,
							windowId: -1,
							shadowWindowForWorkspaceId:
								e.shadowWindowForWorkspaceId ??
								this.H.args["shadow-window-for-workspace-id"] ??
								e.cli?.["shadow-window-for-workspace-id"],
							mainPid: process.pid,
							appRoot: this.H.appRoot,
							execPath: process.execPath,
							codeCachePath: this.H.codeCachePath,
							backupPath: e.emptyWindowBackupInfo
								? M(this.H.backupHome, e.emptyWindowBackupInfo.backupFolder)
								: void 0,
							profiles: {
								home: this.I.profilesHome,
								all: this.I.profiles,
								profile: n,
							},
							homeDir: this.H.userHome.with({ scheme: R.file }).fsPath,
							tmpDir: this.H.tmpDir.with({ scheme: R.file }).fsPath,
							userDataDir: this.H.userDataPath,
							remoteAuthority: e.remoteAuthority,
							workspace: e.workspace,
							userEnv: { ...this.w, ...e.userEnv },
							nls: { messages: Pf(), language: Al() },
							filesToOpenOrCreate: e.filesToOpen?.filesToOpenOrCreate,
							filesToDiff: e.filesToOpen?.filesToDiff,
							filesToMerge: e.filesToOpen?.filesToMerge,
							filesToWait: e.filesToOpen?.filesToWait,
							logLevel: this.C.getLogLevel(),
							loggers: { window: [], global: this.C.getRegisteredLoggers() },
							logsPath: this.H.logsHome.with({ scheme: R.file }).fsPath,
							product: bo,
							isInitialStartup: e.initialStartup,
							perfMarks: Df(),
							os: { release: VA(), hostname: HA(), arch: GA() },
							autoDetectHighContrast: i?.autoDetectHighContrast ?? !0,
							autoDetectColorScheme: i?.autoDetectColorScheme ?? !1,
							accessibilitySupport: BA.accessibilitySupportEnabled,
							colorScheme: this.U.getColorScheme(),
							policiesData: this.G.serialize(),
							continueOn: this.H.continueOn,
							cssModules: this.X.isEnabled
								? await this.X.getCssModules()
								: void 0,
						};
						if (o) {
							const c = o.config;
							!a.extensionDevelopmentPath &&
								c?.extensionDevelopmentPath &&
								((a.extensionDevelopmentPath = c.extensionDevelopmentPath),
								(a.extensionDevelopmentKind = c.extensionDevelopmentKind),
								(a["enable-proposed-api"] = c["enable-proposed-api"]),
								(a.verbose = c.verbose),
								(a["inspect-extensions"] = c["inspect-extensions"]),
								(a["inspect-brk-extensions"] = c["inspect-brk-extensions"]),
								(a.debugId = c.debugId),
								(a.extensionEnvironment = c.extensionEnvironment),
								(a["extensions-dir"] = c["extensions-dir"]),
								(a["disable-extensions"] = c["disable-extensions"])),
								(a.loggers = {
									global: a.loggers.global,
									window: c?.loggers.window ?? a.loggers.window,
								});
						} else {
							const c = this.q.getNewWindowState(a);
							Fe("code/willCreateCodeWindow");
							const l = (o = this.P.createInstance(Bc, {
								state: c,
								extensionDevelopmentPath: a.extensionDevelopmentPath,
								isExtensionTestHost: !!a.extensionTestsPath,
								shadowWindowForWorkspaceId: a.shadowWindowForWorkspaceId,
							}));
							Fe("code/didCreateCodeWindow"),
								e.forceNewTabbedWindow &&
									this.getLastActiveWindow()?.addTabbedWindow(l),
								this.n.set(l.id, l),
								this.a.fire(l),
								this.f.fire({
									oldCount: this.getWindowCount() - 1,
									newCount: this.getWindowCount(),
								});
							const u = new De();
							u.add(l.onDidSignalReady(() => this.b.fire(l))),
								u.add(x.once(l.onDidClose)(() => this.vb(l, u))),
								u.add(x.once(l.onDidDestroy)(() => this.wb(l))),
								u.add(l.onDidMaximize(() => this.g.fire(l))),
								u.add(l.onDidUnmaximize(() => this.h.fire(l))),
								u.add(
									l.onDidEnterFullScreen(() =>
										this.j.fire({ window: l, fullscreen: !0 }),
									),
								),
								u.add(
									l.onDidLeaveFullScreen(() =>
										this.j.fire({ window: l, fullscreen: !1 }),
									),
								),
								u.add(
									l.onDidTriggerSystemContextMenu(({ x: f, y: p }) =>
										this.m.fire({ window: l, x: f, y: p }),
									),
								);
							const d = Pa(l.win?.webContents);
							d.removeAllListeners("devtools-reload-page"),
								u.add(
									x.fromNodeEventEmitter(
										d,
										"devtools-reload-page",
									)(() => this.J.reload(l)),
								),
								this.J.registerWindow(l);
						}
						return (
							(a.windowId = o.id),
							o.isReady
								? this.J.unload(o, 4).then(async (c) => {
										c || (await this.tb(o, a, e, n));
									})
								: await this.tb(o, a, e, n),
							o
						);
					}
					async tb(e, i, s, r) {
						i.extensionDevelopmentPath ||
							(Vt(i.workspace)
								? (i.backupPath = this.L.registerWorkspaceBackup({
										workspace: i.workspace,
										remoteAuthority: i.remoteAuthority,
									}))
								: Ci(i.workspace)
									? (i.backupPath = this.L.registerFolderBackup({
											folderUri: i.workspace.uri,
											remoteAuthority: i.remoteAuthority,
										}))
									: (i.backupPath = this.L.registerEmptyWindowBackup({
											backupFolder:
												s.emptyWindowBackupInfo?.backupFolder ?? I1().id,
											remoteAuthority: i.remoteAuthority,
										})));
						const n = i.workspace ?? _u(i.backupPath, !1),
							o = this.ub(s, n, r),
							a = o instanceof Promise ? await o : o;
						(i.profiles.profile = a),
							i.extensionDevelopmentPath ||
								(await this.I.setProfileForWorkspace(n, a)),
							e.load(i);
					}
					ub(e, i, s) {
						return e.forceProfile
							? (this.I.profiles.find((r) => r.name === e.forceProfile) ??
									this.I.createNamedProfile(e.forceProfile))
							: e.forceTempProfile
								? this.I.createTransientProfile()
								: (this.I.getProfileForWorkspace(i) ?? s);
					}
					vb(e, i) {
						this.n.delete(e.id),
							this.f.fire({
								oldCount: this.getWindowCount() + 1,
								newCount: this.getWindowCount(),
							}),
							i.dispose();
					}
					wb(e) {
						this.n.delete(e.id), this.c.fire(e);
					}
					getFocusedWindow() {
						const e = Kh.getFocusedWindow();
						if (e) return this.getWindowById(e.id);
					}
					getLastActiveWindow() {
						return this.yb(
							this.getWindows().filter(
								(e) => !e.config?.shadowWindowForWorkspaceId,
							),
						);
					}
					xb(e) {
						return this.yb(
							this.getWindows().filter((i) => di(i.remoteAuthority, e)),
						);
					}
					yb(e) {
						return O4(e);
					}
					sendToFocused(e, ...i) {
						(
							this.getFocusedWindow() || this.getLastActiveWindow()
						)?.sendWhenReady(e, Ge.None, ...i);
					}
					sendToOpeningWindow(e, ...i) {
						this.D(
							x.once(this.onDidSignalReadyWindow)((s) => {
								s.sendWhenReady(e, Ge.None, ...i);
							}),
						);
					}
					sendToAll(e, i, s) {
						for (const r of this.getWindows())
							(s && s.indexOf(r.id) >= 0) || r.sendWhenReady(e, Ge.None, i);
					}
					getWindows() {
						return Array.from(this.n.values());
					}
					getWindowCount() {
						return this.n.size;
					}
					getWindowById(e) {
						return this.n.get(e);
					}
					getWindowByWebContents(e) {
						const i = Kh.fromWebContents(e);
						if (!i) return;
						const s = this.getWindowById(i.id);
						return s?.matches(e) ? s : void 0;
					}
				}),
				(Qh = __decorate(
					[
						__param(5, G),
						__param(6, To),
						__param(7, Ii),
						__param(8, xn),
						__param(9, ut),
						__param(10, Cs),
						__param(11, Ne),
						__param(12, Eo),
						__param(13, He),
						__param(14, Nc),
						__param(15, Pr),
						__param(16, ws),
						__param(17, sr),
						__param(18, nt),
						__param(19, Lc),
						__param(20, yo),
						__param(21, Fo),
						__param(22, Mo),
					],
					Qh,
				));
		},
	}),
	f6,
	XA = m({
		"out-build/vs/platform/windows/node/windowTracker.js"() {
			"use strict";
			ae(),
				q(),
				F(),
				(f6 = class extends j {
					constructor({
						onDidOpenMainWindow: t,
						onDidFocusMainWindow: e,
						getActiveWindowId: i,
					}) {
						super(),
							(this.a = this.D(new De())),
							x.latch(x.any(t, e))(this.f, this, this.a),
							(this.b = Yn(() => i())),
							(async () => {
								try {
									const r = await this.b;
									this.c = typeof this.c == "number" ? this.c : r;
								} catch {
								} finally {
									this.b = void 0;
								}
							})();
					}
					f(t) {
						this.b && (this.b.cancel(), (this.b = void 0)), (this.c = t);
					}
					async getActiveClientId() {
						return `window:${this.b ? await this.b : this.c}`;
					}
				});
		},
	}),
	Zh,
	KA = m({
		"out-build/vs/platform/workspaces/electron-main/workspacesMainService.js"() {
			"use strict";
			pc(),
				si(),
				_h(),
				gn(),
				(Zh = class {
					constructor(e, i, s, r) {
						(this.a = e),
							(this.b = i),
							(this.c = s),
							(this.d = r),
							(this.onDidChangeRecentlyOpened =
								this.c.onDidChangeRecentlyOpened);
					}
					async enterWorkspace(e, i) {
						const s = this.b.getWindowById(e);
						if (s) return this.a.enterWorkspace(s, this.b.getWindows(), i);
					}
					createUntitledWorkspace(e, i, s) {
						return this.a.createUntitledWorkspace(i, s);
					}
					deleteUntitledWorkspace(e, i) {
						return this.a.deleteUntitledWorkspace(i);
					}
					getWorkspaceIdentifier(e, i) {
						return this.a.getWorkspaceIdentifier(i);
					}
					getRecentlyOpened(e) {
						return this.c.getRecentlyOpened();
					}
					addRecentlyOpened(e, i) {
						return this.c.addRecentlyOpened(i);
					}
					removeRecentlyOpened(e, i) {
						return this.c.removeRecentlyOpened(i);
					}
					clearRecentlyOpened(e) {
						return this.c.clearRecentlyOpened();
					}
					async getDirtyWorkspaces() {
						return this.d.getDirtyWorkspaces();
					}
				}),
				(Zh = __decorate(
					[__param(0, Pr), __param(1, _t), __param(2, Nc), __param(3, Eo)],
					Zh,
				));
		},
	}),
	p6,
	YA = m({
		"out-build/vs/platform/policy/common/policyIpc.js"() {
			"use strict";
			q(),
				F(),
				Rs(),
				(p6 = class {
					constructor(t) {
						(this.b = t), (this.a = new De());
					}
					listen(t, e) {
						switch (e) {
							case "onDidChange":
								return x.map(
									this.b.onDidChange,
									(i) =>
										i.reduce(
											(s, r) => ({
												...s,
												[r]: this.b.getPolicyValue(r) ?? null,
											}),
											{},
										),
									this.a,
								);
						}
						throw new Error(`Event not found: ${e}`);
					}
					call(t, e, i) {
						switch (e) {
							case "updatePolicyDefinitions":
								return this.b.updatePolicyDefinitions(i);
						}
						throw new Error(`Call not found: ${e}`);
					}
					dispose() {
						this.a.dispose();
					}
				});
		},
	});
function QA(t) {
	return t.map((e) => {
		const [i, s] = e.split("@");
		return { proposalName: i, version: s ? parseInt(s) : void 0 };
	});
}
function ZA(t) {
	return t.map((e) => e.split("@")[0]);
}
var m6,
	g6,
	zm,
	w6,
	v6,
	Ho,
	y6,
	eI,
	Hm = m({
		"out-build/vs/platform/extensions/common/extensions.js"() {
			"use strict";
			Ft(),
				Y(),
				vc(),
				(m6 = "extensions.user.cache"),
				(g6 = "extensions.builtin.cache"),
				(zm = "undefined_publisher"),
				(function (t) {
					(t[(t.System = 0)] = "System"), (t[(t.User = 1)] = "User");
				})(w6 || (w6 = {})),
				(function (t) {
					(t.WIN32_X64 = "win32-x64"),
						(t.WIN32_ARM64 = "win32-arm64"),
						(t.LINUX_X64 = "linux-x64"),
						(t.LINUX_ARM64 = "linux-arm64"),
						(t.LINUX_ARMHF = "linux-armhf"),
						(t.ALPINE_X64 = "alpine-x64"),
						(t.ALPINE_ARM64 = "alpine-arm64"),
						(t.DARWIN_X64 = "darwin-x64"),
						(t.DARWIN_ARM64 = "darwin-arm64"),
						(t.WEB = "web"),
						(t.UNIVERSAL = "universal"),
						(t.UNKNOWN = "unknown"),
						(t.UNDEFINED = "undefined");
				})(v6 || (v6 = {})),
				(Ho = class {
					constructor(t) {
						(this.value = t), (this._lower = t.toLowerCase());
					}
					static equals(t, e) {
						if (typeof t > "u" || t === null)
							return typeof e > "u" || e === null;
						if (typeof e > "u" || e === null) return !1;
						if (typeof t == "string" || typeof e == "string") {
							const i = typeof t == "string" ? t : t.value,
								s = typeof e == "string" ? e : e.value;
							return gr(i, s);
						}
						return t._lower === e._lower;
					}
					static toKey(t) {
						return typeof t == "string" ? t.toLowerCase() : t._lower;
					}
				}),
				(y6 = class {
					constructor() {
						this.c = new Map();
					}
					clear() {
						this.c.clear();
					}
					delete(t) {
						this.c.delete(Ho.toKey(t));
					}
					get(t) {
						return this.c.get(Ho.toKey(t));
					}
					has(t) {
						return this.c.has(Ho.toKey(t));
					}
					set(t, e) {
						this.c.set(Ho.toKey(t), e);
					}
					values() {
						return this.c.values();
					}
					forEach(t) {
						this.c.forEach(t);
					}
					[Symbol.iterator]() {
						return this.c[Symbol.iterator]();
					}
				}),
				(eI = B("IBuiltinExtensionsScannerService"));
		},
	});
function Vo(t, e) {
	return t.uuid && e.uuid
		? t.uuid === e.uuid
		: t.id === e.id
			? !0
			: cp(t.id, e.id) === 0;
}
function tI(t, e) {
	return `${t}.${e}`;
}
function iI(t) {
	return t.toLowerCase();
}
function sI(t, e) {
	return iI(tI(t ?? zm, e));
}
async function rI(t, e) {
	if (!Ee) return !1;
	let i;
	try {
		i = (await t.readFile(P.file("/etc/os-release"))).value.toString();
	} catch {
		try {
			i = (await t.readFile(P.file("/usr/lib/os-release"))).value.toString();
		} catch (r) {
			e.debug("Error while getting the os-release file.", Bi(r));
		}
	}
	return !!i && (i.match(/^ID=([^\u001b\r\n]*)/m) || [])[1] === "alpine";
}
async function nI(t, e) {
	const i = await rI(t, e),
		s = Dx(i ? "alpine" : va, Rw);
	return e.debug("ComputeTargetPlatform:", s), s;
}
var b6,
	E6,
	oI,
	S6 = m({
		"out-build/vs/platform/extensionManagement/common/extensionManagementUtil.js"() {
			"use strict";
			Ft(),
				Nu(),
				Hm(),
				z(),
				ie(),
				Ae(),
				gs(),
				Dn(),
				(b6 = /^([^.]+\..+)-(\d+\.\d+\.\d+)(-(.+))?$/),
				(E6 = class gf {
					static create(e) {
						const i = e.manifest ? e.manifest.version : e.version,
							s = e.manifest ? e.targetPlatform : e.properties.targetPlatform;
						return new gf(e.identifier, i, s);
					}
					static parse(e) {
						const i = b6.exec(e);
						return i && i[1] && i[2]
							? new gf({ id: i[1] }, i[2], i[4] || void 0)
							: null;
					}
					constructor(e, i, s = "undefined") {
						(this.identifier = e),
							(this.version = i),
							(this.targetPlatform = s),
							(this.id = e.id);
					}
					toString() {
						return `${this.id}-${this.version}${this.targetPlatform !== "undefined" ? `-${this.targetPlatform}` : ""}`;
					}
					equals(e) {
						return e instanceof gf
							? Vo(this, e) &&
									this.version === e.version &&
									this.targetPlatform === e.targetPlatform
							: !1;
					}
				}),
				(oI = new Ho("pprice.better-merge"));
		},
	});
function k6(t) {
	return (
		Lt(t) &&
		Px(t.identifier) &&
		(aI(t.location) || (mt(t.location) && t.location)) &&
		(zs(t.relativeLocation) || mt(t.relativeLocation)) &&
		t.version &&
		mt(t.version)
	);
}
function aI(t) {
	return t ? mt(t.path) && mt(t.scheme) : !1;
}
var x6,
	zc,
	Go,
	ed,
	td = m({
		"out-build/vs/platform/extensionManagement/common/extensionsProfileScannerService.js"() {
			"use strict";
			ae(),
				Je(),
				F(),
				q(),
				xi(),
				ie(),
				Nu(),
				S6(),
				Be(),
				Y(),
				Q(),
				Is(),
				$s(),
				Ie(),
				Ae(),
				St(),
				(function (t) {
					(t.ERROR_PROFILE_NOT_FOUND = "ERROR_PROFILE_NOT_FOUND"),
						(t.ERROR_INVALID_CONTENT = "ERROR_INVALID_CONTENT");
				})(x6 || (x6 = {})),
				(zc = class extends Error {
					constructor(t, e) {
						super(t), (this.code = e);
					}
				}),
				(Go = B("IExtensionsProfileScannerService")),
				(ed = class extends j {
					constructor(e, i, s, r, n, o) {
						super(),
							(this.j = e),
							(this.m = i),
							(this.n = s),
							(this.q = r),
							(this.r = n),
							(this.s = o),
							(this.b = this.D(new $())),
							(this.onAddExtensions = this.b.event),
							(this.c = this.D(new $())),
							(this.onDidAddExtensions = this.c.event),
							(this.f = this.D(new $())),
							(this.onRemoveExtensions = this.f.event),
							(this.g = this.D(new $())),
							(this.onDidRemoveExtensions = this.g.event),
							(this.h = new qt());
					}
					scanProfileExtensions(e, i) {
						return this.t(e, void 0, i);
					}
					async addExtensionsToProfile(e, i, s) {
						const r = [],
							n = [];
						try {
							return (
								await this.t(i, (o) => {
									const a = [];
									if (s) a.push(...o);
									else
										for (const c of o)
											e.some(
												([l]) =>
													Vo(l.identifier, c.identifier) &&
													(l.manifest.version !== c.version ||
														l.location.toString() !== c.location.toString()),
											)
												? r.push(c)
												: a.push(c);
									for (const [c, l] of e) {
										const u = a.findIndex(
												(f) =>
													Vo(f.identifier, c.identifier) &&
													f.version === c.manifest.version &&
													f.location.toString() === c.location.toString(),
											),
											d = {
												identifier: c.identifier,
												version: c.manifest.version,
												location: c.location,
												metadata: l,
											};
										u === -1 ? (n.push(d), a.push(d)) : a.splice(u, 1, d);
									}
									return (
										n.length &&
											this.b.fire({ extensions: n, profileLocation: i }),
										r.length &&
											this.f.fire({ extensions: r, profileLocation: i }),
										a
									);
								}),
								n.length && this.c.fire({ extensions: n, profileLocation: i }),
								r.length && this.g.fire({ extensions: r, profileLocation: i }),
								n
							);
						} catch (o) {
							throw (
								(n.length &&
									this.c.fire({ extensions: n, error: o, profileLocation: i }),
								r.length &&
									this.g.fire({ extensions: r, error: o, profileLocation: i }),
								o)
							);
						}
					}
					async updateMetadata(e, i) {
						const s = [];
						return (
							await this.t(i, (r) => {
								const n = [];
								for (const o of r) {
									const a = e.find(
										([c]) =>
											Vo(c.identifier, o.identifier) &&
											c.manifest.version === o.version,
									);
									a && ((o.metadata = { ...o.metadata, ...a[1] }), s.push(o)),
										n.push(o);
								}
								return n;
							}),
							s
						);
					}
					async removeExtensionFromProfile(e, i) {
						const s = [];
						try {
							await this.t(i, (r) => {
								const n = [];
								for (const o of r)
									Vo(o.identifier, e.identifier) ? s.push(o) : n.push(o);
								return (
									s.length &&
										this.f.fire({ extensions: s, profileLocation: i }),
									n
								);
							}),
								s.length && this.g.fire({ extensions: s, profileLocation: i });
						} catch (r) {
							throw (
								(s.length &&
									this.g.fire({ extensions: s, error: r, profileLocation: i }),
								r)
							);
						}
					}
					async t(e, i, s) {
						return this.F(e).queue(async () => {
							let r = [],
								n;
							try {
								const o = await this.m.readFile(e);
								n = JSON.parse(o.value.toString().trim() || "[]");
							} catch (o) {
								if (Ds(o) !== 1) throw o;
								if (
									(this.q.extUri.isEqual(
										e,
										this.n.defaultProfile.extensionsResource,
									) && (n = await this.C()),
									!n && s?.bailOutWhenFileNotFound)
								)
									throw new zc(Bi(o), "ERROR_PROFILE_NOT_FOUND");
							}
							if (n) {
								Array.isArray(n) || this.u(e);
								let o = !1;
								for (const a of n) {
									k6(a) || this.u(e);
									let c;
									if (mt(a.relativeLocation) && a.relativeLocation)
										c = this.y(a.relativeLocation);
									else if (mt(a.location)) {
										this.s.warn(
											`Extensions profile: Ignoring extension with invalid location: ${a.location}`,
										);
										continue;
									} else {
										c = P.revive(a.location);
										const l = this.w(c);
										l && ((o = !0), (a.relativeLocation = l));
									}
									zs(a.metadata?.hasPreReleaseVersion) &&
										a.metadata?.preRelease &&
										((o = !0), (a.metadata.hasPreReleaseVersion = !0)),
										r.push({
											identifier: a.identifier,
											location: c,
											version: a.version,
											metadata: a.metadata,
										});
								}
								o &&
									(await this.m.writeFile(e, H.fromString(JSON.stringify(n))));
							}
							if (i) {
								r = i(r);
								const o = r.map((a) => ({
									identifier: a.identifier,
									version: a.version,
									location: a.location.toJSON(),
									relativeLocation: this.w(a.location),
									metadata: a.metadata,
								}));
								await this.m.writeFile(e, H.fromString(JSON.stringify(o)));
							}
							return r;
						});
					}
					u(e) {
						const i = new zc(
							`Invalid extensions content in ${e.toString()}`,
							"ERROR_INVALID_CONTENT",
						);
						throw (
							(this.r.publicLogError2("extensionsProfileScanningError", {
								code: i.code,
							}),
							i)
						);
					}
					w(e) {
						return this.q.extUri.isEqual(this.q.extUri.dirname(e), this.j)
							? this.q.extUri.basename(e)
							: void 0;
					}
					y(e) {
						return this.q.extUri.joinPath(this.j, e);
					}
					async C() {
						return (
							this.z ||
								(this.z = (async () => {
									const e = this.q.extUri.joinPath(
											this.n.defaultProfile.location,
											"extensions.json",
										),
										i = this.q.extUri.joinPath(
											this.j,
											".init-default-profile-extensions",
										);
									let s;
									try {
										s = (await this.m.readFile(e)).value.toString();
									} catch (n) {
										if (Ds(n) === 1) return;
										throw n;
									}
									this.s.info(
										"Migrating extensions from old default profile location",
										e.toString(),
									);
									let r;
									try {
										const n = JSON.parse(s);
										Array.isArray(n) && n.every((o) => k6(o))
											? (r = n)
											: this.s.warn(
													"Skipping migrating from old default profile locaiton: Found invalid data",
													n,
												);
									} catch (n) {
										this.s.error(n);
									}
									if (r)
										try {
											await this.m.createFile(
												this.n.defaultProfile.extensionsResource,
												H.fromString(JSON.stringify(r)),
												{ overwrite: !1 },
											),
												this.s.info(
													"Migrated extensions from old default profile location to new location",
													e.toString(),
													this.n.defaultProfile.extensionsResource.toString(),
												);
										} catch (n) {
											if (Ds(n) === 3)
												this.s.info(
													"Migration from old default profile location to new location is done by another window",
													e.toString(),
													this.n.defaultProfile.extensionsResource.toString(),
												);
											else throw n;
										}
									try {
										await this.m.del(e);
									} catch (n) {
										Ds(n) !== 1 && this.s.error(n);
									}
									try {
										await this.m.del(i);
									} catch (n) {
										Ds(n) !== 1 && this.s.error(n);
									}
									return r;
								})()),
							this.z
						);
					}
					F(e) {
						let i = this.h.get(e);
						return i || ((i = new Qn()), this.h.set(e, i)), i;
					}
				}),
				(ed = __decorate(
					[
						__param(1, nt),
						__param(2, As),
						__param(3, gi),
						__param(4, It),
						__param(5, G),
					],
					ed,
				));
		},
	});
function Vm(t) {
	switch (t) {
		case 1:
			return w(116, null);
		case 2:
			return w(117, null);
		case 3:
			return w(118, null);
		case 4:
			return w(119, null);
		case 5:
			return w(120, null);
		case 6:
			return w(121, null);
		case 7:
			return w(122, null);
		case 8:
			return w(123, null);
		case 9:
			return w(124, null);
		default:
			return "";
	}
}
var cI = m({
		"out-build/vs/base/common/jsonErrorMessages.js"() {
			"use strict";
			ve();
		},
	}),
	Hc,
	we,
	lI,
	uI,
	D6,
	hI,
	dI,
	fI,
	pI,
	mI,
	gI,
	wI,
	P6,
	vI,
	yI,
	bI,
	$6,
	EI,
	SI,
	kI,
	xI,
	DI,
	PI,
	$I,
	AI,
	II,
	CI,
	_I,
	RI,
	OI,
	LI,
	MI,
	FI,
	NI,
	WI,
	jI,
	TI,
	UI,
	qI,
	A6 = m({
		"out-build/vs/base/common/semver/semver.js"() {
			"use strict";
			(Hc = {}),
				(we = { exports: Hc }),
				(function (t, e) {
					if (typeof Hc == "object" && typeof we == "object") we.exports = e();
					else if (typeof define == "function" && define.amd) define([], e);
					else {
						var i = e();
						for (var s in i) (typeof Hc == "object" ? Hc : t)[s] = i[s];
					}
				})(typeof self < "u" ? self : void 0, function () {
					return (function (t) {
						var e = {};
						function i(s) {
							if (e[s]) return e[s].exports;
							var r = (e[s] = { i: s, l: !1, exports: {} });
							return (
								t[s].call(r.exports, r, r.exports, i), (r.l = !0), r.exports
							);
						}
						return (
							(i.m = t),
							(i.c = e),
							(i.d = function (s, r, n) {
								i.o(s, r) ||
									Object.defineProperty(s, r, { enumerable: !0, get: n });
							}),
							(i.r = function (s) {
								typeof Symbol < "u" &&
									Symbol.toStringTag &&
									Object.defineProperty(s, Symbol.toStringTag, {
										value: "Module",
									}),
									Object.defineProperty(s, "__esModule", { value: !0 });
							}),
							(i.t = function (s, r) {
								if (
									(1 & r && (s = i(s)),
									8 & r || (4 & r && typeof s == "object" && s && s.__esModule))
								)
									return s;
								var n = Object.create(null);
								if (
									(i.r(n),
									Object.defineProperty(n, "default", {
										enumerable: !0,
										value: s,
									}),
									2 & r && typeof s != "string")
								)
									for (var o in s)
										i.d(
											n,
											o,
											function (a) {
												return s[a];
											}.bind(null, o),
										);
								return n;
							}),
							(i.n = function (s) {
								var r =
									s && s.__esModule
										? function () {
												return s.default;
											}
										: function () {
												return s;
											};
								return i.d(r, "a", r), r;
							}),
							(i.o = function (s, r) {
								return Object.prototype.hasOwnProperty.call(s, r);
							}),
							(i.p = ""),
							i((i.s = 0))
						);
					})([
						function (t, e, i) {
							(function (s) {
								var r;
								(e = t.exports = Re),
									(r =
										typeof s == "object" &&
										s.env &&
										s.env.NODE_DEBUG &&
										/\bsemver\b/i.test(s.env.NODE_DEBUG)
											? function () {
													var E = Array.prototype.slice.call(arguments, 0);
													E.unshift("SEMVER"), console.log.apply(console, E);
												}
											: function () {}),
									(e.SEMVER_SPEC_VERSION = "2.0.0");
								var n = 256,
									o = Number.MAX_SAFE_INTEGER || 9007199254740991,
									a = (e.re = []),
									c = (e.src = []),
									l = 0,
									u = l++;
								c[u] = "0|[1-9]\\d*";
								var d = l++;
								c[d] = "[0-9]+";
								var f = l++;
								c[f] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*";
								var p = l++;
								c[p] = "(" + c[u] + ")\\.(" + c[u] + ")\\.(" + c[u] + ")";
								var v = l++;
								c[v] = "(" + c[d] + ")\\.(" + c[d] + ")\\.(" + c[d] + ")";
								var g = l++;
								c[g] = "(?:" + c[u] + "|" + c[f] + ")";
								var b = l++;
								c[b] = "(?:" + c[d] + "|" + c[f] + ")";
								var y = l++;
								c[y] = "(?:-(" + c[g] + "(?:\\." + c[g] + ")*))";
								var k = l++;
								c[k] = "(?:-?(" + c[b] + "(?:\\." + c[b] + ")*))";
								var I = l++;
								c[I] = "[0-9A-Za-z-]+";
								var C = l++;
								c[C] = "(?:\\+(" + c[I] + "(?:\\." + c[I] + ")*))";
								var _ = l++,
									K = "v?" + c[p] + c[y] + "?" + c[C] + "?";
								c[_] = "^" + K + "$";
								var se = "[v=\\s]*" + c[v] + c[k] + "?" + c[C] + "?",
									xe = l++;
								c[xe] = "^" + se + "$";
								var W = l++;
								c[W] = "((?:<|>)?=?)";
								var ye = l++;
								c[ye] = c[d] + "|x|X|\\*";
								var at = l++;
								c[at] = c[u] + "|x|X|\\*";
								var ue = l++;
								c[ue] =
									"[v=\\s]*(" +
									c[at] +
									")(?:\\.(" +
									c[at] +
									")(?:\\.(" +
									c[at] +
									")(?:" +
									c[y] +
									")?" +
									c[C] +
									"?)?)?";
								var Jt = l++;
								c[Jt] =
									"[v=\\s]*(" +
									c[ye] +
									")(?:\\.(" +
									c[ye] +
									")(?:\\.(" +
									c[ye] +
									")(?:" +
									c[k] +
									")?" +
									c[C] +
									"?)?)?";
								var L = l++;
								c[L] = "^" + c[W] + "\\s*" + c[ue] + "$";
								var O = l++;
								c[O] = "^" + c[W] + "\\s*" + c[Jt] + "$";
								var V = l++;
								c[V] =
									"(?:^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])";
								var U = l++;
								c[U] = "(?:~>?)";
								var te = l++;
								(c[te] = "(\\s*)" + c[U] + "\\s+"),
									(a[te] = new RegExp(c[te], "g"));
								var fe = l++;
								c[fe] = "^" + c[U] + c[ue] + "$";
								var $e = l++;
								c[$e] = "^" + c[U] + c[Jt] + "$";
								var st = l++;
								c[st] = "(?:\\^)";
								var dt = l++;
								(c[dt] = "(\\s*)" + c[st] + "\\s+"),
									(a[dt] = new RegExp(c[dt], "g"));
								var js = l++;
								c[js] = "^" + c[st] + c[ue] + "$";
								var Wr = l++;
								c[Wr] = "^" + c[st] + c[Jt] + "$";
								var Ts = l++;
								c[Ts] = "^" + c[W] + "\\s*(" + se + ")$|^$";
								var Un = l++;
								c[Un] = "^" + c[W] + "\\s*(" + K + ")$|^$";
								var hs = l++;
								(c[hs] = "(\\s*)" + c[W] + "\\s*(" + se + "|" + c[ue] + ")"),
									(a[hs] = new RegExp(c[hs], "g"));
								var Sl = l++;
								c[Sl] = "^\\s*(" + c[ue] + ")\\s+-\\s+(" + c[ue] + ")\\s*$";
								var kl = l++;
								c[kl] = "^\\s*(" + c[Jt] + ")\\s+-\\s+(" + c[Jt] + ")\\s*$";
								var g0 = l++;
								c[g0] = "(<|>)?=?\\s*\\*";
								for (var jr = 0; jr < 35; jr++)
									r(jr, c[jr]), a[jr] || (a[jr] = new RegExp(c[jr]));
								function Tr(E, D) {
									if (E instanceof Re) return E;
									if (
										typeof E != "string" ||
										E.length > n ||
										!(D ? a[xe] : a[_]).test(E)
									)
										return null;
									try {
										return new Re(E, D);
									} catch {
										return null;
									}
								}
								function Re(E, D) {
									if (E instanceof Re) {
										if (E.loose === D) return E;
										E = E.version;
									} else if (typeof E != "string")
										throw new TypeError("Invalid Version: " + E);
									if (E.length > n)
										throw new TypeError(
											"version is longer than " + n + " characters",
										);
									if (!(this instanceof Re)) return new Re(E, D);
									r("SemVer", E, D), (this.loose = D);
									var A = E.trim().match(D ? a[xe] : a[_]);
									if (!A) throw new TypeError("Invalid Version: " + E);
									if (
										((this.raw = E),
										(this.major = +A[1]),
										(this.minor = +A[2]),
										(this.patch = +A[3]),
										this.major > o || this.major < 0)
									)
										throw new TypeError("Invalid major version");
									if (this.minor > o || this.minor < 0)
										throw new TypeError("Invalid minor version");
									if (this.patch > o || this.patch < 0)
										throw new TypeError("Invalid patch version");
									A[4]
										? (this.prerelease = A[4].split(".").map(function (Z) {
												if (/^[0-9]+$/.test(Z)) {
													var re = +Z;
													if (re >= 0 && re < o) return re;
												}
												return Z;
											}))
										: (this.prerelease = []),
										(this.build = A[5] ? A[5].split(".") : []),
										this.format();
								}
								(e.parse = Tr),
									(e.valid = function (E, D) {
										var A = Tr(E, D);
										return A ? A.version : null;
									}),
									(e.clean = function (E, D) {
										var A = Tr(E.trim().replace(/^[=v]+/, ""), D);
										return A ? A.version : null;
									}),
									(e.SemVer = Re),
									(Re.prototype.format = function () {
										return (
											(this.version =
												this.major + "." + this.minor + "." + this.patch),
											this.prerelease.length &&
												(this.version += "-" + this.prerelease.join(".")),
											this.version
										);
									}),
									(Re.prototype.toString = function () {
										return this.version;
									}),
									(Re.prototype.compare = function (E) {
										return (
											r("SemVer.compare", this.version, this.loose, E),
											E instanceof Re || (E = new Re(E, this.loose)),
											this.compareMain(E) || this.comparePre(E)
										);
									}),
									(Re.prototype.compareMain = function (E) {
										return (
											E instanceof Re || (E = new Re(E, this.loose)),
											qn(this.major, E.major) ||
												qn(this.minor, E.minor) ||
												qn(this.patch, E.patch)
										);
									}),
									(Re.prototype.comparePre = function (E) {
										if (
											(E instanceof Re || (E = new Re(E, this.loose)),
											this.prerelease.length && !E.prerelease.length)
										)
											return -1;
										if (!this.prerelease.length && E.prerelease.length)
											return 1;
										if (!this.prerelease.length && !E.prerelease.length)
											return 0;
										var D = 0;
										do {
											var A = this.prerelease[D],
												Z = E.prerelease[D];
											if (
												(r("prerelease compare", D, A, Z),
												A === void 0 && Z === void 0)
											)
												return 0;
											if (Z === void 0) return 1;
											if (A === void 0) return -1;
											if (A !== Z) return qn(A, Z);
										} while (++D);
									}),
									(Re.prototype.inc = function (E, D) {
										switch (E) {
											case "premajor":
												(this.prerelease.length = 0),
													(this.patch = 0),
													(this.minor = 0),
													this.major++,
													this.inc("pre", D);
												break;
											case "preminor":
												(this.prerelease.length = 0),
													(this.patch = 0),
													this.minor++,
													this.inc("pre", D);
												break;
											case "prepatch":
												(this.prerelease.length = 0),
													this.inc("patch", D),
													this.inc("pre", D);
												break;
											case "prerelease":
												this.prerelease.length === 0 && this.inc("patch", D),
													this.inc("pre", D);
												break;
											case "major":
												(this.minor === 0 &&
													this.patch === 0 &&
													this.prerelease.length !== 0) ||
													this.major++,
													(this.minor = 0),
													(this.patch = 0),
													(this.prerelease = []);
												break;
											case "minor":
												(this.patch === 0 && this.prerelease.length !== 0) ||
													this.minor++,
													(this.patch = 0),
													(this.prerelease = []);
												break;
											case "patch":
												this.prerelease.length === 0 && this.patch++,
													(this.prerelease = []);
												break;
											case "pre":
												if (this.prerelease.length === 0) this.prerelease = [0];
												else {
													for (var A = this.prerelease.length; --A >= 0; )
														typeof this.prerelease[A] == "number" &&
															(this.prerelease[A]++, (A = -2));
													A === -1 && this.prerelease.push(0);
												}
												D &&
													(this.prerelease[0] === D
														? isNaN(this.prerelease[1]) &&
															(this.prerelease = [D, 0])
														: (this.prerelease = [D, 0]));
												break;
											default:
												throw new Error("invalid increment argument: " + E);
										}
										return this.format(), (this.raw = this.version), this;
									}),
									(e.inc = function (E, D, A, Z) {
										typeof A == "string" && ((Z = A), (A = void 0));
										try {
											return new Re(E, A).inc(D, Z).version;
										} catch {
											return null;
										}
									}),
									(e.diff = function (E, D) {
										if (wf(E, D)) return null;
										var A = Tr(E),
											Z = Tr(D);
										if (A.prerelease.length || Z.prerelease.length) {
											for (var re in A)
												if (
													(re === "major" ||
														re === "minor" ||
														re === "patch") &&
													A[re] !== Z[re]
												)
													return "pre" + re;
											return "prerelease";
										}
										for (var re in A)
											if (
												(re === "major" || re === "minor" || re === "patch") &&
												A[re] !== Z[re]
											)
												return re;
									}),
									(e.compareIdentifiers = qn);
								var w0 = /^[0-9]+$/;
								function qn(E, D) {
									var A = w0.test(E),
										Z = w0.test(D);
									return (
										A && Z && ((E = +E), (D = +D)),
										A && !Z ? -1 : Z && !A ? 1 : E < D ? -1 : E > D ? 1 : 0
									);
								}
								function Us(E, D, A) {
									return new Re(E, A).compare(new Re(D, A));
								}
								function xl(E, D, A) {
									return Us(E, D, A) > 0;
								}
								function Dl(E, D, A) {
									return Us(E, D, A) < 0;
								}
								function wf(E, D, A) {
									return Us(E, D, A) === 0;
								}
								function v0(E, D, A) {
									return Us(E, D, A) !== 0;
								}
								function vf(E, D, A) {
									return Us(E, D, A) >= 0;
								}
								function yf(E, D, A) {
									return Us(E, D, A) <= 0;
								}
								function Pl(E, D, A, Z) {
									var re;
									switch (D) {
										case "===":
											typeof E == "object" && (E = E.version),
												typeof A == "object" && (A = A.version),
												(re = E === A);
											break;
										case "!==":
											typeof E == "object" && (E = E.version),
												typeof A == "object" && (A = A.version),
												(re = E !== A);
											break;
										case "":
										case "=":
										case "==":
											re = wf(E, A, Z);
											break;
										case "!=":
											re = v0(E, A, Z);
											break;
										case ">":
											re = xl(E, A, Z);
											break;
										case ">=":
											re = vf(E, A, Z);
											break;
										case "<":
											re = Dl(E, A, Z);
											break;
										case "<=":
											re = yf(E, A, Z);
											break;
										default:
											throw new TypeError("Invalid operator: " + D);
									}
									return re;
								}
								function Ui(E, D) {
									if (E instanceof Ui) {
										if (E.loose === D) return E;
										E = E.value;
									}
									if (!(this instanceof Ui)) return new Ui(E, D);
									r("comparator", E, D),
										(this.loose = D),
										this.parse(E),
										this.semver === la
											? (this.value = "")
											: (this.value = this.operator + this.semver.version),
										r("comp", this);
								}
								(e.rcompareIdentifiers = function (E, D) {
									return qn(D, E);
								}),
									(e.major = function (E, D) {
										return new Re(E, D).major;
									}),
									(e.minor = function (E, D) {
										return new Re(E, D).minor;
									}),
									(e.patch = function (E, D) {
										return new Re(E, D).patch;
									}),
									(e.compare = Us),
									(e.compareLoose = function (E, D) {
										return Us(E, D, !0);
									}),
									(e.rcompare = function (E, D, A) {
										return Us(D, E, A);
									}),
									(e.sort = function (E, D) {
										return E.sort(function (A, Z) {
											return e.compare(A, Z, D);
										});
									}),
									(e.rsort = function (E, D) {
										return E.sort(function (A, Z) {
											return e.rcompare(A, Z, D);
										});
									}),
									(e.gt = xl),
									(e.lt = Dl),
									(e.eq = wf),
									(e.neq = v0),
									(e.gte = vf),
									(e.lte = yf),
									(e.cmp = Pl),
									(e.Comparator = Ui);
								var la = {};
								function ct(E, D) {
									if (E instanceof ct)
										return E.loose === D ? E : new ct(E.raw, D);
									if (E instanceof Ui) return new ct(E.value, D);
									if (!(this instanceof ct)) return new ct(E, D);
									if (
										((this.loose = D),
										(this.raw = E),
										(this.set = E.split(/\s*\|\|\s*/)
											.map(function (A) {
												return this.parseRange(A.trim());
											}, this)
											.filter(function (A) {
												return A.length;
											})),
										!this.set.length)
									)
										throw new TypeError("Invalid SemVer Range: " + E);
									this.format();
								}
								function oi(E) {
									return !E || E.toLowerCase() === "x" || E === "*";
								}
								function Z3(E, D, A, Z, re, Rt, Oe, Ei, ft, Xt, ds, pt, jt) {
									return (
										(D = oi(A)
											? ""
											: oi(Z)
												? ">=" + A + ".0.0"
												: oi(re)
													? ">=" + A + "." + Z + ".0"
													: ">=" + D) +
										" " +
										(Ei = oi(ft)
											? ""
											: oi(Xt)
												? "<" + (+ft + 1) + ".0.0"
												: oi(ds)
													? "<" + ft + "." + (+Xt + 1) + ".0"
													: pt
														? "<=" + ft + "." + Xt + "." + ds + "-" + pt
														: "<=" + Ei)
									).trim();
								}
								function eE(E, D) {
									for (var A = 0; A < E.length; A++)
										if (!E[A].test(D)) return !1;
									if (D.prerelease.length) {
										for (A = 0; A < E.length; A++)
											if (
												(r(E[A].semver),
												E[A].semver !== la && E[A].semver.prerelease.length > 0)
											) {
												var Z = E[A].semver;
												if (
													Z.major === D.major &&
													Z.minor === D.minor &&
													Z.patch === D.patch
												)
													return !0;
											}
										return !1;
									}
									return !0;
								}
								function $l(E, D, A) {
									try {
										D = new ct(D, A);
									} catch {
										return !1;
									}
									return D.test(E);
								}
								function bf(E, D, A, Z) {
									var re, Rt, Oe, Ei, ft;
									switch (((E = new Re(E, Z)), (D = new ct(D, Z)), A)) {
										case ">":
											(re = xl), (Rt = yf), (Oe = Dl), (Ei = ">"), (ft = ">=");
											break;
										case "<":
											(re = Dl), (Rt = vf), (Oe = xl), (Ei = "<"), (ft = "<=");
											break;
										default:
											throw new TypeError(
												'Must provide a hilo val of "<" or ">"',
											);
									}
									if ($l(E, D, Z)) return !1;
									for (var Xt = 0; Xt < D.set.length; ++Xt) {
										var ds = D.set[Xt],
											pt = null,
											jt = null;
										if (
											(ds.forEach(function (Si) {
												Si.semver === la && (Si = new Ui(">=0.0.0")),
													(pt = pt || Si),
													(jt = jt || Si),
													re(Si.semver, pt.semver, Z)
														? (pt = Si)
														: Oe(Si.semver, jt.semver, Z) && (jt = Si);
											}),
											pt.operator === Ei ||
												pt.operator === ft ||
												((!jt.operator || jt.operator === Ei) &&
													Rt(E, jt.semver)) ||
												(jt.operator === ft && Oe(E, jt.semver)))
										)
											return !1;
									}
									return !0;
								}
								(Ui.prototype.parse = function (E) {
									var D = this.loose ? a[Ts] : a[Un],
										A = E.match(D);
									if (!A) throw new TypeError("Invalid comparator: " + E);
									(this.operator = A[1]),
										this.operator === "=" && (this.operator = ""),
										A[2]
											? (this.semver = new Re(A[2], this.loose))
											: (this.semver = la);
								}),
									(Ui.prototype.toString = function () {
										return this.value;
									}),
									(Ui.prototype.test = function (E) {
										return (
											r("Comparator.test", E, this.loose),
											this.semver === la ||
												(typeof E == "string" && (E = new Re(E, this.loose)),
												Pl(E, this.operator, this.semver, this.loose))
										);
									}),
									(Ui.prototype.intersects = function (E, D) {
										if (!(E instanceof Ui))
											throw new TypeError("a Comparator is required");
										var A;
										if (this.operator === "")
											return (A = new ct(E.value, D)), $l(this.value, A, D);
										if (E.operator === "")
											return (A = new ct(this.value, D)), $l(E.semver, A, D);
										var Z = !(
												(this.operator !== ">=" && this.operator !== ">") ||
												(E.operator !== ">=" && E.operator !== ">")
											),
											re = !(
												(this.operator !== "<=" && this.operator !== "<") ||
												(E.operator !== "<=" && E.operator !== "<")
											),
											Rt = this.semver.version === E.semver.version,
											Oe = !(
												(this.operator !== ">=" && this.operator !== "<=") ||
												(E.operator !== ">=" && E.operator !== "<=")
											),
											Ei =
												Pl(this.semver, "<", E.semver, D) &&
												(this.operator === ">=" || this.operator === ">") &&
												(E.operator === "<=" || E.operator === "<"),
											ft =
												Pl(this.semver, ">", E.semver, D) &&
												(this.operator === "<=" || this.operator === "<") &&
												(E.operator === ">=" || E.operator === ">");
										return Z || re || (Rt && Oe) || Ei || ft;
									}),
									(e.Range = ct),
									(ct.prototype.format = function () {
										return (
											(this.range = this.set
												.map(function (E) {
													return E.join(" ").trim();
												})
												.join("||")
												.trim()),
											this.range
										);
									}),
									(ct.prototype.toString = function () {
										return this.range;
									}),
									(ct.prototype.parseRange = function (E) {
										var D = this.loose;
										(E = E.trim()), r("range", E, D);
										var A = D ? a[kl] : a[Sl];
										(E = E.replace(A, Z3)),
											r("hyphen replace", E),
											(E = E.replace(a[hs], "$1$2$3")),
											r("comparator trim", E, a[hs]),
											(E = (E = (E = E.replace(a[te], "$1~")).replace(
												a[dt],
												"$1^",
											))
												.split(/\s+/)
												.join(" "));
										var Z = D ? a[Ts] : a[Un],
											re = E.split(" ")
												.map(function (Rt) {
													return (function (Oe, Ei) {
														return (
															r("comp", Oe),
															(Oe = (function (ft, Xt) {
																return ft
																	.trim()
																	.split(/\s+/)
																	.map(function (ds) {
																		return (function (pt, jt) {
																			r("caret", pt, jt);
																			var Si = jt ? a[Wr] : a[js];
																			return pt.replace(
																				Si,
																				function (Yi, ce, be, qe, Ye) {
																					var Tt;
																					return (
																						r("caret", pt, Yi, ce, be, qe, Ye),
																						oi(ce)
																							? (Tt = "")
																							: oi(be)
																								? (Tt =
																										">=" +
																										ce +
																										".0.0 <" +
																										(+ce + 1) +
																										".0.0")
																								: oi(qe)
																									? (Tt =
																											ce === "0"
																												? ">=" +
																													ce +
																													"." +
																													be +
																													".0 <" +
																													ce +
																													"." +
																													(+be + 1) +
																													".0"
																												: ">=" +
																													ce +
																													"." +
																													be +
																													".0 <" +
																													(+ce + 1) +
																													".0.0")
																									: Ye
																										? (r("replaceCaret pr", Ye),
																											Ye.charAt(0) !== "-" &&
																												(Ye = "-" + Ye),
																											(Tt =
																												ce === "0"
																													? be === "0"
																														? ">=" +
																															ce +
																															"." +
																															be +
																															"." +
																															qe +
																															Ye +
																															" <" +
																															ce +
																															"." +
																															be +
																															"." +
																															(+qe + 1)
																														: ">=" +
																															ce +
																															"." +
																															be +
																															"." +
																															qe +
																															Ye +
																															" <" +
																															ce +
																															"." +
																															(+be + 1) +
																															".0"
																													: ">=" +
																														ce +
																														"." +
																														be +
																														"." +
																														qe +
																														Ye +
																														" <" +
																														(+ce + 1) +
																														".0.0"))
																										: (r("no pr"),
																											(Tt =
																												ce === "0"
																													? be === "0"
																														? ">=" +
																															ce +
																															"." +
																															be +
																															"." +
																															qe +
																															" <" +
																															ce +
																															"." +
																															be +
																															"." +
																															(+qe + 1)
																														: ">=" +
																															ce +
																															"." +
																															be +
																															"." +
																															qe +
																															" <" +
																															ce +
																															"." +
																															(+be + 1) +
																															".0"
																													: ">=" +
																														ce +
																														"." +
																														be +
																														"." +
																														qe +
																														" <" +
																														(+ce + 1) +
																														".0.0")),
																						r("caret return", Tt),
																						Tt
																					);
																				},
																			);
																		})(ds, Xt);
																	})
																	.join(" ");
															})(Oe, Ei)),
															r("caret", Oe),
															(Oe = (function (ft, Xt) {
																return ft
																	.trim()
																	.split(/\s+/)
																	.map(function (ds) {
																		return (function (pt, jt) {
																			var Si = jt ? a[$e] : a[fe];
																			return pt.replace(
																				Si,
																				function (Yi, ce, be, qe, Ye) {
																					var Tt;
																					return (
																						r("tilde", pt, Yi, ce, be, qe, Ye),
																						oi(ce)
																							? (Tt = "")
																							: oi(be)
																								? (Tt =
																										">=" +
																										ce +
																										".0.0 <" +
																										(+ce + 1) +
																										".0.0")
																								: oi(qe)
																									? (Tt =
																											">=" +
																											ce +
																											"." +
																											be +
																											".0 <" +
																											ce +
																											"." +
																											(+be + 1) +
																											".0")
																									: Ye
																										? (r("replaceTilde pr", Ye),
																											Ye.charAt(0) !== "-" &&
																												(Ye = "-" + Ye),
																											(Tt =
																												">=" +
																												ce +
																												"." +
																												be +
																												"." +
																												qe +
																												Ye +
																												" <" +
																												ce +
																												"." +
																												(+be + 1) +
																												".0"))
																										: (Tt =
																												">=" +
																												ce +
																												"." +
																												be +
																												"." +
																												qe +
																												" <" +
																												ce +
																												"." +
																												(+be + 1) +
																												".0"),
																						r("tilde return", Tt),
																						Tt
																					);
																				},
																			);
																		})(ds, Xt);
																	})
																	.join(" ");
															})(Oe, Ei)),
															r("tildes", Oe),
															(Oe = (function (ft, Xt) {
																return (
																	r("replaceXRanges", ft, Xt),
																	ft
																		.split(/\s+/)
																		.map(function (ds) {
																			return (function (pt, jt) {
																				pt = pt.trim();
																				var Si = jt ? a[O] : a[L];
																				return pt.replace(
																					Si,
																					function (Yi, ce, be, qe, Ye, Tt) {
																						r(
																							"xRange",
																							pt,
																							Yi,
																							ce,
																							be,
																							qe,
																							Ye,
																							Tt,
																						);
																						var y0 = oi(be),
																							ua = y0 || oi(qe),
																							ha = ua || oi(Ye);
																						return (
																							ce === "=" && ha && (ce = ""),
																							y0
																								? (Yi =
																										ce === ">" || ce === "<"
																											? "<0.0.0"
																											: "*")
																								: ce && ha
																									? (ua && (qe = 0),
																										ha && (Ye = 0),
																										ce === ">"
																											? ((ce = ">="),
																												ua
																													? ((be = +be + 1),
																														(qe = 0),
																														(Ye = 0))
																													: ha &&
																														((qe = +qe + 1),
																														(Ye = 0)))
																											: ce === "<=" &&
																												((ce = "<"),
																												ua
																													? (be = +be + 1)
																													: (qe = +qe + 1)),
																										(Yi =
																											ce +
																											be +
																											"." +
																											qe +
																											"." +
																											Ye))
																									: ua
																										? (Yi =
																												">=" +
																												be +
																												".0.0 <" +
																												(+be + 1) +
																												".0.0")
																										: ha &&
																											(Yi =
																												">=" +
																												be +
																												"." +
																												qe +
																												".0 <" +
																												be +
																												"." +
																												(+qe + 1) +
																												".0"),
																							r("xRange return", Yi),
																							Yi
																						);
																					},
																				);
																			})(ds, Xt);
																		})
																		.join(" ")
																);
															})(Oe, Ei)),
															r("xrange", Oe),
															(Oe = (function (ft, Xt) {
																return (
																	r("replaceStars", ft, Xt),
																	ft.trim().replace(a[g0], "")
																);
															})(Oe, Ei)),
															r("stars", Oe),
															Oe
														);
													})(Rt, D);
												})
												.join(" ")
												.split(/\s+/);
										return (
											this.loose &&
												(re = re.filter(function (Rt) {
													return !!Rt.match(Z);
												})),
											(re = re.map(function (Rt) {
												return new Ui(Rt, D);
											}))
										);
									}),
									(ct.prototype.intersects = function (E, D) {
										if (!(E instanceof ct))
											throw new TypeError("a Range is required");
										return this.set.some(function (A) {
											return A.every(function (Z) {
												return E.set.some(function (re) {
													return re.every(function (Rt) {
														return Z.intersects(Rt, D);
													});
												});
											});
										});
									}),
									(e.toComparators = function (E, D) {
										return new ct(E, D).set.map(function (A) {
											return A.map(function (Z) {
												return Z.value;
											})
												.join(" ")
												.trim()
												.split(" ");
										});
									}),
									(ct.prototype.test = function (E) {
										if (!E) return !1;
										typeof E == "string" && (E = new Re(E, this.loose));
										for (var D = 0; D < this.set.length; D++)
											if (eE(this.set[D], E)) return !0;
										return !1;
									}),
									(e.satisfies = $l),
									(e.maxSatisfying = function (E, D, A) {
										var Z = null,
											re = null;
										try {
											var Rt = new ct(D, A);
										} catch {
											return null;
										}
										return (
											E.forEach(function (Oe) {
												Rt.test(Oe) &&
													((Z && re.compare(Oe) !== -1) ||
														(re = new Re((Z = Oe), A)));
											}),
											Z
										);
									}),
									(e.minSatisfying = function (E, D, A) {
										var Z = null,
											re = null;
										try {
											var Rt = new ct(D, A);
										} catch {
											return null;
										}
										return (
											E.forEach(function (Oe) {
												Rt.test(Oe) &&
													((Z && re.compare(Oe) !== 1) ||
														(re = new Re((Z = Oe), A)));
											}),
											Z
										);
									}),
									(e.validRange = function (E, D) {
										try {
											return new ct(E, D).range || "*";
										} catch {
											return null;
										}
									}),
									(e.ltr = function (E, D, A) {
										return bf(E, D, "<", A);
									}),
									(e.gtr = function (E, D, A) {
										return bf(E, D, ">", A);
									}),
									(e.outside = bf),
									(e.prerelease = function (E, D) {
										var A = Tr(E, D);
										return A && A.prerelease.length ? A.prerelease : null;
									}),
									(e.intersects = function (E, D, A) {
										return (
											(E = new ct(E, A)), (D = new ct(D, A)), E.intersects(D)
										);
									}),
									(e.coerce = function (E) {
										if (E instanceof Re) return E;
										if (typeof E != "string") return null;
										var D = E.match(a[V]);
										return D == null
											? null
											: Tr(
													(D[1] || "0") +
														"." +
														(D[2] || "0") +
														"." +
														(D[3] || "0"),
												);
									});
							}).call(this, i(1));
						},
						function (t, e) {
							var i,
								s,
								r = (t.exports = {});
							function n() {
								throw new Error("setTimeout has not been defined");
							}
							function o() {
								throw new Error("clearTimeout has not been defined");
							}
							function a(b) {
								if (i === setTimeout) return setTimeout(b, 0);
								if ((i === n || !i) && setTimeout)
									return (i = setTimeout), setTimeout(b, 0);
								try {
									return i(b, 0);
								} catch {
									try {
										return i.call(null, b, 0);
									} catch {
										return i.call(this, b, 0);
									}
								}
							}
							(function () {
								try {
									i = typeof setTimeout == "function" ? setTimeout : n;
								} catch {
									i = n;
								}
								try {
									s = typeof clearTimeout == "function" ? clearTimeout : o;
								} catch {
									s = o;
								}
							})();
							var c,
								l = [],
								u = !1,
								d = -1;
							function f() {
								u &&
									c &&
									((u = !1),
									c.length ? (l = c.concat(l)) : (d = -1),
									l.length && p());
							}
							function p() {
								if (!u) {
									var b = a(f);
									u = !0;
									for (var y = l.length; y; ) {
										for (c = l, l = []; ++d < y; ) c && c[d].run();
										(d = -1), (y = l.length);
									}
									(c = null),
										(u = !1),
										(function (k) {
											if (s === clearTimeout) return clearTimeout(k);
											if ((s === o || !s) && clearTimeout)
												return (s = clearTimeout), clearTimeout(k);
											try {
												s(k);
											} catch {
												try {
													return s.call(null, k);
												} catch {
													return s.call(this, k);
												}
											}
										})(b);
								}
							}
							function v(b, y) {
								(this.fun = b), (this.array = y);
							}
							function g() {}
							(r.nextTick = function (b) {
								var y = new Array(arguments.length - 1);
								if (arguments.length > 1)
									for (var k = 1; k < arguments.length; k++)
										y[k - 1] = arguments[k];
								l.push(new v(b, y)), l.length !== 1 || u || a(p);
							}),
								(v.prototype.run = function () {
									this.fun.apply(null, this.array);
								}),
								(r.title = "browser"),
								(r.browser = !0),
								(r.env = {}),
								(r.argv = []),
								(r.version = ""),
								(r.versions = {}),
								(r.on = g),
								(r.addListener = g),
								(r.once = g),
								(r.off = g),
								(r.removeListener = g),
								(r.removeAllListeners = g),
								(r.emit = g),
								(r.prependListener = g),
								(r.prependOnceListener = g),
								(r.listeners = function (b) {
									return [];
								}),
								(r.binding = function (b) {
									throw new Error("process.binding is not supported");
								}),
								(r.cwd = function () {
									return "/";
								}),
								(r.chdir = function (b) {
									throw new Error("process.chdir is not supported");
								}),
								(r.umask = function () {
									return 0;
								});
						},
					]);
				}),
				(lI = we.exports.SEMVER_SPEC_VERSION),
				(uI = we.exports.parse),
				(D6 = we.exports.valid),
				(hI = we.exports.coerce),
				(dI = we.exports.clean),
				(fI = we.exports.inc),
				(pI = we.exports.major),
				(mI = we.exports.minor),
				(gI = we.exports.patch),
				(wI = we.exports.prerelease),
				(P6 = we.exports.gt),
				(vI = we.exports.gte),
				(yI = we.exports.lt),
				(bI = we.exports.lte),
				($6 = we.exports.eq),
				(EI = we.exports.neq),
				(SI = we.exports.cmp),
				(kI = we.exports.compare),
				(xI = we.exports.rcompare),
				(DI = we.exports.compareIdentifiers),
				(PI = we.exports.rcompareIdentifiers),
				($I = we.exports.compareBuild),
				(AI = we.exports.sort),
				(II = we.exports.rsort),
				(CI = we.exports.diff),
				(_I = we.exports.validRange),
				(RI = we.exports.satisfies),
				(OI = we.exports.maxSatisfying),
				(LI = we.exports.minSatisfying),
				(MI = we.exports.minVersion),
				(FI = we.exports.gtr),
				(NI = we.exports.ltr),
				(WI = we.exports.outside),
				(jI = we.exports.intersects),
				(TI = we.exports.SemVer),
				(UI = we.exports.Comparator),
				(qI = we.exports.Range);
		},
	}),
	I6,
	C6,
	BI = m({
		"out-build/vs/platform/extensions/common/extensionsApiProposals.js"() {
			"use strict";
			(I6 = {
				activeComment: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.activeComment.d.ts",
				},
				aiRelatedInformation: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.aiRelatedInformation.d.ts",
				},
				aiTextSearchProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.aiTextSearchProvider.d.ts",
					version: 2,
				},
				authLearnMore: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.authLearnMore.d.ts",
				},
				authSession: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.authSession.d.ts",
				},
				canonicalUriProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.canonicalUriProvider.d.ts",
				},
				chatEditing: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatEditing.d.ts",
				},
				chatParticipantAdditions: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts",
				},
				chatParticipantPrivate: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatParticipantPrivate.d.ts",
					version: 2,
				},
				chatProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatProvider.d.ts",
				},
				chatReferenceBinaryData: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatReferenceBinaryData.d.ts",
				},
				chatTab: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatTab.d.ts",
				},
				chatVariableResolver: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatVariableResolver.d.ts",
				},
				codeActionAI: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.codeActionAI.d.ts",
				},
				codeActionRanges: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.codeActionRanges.d.ts",
				},
				codiconDecoration: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.codiconDecoration.d.ts",
				},
				commentReactor: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentReactor.d.ts",
				},
				commentReveal: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentReveal.d.ts",
				},
				commentThreadApplicability: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentThreadApplicability.d.ts",
				},
				commentingRangeHint: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentingRangeHint.d.ts",
				},
				commentsDraftState: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentsDraftState.d.ts",
				},
				contribAccessibilityHelpContent: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribAccessibilityHelpContent.d.ts",
				},
				contribChatParticipantDetection: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribChatParticipantDetection.d.ts",
				},
				contribCommentEditorActionsMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentEditorActionsMenu.d.ts",
				},
				contribCommentPeekContext: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentPeekContext.d.ts",
				},
				contribCommentThreadAdditionalMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentThreadAdditionalMenu.d.ts",
				},
				contribCommentsViewThreadMenus: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentsViewThreadMenus.d.ts",
				},
				contribDebugCreateConfiguration: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribDebugCreateConfiguration.d.ts",
				},
				contribDiffEditorGutterToolBarMenus: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribDiffEditorGutterToolBarMenus.d.ts",
				},
				contribEditSessions: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribEditSessions.d.ts",
				},
				contribEditorContentMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribEditorContentMenu.d.ts",
				},
				contribLabelFormatterWorkspaceTooltip: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribLabelFormatterWorkspaceTooltip.d.ts",
				},
				contribMenuBarHome: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribMenuBarHome.d.ts",
				},
				contribMergeEditorMenus: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribMergeEditorMenus.d.ts",
				},
				contribMultiDiffEditorMenus: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribMultiDiffEditorMenus.d.ts",
				},
				contribNotebookStaticPreloads: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribNotebookStaticPreloads.d.ts",
				},
				contribRemoteHelp: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribRemoteHelp.d.ts",
				},
				contribShareMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribShareMenu.d.ts",
				},
				contribSourceControlHistoryItemMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribSourceControlHistoryItemMenu.d.ts",
				},
				contribSourceControlHistoryTitleMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribSourceControlHistoryTitleMenu.d.ts",
				},
				contribSourceControlInputBoxMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribSourceControlInputBoxMenu.d.ts",
				},
				contribSourceControlTitleMenu: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribSourceControlTitleMenu.d.ts",
				},
				contribStatusBarItems: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribStatusBarItems.d.ts",
				},
				contribViewContainerTitle: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribViewContainerTitle.d.ts",
				},
				contribViewsRemote: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribViewsRemote.d.ts",
				},
				contribViewsWelcome: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribViewsWelcome.d.ts",
				},
				control: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.control.d.ts",
				},
				createFileSystemWatcher: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.createFileSystemWatcher.d.ts",
				},
				cursor: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.cursor.d.ts",
				},
				cursorNoDeps: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.cursorNoDeps.d.ts",
				},
				customEditorMove: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.customEditorMove.d.ts",
				},
				debugVisualization: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.debugVisualization.d.ts",
				},
				defaultChatParticipant: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.defaultChatParticipant.d.ts",
					version: 2,
				},
				diffCommand: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.diffCommand.d.ts",
				},
				diffContentOptions: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.diffContentOptions.d.ts",
				},
				documentFiltersExclusive: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.documentFiltersExclusive.d.ts",
				},
				documentPaste: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.documentPaste.d.ts",
				},
				editSessionIdentityProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.editSessionIdentityProvider.d.ts",
				},
				editorHoverVerbosityLevel: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.editorHoverVerbosityLevel.d.ts",
				},
				editorInsets: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.editorInsets.d.ts",
				},
				embeddings: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.embeddings.d.ts",
				},
				extensionRuntime: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.extensionRuntime.d.ts",
				},
				extensionsAny: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.extensionsAny.d.ts",
				},
				externalUriOpener: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.externalUriOpener.d.ts",
				},
				fileComments: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fileComments.d.ts",
				},
				fileSearchProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fileSearchProvider.d.ts",
				},
				fileSearchProvider2: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fileSearchProvider2.d.ts",
				},
				findFiles2: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.findFiles2.d.ts",
					version: 2,
				},
				findTextInFiles: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.findTextInFiles.d.ts",
				},
				findTextInFiles2: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.findTextInFiles2.d.ts",
				},
				fsChunks: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fsChunks.d.ts",
				},
				idToken: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.idToken.d.ts",
				},
				inlineCompletionsAdditions: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.inlineCompletionsAdditions.d.ts",
				},
				inlineEdit: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.inlineEdit.d.ts",
				},
				interactive: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.interactive.d.ts",
				},
				interactiveWindow: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.interactiveWindow.d.ts",
				},
				ipc: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.ipc.d.ts",
				},
				languageModelSystem: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.languageModelSystem.d.ts",
				},
				languageStatusText: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.languageStatusText.d.ts",
				},
				mappedEditsProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.mappedEditsProvider.d.ts",
				},
				multiDocumentHighlightProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.multiDocumentHighlightProvider.d.ts",
				},
				nativeWindowHandle: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.nativeWindowHandle.d.ts",
				},
				newSymbolNamesProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.newSymbolNamesProvider.d.ts",
				},
				notebookCellExecution: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookCellExecution.d.ts",
				},
				notebookCellExecutionState: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookCellExecutionState.d.ts",
				},
				notebookControllerAffinityHidden: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookControllerAffinityHidden.d.ts",
				},
				notebookDeprecated: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookDeprecated.d.ts",
				},
				notebookExecution: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookExecution.d.ts",
				},
				notebookKernelSource: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookKernelSource.d.ts",
				},
				notebookLiveShare: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookLiveShare.d.ts",
				},
				notebookMessaging: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookMessaging.d.ts",
				},
				notebookMime: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookMime.d.ts",
				},
				notebookReplDocument: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookReplDocument.d.ts",
				},
				notebookVariableProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookVariableProvider.d.ts",
				},
				portsAttributes: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.portsAttributes.d.ts",
				},
				profileContentHandlers: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.profileContentHandlers.d.ts",
				},
				quickDiffProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickDiffProvider.d.ts",
				},
				quickInputButtonLocation: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickInputButtonLocation.d.ts",
				},
				quickPickItemTooltip: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickPickItemTooltip.d.ts",
				},
				quickPickSortByLabel: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickPickSortByLabel.d.ts",
				},
				resolvers: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.resolvers.d.ts",
				},
				scmActionButton: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmActionButton.d.ts",
				},
				scmHistoryProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmHistoryProvider.d.ts",
				},
				scmMultiDiffEditor: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmMultiDiffEditor.d.ts",
				},
				scmRemotes: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmRemotes.d.ts",
				},
				scmSelectedProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmSelectedProvider.d.ts",
				},
				scmTextDocument: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmTextDocument.d.ts",
				},
				scmValidation: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmValidation.d.ts",
				},
				shareProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.shareProvider.d.ts",
				},
				showLocal: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.showLocal.d.ts",
				},
				speech: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.speech.d.ts",
				},
				tabInputMultiDiff: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tabInputMultiDiff.d.ts",
				},
				tabInputTextMerge: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tabInputTextMerge.d.ts",
				},
				taskPresentationGroup: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.taskPresentationGroup.d.ts",
				},
				telemetry: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.telemetry.d.ts",
				},
				terminalCompletionProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalCompletionProvider.d.ts",
				},
				terminalDataWriteEvent: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalDataWriteEvent.d.ts",
				},
				terminalDimensions: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalDimensions.d.ts",
				},
				terminalExecuteCommandEvent: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalExecuteCommandEvent.d.ts",
				},
				terminalQuickFixProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalQuickFixProvider.d.ts",
				},
				terminalSelection: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalSelection.d.ts",
				},
				testObserver: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.testObserver.d.ts",
				},
				testRelatedCode: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.testRelatedCode.d.ts",
				},
				textEditorDiffInformation: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.textEditorDiffInformation.d.ts",
				},
				textSearchComplete2: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.textSearchComplete2.d.ts",
				},
				textSearchProvider: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.textSearchProvider.d.ts",
				},
				textSearchProvider2: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.textSearchProvider2.d.ts",
				},
				timeline: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.timeline.d.ts",
				},
				tokenInformation: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tokenInformation.d.ts",
				},
				treeViewActiveItem: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewActiveItem.d.ts",
				},
				treeViewMarkdownMessage: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewMarkdownMessage.d.ts",
				},
				treeViewReveal: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewReveal.d.ts",
				},
				tunnelFactory: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tunnelFactory.d.ts",
				},
				tunnels: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tunnels.d.ts",
				},
				valueSelectionInQuickPick: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.valueSelectionInQuickPick.d.ts",
				},
				workspaceTrust: {
					proposal:
						"https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.workspaceTrust.d.ts",
				},
			}),
				(C6 = Object.freeze(I6));
		},
	});
function zI(t) {
	return (t = t.trim()), t === "*" || Xm.test(t);
}
function Gm(t) {
	if (!zI(t)) return null;
	if (((t = t.trim()), t === "*"))
		return {
			hasCaret: !1,
			hasGreaterEquals: !1,
			majorBase: 0,
			majorMustEqual: !1,
			minorBase: 0,
			minorMustEqual: !1,
			patchBase: 0,
			patchMustEqual: !1,
			preRelease: null,
		};
	const e = t.match(Xm);
	return e
		? {
				hasCaret: e[1] === "^",
				hasGreaterEquals: e[1] === ">=",
				majorBase: e[2] === "x" ? 0 : parseInt(e[2], 10),
				majorMustEqual: e[2] !== "x",
				minorBase: e[4] === "x" ? 0 : parseInt(e[4], 10),
				minorMustEqual: e[4] !== "x",
				patchBase: e[6] === "x" ? 0 : parseInt(e[6], 10),
				patchMustEqual: e[6] !== "x",
				preRelease: e[8] || null,
			}
		: null;
}
function Jm(t) {
	if (!t) return null;
	const e = t.majorBase,
		i = t.majorMustEqual,
		s = t.minorBase;
	let r = t.minorMustEqual;
	const n = t.patchBase;
	let o = t.patchMustEqual;
	t.hasCaret && (e === 0 || (r = !1), (o = !1));
	let a = 0;
	if (t.preRelease) {
		const c = R6.exec(t.preRelease);
		if (c) {
			const [, l, u, d] = c;
			a = Date.UTC(Number(l), Number(u) - 1, Number(d));
		}
	}
	return {
		majorBase: e,
		majorMustEqual: i,
		minorBase: s,
		minorMustEqual: r,
		patchBase: n,
		patchMustEqual: o,
		isMinimum: t.hasGreaterEquals,
		notBefore: a,
	};
}
function HI(t, e, i) {
	let s;
	typeof t == "string" ? (s = Jm(Gm(t))) : (s = t);
	let r;
	e instanceof Date
		? (r = e.getTime())
		: typeof e == "string" && (r = new Date(e).getTime());
	let n;
	if ((typeof i == "string" ? (n = Jm(Gm(i))) : (n = i), !s || !n)) return !1;
	const o = s.majorBase,
		a = s.minorBase,
		c = s.patchBase;
	let l = n.majorBase,
		u = n.minorBase,
		d = n.patchBase;
	const f = n.notBefore;
	let p = n.majorMustEqual,
		v = n.minorMustEqual,
		g = n.patchMustEqual;
	return n.isMinimum
		? o > l
			? !0
			: o < l
				? !1
				: a > u
					? !0
					: a < u || (r && r < f)
						? !1
						: c >= d
		: (o === 1 &&
				l === 0 &&
				(!p || !v || !g) &&
				((l = 1), (u = 0), (d = 0), (p = !0), (v = !1), (g = !1)),
			o < l
				? !1
				: o > l
					? !p
					: a < u
						? !1
						: a > u
							? !v
							: c < d
								? !1
								: c > d
									? !g
									: !(r && r < f));
}
function VI(t, e, i, s, r, n) {
	const o = [];
	if (typeof s.publisher < "u" && typeof s.publisher != "string")
		return o.push([Pe.Error, w(1882, null)]), o;
	if (typeof s.name != "string")
		return o.push([Pe.Error, w(1883, null, "name")]), o;
	if (typeof s.version != "string")
		return o.push([Pe.Error, w(1884, null, "version")]), o;
	if (!s.engines) return o.push([Pe.Error, w(1885, null, "engines")]), o;
	if (typeof s.engines.vscode != "string")
		return o.push([Pe.Error, w(1886, null, "engines.vscode")]), o;
	if (typeof s.extensionDependencies < "u" && !_6(s.extensionDependencies))
		return o.push([Pe.Error, w(1887, null, "extensionDependencies")]), o;
	if (typeof s.activationEvents < "u") {
		if (!_6(s.activationEvents))
			return o.push([Pe.Error, w(1888, null, "activationEvents")]), o;
		if (typeof s.main > "u" && typeof s.browser > "u")
			return (
				o.push([
					Pe.Error,
					w(1889, null, "activationEvents", "main", "browser"),
				]),
				o
			);
	}
	if (
		(typeof s.extensionKind < "u" &&
			typeof s.main > "u" &&
			o.push([Pe.Warning, w(1890, null, "extensionKind")]),
		typeof s.main < "u")
	) {
		if (typeof s.main != "string")
			return o.push([Pe.Error, w(1891, null, "main")]), o;
		{
			const l = he(i, s.main);
			fp(l, i) || o.push([Pe.Warning, w(1892, null, l.path, i.path)]);
		}
	}
	if (typeof s.browser < "u") {
		if (typeof s.browser != "string")
			return o.push([Pe.Error, w(1893, null, "browser")]), o;
		{
			const l = he(i, s.browser);
			fp(l, i) || o.push([Pe.Warning, w(1894, null, l.path, i.path)]);
		}
	}
	if (!D6(s.version)) return o.push([Pe.Error, w(1895, null)]), o;
	const a = [];
	if (!GI(t, e, s, r, a)) for (const l of a) o.push([Pe.Error, l]);
	if (n && s.enabledApiProposals?.length) {
		const l = [];
		if (!JI([...s.enabledApiProposals], l))
			for (const u of l) o.push([Pe.Error, u]);
	}
	return o;
}
function GI(t, e, i, s, r) {
	return s || (typeof i.main > "u" && typeof i.browser > "u")
		? !0
		: XI(t, e, i.engines.vscode, r);
}
function JI(t, e) {
	if (t.length === 0) return !0;
	const i = Array.isArray(e) ? e : void 0,
		s = (i ? void 0 : e) ?? C6,
		r = [],
		n = QA(t);
	for (const { proposalName: o, version: a } of n) {
		if (!a) continue;
		s[o]?.version !== a && r.push(o);
	}
	return r.length
		? (i &&
				(r.length === 1
					? i.push(w(1896, null, r[0]))
					: i.push(
							w(
								1897,
								null,
								r
									.slice(0, r.length - 1)
									.map((o) => `'${o}'`)
									.join(", "),
								r[r.length - 1],
							),
						)),
			!1)
		: !0;
}
function XI(t, e, i, s = []) {
	const r = Jm(Gm(i));
	if (!r) return s.push(w(1898, null, i)), !1;
	if (r.majorBase === 0) {
		if (!r.majorMustEqual || !r.minorMustEqual)
			return s.push(w(1899, null, i)), !1;
	} else if (!r.majorMustEqual) return s.push(w(1900, null, i)), !1;
	return HI(t, e, r) ? !0 : (s.push(w(1901, null, t, i)), !1);
}
function _6(t) {
	if (!Array.isArray(t)) return !1;
	for (let e = 0, i = t.length; e < i; e++)
		if (typeof t[e] != "string") return !1;
	return !0;
}
var Xm,
	R6,
	KI = m({
		"out-build/vs/platform/extensions/common/extensionValidator.js"() {
			"use strict";
			rt(),
				ih(),
				ve(),
				A6(),
				Hm(),
				BI(),
				(Xm = /^(\^|>=)?((\d+)|x)\.((\d+)|x)\.((\d+)|x)(\-.*)?$/),
				(R6 = /^-(\d{4})(\d{2})(\d{2})$/);
		},
	});
function YI(t, e, i, s) {
	try {
		QI(t, e, i, s);
	} catch (r) {
		t.error(r?.message ?? r);
	}
	return e;
}
function QI(t, e, i, s) {
	const r = (n, o, a) => {
		const c = n[o];
		if (mt(c)) {
			const l = c,
				u = l.length;
			if (u > 1 && l[0] === "%" && l[u - 1] === "%") {
				const d = l.substr(1, u - 2);
				let f = i[d];
				f === void 0 && s && (f = s[d]);
				const p = typeof f == "string" ? f : f?.message,
					v = s?.[d],
					g = typeof v == "string" ? v : v?.message;
				if (!p) {
					g || t.warn(`[${e.name}]: ${w(1860, null, d)}`);
					return;
				}
				if (a && (o === "title" || o === "category") && g && g !== p) {
					const b = { value: p, original: g };
					n[o] = b;
				} else n[o] = p;
			}
		} else if (Lt(c))
			for (const l in c)
				c.hasOwnProperty(l) && (l === "commands" ? r(c, l, !0) : r(c, l, a));
		else if (Array.isArray(c)) for (let l = 0; l < c.length; l++) r(c, l, a);
	};
	for (const n in e) e.hasOwnProperty(n) && r(e, n);
}
var ZI = m({
		"out-build/vs/platform/extensionManagement/common/extensionNls.js"() {
			"use strict";
			Ie(), ve();
		},
	}),
	Km,
	O6,
	id,
	Jo,
	Vc,
	Gc,
	L6,
	M6 = m({
		"out-build/vs/platform/extensionManagement/common/extensionsScannerService.js"() {
			"use strict";
			Ut(),
				ae(),
				ns(),
				Je(),
				Ae(),
				ir(),
				cI(),
				F(),
				Ce(),
				ge(),
				z(),
				rt(),
				A6(),
				ih(),
				Ie(),
				ie(),
				ve(),
				Gi(),
				S6(),
				Hm(),
				KI(),
				Be(),
				Y(),
				Q(),
				Ct(),
				q(),
				su(),
				td(),
				Is(),
				$s(),
				ZI(),
				(function (t) {
					function e(i, s) {
						if (i === s) return !0;
						const r = Object.keys(i),
							n = new Set();
						for (const o of Object.keys(s)) n.add(o);
						if (r.length !== n.size) return !1;
						for (const o of r) {
							if (i[o] !== s[o]) return !1;
							n.delete(o);
						}
						return n.size === 0;
					}
					t.equals = e;
				})(Km || (Km = {})),
				(O6 = B("IExtensionsScannerService")),
				(id = class extends j {
					constructor(e, i, s, r, n, o, a, c, l, u, d, f) {
						super(),
							(this.systemExtensionsLocation = e),
							(this.userExtensionsLocation = i),
							(this.q = s),
							(this.r = r),
							(this.s = n),
							(this.t = o),
							(this.u = a),
							(this.w = c),
							(this.y = l),
							(this.z = u),
							(this.C = d),
							(this.F = f),
							(this.g = this.D(new $())),
							(this.onDidChangeCache = this.g.event),
							(this.h = he(this.userExtensionsLocation, ".obsolete")),
							(this.j = this.D(this.F.createInstance(Gc, this.r, this.h))),
							(this.m = this.D(this.F.createInstance(Gc, this.r, this.h))),
							(this.n = this.D(this.F.createInstance(Vc, this.h))),
							(this.H = void 0),
							this.D(this.j.onDidChangeCache(() => this.g.fire(0))),
							this.D(this.m.onDidChangeCache(() => this.g.fire(1)));
					}
					getTargetPlatform() {
						return this.G || (this.G = nI(this.u, this.w)), this.G;
					}
					async scanAllExtensions(e, i, s) {
						const [r, n] = await Promise.all([
								this.scanSystemExtensions(e),
								this.scanUserExtensions(i),
							]),
							o = s
								? await this.scanExtensionsUnderDevelopment(e, [...r, ...n])
								: [];
						return this.L(r, n, o, await this.getTargetPlatform(), !0);
					}
					async scanSystemExtensions(e) {
						const i = [];
						i.push(this.M(!!e.useCache, e.language)),
							i.push(this.N(e.language, !!e.checkControlFile));
						const [s, r] = await Promise.all(i);
						return this.J([...s, ...r], 0, e, !1);
					}
					async scanUserExtensions(e) {
						const i = e.profileLocation ?? this.userExtensionsLocation;
						this.w.trace("Started scanning user extensions", i);
						const s = this.C.extUri.isEqual(
								e.profileLocation,
								this.s.defaultProfile.extensionsResource,
							)
								? { bailOutWhenFileNotFound: !0 }
								: void 0,
							r = await this.P(
								i,
								!!e.profileLocation,
								1,
								!e.includeUninstalled,
								e.language,
								!0,
								s,
								e.productVersion ?? this.R(),
							),
							n =
								e.useCache && !r.devMode && r.excludeObsolete ? this.m : this.n;
						let o;
						try {
							o = await n.scanExtensions(r);
						} catch (a) {
							if (a instanceof zc && a.code === "ERROR_PROFILE_NOT_FOUND")
								await this.I(), (o = await n.scanExtensions(r));
							else throw a;
						}
						return (
							(o = await this.J(o, 1, e, !0)),
							this.w.trace("Scanned user extensions:", o.length),
							o
						);
					}
					async scanExtensionsUnderDevelopment(e, i) {
						if (
							this.y.isExtensionDevelopment &&
							this.y.extensionDevelopmentLocationURI
						) {
							const s = (
								await Promise.all(
									this.y.extensionDevelopmentLocationURI
										.filter((r) => r.scheme === R.file)
										.map(async (r) => {
											const n = await this.P(
												r,
												!1,
												1,
												!0,
												e.language,
												!1,
												void 0,
												e.productVersion ?? this.R(),
											);
											return (await this.n.scanOneOrMultipleExtensions(n)).map(
												(a) => (
													(a.type =
														i.find((c) => Vo(c.identifier, a.identifier))
															?.type ?? a.type),
													this.n.validate(a, n)
												),
											);
										}),
								)
							).flat();
							return this.J(s, "development", e, !0);
						}
						return [];
					}
					async scanExistingExtension(e, i, s) {
						const r = await this.P(
								e,
								!1,
								i,
								!0,
								s.language,
								!0,
								void 0,
								s.productVersion ?? this.R(),
							),
							n = await this.n.scanExtension(r);
						return !n || (!s.includeInvalid && !n.isValid) ? null : n;
					}
					async scanOneOrMultipleExtensions(e, i, s) {
						const r = await this.P(
								e,
								!1,
								i,
								!0,
								s.language,
								!0,
								void 0,
								s.productVersion ?? this.R(),
							),
							n = await this.n.scanOneOrMultipleExtensions(r);
						return this.J(n, i, s, !0);
					}
					async scanMultipleExtensions(e, i, s) {
						const r = [];
						return (
							await Promise.all(
								e.map(async (n) => {
									const o = await this.scanOneOrMultipleExtensions(n, i, s);
									r.push(...o);
								}),
							),
							this.J(r, i, s, !0)
						);
					}
					async scanMetadata(e) {
						const i = he(e, "package.json"),
							s = (await this.u.readFile(i)).value.toString();
						return JSON.parse(s).__metadata;
					}
					async updateMetadata(e, i) {
						const s = he(e, "package.json"),
							r = (await this.u.readFile(s)).value.toString(),
							n = JSON.parse(r);
						i.isMachineScoped === !1 && delete i.isMachineScoped,
							i.isBuiltin === !1 && delete i.isBuiltin,
							(n.__metadata = { ...n.__metadata, ...i }),
							await this.u.writeFile(
								he(e, "package.json"),
								H.fromString(JSON.stringify(n, null, "	")),
							);
					}
					async initializeDefaultProfileExtensions() {
						try {
							await this.t.scanProfileExtensions(
								this.s.defaultProfile.extensionsResource,
								{ bailOutWhenFileNotFound: !0 },
							);
						} catch (e) {
							if (e instanceof zc && e.code === "ERROR_PROFILE_NOT_FOUND")
								await this.I();
							else throw e;
						}
					}
					async I() {
						return (
							this.H ||
								(this.H = (async () => {
									try {
										this.w.info(
											"Started initializing default profile extensions in extensions installation folder.",
											this.userExtensionsLocation.toString(),
										);
										const e = await this.scanUserExtensions({
											includeInvalid: !0,
										});
										if (e.length)
											await this.t.addExtensionsToProfile(
												e.map((i) => [i, i.metadata]),
												this.s.defaultProfile.extensionsResource,
											);
										else
											try {
												await this.u.createFile(
													this.s.defaultProfile.extensionsResource,
													H.fromString(JSON.stringify([])),
												);
											} catch (i) {
												Ds(i) !== 1 &&
													this.w.warn(
														"Failed to create default profile extensions manifest in extensions installation folder.",
														this.userExtensionsLocation.toString(),
														Bi(i),
													);
											}
										this.w.info(
											"Completed initializing default profile extensions in extensions installation folder.",
											this.userExtensionsLocation.toString(),
										);
									} catch (e) {
										this.w.error(e);
									} finally {
										this.H = void 0;
									}
								})()),
							this.H
						);
					}
					async J(e, i, s, r) {
						return (
							s.includeAllVersions ||
								(e = this.L(
									i === 0 ? e : void 0,
									i === 1 ? e : void 0,
									i === "development" ? e : void 0,
									await this.getTargetPlatform(),
									r,
								)),
							s.includeInvalid || (e = e.filter((n) => n.isValid)),
							e.sort((n, o) => {
								const a = Te(n.location.fsPath),
									c = Te(o.location.fsPath);
								return a < c ? -1 : a > c ? 1 : 0;
							})
						);
					}
					L(e, i, s, r, n) {
						const o = (c, l, u) => {
								if (c.isValid && !l.isValid) return !1;
								if (c.isValid === l.isValid) {
									if (n && P6(c.manifest.version, l.manifest.version))
										return (
											this.w.debug(
												`Skipping extension ${l.location.path} with lower version ${l.manifest.version} in favour of ${c.location.path} with version ${c.manifest.version}`,
											),
											!1
										);
									if ($6(c.manifest.version, l.manifest.version)) {
										if (c.type === 0)
											return (
												this.w.debug(
													`Skipping extension ${l.location.path} in favour of system extension ${c.location.path} with same version`,
												),
												!1
											);
										if (c.targetPlatform === r)
											return (
												this.w.debug(
													`Skipping extension ${l.location.path} from different target platform ${l.targetPlatform}`,
												),
												!1
											);
									}
								}
								return (
									u
										? this.w.warn(
												`Overwriting user extension ${c.location.path} with ${l.location.path}.`,
											)
										: this.w.debug(
												`Overwriting user extension ${c.location.path} with ${l.location.path}.`,
											),
									!0
								);
							},
							a = new y6();
						return (
							e?.forEach((c) => {
								const l = a.get(c.identifier.id);
								(!l || o(l, c, !1)) && a.set(c.identifier.id, c);
							}),
							i?.forEach((c) => {
								const l = a.get(c.identifier.id);
								if (!l && e && c.type === 0) {
									this.w.debug(
										`Skipping obsolete system extension ${c.location.path}.`,
									);
									return;
								}
								(!l || o(l, c, !1)) && a.set(c.identifier.id, c);
							}),
							s?.forEach((c) => {
								const l = a.get(c.identifier.id);
								(!l || o(l, c, !0)) && a.set(c.identifier.id, c),
									a.set(c.identifier.id, c);
							}),
							[...a.values()]
						);
					}
					async M(e, i) {
						this.w.trace("Started scanning system extensions");
						const s = await this.P(
								this.systemExtensionsLocation,
								!1,
								0,
								!0,
								i,
								!0,
								void 0,
								this.R(),
							),
							n = await (e && !s.devMode ? this.j : this.n).scanExtensions(s);
						return this.w.trace("Scanned system extensions:", n.length), n;
					}
					async N(e, i) {
						const s = this.y.isBuilt ? [] : this.z.builtInExtensions;
						if (!s?.length) return [];
						this.w.trace("Started scanning dev system extensions");
						const r = i ? await this.O() : {},
							n = [],
							o = P.file(
								ui(
									M(
										$t.asFileUri("").fsPath,
										"..",
										".build",
										"builtInExtensions",
									),
								),
							);
						for (const c of s) {
							const l = r[c.name] || "marketplace";
							switch (l) {
								case "disabled":
									break;
								case "marketplace":
									n.push(he(o, c.name));
									break;
								default:
									n.push(P.file(l));
									break;
							}
						}
						const a = await Promise.all(
							n.map(async (c) =>
								this.n.scanExtension(
									await this.P(c, !1, 0, !0, e, !0, void 0, this.R()),
								),
							),
						);
						return (
							this.w.trace("Scanned dev system extensions:", a.length), Dt(a)
						);
					}
					async O() {
						try {
							const e = await this.u.readFile(this.q);
							return JSON.parse(e.value.toString());
						} catch {
							return {};
						}
					}
					async P(e, i, s, r, n, o, a, c) {
						const l = await this.f(n ?? qi),
							u = await this.Q(e),
							d =
								i &&
								!this.C.extUri.isEqual(
									e,
									this.s.defaultProfile.extensionsResource,
								)
									? this.s.defaultProfile.extensionsResource
									: void 0,
							f = d ? await this.Q(d) : void 0;
						return new Jo(
							e,
							u,
							d,
							f,
							i,
							a,
							s,
							r,
							o,
							c.vscodeVersion,
							c.date,
							this.z.commit,
							!this.y.isBuilt,
							n,
							l,
						);
					}
					async Q(e) {
						try {
							const i = await this.u.stat(e);
							if (typeof i.mtime == "number") return i.mtime;
						} catch {}
					}
					R() {
						return {
							vscodeVersion: this.z.vscodeVersion,
							version: this.z.version,
							date: this.z.date,
						};
					}
				}),
				(id = __decorate(
					[
						__param(4, As),
						__param(5, Go),
						__param(6, nt),
						__param(7, G),
						__param(8, ks),
						__param(9, tt),
						__param(10, gi),
						__param(11, ws),
					],
					id,
				)),
				(Jo = class {
					constructor(t, e, i, s, r, n, o, a, c, l, u, d, f, p, v) {
						(this.location = t),
							(this.mtime = e),
							(this.applicationExtensionslocation = i),
							(this.applicationExtensionslocationMtime = s),
							(this.profile = r),
							(this.profileScanOptions = n),
							(this.type = o),
							(this.excludeObsolete = a),
							(this.validate = c),
							(this.productVersion = l),
							(this.productDate = u),
							(this.productCommit = d),
							(this.devMode = f),
							(this.language = p),
							(this.translations = v);
					}
					static createNlsConfiguration(t) {
						return {
							language: t.language,
							pseudo: t.language === "pseudo",
							devMode: t.devMode,
							translations: t.translations,
						};
					}
					static equals(t, e) {
						return (
							dp(t.location, e.location) &&
							t.mtime === e.mtime &&
							dp(
								t.applicationExtensionslocation,
								e.applicationExtensionslocation,
							) &&
							t.applicationExtensionslocationMtime ===
								e.applicationExtensionslocationMtime &&
							t.profile === e.profile &&
							_s(t.profileScanOptions, e.profileScanOptions) &&
							t.type === e.type &&
							t.excludeObsolete === e.excludeObsolete &&
							t.validate === e.validate &&
							t.productVersion === e.productVersion &&
							t.productDate === e.productDate &&
							t.productCommit === e.productCommit &&
							t.devMode === e.devMode &&
							t.language === e.language &&
							Km.equals(t.translations, e.translations)
						);
					}
				}),
				(Vc = class extends j {
					constructor(e, i, s, r, n, o, a) {
						super(),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = o),
							(this.q = a),
							(this.f =
								n.extensionsEnabledWithApiProposalVersion?.map((c) =>
									c.toLowerCase(),
								) ?? []);
					}
					async scanExtensions(e) {
						const i = e.profile ? await this.s(e) : await this.r(e);
						let s = {};
						if (e.excludeObsolete && e.type === 1)
							try {
								const r = (await this.m.readFile(this.g)).value.toString();
								s = JSON.parse(r);
							} catch {}
						return Hf(s) ? i : i.filter((r) => !s[E6.create(r).toString()]);
					}
					async r(e) {
						const i = await this.m.resolve(e.location);
						if (!i.children?.length) return [];
						const s = await Promise.all(
							i.children.map(async (r) => {
								if (
									!r.isDirectory ||
									(e.type === 1 && ys(r.resource).indexOf(".") === 0)
								)
									return null;
								const n = new Jo(
									r.resource,
									e.mtime,
									e.applicationExtensionslocation,
									e.applicationExtensionslocationMtime,
									e.profile,
									e.profileScanOptions,
									e.type,
									e.excludeObsolete,
									e.validate,
									e.productVersion,
									e.productDate,
									e.productCommit,
									e.devMode,
									e.language,
									e.translations,
								);
								return this.scanExtension(n);
							}),
						);
						return Dt(s).sort((r, n) =>
							r.location.path < n.location.path ? -1 : 1,
						);
					}
					async s(e) {
						let i = await this.t(e.location, () => !0, e);
						if (
							e.applicationExtensionslocation &&
							!this.j.extUri.isEqual(
								e.location,
								e.applicationExtensionslocation,
							)
						) {
							i = i.filter((r) => !r.metadata?.isApplicationScoped);
							const s = await this.t(
								e.applicationExtensionslocation,
								(r) =>
									!!r.metadata?.isBuiltin || !!r.metadata?.isApplicationScoped,
								e,
							);
							i.push(...s);
						}
						return i;
					}
					async t(e, i, s) {
						const r = await this.h.scanProfileExtensions(
							e,
							s.profileScanOptions,
						);
						if (!r.length) return [];
						const n = await Promise.all(
							r.map(async (o) => {
								if (i(o)) {
									const a = new Jo(
										o.location,
										s.mtime,
										s.applicationExtensionslocation,
										s.applicationExtensionslocationMtime,
										s.profile,
										s.profileScanOptions,
										s.type,
										s.excludeObsolete,
										s.validate,
										s.productVersion,
										s.productDate,
										s.productCommit,
										s.devMode,
										s.language,
										s.translations,
									);
									return this.scanExtension(a, o.metadata);
								}
								return null;
							}),
						);
						return Dt(n);
					}
					async scanOneOrMultipleExtensions(e) {
						try {
							if (await this.m.exists(he(e.location, "package.json"))) {
								const i = await this.scanExtension(e);
								return i ? [i] : [];
							} else return await this.scanExtensions(e);
						} catch (i) {
							return (
								this.q.error(
									`Error scanning extensions at ${e.location.path}:`,
									Bi(i),
								),
								[]
							);
						}
					}
					async scanExtension(e, i) {
						try {
							let s = await this.u(e.location);
							if (s) {
								s.publisher || (s.publisher = zm),
									(i = i ?? s.__metadata),
									i &&
										!i?.size &&
										s.__metadata?.size &&
										(i.size = s.__metadata?.size),
									delete s.__metadata;
								const r = sI(s.publisher, s.name),
									n = i?.id ? { id: r, uuid: i.id } : { id: r },
									o = i?.isSystem ? 0 : e.type,
									a = o === 0 || !!i?.isBuiltin;
								s = await this.w(e.location, s, Jo.createNlsConfiguration(e));
								let c = {
									type: o,
									identifier: n,
									manifest: s,
									location: e.location,
									isBuiltin: a,
									targetPlatform: i?.targetPlatform ?? "undefined",
									publisherDisplayName: i?.publisherDisplayName,
									metadata: i,
									isValid: !0,
									validations: [],
									preRelease: !!i?.preRelease,
								};
								return (
									e.validate && (c = this.validate(c, e)),
									s.enabledApiProposals &&
										(!this.n.isBuilt || this.f.includes(r.toLowerCase())) &&
										((s.originalEnabledApiProposals = s.enabledApiProposals),
										(s.enabledApiProposals = ZA([...s.enabledApiProposals]))),
									c
								);
							}
						} catch (s) {
							e.type !== 0 && this.q.error(s);
						}
						return null;
					}
					validate(e, i) {
						let s = !0;
						const r =
								this.n.isBuilt &&
								this.f.includes(e.identifier.id.toLowerCase()),
							n = VI(
								i.productVersion,
								i.productDate,
								i.location,
								e.manifest,
								e.isBuiltin,
								r,
							);
						for (const [o, a] of n)
							o === Pe.Error && ((s = !1), this.q.error(this.F(i.location, a)));
						return (e.isValid = s), (e.validations = n), e;
					}
					async u(e) {
						const i = he(e, "package.json");
						let s;
						try {
							s = (await this.m.readFile(i)).value.toString();
						} catch (n) {
							return (
								Ds(n) !== 1 &&
									this.q.error(this.F(e, w(1861, null, i.path, n.message))),
								null
							);
						}
						let r;
						try {
							r = JSON.parse(s);
						} catch {
							const o = [];
							fn(s, o);
							for (const a of o)
								this.q.error(
									this.F(
										e,
										w(1862, null, i.path, a.offset, a.length, Vm(a.error)),
									),
								);
							return null;
						}
						return ko(r) !== "object"
							? (this.q.error(this.F(e, w(1863, null, i.path))), null)
							: r;
					}
					async w(e, i, s) {
						const r = await this.y(e, i, s);
						if (r)
							try {
								const n = [],
									o = await this.z(r.default, n);
								if (n.length > 0)
									return (
										n.forEach((c) => {
											this.q.error(
												this.F(e, w(1864, null, r.default?.path, Vm(c.error))),
											);
										}),
										i
									);
								if (ko(r) !== "object")
									return (
										this.q.error(this.F(e, w(1865, null, r.default?.path))), i
									);
								const a = r.values || Object.create(null);
								return YI(this.q, i, a, o);
							} catch {}
						return i;
					}
					async y(e, i, s) {
						const r = he(e, "package.nls.json"),
							n = (l, u) => {
								u.forEach((d) => {
									this.q.error(this.F(e, w(1866, null, l?.path, Vm(d.error))));
								});
							},
							o = (l) => {
								this.q.error(this.F(e, w(1867, null, l?.path)));
							},
							a = `${i.publisher}.${i.name}`,
							c = s.translations[a];
						if (c)
							try {
								const l = P.file(c),
									u = (await this.m.readFile(l)).value.toString(),
									d = [],
									f = fn(u, d);
								return d.length > 0
									? (n(l, d), { values: void 0, default: r })
									: ko(f) !== "object"
										? (o(l), { values: void 0, default: r })
										: {
												values: f.contents ? f.contents.package : void 0,
												default: r,
											};
							} catch {
								return { values: void 0, default: r };
							}
						else {
							if (!(await this.m.exists(r))) return;
							let u;
							try {
								u = await this.C(e, s);
							} catch {
								return;
							}
							if (!u.localized) return { values: void 0, default: u.original };
							try {
								const d = (await this.m.readFile(u.localized)).value.toString(),
									f = [],
									p = fn(d, f);
								return f.length > 0
									? (n(u.localized, f), { values: void 0, default: u.original })
									: ko(p) !== "object"
										? (o(u.localized), { values: void 0, default: u.original })
										: { values: p, default: u.original };
							} catch {
								return { values: void 0, default: u.original };
							}
						}
					}
					async z(e, i) {
						if (e)
							try {
								const s = (await this.m.readFile(e)).value.toString();
								return fn(s, i);
							} catch {}
					}
					C(e, i) {
						return new Promise((s, r) => {
							const n = (o) => {
								const a = he(e, `package.nls.${o}.json`);
								this.m.exists(a).then((c) => {
									c && s({ localized: a, original: he(e, "package.nls.json") });
									const l = o.lastIndexOf("-");
									l === -1
										? s({
												localized: he(e, "package.nls.json"),
												original: null,
											})
										: ((o = o.substring(0, l)), n(o));
								});
							};
							if (i.devMode || i.pseudo || !i.language)
								return s({
									localized: he(e, "package.nls.json"),
									original: null,
								});
							n(i.language);
						});
					}
					F(e, i) {
						return `[${e.path}]: ${i}`;
					}
				}),
				(Vc = __decorate(
					[
						__param(1, Go),
						__param(2, gi),
						__param(3, nt),
						__param(4, tt),
						__param(5, ks),
						__param(6, G),
					],
					Vc,
				)),
				(Gc = class extends Vc {
					constructor(e, i, s, r, n, o, a, c, l) {
						super(i, r, n, o, a, c, l),
							(this.J = e),
							(this.L = s),
							(this.H = this.D(new Js(3e3))),
							(this.I = this.D(new $())),
							(this.onDidChangeCache = this.I.event);
					}
					async scanExtensions(e) {
						const i = this.P(e),
							s = await this.M(i);
						if (((this.G = e), s && s.input && Jo.equals(s.input, this.G)))
							return (
								this.q.debug(
									"Using cached extensions scan result",
									e.type === 0 ? "system" : "user",
									e.location.toString(),
								),
								this.H.trigger(() => this.O()),
								s.result.map((n) => ((n.location = P.revive(n.location)), n))
							);
						const r = await super.scanExtensions(e);
						return await this.N(i, { input: e, result: r }), r;
					}
					async M(e) {
						try {
							const i = await this.m.readFile(e),
								s = JSON.parse(i.value.toString());
							return { result: s.result, input: yr(s.input) };
						} catch (i) {
							this.q.debug(
								"Error while reading the extension cache file:",
								e.path,
								Bi(i),
							);
						}
						return null;
					}
					async N(e, i) {
						try {
							await this.m.writeFile(e, H.fromString(JSON.stringify(i)));
						} catch (s) {
							this.q.debug(
								"Error while writing the extension cache file:",
								e.path,
								Bi(s),
							);
						}
					}
					async O() {
						if (!this.G) return;
						const e = this.P(this.G),
							i = await this.M(e);
						if (!i) return;
						const s = i.result,
							r = JSON.parse(
								JSON.stringify(await super.scanExtensions(this.G)),
							);
						if (!_s(r, s))
							try {
								this.q.info("Invalidating Cache", s, r),
									await this.m.del(e),
									this.I.fire();
							} catch (n) {
								this.q.error(n);
							}
					}
					P(e) {
						const i = this.Q(e);
						return this.j.extUri.joinPath(i.cacheHome, e.type === 0 ? g6 : m6);
					}
					Q(e) {
						return e.type === 0
							? this.L.defaultProfile
							: e.profile
								? this.j.extUri.isEqual(e.location, this.J.extensionsResource)
									? this.J
									: (this.L.profiles.find((i) =>
											this.j.extUri.isEqual(e.location, i.extensionsResource),
										) ?? this.J)
								: this.L.defaultProfile;
					}
				}),
				(Gc = __decorate(
					[
						__param(2, As),
						__param(3, Go),
						__param(4, gi),
						__param(5, nt),
						__param(6, tt),
						__param(7, ks),
						__param(8, G),
					],
					Gc,
				)),
				(L6 = class extends id {
					constructor(t, e, i, s, r, n, o, a, c, l, u, d) {
						super(
							t,
							e,
							he(i, ".cursor-dev", "extensions", "control.json"),
							s,
							r,
							n,
							o,
							a,
							c,
							l,
							u,
							d,
						),
							(this.S = (async () => {
								if (Ff)
									try {
										const f = await this.u.readFile(P.file(Ff));
										return JSON.parse(f.value.toString());
									} catch {}
								return Object.create(null);
							})());
					}
					f(t) {
						return this.S;
					}
				});
		},
	}),
	sd,
	eC = m({
		"out-build/vs/platform/extensionManagement/node/extensionsScannerService.js"() {
			"use strict";
			ie(),
				Gi(),
				td(),
				M6(),
				Be(),
				Y(),
				Q(),
				Ct(),
				$s(),
				Is(),
				(sd = class extends L6 {
					constructor(e, i, s, r, n, o, a, c) {
						super(
							P.file(n.builtinExtensionsPath),
							P.file(n.extensionsPath),
							n.userHome,
							e.defaultProfile,
							e,
							i,
							s,
							r,
							n,
							o,
							a,
							c,
						);
					}
				}),
				(sd = __decorate(
					[
						__param(0, As),
						__param(1, Go),
						__param(2, nt),
						__param(3, G),
						__param(4, Zs),
						__param(5, tt),
						__param(6, gi),
						__param(7, ws),
					],
					sd,
				));
		},
	}),
	rd,
	tC = m({
		"out-build/vs/platform/userDataProfile/electron-main/userDataProfilesHandler.js"() {
			"use strict";
			F(),
				ot(),
				an(),
				ti(),
				ae(),
				si(),
				(rd = class extends j {
					constructor(e, i, s) {
						super(),
							(this.a = i),
							(this.b = s),
							this.D(
								e.onWillLoadWindow((r) => {
									r.reason === 2 && this.c(r.window);
								}),
							),
							this.D(e.onBeforeCloseWindow((r) => this.c(r))),
							this.D(new bs(() => this.g(), 30 * 1e3)).schedule();
					}
					async c(e) {
						const i = this.f(e),
							s = this.a.getProfileForWorkspace(i);
						s?.isTransient &&
							(this.a.unsetWorkspace(i, s.isTransient),
							s.isTransient && (await this.a.cleanUpTransientProfiles()));
					}
					f(e) {
						return (
							e.openedWorkspace ??
							_u(e.backupPath, e.isExtensionDevelopmentHost)
						);
					}
					g() {
						const e = this.a.getAssociatedEmptyWindows();
						if (e.length === 0) return;
						const i = this.b.getWindows().map((s) => this.f(s));
						for (const s of e)
							i.some((r) => r.id === s.id) || this.a.unsetWorkspace(s, !1);
					}
				}),
				(rd = __decorate([__param(0, Ne), __param(1, Cs), __param(2, _t)], rd));
		},
	}),
	F6,
	iC = m({
		"out-build/vs/platform/userDataProfile/electron-main/userDataProfileStorageIpc.js"() {
			"use strict";
			q(),
				F(),
				n1(),
				(F6 = class extends j {
					constructor(t, e, i) {
						super(), (this.b = t), (this.c = e), (this.f = i);
						const s = this.D(new zr());
						this.a = this.D(
							new $({
								onWillAddFirstListener: () => (s.value = this.g()),
								onDidRemoveLastListener: () => (s.value = void 0),
							}),
						);
					}
					g() {
						this.f.debug(
							"ProfileStorageChangesListenerChannel#registerStorageChangeListeners",
						);
						const t = new De();
						return (
							t.add(
								x.debounce(
									this.b.applicationStorage.onDidChangeStorage,
									(e, i) => (e ? e.push(i.key) : (e = [i.key]), e),
									100,
								)((e) => this.h(e)),
							),
							t.add(
								x.debounce(
									this.b.onDidChangeProfileStorage,
									(e, i) => {
										e || (e = new Map());
										let s = e.get(i.profile.id);
										return (
											s ||
												e.set(
													i.profile.id,
													(s = {
														profile: i.profile,
														keys: [],
														storage: i.storage,
													}),
												),
											s.keys.push(i.key),
											e
										);
									},
									100,
								)((e) => this.j(e)),
							),
							t
						);
					}
					h(t) {
						const e = t.includes(tr) ? [this.c.defaultProfile] : [],
							i = [];
						if (((t = t.filter((s) => s !== tr)), t.length)) {
							const s = s1(this.b.applicationStorage.storage);
							i.push({
								profile: this.c.defaultProfile,
								changes: t.map((r) => ({ key: r, scope: 0, target: s[r] })),
							});
						}
						this.m(e, i);
					}
					j(t) {
						const e = [],
							i = new Map();
						for (const [s, r] of t.entries()) {
							r.keys.includes(tr) && e.push(r.profile);
							const n = r.keys.filter((o) => o !== tr);
							if (n.length) {
								const o = s1(r.storage.storage);
								i.set(s, {
									profile: r.profile,
									changes: n.map((a) => ({ key: a, scope: 0, target: o[a] })),
								});
							}
						}
						this.m(e, [...i.values()]);
					}
					m(t, e) {
						(t.length || e.length) &&
							this.a.fire({ valueChanges: e, targetChanges: t });
					}
					listen(t, e, i) {
						switch (e) {
							case "onDidChange":
								return this.a.event;
						}
						throw new Error(
							`[ProfileStorageChangesListenerChannel] Event not found: ${e}`,
						);
					}
					async call(t, e) {
						throw new Error(`Call not found: ${e}`);
					}
				});
		},
	});
async function sC(t, e) {
	let i = t.getItem(c1);
	return (
		(typeof i != "string" ||
			(N &&
				i ===
					"6c9d2bc8f91b89624add29c0abeae7fb42bf539fa1cdb2e3e57cd668fa9bcead")) &&
			(i = await e$(e.error.bind(e))),
		i
	);
}
async function rC(t, e) {
	let i = t.getItem(l1);
	return typeof i != "string" && (i = await m5(e.error.bind(e))), i;
}
async function nC(t, e) {
	let i = t.getItem(u1);
	return typeof i != "string" && (i = await s$(e.error.bind(e))), i;
}
async function N6(t, e) {
	let i = t.getItem(Mu);
	return typeof i != "string" && (i = await w5(e.error.bind(e))), i;
}
var oC = m({
	"out-build/vs/platform/telemetry/node/telemetryUtils.js"() {
		"use strict";
		z(), Ac(), St();
	},
});
async function aC(t, e) {
	const i = await sC(t, e);
	return t.setItem(c1, i), i;
}
async function cC(t, e) {
	const i = await rC(t, e);
	return t.setItem(l1, i), i;
}
async function lC(t, e) {
	const i = await nC(t, e);
	return t.setItem(u1, i), i;
}
async function uC(t, e) {
	const i = await N6(t, e);
	return t.setItem(Mu, i), i;
}
async function hC(t, e) {
	const i = await w5(e.error.bind(e)),
		s = await N6(t, e);
	i !== s && t.setItem(Mu, i);
}
var dC = m({
		"out-build/vs/platform/telemetry/electron-main/telemetryUtils.js"() {
			"use strict";
			St(), oC(), Ac();
		},
	}),
	nd,
	fC = m({
		"out-build/vs/platform/extensionManagement/node/extensionsProfileScannerService.js"() {
			"use strict";
			Q(),
				Is(),
				$s(),
				St(),
				td(),
				Be(),
				Gi(),
				ie(),
				(nd = class extends ed {
					constructor(e, i, s, r, n, o) {
						super(P.file(e.extensionsPath), i, s, r, n, o);
					}
				}),
				(nd = __decorate(
					[
						__param(0, Zs),
						__param(1, nt),
						__param(2, As),
						__param(3, gi),
						__param(4, It),
						__param(5, G),
					],
					nd,
				));
		},
	}),
	W6,
	pC = m({
		"out-build/vs/platform/log/electron-main/logIpc.js"() {
			"use strict";
			xi(),
				ie(),
				Q(),
				(W6 = class {
					constructor(t) {
						(this.b = t), (this.a = new qt());
					}
					listen(t, e, i) {
						switch (e) {
							case "onDidChangeLoggers":
								return i
									? this.b.getOnDidChangeLoggersEvent(i)
									: this.b.onDidChangeLoggers;
							case "onDidChangeLogLevel":
								return i
									? this.b.getOnDidChangeLogLevelEvent(i)
									: this.b.onDidChangeLogLevel;
							case "onDidChangeVisibility":
								return i
									? this.b.getOnDidChangeVisibilityEvent(i)
									: this.b.onDidChangeVisibility;
						}
						throw new Error(`Event not found: ${e}`);
					}
					async call(t, e, i) {
						switch (e) {
							case "createLogger":
								this.c(P.revive(i[0]), i[1], i[2]);
								return;
							case "log":
								return this.e(P.revive(i[0]), i[1]);
							case "consoleLog":
								return this.d(i[0], i[1]);
							case "setLogLevel":
								return cb(i[0])
									? this.b.setLogLevel(i[0])
									: this.b.setLogLevel(P.revive(i[0]), i[1]);
							case "setVisibility":
								return this.b.setVisibility(P.revive(i[0]), i[1]);
							case "registerLogger":
								return this.b.registerLogger(
									{ ...i[0], resource: P.revive(i[0].resource) },
									i[1],
								);
							case "deregisterLogger":
								return this.b.deregisterLogger(P.revive(i[0]));
						}
						throw new Error(`Call not found: ${e}`);
					}
					c(t, e, i) {
						this.a.set(t, this.b.createLogger(t, e, i));
					}
					d(t, e) {
						let i = console.log;
						switch (t) {
							case J.Error:
								i = console.error;
								break;
							case J.Warning:
								i = console.warn;
								break;
							case J.Info:
								i = console.info;
								break;
						}
						i.call(console, ...e);
					}
					e(t, e) {
						const i = this.a.get(t);
						if (!i) throw new Error("Create the logger before logging");
						for (const [s, r] of e) Jp(i, s, r);
					}
				});
		},
	}),
	Ym,
	od,
	ad,
	mC = m({
		"out-build/vs/platform/utilityProcess/electron-main/utilityProcessWorkerMainService.js"() {
			"use strict";
			F(),
				Y(),
				Q(),
				si(),
				Ao(),
				St(),
				Qs(),
				q(),
				ae(),
				ot(),
				(Ym = B("utilityProcessWorker")),
				(od = class extends j {
					constructor(e, i, s, r) {
						super(),
							(this.b = e),
							(this.c = i),
							(this.f = s),
							(this.g = r),
							(this.a = new Map());
					}
					async createWorker(e) {
						const i = `window: ${e.reply.windowId}, moduleId: ${e.process.moduleId}`;
						this.b.trace(`[UtilityProcessWorker]: createWorker(${i})`);
						const s = this.h(e);
						this.a.has(s) &&
							(this.b.warn(
								`[UtilityProcessWorker]: createWorker() found an existing worker that will be terminated (${i})`,
							),
							this.disposeWorker(e));
						const r = new ad(this.b, this.c, this.f, this.g, e);
						if (!r.spawn()) return { reason: { code: 1, signal: "EINVALID" } };
						this.a.set(s, r);
						const n = new Xs();
						return (
							x.once(r.onDidTerminate)((o) => {
								o.code === 0
									? this.b.trace(
											`[UtilityProcessWorker]: terminated normally with code ${o.code}, signal: ${o.signal}`,
										)
									: this.b.error(
											`[UtilityProcessWorker]: terminated unexpectedly with code ${o.code}, signal: ${o.signal}`,
										),
									this.a.delete(s),
									n.complete({ reason: o });
							}),
							n.p
						);
					}
					h(e) {
						return Ss({
							moduleId: e.process.moduleId,
							windowId: e.reply.windowId,
						});
					}
					async disposeWorker(e) {
						const i = this.h(e),
							s = this.a.get(i);
						s &&
							(this.b.trace(
								`[UtilityProcessWorker]: disposeWorker(window: ${e.reply.windowId}, moduleId: ${e.process.moduleId})`,
							),
							s.kill(),
							s.dispose(),
							this.a.delete(i));
					}
				}),
				(od = __decorate(
					[__param(0, G), __param(1, _t), __param(2, It), __param(3, Ne)],
					od,
				)),
				(ad = class extends j {
					constructor(e, i, s, r, n) {
						super(),
							(this.c = e),
							(this.f = i),
							(this.g = s),
							(this.h = r),
							(this.j = n),
							(this.a = this.D(new $())),
							(this.onDidTerminate = this.a.event),
							(this.b = this.D(new yc(this.c, this.f, this.g, this.h))),
							this.m();
					}
					m() {
						this.D(
							this.b.onExit((e) =>
								this.a.fire({ code: e.code, signal: e.signal }),
							),
						),
							this.D(
								this.b.onCrash((e) =>
									this.a.fire({ code: e.code, signal: "ECRASH" }),
								),
							);
					}
					spawn() {
						const i = this.f
							.getWindowById(this.j.reply.windowId)
							?.win?.webContents.getOSProcessId();
						return this.b.start({
							processTitle: `${this.j.process.type} [${this.j.reply.windowId}]`,
							type: this.j.process.type,
							entryPoint: this.j.process.moduleId,
							parentLifecycleBound: i,
							windowLifecycleBound: !0,
							correlationId: `${this.j.reply.windowId}`,
							responseWindowId: this.j.reply.windowId,
							responseChannel: this.j.reply.channel,
							responseNonce: this.j.reply.nonce,
						});
					}
					kill() {
						this.b.kill();
					}
				}),
				(ad = __decorate(
					[__param(0, G), __param(1, _t), __param(2, It), __param(3, Ne)],
					ad,
				));
		},
	}),
	j6,
	gC = m({
		"out-build/vs/platform/utilityProcess/common/utilityProcessWorkerService.js"() {
			"use strict";
			j6 = "utilityProcessWorker";
		},
	}),
	wC,
	T6,
	U6,
	q6,
	B6,
	z6,
	H6,
	Xo,
	V6,
	vC,
	wi,
	G6,
	J6,
	X6,
	K6,
	Y6,
	Q6,
	Z6,
	e7,
	t7,
	Qm,
	yC,
	i7 = m({
		"out-build/vs/platform/terminal/common/terminal.js"() {
			"use strict";
			Y(),
				ab(),
				Gs(),
				(wC = new Gp("terminalTabFocusMode", !1, !0)),
				(function (t) {
					(t.AutomationProfile = "terminal.integrated.automationProfile."),
						(t.DefaultProfile = "terminal.integrated.defaultProfile."),
						(t.Profiles = "terminal.integrated.profiles.");
				})(T6 || (T6 = {})),
				(function (t) {
					(t.SendKeybindingsToShell =
						"terminal.integrated.sendKeybindingsToShell"),
						(t.AutomationProfileLinux =
							"terminal.integrated.automationProfile.linux"),
						(t.AutomationProfileMacOs =
							"terminal.integrated.automationProfile.osx"),
						(t.AutomationProfileWindows =
							"terminal.integrated.automationProfile.windows"),
						(t.ProfilesWindows = "terminal.integrated.profiles.windows"),
						(t.ProfilesMacOs = "terminal.integrated.profiles.osx"),
						(t.ProfilesLinux = "terminal.integrated.profiles.linux"),
						(t.DefaultProfileLinux =
							"terminal.integrated.defaultProfile.linux"),
						(t.DefaultProfileMacOs = "terminal.integrated.defaultProfile.osx"),
						(t.DefaultProfileWindows =
							"terminal.integrated.defaultProfile.windows"),
						(t.UseWslProfiles = "terminal.integrated.useWslProfiles"),
						(t.TabsDefaultColor = "terminal.integrated.tabs.defaultColor"),
						(t.TabsDefaultIcon = "terminal.integrated.tabs.defaultIcon"),
						(t.TabsEnabled = "terminal.integrated.tabs.enabled"),
						(t.TabsEnableAnimation =
							"terminal.integrated.tabs.enableAnimation"),
						(t.TabsHideCondition = "terminal.integrated.tabs.hideCondition"),
						(t.TabsShowActiveTerminal =
							"terminal.integrated.tabs.showActiveTerminal"),
						(t.TabsShowActions = "terminal.integrated.tabs.showActions"),
						(t.TabsLocation = "terminal.integrated.tabs.location"),
						(t.TabsFocusMode = "terminal.integrated.tabs.focusMode"),
						(t.MacOptionIsMeta = "terminal.integrated.macOptionIsMeta"),
						(t.MacOptionClickForcesSelection =
							"terminal.integrated.macOptionClickForcesSelection"),
						(t.AltClickMovesCursor = "terminal.integrated.altClickMovesCursor"),
						(t.CopyOnSelection = "terminal.integrated.copyOnSelection"),
						(t.EnableMultiLinePasteWarning =
							"terminal.integrated.enableMultiLinePasteWarning"),
						(t.DrawBoldTextInBrightColors =
							"terminal.integrated.drawBoldTextInBrightColors"),
						(t.FontFamily = "terminal.integrated.fontFamily"),
						(t.FontSize = "terminal.integrated.fontSize"),
						(t.LetterSpacing = "terminal.integrated.letterSpacing"),
						(t.LineHeight = "terminal.integrated.lineHeight"),
						(t.MinimumContrastRatio =
							"terminal.integrated.minimumContrastRatio"),
						(t.TabStopWidth = "terminal.integrated.tabStopWidth"),
						(t.FastScrollSensitivity =
							"terminal.integrated.fastScrollSensitivity"),
						(t.MouseWheelScrollSensitivity =
							"terminal.integrated.mouseWheelScrollSensitivity"),
						(t.BellDuration = "terminal.integrated.bellDuration"),
						(t.FontWeight = "terminal.integrated.fontWeight"),
						(t.FontWeightBold = "terminal.integrated.fontWeightBold"),
						(t.CursorBlinking = "terminal.integrated.cursorBlinking"),
						(t.CursorStyle = "terminal.integrated.cursorStyle"),
						(t.CursorStyleInactive = "terminal.integrated.cursorStyleInactive"),
						(t.CursorWidth = "terminal.integrated.cursorWidth"),
						(t.Scrollback = "terminal.integrated.scrollback"),
						(t.DetectLocale = "terminal.integrated.detectLocale"),
						(t.DefaultLocation = "terminal.integrated.defaultLocation"),
						(t.GpuAcceleration = "terminal.integrated.gpuAcceleration"),
						(t.TerminalTitleSeparator = "terminal.integrated.tabs.separator"),
						(t.TerminalTitle = "terminal.integrated.tabs.title"),
						(t.TerminalDescription = "terminal.integrated.tabs.description"),
						(t.RightClickBehavior = "terminal.integrated.rightClickBehavior"),
						(t.MiddleClickBehavior = "terminal.integrated.middleClickBehavior"),
						(t.Cwd = "terminal.integrated.cwd"),
						(t.ConfirmOnExit = "terminal.integrated.confirmOnExit"),
						(t.ConfirmOnKill = "terminal.integrated.confirmOnKill"),
						(t.EnableBell = "terminal.integrated.enableBell"),
						(t.EnableVisualBell = "terminal.integrated.enableVisualBell"),
						(t.CommandsToSkipShell = "terminal.integrated.commandsToSkipShell"),
						(t.AllowChords = "terminal.integrated.allowChords"),
						(t.AllowMnemonics = "terminal.integrated.allowMnemonics"),
						(t.TabFocusMode = "terminal.integrated.tabFocusMode"),
						(t.EnvMacOs = "terminal.integrated.env.osx"),
						(t.EnvLinux = "terminal.integrated.env.linux"),
						(t.EnvWindows = "terminal.integrated.env.windows"),
						(t.EnvironmentChangesIndicator =
							"terminal.integrated.environmentChangesIndicator"),
						(t.EnvironmentChangesRelaunch =
							"terminal.integrated.environmentChangesRelaunch"),
						(t.ExperimentalWindowsUseConptyDll =
							"terminal.integrated.experimental.windowsUseConptyDll"),
						(t.ShowExitAlert = "terminal.integrated.showExitAlert"),
						(t.SplitCwd = "terminal.integrated.splitCwd"),
						(t.WindowsEnableConpty = "terminal.integrated.windowsEnableConpty"),
						(t.WordSeparators = "terminal.integrated.wordSeparators"),
						(t.EnableFileLinks = "terminal.integrated.enableFileLinks"),
						(t.AllowedLinkSchemes = "terminal.integrated.allowedLinkSchemes"),
						(t.UnicodeVersion = "terminal.integrated.unicodeVersion"),
						(t.EnablePersistentSessions =
							"terminal.integrated.enablePersistentSessions"),
						(t.PersistentSessionReviveProcess =
							"terminal.integrated.persistentSessionReviveProcess"),
						(t.HideOnStartup = "terminal.integrated.hideOnStartup"),
						(t.CustomGlyphs = "terminal.integrated.customGlyphs"),
						(t.RescaleOverlappingGlyphs =
							"terminal.integrated.rescaleOverlappingGlyphs"),
						(t.PersistentSessionScrollback =
							"terminal.integrated.persistentSessionScrollback"),
						(t.InheritEnv = "terminal.integrated.inheritEnv"),
						(t.ShowLinkHover = "terminal.integrated.showLinkHover"),
						(t.IgnoreProcessNames = "terminal.integrated.ignoreProcessNames"),
						(t.ShellIntegrationEnabled =
							"terminal.integrated.shellIntegration.enabled"),
						(t.ShellIntegrationShowWelcome =
							"terminal.integrated.shellIntegration.showWelcome"),
						(t.ShellIntegrationDecorationsEnabled =
							"terminal.integrated.shellIntegration.decorationsEnabled"),
						(t.EnableImages = "terminal.integrated.enableImages"),
						(t.SmoothScrolling = "terminal.integrated.smoothScrolling"),
						(t.IgnoreBracketedPasteMode =
							"terminal.integrated.ignoreBracketedPasteMode"),
						(t.FocusAfterRun = "terminal.integrated.focusAfterRun"),
						(t.FontLigatures = "terminal.integrated.fontLigatures"),
						(t.DeveloperPtyHostLatency =
							"terminal.integrated.developer.ptyHost.latency"),
						(t.DeveloperPtyHostStartupDelay =
							"terminal.integrated.developer.ptyHost.startupDelay"),
						(t.DevMode = "terminal.integrated.developer.devMode");
				})(U6 || (U6 = {})),
				(function (t) {
					(t.Bash = "bash"),
						(t.Fish = "fish"),
						(t.Sh = "sh"),
						(t.Csh = "csh"),
						(t.Ksh = "ksh"),
						(t.Zsh = "zsh");
				})(q6 || (q6 = {})),
				(function (t) {
					(t.CommandPrompt = "cmd"), (t.Wsl = "wsl"), (t.GitBash = "gitbash");
				})(B6 || (B6 = {})),
				(function (t) {
					(t.PowerShell = "pwsh"),
						(t.Python = "python"),
						(t.Julia = "julia"),
						(t.NuShell = "nu");
				})(z6 || (z6 = {})),
				(function (t) {
					(t[(t.Api = 0)] = "Api"),
						(t[(t.Process = 1)] = "Process"),
						(t[(t.Sequence = 2)] = "Sequence"),
						(t[(t.Config = 3)] = "Config");
				})(H6 || (H6 = {})),
				(function (t) {
					(t.LocalPty = "localPty"),
						(t.PtyHost = "ptyHost"),
						(t.PtyHostWindow = "ptyHostWindow"),
						(t.Logger = "logger"),
						(t.Heartbeat = "heartbeat");
				})(Xo || (Xo = {})),
				(function (t) {
					(t.Cwd = "cwd"),
						(t.InitialCwd = "initialCwd"),
						(t.FixedDimensions = "fixedDimensions"),
						(t.Title = "title"),
						(t.ShellType = "shellType"),
						(t.HasChildProcesses = "hasChildProcesses"),
						(t.ResolvedShellLaunchConfig = "resolvedShellLaunchConfig"),
						(t.OverrideDimensions = "overrideDimensions"),
						(t.FailedShellIntegrationActivation =
							"failedShellIntegrationActivation"),
						(t.UsedShellIntegrationInjection = "usedShellIntegrationInjection");
				})(V6 || (V6 = {})),
				(vC = B("ptyService")),
				(function (t) {
					(t[(t.BeatInterval = 5e3)] = "BeatInterval"),
						(t[(t.ConnectingBeatInterval = 2e4)] = "ConnectingBeatInterval"),
						(t[(t.FirstWaitMultiplier = 1.2)] = "FirstWaitMultiplier"),
						(t[(t.SecondWaitMultiplier = 1)] = "SecondWaitMultiplier"),
						(t[(t.CreateProcessTimeout = 5e3)] = "CreateProcessTimeout");
				})(wi || (wi = {})),
				(function (t) {
					(t[(t.Panel = 1)] = "Panel"), (t[(t.Editor = 2)] = "Editor");
				})(G6 || (G6 = {})),
				(function (t) {
					(t.TerminalView = "view"), (t.Editor = "editor");
				})(J6 || (J6 = {})),
				(function (t) {
					(t[(t.GraceTime = 6e4)] = "GraceTime"),
						(t[(t.ShortGraceTime = 6e3)] = "ShortGraceTime");
				})(X6 || (X6 = {})),
				(function (t) {
					(t[(t.HighWatermarkChars = 1e5)] = "HighWatermarkChars"),
						(t[(t.LowWatermarkChars = 5e3)] = "LowWatermarkChars"),
						(t[(t.CharCountAckSize = 5e3)] = "CharCountAckSize");
				})(K6 || (K6 = {})),
				(function (t) {
					(t.GitBash = "Git Bash"), (t.Pwsh = "PowerShell");
				})(Y6 || (Y6 = {})),
				(function (t) {
					(t[(t.Off = 0)] = "Off"),
						(t[(t.FinalTerm = 1)] = "FinalTerm"),
						(t[(t.VSCode = 2)] = "VSCode");
				})(Q6 || (Q6 = {})),
				(function (t) {
					(t[(t.Unknown = 0)] = "Unknown"),
						(t[(t.Shutdown = 1)] = "Shutdown"),
						(t[(t.Process = 2)] = "Process"),
						(t[(t.User = 3)] = "User"),
						(t[(t.Extension = 4)] = "Extension");
				})(Z6 || (Z6 = {})),
				(e7 = { Backend: "workbench.contributions.terminal.processBackend" }),
				(t7 = class {
					constructor() {
						this.a = new Map();
					}
					get backends() {
						return this.a;
					}
					registerTerminalBackend(t) {
						const e = this.b(t.remoteAuthority);
						if (this.a.has(e))
							throw new Error(
								`A terminal backend with remote authority '${e}' was already registered.`,
							);
						this.a.set(e, t);
					}
					getTerminalBackend(t) {
						return this.a.get(this.b(t));
					}
					b(t) {
						return t?.toLowerCase() ?? "";
					}
				}),
				zt.add(e7.Backend, new t7()),
				(Qm = B("localPtyService")),
				(yC = B("terminalLogService"));
		},
	}),
	cd,
	bC = m({
		"out-build/vs/platform/terminal/electron-main/electronPtyHostStarter.js"() {
			"use strict";
			bt(),
				Up(),
				ot(),
				Q(),
				Dn(),
				Ao(),
				Oy(),
				is(),
				F(),
				q(),
				ns(),
				Ve(),
				Ce(),
				(cd = class extends j {
					constructor(e, i, s, r, n) {
						super(),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.j = r),
							(this.m = n),
							(this.a = void 0),
							(this.b = new $()),
							(this.onRequestConnection = this.b.event),
							(this.c = new $()),
							(this.onWillShutdown = this.c.event),
							this.D(this.j.onWillShutdown(() => this.c.fire())),
							et.on("vscode:createPtyHostMessageChannel", (o, a) =>
								this.q(o, a),
							),
							this.D(
								ke(() => {
									et.removeHandler("vscode:createPtyHostMessageChannel");
								}),
							);
					}
					start() {
						this.a = new $r(this.m, Tc, this.j);
						const e = rx(this.h.args, this.h.isBuilt),
							i = e.port
								? ["--nolazy", `--inspect${e.break ? "-brk" : ""}=${e.port}`]
								: void 0;
						this.a.start({
							processTitle: "terminal pty-host",
							type: "ptyHost",
							entryPoint: "vs/platform/terminal/node/ptyHostMain",
							execArgv: i,
							args: [
								"--logsPath",
								this.h.logsHome.with({ scheme: R.file }).fsPath,
							],
							env: this.n(),
						});
						const s = this.a.connect(),
							r = new Fp(s, "ptyHost"),
							n = new De();
						return (
							n.add(r),
							n.add(
								ke(() => {
									this.a?.kill(), this.a?.dispose(), (this.a = void 0);
								}),
							),
							{ client: r, store: n, onDidProcessExit: this.a.onExit }
						);
					}
					n() {
						this.h.unsetSnapExportedVariables();
						const e = {
								...rs(process.env),
								VSCODE_ESM_ENTRYPOINT: "vs/platform/terminal/node/ptyHostMain",
								VSCODE_PIPE_LOGGING: "true",
								VSCODE_VERBOSE_LOGGING: "true",
								VSCODE_RECONNECT_GRACE_TIME: String(this.f.graceTime),
								VSCODE_RECONNECT_SHORT_GRACE_TIME: String(
									this.f.shortGraceTime,
								),
								VSCODE_RECONNECT_SCROLLBACK: String(this.f.scrollback),
							},
							i = this.g.getValue(
								"terminal.integrated.developer.ptyHost.latency",
							);
						i && typeof i == "number" && (e.VSCODE_LATENCY = String(i));
						const s = this.g.getValue(
							"terminal.integrated.developer.ptyHost.startupDelay",
						);
						return (
							s && typeof s == "number" && (e.VSCODE_STARTUP_DELAY = String(s)),
							this.h.restoreSnapExportedVariables(),
							e
						);
					}
					q(e, i) {
						this.b.fire();
						const s = this.a.connect();
						if (e.sender.isDestroyed()) {
							s.close();
							return;
						}
						e.sender.postMessage(
							"vscode:createPtyHostMessageChannelResult",
							i,
							[s],
						);
					}
				}),
				(cd = __decorate(
					[__param(1, He), __param(2, ut), __param(3, Ne), __param(4, G)],
					cd,
				));
		},
	}),
	s7,
	EC = m({
		"out-build/vs/platform/log/common/logIpc.js"() {
			"use strict";
			ie(),
				q(),
				Q(),
				F(),
				(s7 = class extends j {
					constructor(t, e) {
						super(),
							e.call("setLogLevel", [t.getLogLevel()]),
							this.D(t.onDidChangeLogLevel((i) => e.call("setLogLevel", [i]))),
							e.call("getRegisteredLoggers").then((i) => {
								for (const s of i)
									t.registerLogger({ ...s, resource: P.revive(s.resource) });
							}),
							this.D(
								e.listen("onDidChangeVisibility")(([i, s]) =>
									t.setVisibility(P.revive(i), s),
								),
							),
							this.D(
								e.listen("onDidChangeLoggers")(({ added: i, removed: s }) => {
									for (const r of i)
										t.registerLogger({ ...r, resource: P.revive(r.resource) });
									for (const r of s) t.deregisterLogger(r.resource);
								}),
							);
					}
				});
		},
	}),
	ld,
	SC = m({
		"out-build/vs/platform/terminal/common/requestStore.js"() {
			"use strict";
			ae(),
				Mt(),
				q(),
				F(),
				Q(),
				(ld = class extends j {
					constructor(e, i) {
						super(),
							(this.h = i),
							(this.a = 0),
							(this.c = new Map()),
							(this.f = new Map()),
							(this.g = this.D(new $())),
							(this.onCreateRequest = this.g.event),
							(this.b = e === void 0 ? 15e3 : e),
							this.D(
								ke(() => {
									for (const s of this.f.values()) vt(s);
								}),
							);
					}
					createRequest(e) {
						return new Promise((i, s) => {
							const r = ++this.a;
							this.c.set(r, i), this.g.fire({ requestId: r, ...e });
							const n = new ts();
							Ai(this.b, n.token).then(() =>
								s(`Request ${r} timed out (${this.b}ms)`),
							),
								this.f.set(r, [ke(() => n.cancel())]);
						});
					}
					acceptReply(e, i) {
						const s = this.c.get(e);
						s
							? (this.c.delete(e),
								vt(this.f.get(e) || []),
								this.f.delete(e),
								s(i))
							: this.h.warn(
									`RequestStore#acceptReply was called without receiving a matching request ${e}`,
								);
					}
				}),
				(ld = __decorate([__param(1, G)], ld));
		},
	});
function kC(t, e) {
	const i = [{ name: null, description: w(2155, null) }];
	return (
		i.push(...t.map((s) => ({ name: s.profileName, description: xC(s) }))),
		e && i.push(...e.map((s) => ({ name: s.title, description: DC(s) }))),
		{
			values: i.map((s) => s.name),
			markdownDescriptions: i.map((s) => s.description),
		}
	);
}
function xC(t) {
	let e = `$(${qc.isThemeIcon(t.icon) ? t.icon.id : t.icon ? t.icon : Ni.terminal.id}) ${t.profileName}
- path: ${t.path}`;
	return (
		t.args &&
			(typeof t.args == "string"
				? (e += `
- args: "${t.args}"`)
				: (e += `
- args: [${t.args.length === 0 ? "" : `'${t.args.join("','")}'`}]`)),
		t.overrideName !== void 0 &&
			(e += `
- overrideName: ${t.overrideName}`),
		t.color &&
			(e += `
- color: ${t.color}`),
		t.env &&
			(e += `
- env: ${JSON.stringify(t.env)}`),
		e
	);
}
function DC(t) {
	return `$(${qc.isThemeIcon(t.icon) ? t.icon.id : t.icon ? t.icon : Ni.terminal.id}) ${t.title}
- extensionIdentifier: ${t.extensionIdentifier}`;
}
var PC = m({
	"out-build/vs/platform/terminal/common/terminalProfiles.js"() {
		"use strict";
		Gh(), ie(), ve(), u6();
	},
});
function Zm(t) {
	const e = t === 2 ? "linux" : t === 1 ? "osx" : "windows";
	return w(
		2131,
		null,
		N0(t),
		'```json\n"terminal.integrated.profile.' +
			e +
			'": {\n  "bash": null\n}\n```',
		"[",
		"](https://code.visualstudio.com/docs/terminal/profiles)",
	);
}
function $C() {
	zt.as(Pi.Configuration).registerConfiguration(o7), AC();
}
function AC(t, e) {
	const i = zt.as(Pi.Configuration);
	let s;
	t && (s = kC(t?.profiles, e));
	const r = eg;
	(eg = {
		id: "terminal",
		order: 100,
		title: w(2151, null),
		type: "object",
		properties: {
			"terminal.integrated.defaultProfile.linux": {
				restricted: !0,
				markdownDescription: w(2152, null),
				type: ["string", "null"],
				default: null,
				enum: t?.os === 3 ? s?.values : void 0,
				markdownEnumDescriptions:
					t?.os === 3 ? s?.markdownDescriptions : void 0,
			},
			"terminal.integrated.defaultProfile.osx": {
				restricted: !0,
				markdownDescription: w(2153, null),
				type: ["string", "null"],
				default: null,
				enum: t?.os === 2 ? s?.values : void 0,
				markdownEnumDescriptions:
					t?.os === 2 ? s?.markdownDescriptions : void 0,
			},
			"terminal.integrated.defaultProfile.windows": {
				restricted: !0,
				markdownDescription: w(2154, null),
				type: ["string", "null"],
				default: null,
				enum: t?.os === 1 ? s?.values : void 0,
				markdownEnumDescriptions:
					t?.os === 1 ? s?.markdownDescriptions : void 0,
			},
		},
	}),
		i.updateConfigurations({ add: [eg], remove: r ? [r] : [] });
}
var r7,
	n7,
	An,
	ud,
	hd,
	o7,
	eg,
	IC = m({
		"out-build/vs/platform/terminal/common/terminalPlatformConfiguration.js"() {
			"use strict";
			Gh(),
				z(),
				ve(),
				Xr(),
				Gs(),
				PC(),
				(r7 = {
					type: ["string", "null"],
					enum: [
						"terminal.ansiBlack",
						"terminal.ansiRed",
						"terminal.ansiGreen",
						"terminal.ansiYellow",
						"terminal.ansiBlue",
						"terminal.ansiMagenta",
						"terminal.ansiCyan",
						"terminal.ansiWhite",
					],
					default: null,
				}),
				(n7 = {
					type: "string",
					enum: Array.from(c6(), (t) => t.id),
					markdownEnumDescriptions: Array.from(c6(), (t) => `$(${t.id})`),
				}),
				(An = {
					args: {
						description: w(2124, null),
						type: "array",
						items: { type: "string" },
					},
					overrideName: { description: w(2125, null), type: "boolean" },
					icon: { description: w(2126, null), ...n7 },
					color: { description: w(2127, null), ...r7 },
					env: {
						markdownDescription: w(2128, null),
						type: "object",
						additionalProperties: { type: ["string", "null"] },
						default: {},
					},
				}),
				(ud = {
					type: "object",
					required: ["path"],
					properties: {
						path: {
							description: w(2129, null),
							type: ["string", "array"],
							items: { type: "string" },
						},
						...An,
					},
				}),
				(hd = {
					type: "object",
					required: ["path"],
					properties: {
						path: {
							description: w(2130, null),
							type: ["string"],
							items: { type: "string" },
						},
						...An,
					},
				}),
				(o7 = {
					id: "terminal",
					order: 100,
					title: w(2132, null),
					type: "object",
					properties: {
						"terminal.integrated.automationProfile.linux": {
							restricted: !0,
							markdownDescription: w(2133, null),
							type: ["object", "null"],
							default: null,
							anyOf: [{ type: "null" }, hd],
							defaultSnippets: [{ body: { path: "${1}", icon: "${2}" } }],
						},
						"terminal.integrated.automationProfile.osx": {
							restricted: !0,
							markdownDescription: w(2134, null),
							type: ["object", "null"],
							default: null,
							anyOf: [{ type: "null" }, hd],
							defaultSnippets: [{ body: { path: "${1}", icon: "${2}" } }],
						},
						"terminal.integrated.automationProfile.windows": {
							restricted: !0,
							markdownDescription: w(
								2135,
								null,
								"`terminal.integrated.automationShell.windows`",
							),
							type: ["object", "null"],
							default: null,
							anyOf: [{ type: "null" }, hd],
							defaultSnippets: [{ body: { path: "${1}", icon: "${2}" } }],
						},
						"terminal.integrated.profiles.windows": {
							restricted: !0,
							markdownDescription: Zm(3),
							type: "object",
							default: {
								PowerShell: {
									source: "PowerShell",
									icon: "terminal-powershell",
								},
								"Command Prompt": {
									path: [
										"${env:windir}\\Sysnative\\cmd.exe",
										"${env:windir}\\System32\\cmd.exe",
									],
									args: [],
									icon: "terminal-cmd",
								},
								"Git Bash": { source: "Git Bash" },
							},
							additionalProperties: {
								anyOf: [
									{
										type: "object",
										required: ["source"],
										properties: {
											source: {
												description: w(2136, null),
												enum: ["PowerShell", "Git Bash"],
											},
											...An,
										},
									},
									{
										type: "object",
										required: ["extensionIdentifier", "id", "title"],
										properties: {
											extensionIdentifier: {
												description: w(2137, null),
												type: "string",
											},
											id: { description: w(2138, null), type: "string" },
											title: { description: w(2139, null), type: "string" },
											...An,
										},
									},
									{ type: "null" },
									ud,
								],
							},
						},
						"terminal.integrated.profiles.osx": {
							restricted: !0,
							markdownDescription: Zm(1),
							type: "object",
							default: {
								bash: { path: "bash", args: ["-l"], icon: "terminal-bash" },
								zsh: { path: "zsh", args: ["-l"] },
								fish: { path: "fish", args: ["-l"] },
								tmux: { path: "tmux", icon: "terminal-tmux" },
								pwsh: { path: "pwsh", icon: "terminal-powershell" },
							},
							additionalProperties: {
								anyOf: [
									{
										type: "object",
										required: ["extensionIdentifier", "id", "title"],
										properties: {
											extensionIdentifier: {
												description: w(2140, null),
												type: "string",
											},
											id: { description: w(2141, null), type: "string" },
											title: { description: w(2142, null), type: "string" },
											...An,
										},
									},
									{ type: "null" },
									ud,
								],
							},
						},
						"terminal.integrated.profiles.linux": {
							restricted: !0,
							markdownDescription: Zm(2),
							type: "object",
							default: {
								bash: { path: "bash", icon: "terminal-bash" },
								zsh: { path: "zsh" },
								fish: { path: "fish" },
								tmux: { path: "tmux", icon: "terminal-tmux" },
								pwsh: { path: "pwsh", icon: "terminal-powershell" },
							},
							additionalProperties: {
								anyOf: [
									{
										type: "object",
										required: ["extensionIdentifier", "id", "title"],
										properties: {
											extensionIdentifier: {
												description: w(2143, null),
												type: "string",
											},
											id: { description: w(2144, null), type: "string" },
											title: { description: w(2145, null), type: "string" },
											...An,
										},
									},
									{ type: "null" },
									ud,
								],
							},
						},
						"terminal.integrated.useWslProfiles": {
							description: w(2146, null),
							type: "boolean",
							default: !0,
						},
						"terminal.integrated.inheritEnv": {
							scope: 1,
							description: w(2147, null),
							type: "boolean",
							default: !0,
						},
						"terminal.integrated.persistentSessionScrollback": {
							scope: 1,
							markdownDescription: w(2148, null),
							type: "number",
							default: 100,
						},
						"terminal.integrated.showLinkHover": {
							scope: 1,
							description: w(2149, null),
							type: "boolean",
							default: !0,
						},
						"terminal.integrated.ignoreProcessNames": {
							markdownDescription: w(
								2150,
								null,
								"`#terminal.integrated.confirmOnKill#`",
							),
							type: "array",
							items: { type: "string", uniqueItems: !0 },
							default: ["starship", "oh-my-posh", "bash", "zsh"],
						},
					},
				});
		},
	}),
	Jc,
	a7 = m({
		"out-build/vs/platform/terminal/common/environmentVariable.js"() {
			"use strict";
			(function (t) {
				(t[(t.Replace = 1)] = "Replace"),
					(t[(t.Append = 2)] = "Append"),
					(t[(t.Prepend = 3)] = "Prepend");
			})(Jc || (Jc = {}));
		},
	}),
	CC = m({
		"out-build/vs/platform/terminal/common/environmentVariableShared.js"() {
			"use strict";
		},
	}),
	_C,
	RC = m({
		"out-build/vs/platform/terminal/common/environmentVariableCollection.js"() {
			"use strict";
			z(),
				a7(),
				(_C = new Map([
					[Jc.Append, "APPEND"],
					[Jc.Prepend, "PREPEND"],
					[Jc.Replace, "REPLACE"],
				]));
		},
	});
import * as OC from "os";
function LC() {
	const t = /(\d+)\.(\d+)\.(\d+)/g.exec(OC.release());
	let e = 0;
	return t && t.length === 4 && (e = parseInt(t[3])), e;
}
async function c7(t, e, i, s = Di, r = ee.exists) {
	if (Gr(t)) return (await r(t)) ? t : void 0;
	if ((e === void 0 && (e = ms()), Ke(t) !== ".")) {
		const c = M(e, t);
		return (await r(c)) ? c : void 0;
	}
	const o = oD(s, "PATH");
	if (
		(i === void 0 && mt(o) && (i = o.split(Bl)), i === void 0 || i.length === 0)
	) {
		const c = M(e, t);
		return (await r(c)) ? c : void 0;
	}
	for (const c of i) {
		let l;
		if ((Gr(c) ? (l = M(c, t)) : (l = M(e, c, t)), await r(l))) return l;
		if (T) {
			let u = l + ".com";
			if ((await r(u)) || ((u = l + ".exe"), await r(u))) return u;
		}
	}
	const a = M(e, t);
	return (await r(a)) ? a : void 0;
}
var as,
	Os,
	MC = m({
		"out-build/vs/platform/terminal/node/terminalEnvironment.js"() {
			"use strict";
			Ce(),
				ns(),
				ge(),
				z(),
				gs(),
				Ft(),
				Ie(),
				yt(),
				a7(),
				CC(),
				RC(),
				(function (t) {
					(t.WindowsPwsh = "windows-pwsh"),
						(t.WindowsPwshLogin = "windows-pwsh-login"),
						(t.Pwsh = "pwsh"),
						(t.PwshLogin = "pwsh-login"),
						(t.Zsh = "zsh"),
						(t.ZshLogin = "zsh-login"),
						(t.Bash = "bash"),
						(t.Fish = "fish"),
						(t.FishLogin = "fish-login");
				})(as || (as = {})),
				(Os = new Map()),
				Os.set(as.WindowsPwsh, [
					"-noexit",
					"-command",
					'try { . "{0}\\out\\vs\\workbench\\contrib\\terminal\\common\\scripts\\shellIntegration.ps1" } catch {}{1}',
				]),
				Os.set(as.WindowsPwshLogin, [
					"-l",
					"-noexit",
					"-command",
					'try { . "{0}\\out\\vs\\workbench\\contrib\\terminal\\common\\scripts\\shellIntegration.ps1" } catch {}{1}',
				]),
				Os.set(as.Pwsh, [
					"-noexit",
					"-command",
					'. "{0}/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration.ps1"{1}',
				]),
				Os.set(as.PwshLogin, [
					"-l",
					"-noexit",
					"-command",
					'. "{0}/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration.ps1"',
				]),
				Os.set(as.Zsh, ["-i"]),
				Os.set(as.ZshLogin, ["-il"]),
				Os.set(as.Bash, [
					"--init-file",
					"{0}/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration-bash.sh",
				]),
				Os.set(as.Fish, [
					"--init-command",
					'source "{0}/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration.fish"',
				]),
				Os.set(as.FishLogin, [
					"-l",
					"--init-command",
					'source "{0}/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration.fish"',
				]);
		},
	});
import * as FC from "fs";
import * as NC from "child_process";
import { dirname as WC, resolve as jC } from "path";
function TC(t, e, i, s, r = process.env, n, o, a, c) {
	return (
		(n = n || { existsFile: Wt.existsFile, readFile: FC.promises.readFile }),
		T
			? UC(
					i,
					n,
					r,
					o,
					s.getValue("terminal.integrated.useWslProfiles") !== !1,
					t && typeof t == "object"
						? { ...t }
						: s.getValue("terminal.integrated.profiles.windows"),
					typeof e == "string"
						? e
						: s.getValue("terminal.integrated.defaultProfile.windows"),
					c,
					a,
				)
			: JC(
					n,
					o,
					i,
					t && typeof t == "object"
						? { ...t }
						: s.getValue(
								Ee
									? "terminal.integrated.profiles.linux"
									: "terminal.integrated.profiles.osx",
							),
					typeof e == "string"
						? e
						: s.getValue(
								Ee
									? "terminal.integrated.defaultProfile.linux"
									: "terminal.integrated.defaultProfile.osx",
							),
					c,
					a,
					r,
				)
	);
}
async function UC(t, e, i, s, r, n, o, a, c) {
	const l = process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432"),
		u = `${process.env.windir}\\${l ? "Sysnative" : "System32"}`;
	let d = !1;
	LC() >= 16299 && (d = !0), await BC(a);
	const f = new Map();
	if (t) {
		f.set("PowerShell", {
			source: "PowerShell",
			icon: Ni.terminalPowershell,
			isAutoDetected: !0,
		}),
			f.set("Windows PowerShell", {
				path: `${u}\\WindowsPowerShell\\v1.0\\powershell.exe`,
				icon: Ni.terminalPowershell,
				isAutoDetected: !0,
			}),
			f.set("Git Bash", { source: "Git Bash", isAutoDetected: !0 }),
			f.set("Command Prompt", {
				path: `${u}\\cmd.exe`,
				icon: Ni.terminalCmd,
				isAutoDetected: !0,
			}),
			f.set("Cygwin", {
				path: [
					{
						path: `${process.env.HOMEDRIVE}\\cygwin64\\bin\\bash.exe`,
						isUnsafe: !0,
					},
					{
						path: `${process.env.HOMEDRIVE}\\cygwin\\bin\\bash.exe`,
						isUnsafe: !0,
					},
				],
				args: ["--login"],
				isAutoDetected: !0,
			}),
			f.set("bash (MSYS2)", {
				path: [
					{
						path: `${process.env.HOMEDRIVE}\\msys64\\usr\\bin\\bash.exe`,
						isUnsafe: !0,
					},
				],
				args: ["--login", "-i"],
				env: { CHERE_INVOKING: "1" },
				icon: Ni.terminalBash,
				isAutoDetected: !0,
			});
		const v = `${process.env.CMDER_ROOT || `${process.env.HOMEDRIVE}\\cmder`}\\vendor\\bin\\vscode_init.cmd`;
		f.set("Cmder", {
			path: `${u}\\cmd.exe`,
			args: ["/K", v],
			requiresPath: process.env.CMDER_ROOT ? v : { path: v, isUnsafe: !0 },
			isAutoDetected: !0,
		});
	}
	h7(n, f);
	const p = await l7(f.entries(), o, e, i, s, c);
	if (t && r)
		try {
			const v = await VC(`${u}\\${d ? "wsl" : "bash"}.exe`, o);
			for (const g of v) (!n || !(g.profileName in n)) && p.push(g);
		} catch {
			tg &&
				(s?.trace("WSL is not installed, so could not detect WSL profiles"),
				(tg = !1));
		}
	return p;
}
async function l7(t, e, i, s = process.env, r, n) {
	const o = [];
	for (const [a, c] of t) o.push(qC(a, c, e, i, s, r, n));
	return (await Promise.all(o)).filter((a) => !!a);
}
async function qC(t, e, i, s, r = process.env, n, o) {
	if (e === null) return;
	let a, c, l;
	if ("source" in e && !("path" in e)) {
		const p = Xc?.get(e.source);
		if (!p) return;
		(a = p.paths),
			(c = e.args || p.args),
			e.icon ? (l = u7(e.icon)) : p.icon && (l = p.icon);
	} else
		(a = Array.isArray(e.path) ? e.path : [e.path]),
			(c = T || Array.isArray(e.args) ? e.args : void 0),
			(l = u7(e.icon));
	let u;
	if (o) {
		const p = a.map((g) => (typeof g == "string" ? g : g.path)),
			v = await o(p);
		u = new Array(a.length);
		for (let g = 0; g < a.length; g++)
			typeof a[g] == "string"
				? (u[g] = v[g])
				: (u[g] = { path: v[g], isUnsafe: !0 });
	} else u = a.slice();
	let d;
	if (e.requiresPath) {
		let p;
		if (
			(mt(e.requiresPath)
				? (p = e.requiresPath)
				: ((p = e.requiresPath.path), e.requiresPath.isUnsafe && (d = p)),
			!(await s.existsFile(p)))
		)
			return;
	}
	const f = await dd(
		t,
		i,
		u,
		s,
		r,
		c,
		e.env,
		e.overrideName,
		e.isAutoDetected,
		d,
	);
	if (!f) {
		n?.debug("Terminal profile not validated", t, a);
		return;
	}
	return (
		(f.isAutoDetected = e.isAutoDetected), (f.icon = l), (f.color = e.color), f
	);
}
function u7(t) {
	return typeof t == "string" ? { id: t } : t;
}
async function BC(t) {
	if (Xc && !t) return;
	const [e, i] = await Promise.all([zC(), t || HC()]);
	(Xc = new Map()),
		Xc.set("Git Bash", {
			profileName: "Git Bash",
			paths: e,
			args: ["--login", "-i"],
		}),
		Xc.set("PowerShell", {
			profileName: "PowerShell",
			paths: i,
			icon: Ni.terminalPowershell,
		});
}
async function zC() {
	const t = new Set(),
		e = await c7("git.exe");
	if (e) {
		const r = WC(e);
		t.add(jC(r, "../.."));
	}
	function i(r, n) {
		n && r.add(n);
	}
	i(t, process.env.ProgramW6432),
		i(t, process.env.ProgramFiles),
		i(t, process.env["ProgramFiles(X86)"]),
		i(t, `${process.env.LocalAppData}\\Program`);
	const s = [];
	for (const r of t)
		s.push(
			`${r}\\Git\\bin\\bash.exe`,
			`${r}\\Git\\usr\\bin\\bash.exe`,
			`${r}\\usr\\bin\\bash.exe`,
		);
	return (
		s.push(
			`${process.env.UserProfile}\\scoop\\apps\\git\\current\\bin\\bash.exe`,
		),
		s.push(
			`${process.env.UserProfile}\\scoop\\apps\\git-with-openssh\\current\\bin\\bash.exe`,
		),
		s
	);
}
async function HC() {
	const t = [];
	for await (const e of d2()) t.push(e.exePath);
	return t;
}
async function VC(t, e) {
	const i = [],
		s = await new Promise((o, a) => {
			NC.exec(
				"wsl.exe -l -q",
				{ encoding: "utf16le", timeout: 1e3 },
				(c, l) => {
					if (c) return a("Problem occurred when getting wsl distros");
					o(l);
				},
			);
		});
	if (!s) return [];
	const r = new RegExp(/[\r?\n]/),
		n = s.split(r).filter((o) => o.trim().length > 0 && o !== "");
	for (const o of n) {
		if (o === "" || o.startsWith("docker-desktop")) continue;
		const a = `${o} (WSL)`,
			c = {
				profileName: a,
				path: t,
				args: ["-d", `${o}`],
				isDefault: a === e,
				icon: GC(o),
				isAutoDetected: !1,
			};
		i.push(c);
	}
	return i;
}
function GC(t) {
	return t.includes("Ubuntu")
		? Ni.terminalUbuntu
		: t.includes("Debian")
			? Ni.terminalDebian
			: Ni.terminalLinux;
}
async function JC(t, e, i, s, r, n, o, a) {
	const c = new Map();
	if (i && (await t.existsFile("/etc/shells"))) {
		const l = (await t.readFile("/etc/shells")).toString(),
			u = (
				n ||
				l.split(`
`)
			)
				.map((f) => {
					const p = f.indexOf("#");
					return p === -1 ? f : f.substring(0, p);
				})
				.filter((f) => f.trim().length > 0),
			d = new Map();
		for (const f of u) {
			let p = Te(f),
				v = d.get(p) || 0;
			v++,
				v > 1 && (p = `${p} (${v})`),
				d.set(p, v),
				c.set(p, { path: f, isAutoDetected: !0 });
		}
	}
	return h7(s, c), await l7(c.entries(), r, t, a, e, o);
}
function h7(t, e) {
	if (t)
		for (const [i, s] of Object.entries(t))
			s === null || typeof s != "object" || (!("path" in s) && !("source" in s))
				? e.delete(i)
				: ((s.icon = s.icon || e.get(i)?.icon), e.set(i, s));
}
async function dd(t, e, i, s, r, n, o, a, c, l) {
	if (i.length === 0) return Promise.resolve(void 0);
	const u = i.shift();
	if (u === "") return dd(t, e, i, s, r, n, o, a, c);
	const d = typeof u != "string" && u.isUnsafe,
		f = typeof u == "string" ? u : u.path,
		p = {
			profileName: t,
			path: f,
			args: n,
			env: o,
			overrideName: a,
			isAutoDetected: c,
			isDefault: t === e,
			isUnsafePath: d,
			requiresUnsafePath: l,
		};
	if (Te(f) === f) {
		const g = r.PATH ? r.PATH.split(Bl) : void 0,
			b = await c7(f, void 0, g, void 0, s.existsFile);
		return b ? ((p.path = b), (p.isFromPath = !0), p) : dd(t, e, i, s, r, n);
	}
	return (await s.existsFile(ui(f))) ? p : dd(t, e, i, s, r, n, o, a, c);
}
var d7,
	Xc,
	tg,
	XC = m({
		"out-build/vs/platform/terminal/node/terminalProfiles.js"() {
			"use strict";
			Gh(),
				ge(),
				z(),
				Ie(),
				yt(),
				g2(),
				MC(),
				(function (t) {
					t.UnixShellsPath = "/etc/shells";
				})(d7 || (d7 = {})),
				(tg = !0);
		},
	}),
	ig,
	fd,
	KC = m({
		"out-build/vs/platform/terminal/node/ptyHostService.js"() {
			"use strict";
			q(),
				F(),
				z(),
				Ks(),
				Ve(),
				Q(),
				EC(),
				X1(),
				SC(),
				i7(),
				IC(),
				XC(),
				b2(),
				Gn(),
				(function (t) {
					t[(t.MaxRestarts = 5)] = "MaxRestarts";
				})(ig || (ig = {})),
				(fd = class extends j {
					get c() {
						return this.h(), this.a;
					}
					get f() {
						return this.h(), this.b;
					}
					get g() {
						return this.b;
					}
					h() {
						this.a || this.U();
					}
					constructor(e, i, s, r) {
						super(),
							(this.M = e),
							(this.N = i),
							(this.O = s),
							(this.P = r),
							(this.m = !1),
							(this.n = 0),
							(this.q = !0),
							(this.t = this.D(new $())),
							(this.onPtyHostExit = this.t.event),
							(this.u = this.D(new $())),
							(this.onPtyHostStart = this.u.event),
							(this.w = this.D(new $())),
							(this.onPtyHostUnresponsive = this.w.event),
							(this.y = this.D(new $())),
							(this.onPtyHostResponsive = this.y.event),
							(this.z = this.D(new $())),
							(this.onPtyHostRequestResolveVariables = this.z.event),
							(this.C = this.D(new $())),
							(this.onProcessData = this.C.event),
							(this.F = this.D(new $())),
							(this.onProcessReady = this.F.event),
							(this.G = this.D(new $())),
							(this.onProcessReplay = this.G.event),
							(this.H = this.D(new $())),
							(this.onProcessOrphanQuestion = this.H.event),
							(this.I = this.D(new $())),
							(this.onDidRequestDetach = this.I.event),
							(this.J = this.D(new $())),
							(this.onDidChangeProperty = this.J.event),
							(this.L = this.D(new $())),
							(this.onProcessExit = this.L.event),
							$C(),
							this.D(this.M),
							this.D(ke(() => this.W())),
							(this.j = this.D(new ld(void 0, this.O))),
							this.D(this.j.onCreateRequest(this.z.fire, this.z)),
							this.M.onRequestConnection &&
								this.D(x.once(this.M.onRequestConnection)(() => this.h())),
							this.M.onWillShutdown &&
								this.D(this.M.onWillShutdown(() => (this.m = !0)));
					}
					get Q() {
						return this.N.getValue("terminal.integrated.ignoreProcessNames");
					}
					async R() {
						return this.g?.refreshIgnoreProcessNames?.(this.Q);
					}
					async S() {
						if (T) return process.env;
						try {
							return await J1(this.N, this.O, { _: [] }, process.env);
						} catch (e) {
							return (
								this.O.error(
									"ptyHost was unable to resolve shell environment",
									e,
								),
								{}
							);
						}
					}
					U() {
						const e = this.M.start(),
							i = e.client;
						this.O.getLevel() === J.Trace &&
							this.O.trace(
								"PtyHostService#_startPtyHost",
								new Error().stack?.replace(/^Error/, ""),
							),
							Xe.toService(i.getChannel(Xo.Heartbeat)).onBeat(() => this.X()),
							this.X(!0),
							this.D(
								e.onDidProcessExit((n) => {
									this.t.fire(n.code),
										!this.m &&
											!this.B.isDisposed &&
											(this.n <= ig.MaxRestarts
												? (this.O.error(
														`ptyHost terminated unexpectedly with code ${n.code}`,
													),
													this.n++,
													this.restartPtyHost())
												: this.O.error(
														`ptyHost terminated unexpectedly with code ${n.code}, giving up`,
													));
								}),
							);
						const r = Xe.toService(i.getChannel(Xo.PtyHost));
						return (
							this.D(r.onProcessData((n) => this.C.fire(n))),
							this.D(r.onProcessReady((n) => this.F.fire(n))),
							this.D(r.onProcessExit((n) => this.L.fire(n))),
							this.D(r.onDidChangeProperty((n) => this.J.fire(n))),
							this.D(r.onProcessReplay((n) => this.G.fire(n))),
							this.D(r.onProcessOrphanQuestion((n) => this.H.fire(n))),
							this.D(r.onDidRequestDetach((n) => this.I.fire(n))),
							this.D(new s7(this.P, i.getChannel(Xo.Logger))),
							(this.a = e),
							(this.b = r),
							this.u.fire(),
							this.D(
								this.N.onDidChangeConfiguration(async (n) => {
									n.affectsConfiguration(
										"terminal.integrated.ignoreProcessNames",
									) && (await this.R());
								}),
							),
							this.R(),
							[e, r]
						);
					}
					async createProcess(e, i, s, r, n, o, a, c, l, u, d) {
						const f = setTimeout(() => this.$(), wi.CreateProcessTimeout),
							p = await this.f.createProcess(e, i, s, r, n, o, a, c, l, u, d);
						return clearTimeout(f), p;
					}
					updateTitle(e, i, s) {
						return this.f.updateTitle(e, i, s);
					}
					updateIcon(e, i, s, r) {
						return this.f.updateIcon(e, i, s, r);
					}
					attachToProcess(e) {
						return this.f.attachToProcess(e);
					}
					detachFromProcess(e, i) {
						return this.f.detachFromProcess(e, i);
					}
					shutdownAll() {
						return this.f.shutdownAll();
					}
					listProcesses() {
						return this.f.listProcesses();
					}
					async getPerformanceMarks() {
						return this.g?.getPerformanceMarks() ?? [];
					}
					async reduceConnectionGraceTime() {
						return this.g?.reduceConnectionGraceTime();
					}
					start(e) {
						return this.f.start(e);
					}
					shutdown(e, i) {
						return this.f.shutdown(e, i);
					}
					input(e, i) {
						return this.f.input(e, i);
					}
					processBinary(e, i) {
						return this.f.processBinary(e, i);
					}
					resize(e, i, s) {
						return this.f.resize(e, i, s);
					}
					clearBuffer(e) {
						return this.f.clearBuffer(e);
					}
					acknowledgeDataEvent(e, i) {
						return this.f.acknowledgeDataEvent(e, i);
					}
					setUnicodeVersion(e, i) {
						return this.f.setUnicodeVersion(e, i);
					}
					getInitialCwd(e) {
						return this.f.getInitialCwd(e);
					}
					getCwd(e) {
						return this.f.getCwd(e);
					}
					async getLatency() {
						const e = new Hr(),
							i = await this.f.getLatency();
						return (
							e.stop(),
							[
								{ label: "ptyhostservice<->ptyhost", latency: e.elapsed() },
								...i,
							]
						);
					}
					orphanQuestionReply(e) {
						return this.f.orphanQuestionReply(e);
					}
					installAutoReply(e, i) {
						return this.f.installAutoReply(e, i);
					}
					uninstallAllAutoReplies() {
						return this.f.uninstallAllAutoReplies();
					}
					getDefaultSystemShell(e) {
						return this.g?.getDefaultSystemShell(e) ?? y2(e ?? Ri, process.env);
					}
					async getProfiles(e, i, s, r = !1) {
						const n = await this.S();
						return TC(
							i,
							s,
							r,
							this.N,
							n,
							void 0,
							this.O,
							this.bb.bind(this, e),
						);
					}
					async getEnvironment() {
						return this.b ? this.f.getEnvironment() : { ...process.env };
					}
					getWslPath(e, i) {
						return this.f.getWslPath(e, i);
					}
					getRevivedPtyNewId(e, i) {
						return this.f.getRevivedPtyNewId(e, i);
					}
					setTerminalLayoutInfo(e) {
						return this.f.setTerminalLayoutInfo(e);
					}
					async getTerminalLayoutInfo(e) {
						return this.g?.getTerminalLayoutInfo(e);
					}
					async requestDetachInstance(e, i) {
						return this.f.requestDetachInstance(e, i);
					}
					async acceptDetachInstanceReply(e, i) {
						return this.f.acceptDetachInstanceReply(e, i);
					}
					async freePortKillProcess(e) {
						if (!this.f.freePortKillProcess)
							throw new Error(
								"freePortKillProcess does not exist on the pty proxy",
							);
						return this.f.freePortKillProcess(e);
					}
					async serializeTerminalState(e) {
						return this.f.serializeTerminalState(e);
					}
					async reviveTerminalProcesses(e, i, s) {
						return this.f.reviveTerminalProcesses(e, i, s);
					}
					async refreshProperty(e, i) {
						return this.f.refreshProperty(e, i);
					}
					async updateProperty(e, i, s) {
						return this.f.updateProperty(e, i, s);
					}
					async restartPtyHost() {
						this.W(), (this.q = !0), this.U();
					}
					W() {
						this.f.shutdownAll(), this.c.store.dispose();
					}
					X(e) {
						this.ab(),
							(this.r = setTimeout(
								() => this.Y(),
								e
									? wi.ConnectingBeatInterval
									: wi.BeatInterval * wi.FirstWaitMultiplier,
							)),
							this.q || ((this.q = !0), this.y.fire());
					}
					Y() {
						this.O.warn(
							`No ptyHost heartbeat after ${(wi.BeatInterval * wi.FirstWaitMultiplier) / 1e3} seconds`,
						),
							(this.r = void 0),
							(this.s = setTimeout(
								() => this.Z(),
								wi.BeatInterval * wi.SecondWaitMultiplier,
							));
					}
					Z() {
						this.O.error(
							`No ptyHost heartbeat after ${(wi.BeatInterval * wi.FirstWaitMultiplier + wi.BeatInterval * wi.FirstWaitMultiplier) / 1e3} seconds`,
						),
							(this.s = void 0),
							this.q && ((this.q = !1), this.w.fire());
					}
					$() {
						this.ab(),
							this.O.error(
								`No ptyHost response to createProcess after ${wi.CreateProcessTimeout / 1e3} seconds`,
							),
							this.q && ((this.q = !1), this.w.fire());
					}
					ab() {
						this.r && (clearTimeout(this.r), (this.r = void 0)),
							this.s && (clearTimeout(this.s), (this.s = void 0));
					}
					bb(e, i) {
						return this.j.createRequest({ workspaceId: e, originalText: i });
					}
					async acceptPtyHostResolvedVariables(e, i) {
						this.j.acceptReply(e, i);
					}
				}),
				(fd = __decorate([__param(1, He), __param(2, G), __param(3, ec)], fd));
		},
	}),
	sg,
	f7,
	p7,
	YC = m({
		"out-build/vs/platform/remote/common/electronRemoteResources.js"() {
			"use strict";
			(sg = "request"),
				(f7 = "remoteResourceHandler"),
				(p7 = class {
					async routeCall(t, e, i) {
						if (e !== sg) throw new Error(`Call not found: ${e}`);
						const s = i[0];
						if (s?.authority) {
							const r = t.connections.find((n) => n.ctx === s.authority);
							if (r) return r;
						}
						throw new Error("Caller not found");
					}
					routeEvent(t, e) {
						throw new Error(`Event not found: ${e}`);
					}
				});
		},
	});
import { BrowserWindow as QC } from "electron";
var pd,
	ZC = m({
		"out-build/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.js"() {
			"use strict";
			z(),
				Ve(),
				bt(),
				ot(),
				Q(),
				Li(),
				un(),
				d6(),
				(pd = class extends Um {
					get win() {
						return super.win || this.tryClaimWindow(), super.win;
					}
					constructor(e, i, s, r, n, o) {
						super(r, n, i, s),
							(this.O = e),
							(this.P = o),
							(this.id = this.O.id),
							(this.parentId = -1),
							(this.N = !1),
							this.tryClaimWindow();
					}
					tryClaimWindow(e) {
						this.B.isDisposed ||
							this.O.isDestroyed() ||
							(this.Q(e),
							e &&
								!this.N &&
								((this.N = !0),
								this.u(
									{
										x: e.x,
										y: e.y,
										width: e.width,
										height: e.height,
										mode: e.show === !1 ? 0 : 1,
									},
									{ hideBecauseShadowWindow: !1 },
								)));
					}
					Q(e) {
						if (this.m) return;
						const i = QC.fromWebContents(this.O);
						i &&
							(this.t.trace("[aux window] Claimed browser window instance"),
							this.n(i, e),
							i.setMenu(null),
							(T || Ee) &&
								ln(this.q, e?.titleBarStyle === "hidden" ? "custom" : void 0) &&
								i.setAutoHideMenuBar(!0),
							this.P.registerAuxWindow(this));
					}
					matches(e) {
						return this.O.id === e.id;
					}
				}),
				(pd = __decorate(
					[
						__param(1, ut),
						__param(2, G),
						__param(3, He),
						__param(4, Ii),
						__param(5, Ne),
					],
					pd,
				));
		},
	});
import { BrowserWindow as e_, app as t_ } from "electron";
var md,
	i_ = m({
		"out-build/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.js"() {
			"use strict";
			q(),
				F(),
				Ce(),
				is(),
				ZC(),
				Y(),
				Q(),
				fc(),
				si(),
				(md = class extends j {
					constructor(e, i) {
						super(),
							(this.h = e),
							(this.j = i),
							(this.a = this.D(new $())),
							(this.onDidMaximizeWindow = this.a.event),
							(this.b = this.D(new $())),
							(this.onDidUnmaximizeWindow = this.b.event),
							(this.c = this.D(new $())),
							(this.onDidChangeFullScreen = this.c.event),
							(this.f = this.D(new $())),
							(this.onDidTriggerSystemContextMenu = this.f.event),
							(this.g = new Map()),
							this.m();
					}
					m() {
						t_.on("browser-window-created", (e, i) => {
							const s = this.getWindowByWebContents(i.webContents);
							if (s)
								this.j.trace(
									'[aux window] app.on("browser-window-created"): Trying to claim auxiliary window',
								),
									s.tryClaimWindow();
							else {
								const r = new De();
								r.add(
									x.fromNodeEventEmitter(
										i.webContents,
										"did-create-window",
										(n, o) => ({ browserWindow: n, details: o }),
									)(({ browserWindow: n, details: o }) => {
										const a = this.getWindowByWebContents(n.webContents);
										a &&
											(this.j.trace(
												'[aux window] window.on("did-create-window"): Trying to claim auxiliary window',
											),
											a.tryClaimWindow(o.options));
									}),
								),
									r.add(x.fromNodeEventEmitter(i, "closed")(() => r.dispose()));
							}
						}),
							et.handle("vscode:registerAuxiliaryWindow", async (e, i) => {
								const s = this.getWindowByWebContents(e.sender);
								return (
									s &&
										(this.j.trace(
											"[aux window] vscode:registerAuxiliaryWindow: Registering auxiliary window to main window",
										),
										(s.parentId = i)),
									e.sender.id
								);
							});
					}
					createWindow(e) {
						const { state: i, overrides: s } = this.n(e);
						return this.h.invokeFunction(P1, i, s, {
							preload: $t.asFileUri(
								"vs/base/parts/sandbox/electron-sandbox/preload-aux.js",
							).fsPath,
						});
					}
					n(e) {
						const i = {},
							s = { hideBecauseShadowWindow: !1 },
							r = e.features.split(",");
						for (const o of r) {
							const [a, c] = o.split("=");
							switch (a) {
								case "width":
									i.width = parseInt(c, 10);
									break;
								case "height":
									i.height = parseInt(c, 10);
									break;
								case "left":
									i.x = parseInt(c, 10);
									break;
								case "top":
									i.y = parseInt(c, 10);
									break;
								case "window-maximized":
									i.mode = 0;
									break;
								case "window-fullscreen":
									i.mode = 3;
									break;
								case "window-disable-fullscreen":
									s.disableFullscreen = !0;
									break;
								case "window-native-titlebar":
									s.forceNativeTitlebar = !0;
									break;
							}
						}
						const n = Xu.validateWindowState(this.j, i) ?? I4();
						return (
							this.j.trace("[aux window] using window state", n),
							{ state: n, overrides: s }
						);
					}
					registerWindow(e) {
						const i = new De(),
							s = this.h.createInstance(pd, e);
						this.g.set(s.id, s),
							i.add(ke(() => this.g.delete(s.id))),
							i.add(s.onDidMaximize(() => this.a.fire(s))),
							i.add(s.onDidUnmaximize(() => this.b.fire(s))),
							i.add(
								s.onDidEnterFullScreen(() =>
									this.c.fire({ window: s, fullscreen: !0 }),
								),
							),
							i.add(
								s.onDidLeaveFullScreen(() =>
									this.c.fire({ window: s, fullscreen: !1 }),
								),
							),
							i.add(
								s.onDidTriggerSystemContextMenu(({ x: r, y: n }) =>
									this.f.fire({ window: s, x: r, y: n }),
								),
							),
							x.once(s.onDidClose)(() => i.dispose());
					}
					getWindowByWebContents(e) {
						const i = this.g.get(e.id);
						return i?.matches(e) ? i : void 0;
					}
					getFocusedWindow() {
						const e = e_.getFocusedWindow();
						if (e) return this.getWindowByWebContents(e.webContents);
					}
					getLastActiveWindow() {
						return O4(Array.from(this.g.values()));
					}
					getWindows() {
						return Array.from(this.g.values());
					}
				}),
				(md = __decorate([__param(0, ws), __param(1, G)], md));
		},
	});
function Ko(t) {
	switch (ng.call(t)) {
		case "[object Error]":
		case "[object Exception]":
		case "[object DOMException]":
		case "[object WebAssembly.Exception]":
			return !0;
		default:
			return In(t, Error);
	}
}
function rg(t, e) {
	return ng.call(t) === `[object ${e}]`;
}
function gd(t) {
	return rg(t, "String");
}
function wd(t) {
	return rg(t, "Object");
}
function s_(t) {
	return typeof Event < "u" && In(t, Event);
}
function r_(t) {
	return typeof Element < "u" && In(t, Element);
}
function n_(t) {
	return rg(t, "RegExp");
}
function m7(t) {
	return !!(t && t.then && typeof t.then == "function");
}
function o_(t) {
	return (
		wd(t) &&
		"nativeEvent" in t &&
		"preventDefault" in t &&
		"stopPropagation" in t
	);
}
function In(t, e) {
	try {
		return t instanceof e;
	} catch {
		return !1;
	}
}
function g7(t) {
	return !!(typeof t == "object" && t !== null && (t.__isVue || t._isVue));
}
var ng,
	cs = m({
		"out-build/external/sentry/utils/is.js"() {
			"use strict";
			ng = Object.prototype.toString;
		},
	}),
	a_ = m({
		"out-build/external/sentry/utils/vendor/escapeStringForRegex.js"() {
			"use strict";
		},
	});
function og(t, e = 0) {
	return typeof t != "string" || e === 0 || t.length <= e
		? t
		: `${t.slice(0, e)}...`;
}
function w7(t, e) {
	if (!Array.isArray(t)) return "";
	const i = [];
	for (let s = 0; s < t.length; s++) {
		const r = t[s];
		try {
			g7(r) ? i.push("[VueViewModel]") : i.push(String(r));
		} catch {
			i.push("[value cannot be serialized]");
		}
	}
	return i.join(e);
}
function c_(t, e, i = !1) {
	return gd(t)
		? n_(e)
			? e.test(t)
			: gd(e)
				? i
					? t === e
					: t.includes(e)
				: !1
		: !1;
}
function vd(t, e = [], i = !1) {
	return e.some((s) => c_(t, s, i));
}
var yd = m({
	"out-build/external/sentry/utils/string.js"() {
		"use strict";
		cs(), a_();
	},
});
function l_(t, e, i = 250, s, r, n, o) {
	if (
		!n.exception ||
		!n.exception.values ||
		!o ||
		!In(o.originalException, Error)
	)
		return;
	const a =
		n.exception.values.length > 0
			? n.exception.values[n.exception.values.length - 1]
			: void 0;
	a &&
		(n.exception.values = u_(
			ag(t, e, r, o.originalException, s, n.exception.values, a, 0),
			i,
		));
}
function ag(t, e, i, s, r, n, o, a) {
	if (n.length >= i + 1) return n;
	let c = [...n];
	if (In(s[r], Error)) {
		v7(o, a);
		const l = t(e, s[r]),
			u = c.length;
		y7(l, r, u, a), (c = ag(t, e, i, s[r], r, [l, ...c], l, u));
	}
	return (
		Array.isArray(s.errors) &&
			s.errors.forEach((l, u) => {
				if (In(l, Error)) {
					v7(o, a);
					const d = t(e, l),
						f = c.length;
					y7(d, `errors[${u}]`, f, a), (c = ag(t, e, i, l, r, [d, ...c], d, f));
				}
			}),
		c
	);
}
function v7(t, e) {
	(t.mechanism = t.mechanism || { type: "generic", handled: !0 }),
		(t.mechanism = {
			...t.mechanism,
			...(t.type === "AggregateError" && { is_exception_group: !0 }),
			exception_id: e,
		});
}
function y7(t, e, i, s) {
	(t.mechanism = t.mechanism || { type: "generic", handled: !0 }),
		(t.mechanism = {
			...t.mechanism,
			type: "chained",
			source: e,
			exception_id: i,
			parent_id: s,
		});
}
function u_(t, e) {
	return t.map((i) => (i.value && (i.value = og(i.value, e)), i));
}
var h_ = m({
		"out-build/external/sentry/utils/aggregate-errors.js"() {
			"use strict";
			cs(), yd();
		},
	}),
	d_ = m({
		"out-build/external/sentry/utils/array.js"() {
			"use strict";
		},
	}),
	f_ = m({
		"out-build/external/sentry/utils/breadcrumb-log-level.js"() {
			"use strict";
		},
	}),
	Yo,
	b7 = m({
		"out-build/external/sentry/utils/version.js"() {
			"use strict";
			Yo = "8.35.0-cursor";
		},
	});
function cg(t, e, i) {
	const s = i || wt,
		r = (s.__SENTRY__ = s.__SENTRY__ || {}),
		n = (r[Yo] = r[Yo] || {});
	return n[t] || (n[t] = e());
}
var wt,
	_i = m({
		"out-build/external/sentry/utils/worldwide.js"() {
			"use strict";
			b7(), (wt = globalThis);
		},
	});
function p_(t, e = {}) {
	if (!t) return "<unknown>";
	try {
		let i = t;
		const s = 5,
			r = [];
		let n = 0,
			o = 0;
		const a = " > ",
			c = a.length;
		let l;
		const u = Array.isArray(e) ? e : e.keyAttrs,
			d = (!Array.isArray(e) && e.maxStringLength) || S7;
		for (
			;
			i &&
			n++ < s &&
			((l = m_(i, u)),
			!(l === "html" || (n > 1 && o + r.length * c + l.length >= d)));
		)
			r.push(l), (o += l.length), (i = i.parentNode);
		return r.reverse().join(a);
	} catch {
		return "<unknown>";
	}
}
function m_(t, e) {
	const i = t,
		s = [];
	if (!i || !i.tagName) return "";
	if (E7.HTMLElement && i instanceof HTMLElement && i.dataset) {
		if (i.dataset.sentryComponent) return i.dataset.sentryComponent;
		if (i.dataset.sentryElement) return i.dataset.sentryElement;
	}
	s.push(i.tagName.toLowerCase());
	const r =
		e && e.length
			? e.filter((o) => i.getAttribute(o)).map((o) => [o, i.getAttribute(o)])
			: null;
	if (r && r.length)
		r.forEach((o) => {
			s.push(`[${o[0]}="${o[1]}"]`);
		});
	else {
		i.id && s.push(`#${i.id}`);
		const o = i.className;
		if (o && gd(o)) {
			const a = o.split(/\s+/);
			for (const c of a) s.push(`.${c}`);
		}
	}
	const n = ["aria-label", "type", "name", "title", "alt"];
	for (const o of n) {
		const a = i.getAttribute(o);
		a && s.push(`[${o}="${a}"]`);
	}
	return s.join("");
}
var E7,
	S7,
	k7 = m({
		"out-build/external/sentry/utils/browser.js"() {
			"use strict";
			cs(), _i(), (E7 = wt), (S7 = 80);
		},
	}),
	bd,
	Cn = m({
		"out-build/external/sentry/utils/debug-build.js"() {
			"use strict";
			bd = !1;
		},
	});
function x7(t) {
	if (!("console" in wt)) return t();
	const e = wt.console,
		i = {},
		s = Object.keys(Yc);
	s.forEach((r) => {
		const n = Yc[r];
		(i[r] = e[r]), (e[r] = n);
	});
	try {
		return t();
	} finally {
		s.forEach((r) => {
			e[r] = i[r];
		});
	}
}
function g_() {
	let t = !1;
	const e = {
		enable: () => {
			t = !0;
		},
		disable: () => {
			t = !1;
		},
		isEnabled: () => t,
	};
	return (
		bd
			? Kc.forEach((i) => {
					e[i] = (...s) => {
						t &&
							x7(() => {
								wt.console[i](`${D7}[${i}]:`, ...s);
							});
					};
				})
			: Kc.forEach((i) => {
					e[i] = () => {};
				}),
		e
	);
}
var D7,
	Kc,
	Yc,
	ri,
	Rr = m({
		"out-build/external/sentry/utils/logger.js"() {
			"use strict";
			Cn(),
				_i(),
				(D7 = "Sentry Logger "),
				(Kc = ["debug", "info", "warn", "error", "log", "assert", "trace"]),
				(Yc = {}),
				(ri = cg("logger", g_));
		},
	}),
	P7 = m({
		"out-build/external/sentry/utils/dsn.js"() {
			"use strict";
			Cn(), Rr();
		},
	}),
	lg,
	ug = m({
		"out-build/external/sentry/utils/error.js"() {
			"use strict";
			lg = class extends Error {
				constructor(t, e = "warn") {
					super(t),
						(this.message = t),
						(this.name = new.target.prototype.constructor.name),
						Object.setPrototypeOf(this, new.target.prototype),
						(this.logLevel = e);
				}
			};
		},
	});
function w_(t, e, i) {
	if (!(e in t)) return;
	const s = t[e],
		r = i(s);
	typeof r == "function" && v_(r, s), (t[e] = r);
}
function hg(t, e, i) {
	try {
		Object.defineProperty(t, e, { value: i, writable: !0, configurable: !0 });
	} catch {
		bd && ri.log(`Failed to add non-enumerable property "${e}" to object`, t);
	}
}
function v_(t, e) {
	try {
		const i = e.prototype || {};
		(t.prototype = e.prototype = i), hg(t, "__sentry_original__", e);
	} catch {}
}
function y_(t) {
	return t.__sentry_original__;
}
function b_(t) {
	return Object.keys(t)
		.map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`)
		.join("&");
}
function E_(t) {
	if (Ko(t))
		return { message: t.message, name: t.name, stack: t.stack, ...A7(t) };
	if (s_(t)) {
		const e = {
			type: t.type,
			target: $7(t.target),
			currentTarget: $7(t.currentTarget),
			...A7(t),
		};
		return (
			typeof CustomEvent < "u" && In(t, CustomEvent) && (e.detail = t.detail), e
		);
	} else return t;
}
function $7(t) {
	try {
		return r_(t) ? p_(t) : Object.prototype.toString.call(t);
	} catch {
		return "<unknown>";
	}
}
function A7(t) {
	if (typeof t == "object" && t !== null) {
		const e = {};
		for (const i in t)
			Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
		return e;
	} else return {};
}
var Or = m({
	"out-build/external/sentry/utils/object.js"() {
		"use strict";
		k7(), Cn(), cs(), Rr(), yd();
	},
});
function I7(t) {
	try {
		return !t || typeof t != "function" ? Ed : t.name || Ed;
	} catch {
		return Ed;
	}
}
function dg(t) {
	const e = t.exception;
	if (e) {
		const i = [];
		try {
			return (
				e.values.forEach((s) => {
					s.stacktrace.frames && i.push(...s.stacktrace.frames);
				}),
				i
			);
		} catch {
			return;
		}
	}
}
var Ed,
	Qc = m({
		"out-build/external/sentry/utils/stacktrace.js"() {
			"use strict";
			Ed = "<anonymous>";
		},
	});
function S_(t, e) {
	(Zc[t] = Zc[t] || []), Zc[t].push(e);
}
function k_(t, e) {
	fg[t] || (e(), (fg[t] = !0));
}
function x_(t, e) {
	const i = t && Zc[t];
	if (i)
		for (const s of i)
			try {
				s(e);
			} catch (r) {
				bd &&
					ri.error(
						`Error while triggering instrumentation handler.
Type: ${t}
Name: ${I7(s)}
Error:`,
						r,
					);
			}
}
var Zc,
	fg,
	el = m({
		"out-build/external/sentry/utils/instrument/handlers.js"() {
			"use strict";
			Cn(), Rr(), Qc(), (Zc = {}), (fg = {});
		},
	});
function D_(t) {
	const e = "console";
	S_(e, t), k_(e, P_);
}
function P_() {
	"console" in wt &&
		Kc.forEach(function (t) {
			t in wt.console &&
				w_(wt.console, t, function (e) {
					return (
						(Yc[t] = e),
						function (...i) {
							x_("console", { args: i, level: t });
							const r = Yc[t];
							r && r.apply(wt.console, i);
						}
					);
				});
		});
}
var $_ = m({
		"out-build/external/sentry/utils/instrument/console.js"() {
			"use strict";
			Rr(), Or(), _i(), el();
		},
	}),
	A_ = m({
		"out-build/external/sentry/utils/vendor/supportsHistory.js"() {
			"use strict";
			_i();
		},
	}),
	C7 = m({
		"out-build/external/sentry/utils/supports.js"() {
			"use strict";
			Cn(), Rr(), _i(), A_();
		},
	});
function _7() {
	return Date.now() / pg;
}
function I_() {
	const { performance: t } = wt;
	if (!t || !t.now) return _7;
	const e = Date.now() - t.now(),
		i = t.timeOrigin == null ? e : t.timeOrigin;
	return () => (i + t.now()) / pg;
}
var pg,
	Sd,
	kd,
	C_,
	mg = m({
		"out-build/external/sentry/utils/time.js"() {
			"use strict";
			_i(),
				(pg = 1e3),
				(Sd = I_()),
				(C_ = (() => {
					const { performance: t } = wt;
					if (!t || !t.now) {
						kd = "none";
						return;
					}
					const e = 3600 * 1e3,
						i = t.now(),
						s = Date.now(),
						r = t.timeOrigin ? Math.abs(t.timeOrigin + i - s) : e,
						n = r < e,
						o = t.timing && t.timing.navigationStart,
						c = typeof o == "number" ? Math.abs(o + i - s) : e,
						l = c < e;
					return n || l
						? r <= c
							? ((kd = "timeOrigin"), t.timeOrigin)
							: ((kd = "navigationStart"), o)
						: ((kd = "dateNow"), s);
				})());
		},
	}),
	__ = m({
		"out-build/external/sentry/utils/instrument/fetch.js"() {
			"use strict";
			cs(), Or(), C7(), mg(), _i(), el();
		},
	}),
	R_ = m({
		"out-build/external/sentry/utils/instrument/globalError.js"() {
			"use strict";
			_i(), el();
		},
	}),
	O_ = m({
		"out-build/external/sentry/utils/instrument/globalUnhandledRejection.js"() {
			"use strict";
			_i(), el();
		},
	}),
	L_ = m({
		"out-build/external/sentry/utils/instrument/index.js"() {
			"use strict";
			$_(), __(), R_(), O_(), el();
		},
	}),
	R7 = m({
		"out-build/external/sentry/utils/env.js"() {
			"use strict";
		},
	}),
	O7 = m({
		"out-build/external/sentry/utils/node.js"() {
			"use strict";
			R7();
		},
	}),
	M_ = m({
		"out-build/external/sentry/utils/isBrowser.js"() {
			"use strict";
			O7(), _i();
		},
	});
function F_() {
	const t = typeof WeakSet == "function",
		e = t ? new WeakSet() : [];
	function i(r) {
		if (t) return e.has(r) ? !0 : (e.add(r), !1);
		for (let n = 0; n < e.length; n++) if (e[n] === r) return !0;
		return e.push(r), !1;
	}
	function s(r) {
		if (t) e.delete(r);
		else
			for (let n = 0; n < e.length; n++)
				if (e[n] === r) {
					e.splice(n, 1);
					break;
				}
	}
	return [i, s];
}
var L7 = m({
	"out-build/external/sentry/utils/memo.js"() {
		"use strict";
	},
});
function Qo() {
	const t = wt,
		e = t.crypto || t.msCrypto;
	let i = () => Math.random() * 16;
	try {
		if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
		e &&
			e.getRandomValues &&
			(i = () => {
				const s = new Uint8Array(1);
				return e.getRandomValues(s), s[0];
			});
	} catch {}
	return ("10000000100040008000" + 1e11).replace(/[018]/g, (s) =>
		(s ^ ((i() & 15) >> (s / 4))).toString(16),
	);
}
function M7(t) {
	return t.exception && t.exception.values ? t.exception.values[0] : void 0;
}
function _n(t) {
	const { message: e, event_id: i } = t;
	if (e) return e;
	const s = M7(t);
	return s
		? s.type && s.value
			? `${s.type}: ${s.value}`
			: s.type || s.value || i || "<unknown>"
		: i || "<unknown>";
}
function N_(t, e) {
	const i = M7(t);
	if (!i) return;
	const s = { type: "generic", handled: !0 },
		r = i.mechanism;
	if (((i.mechanism = { ...s, ...r, ...e }), e && "data" in e)) {
		const n = { ...(r && r.data), ...e.data };
		i.mechanism.data = n;
	}
}
var tl = m({
	"out-build/external/sentry/utils/misc.js"() {
		"use strict";
		Or(), yd(), _i();
	},
});
function F7(t, e = 100, i = 1 / 0) {
	try {
		return gg("", t, e, i);
	} catch (s) {
		return { ERROR: `**non-serializable** (${s})` };
	}
}
function gg(t, e, i = 1 / 0, s = 1 / 0, r = F_()) {
	const [n, o] = r;
	if (
		e == null ||
		["boolean", "string"].includes(typeof e) ||
		(typeof e == "number" && Number.isFinite(e))
	)
		return e;
	const a = W_(t, e);
	if (!a.startsWith("[object ")) return a;
	if (e.__sentry_skip_normalization__) return e;
	const c =
		typeof e.__sentry_override_normalization_depth__ == "number"
			? e.__sentry_override_normalization_depth__
			: i;
	if (c === 0) return a.replace("object ", "");
	if (n(e)) return "[Circular ~]";
	const l = e;
	if (l && typeof l.toJSON == "function")
		try {
			const p = l.toJSON();
			return gg("", p, c - 1, s, r);
		} catch {}
	const u = Array.isArray(e) ? [] : {};
	let d = 0;
	const f = E_(e);
	for (const p in f) {
		if (!Object.prototype.hasOwnProperty.call(f, p)) continue;
		if (d >= s) {
			u[p] = "[MaxProperties ~]";
			break;
		}
		const v = f[p];
		(u[p] = gg(p, v, c - 1, s, r)), d++;
	}
	return o(e), u;
}
function W_(t, e) {
	try {
		if (t === "domain" && e && typeof e == "object" && e._events)
			return "[Domain]";
		if (t === "domainEmitter") return "[DomainEmitter]";
		if (typeof global < "u" && e === global) return "[Global]";
		if (typeof window < "u" && e === window) return "[Window]";
		if (typeof document < "u" && e === document) return "[Document]";
		if (g7(e)) return "[VueViewModel]";
		if (o_(e)) return "[SyntheticEvent]";
		if (typeof e == "number" && !Number.isFinite(e)) return `[${e}]`;
		if (typeof e == "function") return `[Function: ${I7(e)}]`;
		if (typeof e == "symbol") return `[${String(e)}]`;
		if (typeof e == "bigint") return `[BigInt: ${String(e)}]`;
		const i = j_(e);
		return /^HTML(\w*)Element$/.test(i)
			? `[HTMLElement: ${i}]`
			: `[object ${i}]`;
	} catch (i) {
		return `**non-serializable** (${i})`;
	}
}
function j_(t) {
	const e = Object.getPrototypeOf(t);
	return e ? e.constructor.name : "null prototype";
}
var xd = m({
	"out-build/external/sentry/utils/normalize.js"() {
		"use strict";
		cs(), L7(), Or(), Qc();
	},
});
function T_(t, e) {
	let i = 0;
	for (let s = t.length - 1; s >= 0; s--) {
		const r = t[s];
		r === "."
			? t.splice(s, 1)
			: r === ".."
				? (t.splice(s, 1), i++)
				: i && (t.splice(s, 1), i--);
	}
	if (e) for (; i--; i) t.unshift("..");
	return t;
}
function U_(t) {
	const e = t.length > 1024 ? `<truncated>${t.slice(-1024)}` : t,
		i = j7.exec(e);
	return i ? i.slice(1) : [];
}
function N7(...t) {
	let e = "",
		i = !1;
	for (let s = t.length - 1; s >= -1 && !i; s--) {
		const r = s >= 0 ? t[s] : "/";
		r && ((e = `${r}/${e}`), (i = r.charAt(0) === "/"));
	}
	return (
		(e = T_(
			e.split("/").filter((s) => !!s),
			!i,
		).join("/")),
		(i ? "/" : "") + e || "."
	);
}
function W7(t) {
	let e = 0;
	for (; e < t.length && t[e] === ""; e++);
	let i = t.length - 1;
	for (; i >= 0 && t[i] === ""; i--);
	return e > i ? [] : t.slice(e, i - e + 1);
}
function q_(t, e) {
	(t = N7(t).slice(1)), (e = N7(e).slice(1));
	const i = W7(t.split("/")),
		s = W7(e.split("/")),
		r = Math.min(i.length, s.length);
	let n = r;
	for (let a = 0; a < r; a++)
		if (i[a] !== s[a]) {
			n = a;
			break;
		}
	let o = [];
	for (let a = n; a < i.length; a++) o.push("..");
	return (o = o.concat(s.slice(n))), o.join("/");
}
function B_(t, e) {
	let i = U_(t)[2] || "";
	return (
		e && i.slice(e.length * -1) === e && (i = i.slice(0, i.length - e.length)),
		i
	);
}
var j7,
	z_ = m({
		"out-build/external/sentry/utils/path.js"() {
			"use strict";
			j7 =
				/^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
		},
	});
function H_(t) {
	return new Dd((e) => {
		e(t);
	});
}
function V_(t) {
	return new Dd((e, i) => {
		i(t);
	});
}
var T7,
	Dd,
	U7 = m({
		"out-build/external/sentry/utils/syncpromise.js"() {
			"use strict";
			cs(),
				(function (t) {
					(t[(t.PENDING = 0)] = "PENDING"),
						(t[(t.RESOLVED = 1)] = "RESOLVED"),
						(t[(t.REJECTED = 2)] = "REJECTED");
				})(T7 || (T7 = {})),
				(Dd = class f0 {
					constructor(e) {
						(this._resolve = (i) => {
							this._setResult(1, i);
						}),
							(this._reject = (i) => {
								this._setResult(2, i);
							}),
							(this._setResult = (i, s) => {
								if (this._state === 0) {
									if (m7(s)) {
										s.then(this._resolve, this._reject);
										return;
									}
									(this._state = i), (this._value = s), this._executeHandlers();
								}
							}),
							(this._executeHandlers = () => {
								if (this._state === 0) return;
								const i = this._handlers.slice();
								(this._handlers = []),
									i.forEach((s) => {
										s[0] ||
											(this._state === 1 && s[1](this._value),
											this._state === 2 && s[2](this._value),
											(s[0] = !0));
									});
							}),
							(this._state = 0),
							(this._handlers = []);
						try {
							e(this._resolve, this._reject);
						} catch (i) {
							this._reject(i);
						}
					}
					then(e, i) {
						return new f0((s, r) => {
							this._handlers.push([
								!1,
								(n) => {
									if (!e) s(n);
									else
										try {
											s(e(n));
										} catch (o) {
											r(o);
										}
								},
								(n) => {
									if (!i) r(n);
									else
										try {
											s(i(n));
										} catch (o) {
											r(o);
										}
								},
							]),
								this._executeHandlers();
						});
					}
					catch(e) {
						return this.then((i) => i, e);
					}
					finally(e) {
						return new f0((i, s) => {
							let r, n;
							return this.then(
								(o) => {
									(n = !1), (r = o), e && e();
								},
								(o) => {
									(n = !0), (r = o), e && e();
								},
							).then(() => {
								if (n) {
									s(r);
									return;
								}
								i(r);
							});
						});
					}
				});
		},
	});
function G_(t) {
	const e = [];
	function i() {
		return t === void 0 || e.length < t;
	}
	function s(o) {
		return e.splice(e.indexOf(o), 1)[0] || Promise.resolve(void 0);
	}
	function r(o) {
		if (!i())
			return V_(new lg("Not adding Promise because buffer limit was reached."));
		const a = o();
		return (
			e.indexOf(a) === -1 && e.push(a),
			a.then(() => s(a)).then(null, () => s(a).then(null, () => {})),
			a
		);
	}
	function n(o) {
		return new Dd((a, c) => {
			let l = e.length;
			if (!l) return a(!0);
			const u = setTimeout(() => {
				o && o > 0 && a(!1);
			}, o);
			e.forEach((d) => {
				H_(d).then(() => {
					--l || (clearTimeout(u), a(!0));
				}, c);
			});
		});
	}
	return { $: e, add: r, drain: n };
}
var q7 = m({
	"out-build/external/sentry/utils/promisebuffer.js"() {
		"use strict";
		ug(), U7();
	},
});
function J_(t) {
	const e = {};
	let i = 0;
	for (; i < t.length; ) {
		const s = t.indexOf("=", i);
		if (s === -1) break;
		let r = t.indexOf(";", i);
		if (r === -1) r = t.length;
		else if (r < s) {
			i = t.lastIndexOf(";", s - 1) + 1;
			continue;
		}
		const n = t.slice(i, s).trim();
		if (e[n] === void 0) {
			let o = t.slice(s + 1, r).trim();
			o.charCodeAt(0) === 34 && (o = o.slice(1, -1));
			try {
				e[n] = o.indexOf("%") !== -1 ? decodeURIComponent(o) : o;
			} catch {
				e[n] = o;
			}
		}
		i = r + 1;
	}
	return e;
}
var X_ = m({
	"out-build/external/sentry/utils/cookie.js"() {
		"use strict";
	},
});
function K_(t) {
	return t.split(/[?#]/, 1)[0];
}
var B7 = m({
	"out-build/external/sentry/utils/url.js"() {
		"use strict";
	},
});
function Y_(t) {
	return (
		wg
			.map((r) => {
				const n = t[r],
					o = Array.isArray(n) ? n.join(";") : n;
				return r === "Forwarded"
					? Q_(o)
					: o && o.split(",").map((a) => a.trim());
			})
			.reduce((r, n) => (n ? r.concat(n) : r), [])
			.find((r) => r !== null && Z_(r)) || null
	);
}
function Q_(t) {
	if (!t) return null;
	for (const e of t.split(";")) if (e.startsWith("for=")) return e.slice(4);
	return null;
}
function Z_(t) {
	return /(?:^(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}$)|(?:^(?:(?:[a-fA-F\d]{1,4}:){7}(?:[a-fA-F\d]{1,4}|:)|(?:[a-fA-F\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|:[a-fA-F\d]{1,4}|:)|(?:[a-fA-F\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,2}|:)|(?:[a-fA-F\d]{1,4}:){4}(?:(?::[a-fA-F\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,3}|:)|(?:[a-fA-F\d]{1,4}:){3}(?:(?::[a-fA-F\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,4}|:)|(?:[a-fA-F\d]{1,4}:){2}(?:(?::[a-fA-F\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,5}|:)|(?:[a-fA-F\d]{1,4}:){1}(?:(?::[a-fA-F\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,6}|:)|(?::(?:(?::[a-fA-F\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-fA-F\d]{1,4}){1,7}|:)))(?:%[0-9a-zA-Z]{1,})?$)/.test(
		t,
	);
}
var wg,
	eR = m({
		"out-build/external/sentry/utils/vendor/getIpAddress.js"() {
			"use strict";
			wg = [
				"X-Client-IP",
				"X-Forwarded-For",
				"Fly-Client-IP",
				"CF-Connecting-IP",
				"Fastly-Client-Ip",
				"True-Client-Ip",
				"X-Real-IP",
				"X-Cluster-Client-IP",
				"X-Forwarded",
				"Forwarded-For",
				"Forwarded",
				"X-Vercel-Forwarded-For",
			];
		},
	});
function z7(t, e = {}) {
	const i = t.method && t.method.toUpperCase();
	let s = "",
		r = "url";
	e.customRoute || t.route
		? ((s = e.customRoute || `${t.baseUrl || ""}${t.route && t.route.path}`),
			(r = "route"))
		: (t.originalUrl || t.url) && (s = K_(t.originalUrl || t.url || ""));
	let n = "";
	return (
		e.method && i && (n += i),
		e.method && e.path && (n += " "),
		e.path && s && (n += s),
		[n, r]
	);
}
function tR(t, e) {
	switch (e) {
		case "path":
			return z7(t, { path: !0 })[0];
		case "handler":
			return (
				(t.route &&
					t.route.stack &&
					t.route.stack[0] &&
					t.route.stack[0].name) ||
				"<anonymous>"
			);
		case "methodPath":
		default: {
			const i = t._reconstructedRoute ? t._reconstructedRoute : void 0;
			return z7(t, { path: !0, method: !0, customRoute: i })[0];
		}
	}
}
function iR(t, e) {
	const i = {};
	return (
		(Array.isArray(e) ? e : V7).forEach((r) => {
			t && r in t && (i[r] = t[r]);
		}),
		i
	);
}
function sR(t, e = {}) {
	const { include: i = vg } = e,
		s = {},
		r = t.headers || {},
		n = t.method,
		o = r.host || t.hostname || t.host || "<no host>",
		a =
			t.protocol === "https" || (t.socket && t.socket.encrypted)
				? "https"
				: "http",
		c = t.originalUrl || t.url || "",
		l = c.startsWith(a) ? c : `${a}://${o}${c}`;
	return (
		i.forEach((u) => {
			switch (u) {
				case "headers": {
					(s.headers = r),
						i.includes("cookies") || delete s.headers.cookie,
						i.includes("ip") ||
							wg.forEach((d) => {
								delete s.headers[d];
							});
					break;
				}
				case "method": {
					s.method = n;
					break;
				}
				case "url": {
					s.url = l;
					break;
				}
				case "cookies": {
					s.cookies = t.cookies || (r.cookie && J_(r.cookie)) || {};
					break;
				}
				case "query_string": {
					s.query_string = nR(t);
					break;
				}
				case "data": {
					if (n === "GET" || n === "HEAD") break;
					t.body !== void 0 &&
						(s.data = gd(t.body) ? t.body : JSON.stringify(F7(t.body)));
					break;
				}
				default:
					({}).hasOwnProperty.call(t, u) && (s[u] = t[u]);
			}
		}),
		s
	);
}
function rR(t, e, i) {
	const s = { ...H7, ...(i && i.include) };
	if (s.request) {
		const r = Array.isArray(s.request) ? [...s.request] : [...vg];
		s.ip && r.push("ip");
		const n = sR(e, { include: r });
		t.request = { ...t.request, ...n };
	}
	if (s.user) {
		const r = e.user && wd(e.user) ? iR(e.user, s.user) : {};
		Object.keys(r).length && (t.user = { ...t.user, ...r });
	}
	if (s.ip) {
		const r =
			(e.headers && Y_(e.headers)) ||
			e.ip ||
			(e.socket && e.socket.remoteAddress);
		r && (t.user = { ...t.user, ip_address: r });
	}
	return (
		s.transaction &&
			!t.transaction &&
			t.type === "transaction" &&
			(t.transaction = tR(e, s.transaction)),
		t
	);
}
function nR(t) {
	let e = t.originalUrl || t.url || "";
	if (e) {
		e.startsWith("/") && (e = `http://dogs.are.great${e}`);
		try {
			const i = t.query || new URL(e).search.slice(1);
			return i.length ? i : void 0;
		} catch {
			return;
		}
	}
}
var H7,
	vg,
	V7,
	oR = m({
		"out-build/external/sentry/utils/requestdata.js"() {
			"use strict";
			X_(),
				Cn(),
				cs(),
				Rr(),
				xd(),
				B7(),
				eR(),
				(H7 = { ip: !1, request: !0, transaction: !0, user: !0 }),
				(vg = ["cookies", "data", "headers", "method", "query_string", "url"]),
				(V7 = ["id", "username", "email"]);
		},
	});
function aR(t) {
	return t === "warn" ? "warning" : G7.includes(t) ? t : "log";
}
var G7,
	cR = m({
		"out-build/external/sentry/utils/severity.js"() {
			"use strict";
			G7 = ["fatal", "error", "warning", "log", "info", "debug"];
		},
	}),
	J7 = m({
		"out-build/external/sentry/utils/node-stack-trace.js"() {
			"use strict";
			Qc();
		},
	}),
	X7 = m({
		"out-build/external/sentry/utils/baggage.js"() {
			"use strict";
			Cn(), cs(), Rr();
		},
	}),
	lR,
	uR = m({
		"out-build/external/sentry/utils/tracing.js"() {
			"use strict";
			X7(),
				tl(),
				(lR = new RegExp(
					"^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$",
				));
		},
	});
function hR(t, e) {
	const [i, s] = t;
	return [i, [...s, e]];
}
function yg(t, e) {
	const i = t[1];
	for (const s of i) {
		const r = s[0].type;
		if (e(s, r)) return !0;
	}
	return !1;
}
var bg = m({
		"out-build/external/sentry/utils/envelope.js"() {
			"use strict";
			P7(), xd(), Or(), _i();
		},
	}),
	dR = m({
		"out-build/external/sentry/utils/clientreport.js"() {
			"use strict";
			bg(), mg();
		},
	}),
	fR,
	pR = m({
		"out-build/external/sentry/utils/ratelimit.js"() {
			"use strict";
			fR = 60 * 1e3;
		},
	}),
	mR = m({
		"out-build/external/sentry/utils/cache.js"() {
			"use strict";
		},
	});
function gR(t, e) {
	return t(e.stack || "", 1);
}
function wR(t, e) {
	const i = { type: e.name || e.constructor.name, value: e.message },
		s = gR(t, e);
	return s.length && (i.stacktrace = { frames: s }), i;
}
var vR = m({
		"out-build/external/sentry/utils/eventbuilder.js"() {
			"use strict";
			cs(), tl(), xd(), Or();
		},
	}),
	yR = m({
		"out-build/external/sentry/utils/anr.js"() {
			"use strict";
			J7(), Or(), Qc();
		},
	}),
	bR = m({
		"out-build/external/sentry/utils/lru.js"() {
			"use strict";
		},
	}),
	K7 = m({
		"out-build/external/sentry/utils/buildPolyfills/_nullishCoalesce.js"() {
			"use strict";
		},
	}),
	ER = m({
		"out-build/external/sentry/utils/buildPolyfills/_asyncNullishCoalesce.js"() {
			"use strict";
			K7();
		},
	}),
	Y7 = m({
		"out-build/external/sentry/utils/buildPolyfills/_asyncOptionalChain.js"() {
			"use strict";
		},
	}),
	SR = m({
		"out-build/external/sentry/utils/buildPolyfills/_asyncOptionalChainDelete.js"() {
			"use strict";
			Y7();
		},
	}),
	Q7 = m({
		"out-build/external/sentry/utils/buildPolyfills/_optionalChain.js"() {
			"use strict";
		},
	}),
	kR = m({
		"out-build/external/sentry/utils/buildPolyfills/_optionalChainDelete.js"() {
			"use strict";
			Q7();
		},
	}),
	xR = m({
		"out-build/external/sentry/utils/buildPolyfills/index.js"() {
			"use strict";
			ER(), Y7(), SR(), K7(), Q7(), kR();
		},
	});
function Z7() {
	return { traceId: Qo(), spanId: Qo().substring(16) };
}
var DR = m({
		"out-build/external/sentry/utils/propagationContext.js"() {
			"use strict";
			tl();
		},
	}),
	PR = m({
		"out-build/external/sentry/utils/vercelWaitUntil.js"() {
			"use strict";
			_i();
		},
	}),
	X = m({
		"out-build/external/sentry/utils/index.js"() {
			"use strict";
			h_(),
				d_(),
				f_(),
				k7(),
				P7(),
				ug(),
				_i(),
				L_(),
				cs(),
				M_(),
				Rr(),
				L7(),
				tl(),
				O7(),
				xd(),
				Or(),
				z_(),
				q7(),
				oR(),
				cR(),
				Qc(),
				J7(),
				yd(),
				C7(),
				U7(),
				mg(),
				uR(),
				R7(),
				bg(),
				dR(),
				pR(),
				X7(),
				B7(),
				mR(),
				vR(),
				yR(),
				bR(),
				xR(),
				DR(),
				PR(),
				b7();
		},
	}),
	ls,
	xt = m({
		"out-build/external/sentry/core/debug-build.js"() {
			"use strict";
			ls = !1;
		},
	});
function il() {
	return Eg(wt), wt;
}
function Eg(t) {
	const e = (t.__SENTRY__ = t.__SENTRY__ || {});
	return (e.version = e.version || Yo), (e[Yo] = e[Yo] || {});
}
var Rn = m({
	"out-build/external/sentry/core/carrier.js"() {
		"use strict";
		X();
	},
});
function $R(t, e = {}) {
	if (
		(e.user &&
			(!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address),
			!t.did &&
				!e.did &&
				(t.did = e.user.id || e.user.email || e.user.username)),
		(t.timestamp = e.timestamp || Sd()),
		e.abnormal_mechanism && (t.abnormal_mechanism = e.abnormal_mechanism),
		e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration),
		e.sid && (t.sid = e.sid.length === 32 ? e.sid : Qo()),
		e.init !== void 0 && (t.init = e.init),
		!t.did && e.did && (t.did = `${e.did}`),
		typeof e.started == "number" && (t.started = e.started),
		t.ignoreDuration)
	)
		t.duration = void 0;
	else if (typeof e.duration == "number") t.duration = e.duration;
	else {
		const i = t.timestamp - t.started;
		t.duration = i >= 0 ? i : 0;
	}
	e.release && (t.release = e.release),
		e.environment && (t.environment = e.environment),
		!t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress),
		!t.userAgent && e.userAgent && (t.userAgent = e.userAgent),
		typeof e.errors == "number" && (t.errors = e.errors),
		e.status && (t.status = e.status);
}
var Pd = m({
	"out-build/external/sentry/core/session.js"() {
		"use strict";
		X();
	},
});
function e9(t, e) {
	e ? hg(t, $d, e) : delete t[$d];
}
function Sg(t) {
	return t[$d];
}
var $d,
	sl = m({
		"out-build/external/sentry/core/utils/spanOnScope.js"() {
			"use strict";
			X(), ($d = "_sentrySpan");
		},
	}),
	t9,
	i9,
	On,
	rl = m({
		"out-build/external/sentry/core/scope.js"() {
			"use strict";
			X(),
				Pd(),
				sl(),
				(t9 = 100),
				(i9 = class K3 {
					constructor() {
						(this._notifyingListeners = !1),
							(this._scopeListeners = []),
							(this._eventProcessors = []),
							(this._breadcrumbs = []),
							(this._attachments = []),
							(this._user = {}),
							(this._tags = {}),
							(this._extra = {}),
							(this._contexts = {}),
							(this._sdkProcessingMetadata = {}),
							(this._propagationContext = Z7());
					}
					clone() {
						const e = new K3();
						return (
							(e._breadcrumbs = [...this._breadcrumbs]),
							(e._tags = { ...this._tags }),
							(e._extra = { ...this._extra }),
							(e._contexts = { ...this._contexts }),
							(e._user = this._user),
							(e._level = this._level),
							(e._session = this._session),
							(e._transactionName = this._transactionName),
							(e._fingerprint = this._fingerprint),
							(e._eventProcessors = [...this._eventProcessors]),
							(e._requestSession = this._requestSession),
							(e._attachments = [...this._attachments]),
							(e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
							(e._propagationContext = { ...this._propagationContext }),
							(e._client = this._client),
							(e._lastEventId = this._lastEventId),
							e9(e, Sg(this)),
							e
						);
					}
					setClient(e) {
						this._client = e;
					}
					setLastEventId(e) {
						this._lastEventId = e;
					}
					getClient() {
						return this._client;
					}
					lastEventId() {
						return this._lastEventId;
					}
					addScopeListener(e) {
						this._scopeListeners.push(e);
					}
					addEventProcessor(e) {
						return this._eventProcessors.push(e), this;
					}
					setUser(e) {
						return (
							(this._user = e || {
								email: void 0,
								id: void 0,
								ip_address: void 0,
								username: void 0,
							}),
							this._session && $R(this._session, { user: e }),
							this._notifyScopeListeners(),
							this
						);
					}
					getUser() {
						return this._user;
					}
					getRequestSession() {
						return this._requestSession;
					}
					setRequestSession(e) {
						return (this._requestSession = e), this;
					}
					setTags(e) {
						return (
							(this._tags = { ...this._tags, ...e }),
							this._notifyScopeListeners(),
							this
						);
					}
					setTag(e, i) {
						return (
							(this._tags = { ...this._tags, [e]: i }),
							this._notifyScopeListeners(),
							this
						);
					}
					setExtras(e) {
						return (
							(this._extra = { ...this._extra, ...e }),
							this._notifyScopeListeners(),
							this
						);
					}
					setExtra(e, i) {
						return (
							(this._extra = { ...this._extra, [e]: i }),
							this._notifyScopeListeners(),
							this
						);
					}
					setFingerprint(e) {
						return (this._fingerprint = e), this._notifyScopeListeners(), this;
					}
					setLevel(e) {
						return (this._level = e), this._notifyScopeListeners(), this;
					}
					setTransactionName(e) {
						return (
							(this._transactionName = e), this._notifyScopeListeners(), this
						);
					}
					setContext(e, i) {
						return (
							i === null ? delete this._contexts[e] : (this._contexts[e] = i),
							this._notifyScopeListeners(),
							this
						);
					}
					setSession(e) {
						return (
							e ? (this._session = e) : delete this._session,
							this._notifyScopeListeners(),
							this
						);
					}
					getSession() {
						return this._session;
					}
					update(e) {
						if (!e) return this;
						const i = typeof e == "function" ? e(this) : e,
							[s, r] =
								i instanceof On
									? [i.getScopeData(), i.getRequestSession()]
									: wd(i)
										? [e, e.requestSession]
										: [],
							{
								tags: n,
								extra: o,
								user: a,
								contexts: c,
								level: l,
								fingerprint: u = [],
								propagationContext: d,
							} = s || {};
						return (
							(this._tags = { ...this._tags, ...n }),
							(this._extra = { ...this._extra, ...o }),
							(this._contexts = { ...this._contexts, ...c }),
							a && Object.keys(a).length && (this._user = a),
							l && (this._level = l),
							u.length && (this._fingerprint = u),
							d && (this._propagationContext = d),
							r && (this._requestSession = r),
							this
						);
					}
					clear() {
						return (
							(this._breadcrumbs = []),
							(this._tags = {}),
							(this._extra = {}),
							(this._user = {}),
							(this._contexts = {}),
							(this._level = void 0),
							(this._transactionName = void 0),
							(this._fingerprint = void 0),
							(this._requestSession = void 0),
							(this._session = void 0),
							e9(this, void 0),
							(this._attachments = []),
							(this._propagationContext = Z7()),
							this._notifyScopeListeners(),
							this
						);
					}
					addBreadcrumb(e, i) {
						const s = typeof i == "number" ? i : t9;
						if (s <= 0) return this;
						const r = { timestamp: _7(), ...e },
							n = this._breadcrumbs;
						return (
							n.push(r),
							(this._breadcrumbs = n.length > s ? n.slice(-s) : n),
							this._notifyScopeListeners(),
							this
						);
					}
					getLastBreadcrumb() {
						return this._breadcrumbs[this._breadcrumbs.length - 1];
					}
					clearBreadcrumbs() {
						return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
					}
					addAttachment(e) {
						return this._attachments.push(e), this;
					}
					clearAttachments() {
						return (this._attachments = []), this;
					}
					getScopeData() {
						return {
							breadcrumbs: this._breadcrumbs,
							attachments: this._attachments,
							contexts: this._contexts,
							tags: this._tags,
							extra: this._extra,
							user: this._user,
							level: this._level,
							fingerprint: this._fingerprint || [],
							eventProcessors: this._eventProcessors,
							propagationContext: this._propagationContext,
							sdkProcessingMetadata: this._sdkProcessingMetadata,
							transactionName: this._transactionName,
							span: Sg(this),
						};
					}
					setSDKProcessingMetadata(e) {
						return (
							(this._sdkProcessingMetadata = {
								...this._sdkProcessingMetadata,
								...e,
							}),
							this
						);
					}
					setPropagationContext(e) {
						return (this._propagationContext = e), this;
					}
					getPropagationContext() {
						return this._propagationContext;
					}
					captureException(e, i) {
						const s = i && i.event_id ? i.event_id : Qo();
						if (!this._client)
							return (
								ri.warn(
									"No client configured on scope - will not capture exception!",
								),
								s
							);
						const r = new Error("Sentry syntheticException");
						return (
							this._client.captureException(
								e,
								{
									originalException: e,
									syntheticException: r,
									...i,
									event_id: s,
								},
								this,
							),
							s
						);
					}
					captureMessage(e, i, s) {
						const r = s && s.event_id ? s.event_id : Qo();
						if (!this._client)
							return (
								ri.warn(
									"No client configured on scope - will not capture message!",
								),
								r
							);
						const n = new Error(e);
						return (
							this._client.captureMessage(
								e,
								i,
								{
									originalException: e,
									syntheticException: n,
									...s,
									event_id: r,
								},
								this,
							),
							r
						);
					}
					captureEvent(e, i) {
						const s = i && i.event_id ? i.event_id : Qo();
						return this._client
							? (this._client.captureEvent(e, { ...i, event_id: s }, this), s)
							: (ri.warn(
									"No client configured on scope - will not capture event!",
								),
								s);
					}
					_notifyScopeListeners() {
						this._notifyingListeners ||
							((this._notifyingListeners = !0),
							this._scopeListeners.forEach((e) => {
								e(this);
							}),
							(this._notifyingListeners = !1));
					}
				}),
				(On = i9);
		},
	});
function AR() {
	return cg("defaultCurrentScope", () => new On());
}
function IR() {
	return cg("defaultIsolationScope", () => new On());
}
var s9 = m({
	"out-build/external/sentry/core/defaultScopes.js"() {
		"use strict";
		X(), rl();
	},
});
function Zo() {
	const t = il(),
		e = Eg(t);
	return (e.stack = e.stack || new n9(AR(), IR()));
}
function CR(t) {
	return Zo().withScope(t);
}
function _R(t, e) {
	const i = Zo();
	return i.withScope(() => ((i.getStackTop().scope = t), e(t)));
}
function r9(t) {
	return Zo().withScope(() => t(Zo().getIsolationScope()));
}
function RR() {
	return {
		withIsolationScope: r9,
		withScope: CR,
		withSetScope: _R,
		withSetIsolationScope: (t, e) => r9(e),
		getCurrentScope: () => Zo().getScope(),
		getIsolationScope: () => Zo().getIsolationScope(),
	};
}
var n9,
	OR = m({
		"out-build/external/sentry/core/asyncContext/stackStrategy.js"() {
			"use strict";
			X(),
				s9(),
				rl(),
				Rn(),
				(n9 = class {
					constructor(t, e) {
						let i;
						t ? (i = t) : (i = new On());
						let s;
						e ? (s = e) : (s = new On()),
							(this._stack = [{ scope: i }]),
							(this._isolationScope = s);
					}
					withScope(t) {
						const e = this._pushScope();
						let i;
						try {
							i = t(e);
						} catch (s) {
							throw (this._popScope(), s);
						}
						return m7(i)
							? i.then(
									(s) => (this._popScope(), s),
									(s) => {
										throw (this._popScope(), s);
									},
								)
							: (this._popScope(), i);
					}
					getClient() {
						return this.getStackTop().client;
					}
					getScope() {
						return this.getStackTop().scope;
					}
					getIsolationScope() {
						return this._isolationScope;
					}
					getStackTop() {
						return this._stack[this._stack.length - 1];
					}
					_pushScope() {
						const t = this.getScope().clone();
						return this._stack.push({ client: this.getClient(), scope: t }), t;
					}
					_popScope() {
						return this._stack.length <= 1 ? !1 : !!this._stack.pop();
					}
				});
		},
	});
function Ad(t) {
	const e = Eg(t);
	return e.acs ? e.acs : RR();
}
var nl = m({
	"out-build/external/sentry/core/asyncContext/index.js"() {
		"use strict";
		Rn(), OR();
	},
});
function ea() {
	const t = il();
	return Ad(t).getCurrentScope();
}
function Lr() {
	const t = il();
	return Ad(t).getIsolationScope();
}
function LR(...t) {
	const e = il(),
		i = Ad(e);
	if (t.length === 2) {
		const [s, r] = t;
		return s ? i.withSetScope(s, r) : i.withScope(r);
	}
	return i.withScope(t[0]);
}
function ol() {
	return ea().getClient();
}
var it = m({
		"out-build/external/sentry/core/currentScopes.js"() {
			"use strict";
			X(), nl(), Rn(), rl();
		},
	}),
	kg = m({
		"out-build/external/sentry/core/metrics/metric-summary.js"() {
			"use strict";
			X();
		},
	}),
	Ls = m({
		"out-build/external/sentry/core/semanticAttributes.js"() {
			"use strict";
		},
	}),
	o9,
	ta = m({
		"out-build/external/sentry/core/tracing/spanstatus.js"() {
			"use strict";
			o9 = 2;
		},
	});
function MR(t) {
	return t[a9] || t;
}
function FR() {
	const t = il(),
		e = Ad(t);
	return e.getActiveSpan ? e.getActiveSpan() : Sg(ea());
}
var a9,
	Gt = m({
		"out-build/external/sentry/core/utils/spanUtils.js"() {
			"use strict";
			X(), nl(), Rn(), it(), kg(), Ls(), ta(), sl(), (a9 = "_sentryRootSpan");
		},
	});
function NR() {
	const t = FR(),
		e = t && MR(t);
	if (e) {
		const i = "internal_error";
		ls && ri.log(`[Tracing] Root span: ${i} -> Global error occured`),
			e.setStatus({ code: o9, message: i });
	}
}
var c9 = m({
		"out-build/external/sentry/core/tracing/errors.js"() {
			"use strict";
			X(), xt(), Gt(), ta(), (NR.tag = "sentry_tracingErrorCallback");
		},
	}),
	xg = m({
		"out-build/external/sentry/core/tracing/utils.js"() {
			"use strict";
			X(), X();
		},
	}),
	WR = m({
		"out-build/external/sentry/core/tracing/hubextensions.js"() {
			"use strict";
			c9();
		},
	}),
	ia = m({
		"out-build/external/sentry/core/utils/hasTracingEnabled.js"() {
			"use strict";
			it();
		},
	}),
	Id = m({
		"out-build/external/sentry/core/tracing/sentryNonRecordingSpan.js"() {
			"use strict";
			X(), Gt();
		},
	}),
	Dg = m({
		"out-build/external/sentry/core/utils/handleCallbackErrors.js"() {
			"use strict";
			X();
		},
	}),
	Cd = m({
		"out-build/external/sentry/core/constants.js"() {
			"use strict";
		},
	}),
	sa = m({
		"out-build/external/sentry/core/tracing/dynamicSamplingContext.js"() {
			"use strict";
			X(), Cd(), it(), Ls(), ia(), Gt();
		},
	}),
	Pg = m({
		"out-build/external/sentry/core/tracing/logSpans.js"() {
			"use strict";
			X(), xt(), Gt();
		},
	}),
	$g = m({
		"out-build/external/sentry/core/utils/parseSampleRate.js"() {
			"use strict";
			X(), xt();
		},
	}),
	l9 = m({
		"out-build/external/sentry/core/tracing/sampling.js"() {
			"use strict";
			X(), xt(), ia(), $g();
		},
	}),
	Ag = m({
		"out-build/external/sentry/core/envelope.js"() {
			"use strict";
			X(), X(), sa(), Gt();
		},
	}),
	u9 = m({
		"out-build/external/sentry/core/tracing/measurement.js"() {
			"use strict";
			Ls(), Gt();
		},
	}),
	h9 = m({
		"out-build/external/sentry/core/tracing/sentrySpan.js"() {
			"use strict";
			X(), it(), xt(), Ag(), kg(), Ls(), Gt(), sa(), Pg(), u9(), xg();
		},
	}),
	d9 = m({
		"out-build/external/sentry/core/tracing/trace.js"() {
			"use strict";
			X(),
				Rn(),
				it(),
				nl(),
				xt(),
				Ls(),
				Dg(),
				ia(),
				sl(),
				Gt(),
				sa(),
				Pg(),
				l9(),
				Id(),
				h9(),
				ta(),
				xg();
		},
	}),
	jR = m({
		"out-build/external/sentry/core/tracing/idleSpan.js"() {
			"use strict";
			X(), it(), xt(), Ls(), ia(), sl(), Gt(), Id(), ta(), d9();
		},
	}),
	ra = m({
		"out-build/external/sentry/core/tracing/index.js"() {
			"use strict";
			c9(),
				xg(),
				WR(),
				jR(),
				h9(),
				Id(),
				ta(),
				ta(),
				d9(),
				sa(),
				u9(),
				l9(),
				Pg();
		},
	}),
	f9 = m({
		"out-build/external/sentry/core/eventProcessors.js"() {
			"use strict";
			X(), xt();
		},
	}),
	p9 = m({
		"out-build/external/sentry/core/utils/applyScopeDataToEvent.js"() {
			"use strict";
			X(), sa(), Gt();
		},
	});
function TR(t) {
	if (t)
		return UR(t) ? { captureContext: t } : qR(t) ? { captureContext: t } : t;
}
function UR(t) {
	return t instanceof On || typeof t == "function";
}
function qR(t) {
	return Object.keys(t).some((e) => m9.includes(e));
}
var m9,
	Ig = m({
		"out-build/external/sentry/core/utils/prepareEvent.js"() {
			"use strict";
			X(),
				Cd(),
				it(),
				f9(),
				rl(),
				p9(),
				(m9 = [
					"user",
					"level",
					"extra",
					"contexts",
					"tags",
					"fingerprint",
					"requestSession",
					"propagationContext",
				]);
		},
	});
function BR(t, e) {
	return ea().captureException(t, TR(e));
}
function g9(t, e) {
	const i = typeof e == "string" ? e : void 0,
		s = typeof e != "string" ? { captureContext: e } : void 0;
	return ea().captureMessage(t, i, s);
}
var al = m({
		"out-build/external/sentry/core/exports.js"() {
			"use strict";
			X(), Cd(), it(), xt(), Pd(), Ig();
		},
	}),
	w9 = m({
		"out-build/external/sentry/core/sessionflusher.js"() {
			"use strict";
			X(), it();
		},
	});
function zR(t) {
	const e = t.protocol ? `${t.protocol}:` : "",
		i = t.port ? `:${t.port}` : "";
	return `${e}//${t.host}${i}${t.path ? `/${t.path}` : ""}/api/`;
}
function HR(t) {
	return `${zR(t)}${t.projectId}/envelope/`;
}
function VR(t, e) {
	return b_({
		sentry_key: t.publicKey,
		sentry_version: v9,
		...(e && { sentry_client: `${e.name}/${e.version}` }),
	});
}
function GR(t, e, i) {
	return e || `${HR(t)}?${VR(t, i)}`;
}
var v9,
	Cg = m({
		"out-build/external/sentry/core/api.js"() {
			"use strict";
			X(), (v9 = "7");
		},
	});
function aj(t) {
	return t;
}
var ni = m({
		"out-build/external/sentry/core/integration.js"() {
			"use strict";
			X(), it(), xt();
		},
	}),
	y9 = m({
		"out-build/external/sentry/core/baseclient.js"() {
			"use strict";
			X(), Cg(), it(), xt(), Ag(), ni(), ni(), Pd(), sa(), $g(), Ig();
		},
	}),
	b9 = m({
		"out-build/external/sentry/core/checkin.js"() {
			"use strict";
			X();
		},
	}),
	JR = m({
		"out-build/external/sentry/core/server-runtime-client.js"() {
			"use strict";
			X(), y9(), b9(), it(), xt(), w9(), ra(), sl(), Gt();
		},
	}),
	XR = m({
		"out-build/external/sentry/core/sdk.js"() {
			"use strict";
			X(), it(), xt();
		},
	}),
	KR = m({
		"out-build/external/sentry/core/transports/base.js"() {
			"use strict";
			X(), xt();
		},
	}),
	YR = m({
		"out-build/external/sentry/core/transports/offline.js"() {
			"use strict";
			X(), xt();
		},
	}),
	QR = m({
		"out-build/external/sentry/core/transports/multiplexed.js"() {
			"use strict";
			X(), Cg();
		},
	}),
	ZR = m({
		"out-build/external/sentry/core/utils/isSentryRequestUrl.js"() {
			"use strict";
		},
	}),
	eO = m({
		"out-build/external/sentry/core/utils/parameterize.js"() {
			"use strict";
		},
	}),
	tO = m({
		"out-build/external/sentry/core/utils/sdkMetadata.js"() {
			"use strict";
			X();
		},
	}),
	E9 = m({
		"out-build/external/sentry/core/utils/traceData.js"() {
			"use strict";
			X(), nl(), Rn(), it(), al(), ra(), Gt();
		},
	}),
	iO = m({
		"out-build/external/sentry/core/utils/meta.js"() {
			"use strict";
			E9();
		},
	}),
	S9 = m({
		"out-build/external/sentry/core/breadcrumbs.js"() {
			"use strict";
			X(), it();
		},
	}),
	k9,
	x9,
	_g,
	D9,
	sO,
	rO = m({
		"out-build/external/sentry/core/integrations/functiontostring.js"() {
			"use strict";
			X(),
				it(),
				ni(),
				(x9 = "FunctionToString"),
				(_g = new WeakMap()),
				(D9 = () => ({
					name: x9,
					setupOnce() {
						k9 = Function.prototype.toString;
						try {
							Function.prototype.toString = function (...t) {
								const e = y_(this),
									i = _g.has(ol()) && e !== void 0 ? e : this;
								return k9.apply(i, t);
							};
						} catch {}
					},
					setup(t) {
						_g.set(t, !0);
					},
				})),
				(sO = D9);
		},
	});
function nO(t = {}, e = {}) {
	return {
		allowUrls: [...(t.allowUrls || []), ...(e.allowUrls || [])],
		denyUrls: [...(t.denyUrls || []), ...(e.denyUrls || [])],
		ignoreErrors: [
			...(t.ignoreErrors || []),
			...(e.ignoreErrors || []),
			...(t.disableErrorDefaults ? [] : P9),
		],
		ignoreTransactions: [
			...(t.ignoreTransactions || []),
			...(e.ignoreTransactions || []),
		],
		ignoreInternal: t.ignoreInternal !== void 0 ? t.ignoreInternal : !0,
	};
}
function oO(t, e) {
	return e.ignoreInternal && dO(t)
		? (ls &&
				ri.warn(`Event dropped due to being internal Sentry Error.
Event: ${_n(t)}`),
			!0)
		: aO(t, e.ignoreErrors)
			? (ls &&
					ri.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${_n(t)}`),
				!0)
			: pO(t)
				? (ls &&
						ri.warn(`Event dropped due to not having an error message, error type or stacktrace.
Event: ${_n(t)}`),
					!0)
				: cO(t, e.ignoreTransactions)
					? (ls &&
							ri.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${_n(t)}`),
						!0)
					: lO(t, e.denyUrls)
						? (ls &&
								ri.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${_n(t)}.
Url: ${_d(t)}`),
							!0)
						: uO(t, e.allowUrls)
							? !1
							: (ls &&
									ri.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${_n(t)}.
Url: ${_d(t)}`),
								!0);
}
function aO(t, e) {
	return t.type || !e || !e.length ? !1 : hO(t).some((i) => vd(i, e));
}
function cO(t, e) {
	if (t.type !== "transaction" || !e || !e.length) return !1;
	const i = t.transaction;
	return i ? vd(i, e) : !1;
}
function lO(t, e) {
	if (!e || !e.length) return !1;
	const i = _d(t);
	return i ? vd(i, e) : !1;
}
function uO(t, e) {
	if (!e || !e.length) return !0;
	const i = _d(t);
	return i ? vd(i, e) : !0;
}
function hO(t) {
	const e = [];
	t.message && e.push(t.message);
	let i;
	try {
		i = t.exception.values[t.exception.values.length - 1];
	} catch {}
	return (
		i &&
			i.value &&
			(e.push(i.value), i.type && e.push(`${i.type}: ${i.value}`)),
		e
	);
}
function dO(t) {
	try {
		return t.exception.values[0].type === "SentryError";
	} catch {}
	return !1;
}
function fO(t = []) {
	for (let e = t.length - 1; e >= 0; e--) {
		const i = t[e];
		if (i && i.filename !== "<anonymous>" && i.filename !== "[native code]")
			return i.filename || null;
	}
	return null;
}
function _d(t) {
	try {
		let e;
		try {
			e = t.exception.values[0].stacktrace.frames;
		} catch {}
		return e ? fO(e) : null;
	} catch {
		return ls && ri.error(`Cannot extract url for event ${_n(t)}`), null;
	}
}
function pO(t) {
	return t.type ||
		!t.exception ||
		!t.exception.values ||
		t.exception.values.length === 0
		? !1
		: !t.message &&
				!t.exception.values.some(
					(e) => e.stacktrace || (e.type && e.type !== "Error") || e.value,
				);
}
var P9,
	$9,
	A9,
	mO,
	gO = m({
		"out-build/external/sentry/core/integrations/inboundfilters.js"() {
			"use strict";
			X(),
				xt(),
				ni(),
				(P9 = [
					/^Script error\.?$/,
					/^Javascript error: Script error\.? on line 0$/,
					/^ResizeObserver loop completed with undelivered notifications.$/,
					/^Cannot redefine property: googletag$/,
					"undefined is not an object (evaluating 'a.L')",
					`can't redefine non-configurable property "solana"`,
					"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)",
					"Can't find variable: _AutofillCallbackHandler",
				]),
				($9 = "InboundFilters"),
				(A9 = (t = {}) => ({
					name: $9,
					processEvent(e, i, s) {
						const r = s.getOptions(),
							n = nO(t, r);
						return oO(e, n) ? null : e;
					},
				})),
				(mO = A9);
		},
	}),
	I9,
	C9,
	_9,
	R9,
	wO,
	vO = m({
		"out-build/external/sentry/core/integrations/linkederrors.js"() {
			"use strict";
			X(),
				ni(),
				(I9 = "cause"),
				(C9 = 5),
				(_9 = "LinkedErrors"),
				(R9 = (t = {}) => {
					const e = t.limit || C9,
						i = t.key || I9;
					return {
						name: _9,
						preprocessEvent(s, r, n) {
							const o = n.getOptions();
							l_(wR, o.stackParser, o.maxValueLength, i, e, s, r);
						},
					};
				}),
				(wO = R9);
		},
	});
function yO(t) {
	if (wt._sentryModuleMetadata)
		for (const e of Object.keys(wt._sentryModuleMetadata)) {
			const i = wt._sentryModuleMetadata[e];
			if (Og.has(e)) continue;
			Og.add(e);
			const s = t(e);
			for (const r of s.reverse())
				if (r.filename) {
					Rg.set(r.filename, i);
					break;
				}
		}
}
function bO(t, e) {
	return yO(t), Rg.get(e);
}
function O9(t, e) {
	try {
		e.exception.values.forEach((i) => {
			if (i.stacktrace)
				for (const s of i.stacktrace.frames || []) {
					if (!s.filename || s.module_metadata) continue;
					const r = bO(t, s.filename);
					r && (s.module_metadata = r);
				}
		});
	} catch {}
}
function L9(t) {
	try {
		t.exception.values.forEach((e) => {
			if (e.stacktrace)
				for (const i of e.stacktrace.frames || []) delete i.module_metadata;
		});
	} catch {}
}
var Rg,
	Og,
	M9 = m({
		"out-build/external/sentry/core/metadata.js"() {
			"use strict";
			X(), (Rg = new Map()), (Og = new Set());
		},
	}),
	EO,
	SO = m({
		"out-build/external/sentry/core/integrations/metadata.js"() {
			"use strict";
			X(),
				ni(),
				M9(),
				(EO = () => ({
					name: "ModuleMetadata",
					setup(t) {
						t.on("beforeEnvelope", (e) => {
							yg(e, (i, s) => {
								if (s === "event") {
									const r = Array.isArray(i) ? i[1] : void 0;
									r && (L9(r), (i[1] = r));
								}
							});
						}),
							t.on("applyFrameMetadata", (e) => {
								if (e.type) return;
								const i = t.getOptions().stackParser;
								O9(i, e);
							});
					},
				}));
		},
	});
function kO(t) {
	const {
			transactionNamingScheme: e,
			include: { ip: i, user: s, ...r },
		} = t,
		n = ["method"];
	for (const [a, c] of Object.entries(r)) c && n.push(a);
	let o;
	if (s === void 0) o = !0;
	else if (typeof s == "boolean") o = s;
	else {
		const a = [];
		for (const [c, l] of Object.entries(s)) l && a.push(c);
		o = a;
	}
	return {
		include: {
			ip: i,
			user: o,
			request: n.length !== 0 ? n : void 0,
			transaction: e,
		},
	};
}
var Rd,
	F9,
	N9,
	xO,
	DO = m({
		"out-build/external/sentry/core/integrations/requestdata.js"() {
			"use strict";
			X(),
				ni(),
				(Rd = {
					include: {
						cookies: !0,
						data: !0,
						headers: !0,
						ip: !1,
						query_string: !0,
						url: !0,
						user: { id: !0, username: !0, email: !0 },
					},
					transactionNamingScheme: "methodPath",
				}),
				(F9 = "RequestData"),
				(N9 = (t = {}) => {
					const e = {
						...Rd,
						...t,
						include: {
							...Rd.include,
							...t.include,
							user:
								t.include && typeof t.include.user == "boolean"
									? t.include.user
									: { ...Rd.include.user, ...(t.include || {}).user },
						},
					};
					return {
						name: F9,
						processEvent(i) {
							const { sdkProcessingMetadata: s = {} } = i,
								r = s.request;
							if (!r) return i;
							const n = kO(e);
							return rR(i, r, n);
						},
					};
				}),
				(xO = N9);
		},
	});
function PO(t, e) {
	const i = { level: aR(e), extra: { arguments: t } };
	LR((s) => {
		if (
			(s.addEventProcessor(
				(o) => (
					(o.logger = "console"), N_(o, { handled: !1, type: "console" }), o
				),
			),
			e === "assert")
		) {
			if (!t[0]) {
				const o = `Assertion failed: ${w7(t.slice(1), " ") || "console.assert"}`;
				s.setExtra("arguments", t.slice(1)), g9(o, i);
			}
			return;
		}
		const r = t.find((o) => o instanceof Error);
		if (r) {
			BR(r, i);
			return;
		}
		const n = w7(t, " ");
		g9(n, i);
	});
}
var W9,
	j9,
	$O,
	AO = m({
		"out-build/external/sentry/core/integrations/captureconsole.js"() {
			"use strict";
			X(),
				it(),
				al(),
				ni(),
				(W9 = "CaptureConsole"),
				(j9 = (t = {}) => {
					const e = t.levels || Kc;
					return {
						name: W9,
						setup(i) {
							"console" in wt &&
								D_(({ args: s, level: r }) => {
									ol() !== i || !e.includes(r) || PO(s, r);
								});
						},
					};
				}),
				($O = j9);
		},
	}),
	T9,
	U9,
	IO,
	CO = m({
		"out-build/external/sentry/core/integrations/debug.js"() {
			"use strict";
			X(),
				ni(),
				(T9 = "Debug"),
				(U9 = (t = {}) => {
					const e = { debugger: !1, stringify: !1, ...t };
					return {
						name: T9,
						setup(i) {
							i.on("beforeSendEvent", (s, r) => {
								if (e.debugger) debugger;
								x7(() => {
									e.stringify
										? (console.log(JSON.stringify(s, null, 2)),
											r &&
												Object.keys(r).length &&
												console.log(JSON.stringify(r, null, 2)))
										: (console.log(s),
											r && Object.keys(r).length && console.log(r));
								});
							});
						},
					};
				}),
				(IO = U9);
		},
	});
function _O(t, e) {
	return e ? !!(RO(t, e) || OO(t, e)) : !1;
}
function RO(t, e) {
	const i = t.message,
		s = e.message;
	return !(
		(!i && !s) ||
		(i && !s) ||
		(!i && s) ||
		i !== s ||
		!B9(t, e) ||
		!q9(t, e)
	);
}
function OO(t, e) {
	const i = z9(e),
		s = z9(t);
	return !(
		!i ||
		!s ||
		i.type !== s.type ||
		i.value !== s.value ||
		!B9(t, e) ||
		!q9(t, e)
	);
}
function q9(t, e) {
	let i = dg(t),
		s = dg(e);
	if (!i && !s) return !0;
	if ((i && !s) || (!i && s) || ((i = i), (s = s), s.length !== i.length))
		return !1;
	for (let r = 0; r < s.length; r++) {
		const n = s[r],
			o = i[r];
		if (
			n.filename !== o.filename ||
			n.lineno !== o.lineno ||
			n.colno !== o.colno ||
			n.function !== o.function
		)
			return !1;
	}
	return !0;
}
function B9(t, e) {
	let i = t.fingerprint,
		s = e.fingerprint;
	if (!i && !s) return !0;
	if ((i && !s) || (!i && s)) return !1;
	(i = i), (s = s);
	try {
		return i.join("") === s.join("");
	} catch {
		return !1;
	}
}
function z9(t) {
	return t.exception && t.exception.values && t.exception.values[0];
}
var H9,
	V9,
	LO,
	MO = m({
		"out-build/external/sentry/core/integrations/dedupe.js"() {
			"use strict";
			X(),
				ni(),
				xt(),
				(H9 = "Dedupe"),
				(V9 = () => {
					let t;
					return {
						name: H9,
						processEvent(e) {
							if (e.type) return e;
							try {
								if (_O(e, t))
									return (
										ls &&
											ri.warn(
												"Event dropped due to being a duplicate of previously captured event.",
											),
										null
									);
							} catch {}
							return (t = e);
						},
					};
				}),
				(LO = V9);
		},
	});
function FO(t, e = {}, i, s, r) {
	if (!e.originalException || !Ko(e.originalException)) return t;
	const n = e.originalException.name || e.originalException.constructor.name,
		o = NO(e.originalException, s, r);
	if (o) {
		const a = { ...t.contexts },
			c = F7(o, i);
		return (
			wd(c) && (hg(c, "__sentry_skip_normalization__", !0), (a[n] = c)),
			{ ...t, contexts: a }
		);
	}
	return t;
}
function NO(t, e, i) {
	try {
		const s = [
				"name",
				"message",
				"stack",
				"line",
				"column",
				"fileName",
				"lineNumber",
				"columnNumber",
				"toJSON",
			],
			r = {};
		for (const n of Object.keys(t)) {
			if (s.indexOf(n) !== -1) continue;
			const o = t[n];
			r[n] = Ko(o) || typeof o == "string" ? og(`${o}`, i) : o;
		}
		if (
			(e &&
				t.cause !== void 0 &&
				(r.cause = Ko(t.cause) ? t.cause.toString() : t.cause),
			typeof t.toJSON == "function")
		) {
			const n = t.toJSON();
			for (const o of Object.keys(n)) {
				const a = n[o];
				r[o] = Ko(a) ? a.toString() : a;
			}
		}
		return r;
	} catch (s) {
		ls && ri.error("Unable to extract extra data from the Error object:", s);
	}
	return null;
}
var G9,
	J9,
	WO,
	jO = m({
		"out-build/external/sentry/core/integrations/extraerrordata.js"() {
			"use strict";
			X(),
				ni(),
				xt(),
				(G9 = "ExtraErrorData"),
				(J9 = (t = {}) => {
					const { depth: e = 3, captureErrorCause: i = !0 } = t;
					return {
						name: G9,
						processEvent(s, r, n) {
							const { maxValueLength: o = 250 } = n.getOptions();
							return FO(s, r, e, i, o);
						},
					};
				}),
				(WO = J9);
		},
	});
function TO({ isBrowser: t, root: e, prefix: i }) {
	return (s) => {
		if (!s.filename) return s;
		const r =
				/^[a-zA-Z]:\\/.test(s.filename) ||
				(s.filename.includes("\\") && !s.filename.includes("/")),
			n = /^\//.test(s.filename);
		if (t) {
			if (e) {
				const o = s.filename;
				o.indexOf(e) === 0 && (s.filename = o.replace(e, i));
			}
		} else if (r || n) {
			const o = r
					? s.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/")
					: s.filename,
				a = e ? q_(e, o) : B_(o);
			s.filename = `${i}${a}`;
		}
		return s;
	};
}
var X9,
	UO,
	qO = m({
		"out-build/external/sentry/core/integrations/rewriteframes.js"() {
			"use strict";
			X(),
				ni(),
				(X9 = "RewriteFrames"),
				(UO = (t = {}) => {
					const e = t.root,
						i = t.prefix || "app:///",
						s = "window" in wt && wt.window !== void 0,
						r = t.iteratee || TO({ isBrowser: s, root: e, prefix: i });
					function n(a) {
						try {
							return {
								...a,
								exception: {
									...a.exception,
									values: a.exception.values.map((c) => ({
										...c,
										...(c.stacktrace && { stacktrace: o(c.stacktrace) }),
									})),
								},
							};
						} catch {
							return a;
						}
					}
					function o(a) {
						return { ...a, frames: a && a.frames && a.frames.map((c) => r(c)) };
					}
					return {
						name: X9,
						processEvent(a) {
							let c = a;
							return (
								a.exception && Array.isArray(a.exception.values) && (c = n(c)),
								c
							);
						},
					};
				});
		},
	}),
	K9,
	Y9,
	BO,
	zO = m({
		"out-build/external/sentry/core/integrations/sessiontiming.js"() {
			"use strict";
			X(),
				ni(),
				(K9 = "SessionTiming"),
				(Y9 = () => {
					const t = Sd() * 1e3;
					return {
						name: K9,
						processEvent(e) {
							const i = Sd() * 1e3;
							return {
								...e,
								extra: {
									...e.extra,
									"session:start": t,
									"session:duration": i - t,
									"session:end": i,
								},
							};
						},
					};
				}),
				(BO = Y9);
		},
	});
function HO(t) {
	return Ko(t) && t.name === "ZodError" && Array.isArray(t.errors);
}
function VO(t) {
	return {
		...t,
		path: "path" in t && Array.isArray(t.path) ? t.path.join(".") : void 0,
		keys: "keys" in t ? JSON.stringify(t.keys) : void 0,
		unionErrors: "unionErrors" in t ? JSON.stringify(t.unionErrors) : void 0,
	};
}
function GO(t) {
	const e = new Set();
	for (const s of t.issues) s.path && s.path[0] && e.add(s.path[0]);
	const i = Array.from(e);
	return `Failed to validate keys: ${og(i.join(", "), 100)}`;
}
function JO(t, e, i) {
	return !e.exception ||
		!e.exception.values ||
		!i ||
		!i.originalException ||
		!HO(i.originalException) ||
		i.originalException.issues.length === 0
		? e
		: {
				...e,
				exception: {
					...e.exception,
					values: [
						{ ...e.exception.values[0], value: GO(i.originalException) },
						...e.exception.values.slice(1),
					],
				},
				extra: {
					...e.extra,
					"zoderror.issues": i.originalException.errors.slice(0, t).map(VO),
				},
			};
}
var Q9,
	Z9,
	e8,
	XO,
	KO = m({
		"out-build/external/sentry/core/integrations/zoderrors.js"() {
			"use strict";
			X(),
				ni(),
				(Q9 = 10),
				(Z9 = "ZodErrors"),
				(e8 = (t = {}) => {
					const e = t.limit || Q9;
					return {
						name: Z9,
						processEvent(i, s) {
							return JO(e, i, s);
						},
					};
				}),
				(XO = e8);
		},
	});
function YO(t) {
	const e = dg(t);
	if (e)
		return e
			.filter((i) => !!i.filename)
			.map((i) =>
				i.module_metadata
					? Object.keys(i.module_metadata)
							.filter((s) => s.startsWith(Lg))
							.map((s) => s.slice(Lg.length))
					: [],
			);
}
var QO,
	Lg,
	ZO = m({
		"out-build/external/sentry/core/integrations/third-party-errors-filter.js"() {
			"use strict";
			X(),
				ni(),
				M9(),
				(QO = (t) => ({
					name: "ThirdPartyErrorsFilter",
					setup(e) {
						e.on("beforeEnvelope", (i) => {
							yg(i, (s, r) => {
								if (r === "event") {
									const n = Array.isArray(s) ? s[1] : void 0;
									n && (L9(n), (s[1] = n));
								}
							});
						}),
							e.on("applyFrameMetadata", (i) => {
								if (i.type) return;
								const s = e.getOptions().stackParser;
								O9(s, i);
							});
					},
					processEvent(e) {
						const i = YO(e);
						if (i) {
							const s =
								t.behaviour === "drop-error-if-contains-third-party-frames" ||
								t.behaviour === "apply-tag-if-contains-third-party-frames"
									? "some"
									: "every";
							if (i[s]((n) => !n.some((o) => t.filterKeys.includes(o)))) {
								if (
									t.behaviour === "drop-error-if-contains-third-party-frames" ||
									t.behaviour ===
										"drop-error-if-exclusively-contains-third-party-frames"
								)
									return null;
								e.tags = { ...e.tags, third_party_code: !0 };
							}
						}
						return e;
					},
				})),
				(Lg = "_sentryBundlerPluginAppKey:");
		},
	}),
	t8,
	i8,
	s8,
	r8,
	Od = m({
		"out-build/external/sentry/core/metrics/constants.js"() {
			"use strict";
			(t8 = "c"), (i8 = "g"), (s8 = "s"), (r8 = "d");
		},
	}),
	n8 = m({
		"out-build/external/sentry/core/metrics/exports.js"() {
			"use strict";
			X(), it(), xt(), ra(), Dg(), Gt(), Od();
		},
	}),
	eL = m({
		"out-build/external/sentry/core/profiling.js"() {
			"use strict";
			X(), it(), xt();
		},
	});
function tL(t) {
	let e = 0;
	for (let i = 0; i < t.length; i++) {
		const s = t.charCodeAt(i);
		(e = (e << 5) - e + s), (e &= e);
	}
	return e >>> 0;
}
var Ld = m({
		"out-build/external/sentry/core/metrics/utils.js"() {
			"use strict";
			X();
		},
	}),
	o8 = m({
		"out-build/external/sentry/core/metrics/envelope.js"() {
			"use strict";
			X(), Ld();
		},
	}),
	a8,
	c8,
	l8,
	u8,
	iL,
	h8 = m({
		"out-build/external/sentry/core/metrics/instance.js"() {
			"use strict";
			Od(),
				Ld(),
				(a8 = class {
					constructor(t) {
						this._value = t;
					}
					get weight() {
						return 1;
					}
					add(t) {
						this._value += t;
					}
					toString() {
						return `${this._value}`;
					}
				}),
				(c8 = class {
					constructor(t) {
						(this._last = t),
							(this._min = t),
							(this._max = t),
							(this._sum = t),
							(this._count = 1);
					}
					get weight() {
						return 5;
					}
					add(t) {
						(this._last = t),
							t < this._min && (this._min = t),
							t > this._max && (this._max = t),
							(this._sum += t),
							this._count++;
					}
					toString() {
						return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;
					}
				}),
				(l8 = class {
					constructor(t) {
						this._value = [t];
					}
					get weight() {
						return this._value.length;
					}
					add(t) {
						this._value.push(t);
					}
					toString() {
						return this._value.join(":");
					}
				}),
				(u8 = class {
					constructor(t) {
						(this.first = t), (this._value = new Set([t]));
					}
					get weight() {
						return this._value.size;
					}
					add(t) {
						this._value.add(t);
					}
					toString() {
						return Array.from(this._value)
							.map((t) => (typeof t == "string" ? tL(t) : t))
							.join(":");
					}
				}),
				(iL = { [t8]: a8, [i8]: c8, [r8]: l8, [s8]: u8 });
		},
	}),
	sL = m({
		"out-build/external/sentry/core/metrics/aggregator.js"() {
			"use strict";
			X(), Gt(), Od(), o8(), h8(), Ld();
		},
	}),
	rL = m({
		"out-build/external/sentry/core/metrics/exports-default.js"() {
			"use strict";
			sL(), n8();
		},
	}),
	nL = m({
		"out-build/external/sentry/core/metrics/browser-aggregator.js"() {
			"use strict";
			X(), Gt(), Od(), o8(), h8(), Ld();
		},
	}),
	oL = m({
		"out-build/external/sentry/core/fetch.js"() {
			"use strict";
			X(), it(), Ls(), ra(), Id(), ia(), Gt();
		},
	}),
	aL = m({
		"out-build/external/sentry/core/trpc.js"() {
			"use strict";
			X(), it(), al(), Ls(), ra();
		},
	}),
	cL = m({
		"out-build/external/sentry/core/feedback.js"() {
			"use strict";
			X(), it();
		},
	}),
	lL = m({
		"out-build/external/sentry/core/getCurrentHubShim.js"() {
			"use strict";
			S9(), it(), al();
		},
	}),
	uL = m({
		"out-build/external/sentry/core/index.js"() {
			"use strict";
			ra(),
				Ls(),
				Ag(),
				al(),
				it(),
				s9(),
				nl(),
				Rn(),
				Pd(),
				w9(),
				rl(),
				f9(),
				Cg(),
				y9(),
				JR(),
				XR(),
				KR(),
				YR(),
				QR(),
				ni(),
				p9(),
				Ig(),
				b9(),
				ia(),
				ZR(),
				Dg(),
				eO(),
				Gt(),
				$g(),
				tO(),
				E9(),
				iO(),
				Cd(),
				S9(),
				rO(),
				gO(),
				vO(),
				SO(),
				DO(),
				AO(),
				CO(),
				MO(),
				jO(),
				qO(),
				zO(),
				KO(),
				ZO(),
				n8(),
				eL(),
				rL(),
				nL(),
				kg(),
				oL(),
				aL(),
				cL(),
				lL(),
				X();
		},
	});
function d8(t) {
	let e;
	const i = [];
	let s;
	return (
		yg(t, (r, n) => {
			if (n === "event" || n === "transaction" || n === "feedback")
				e = Array.isArray(r) ? r[1] : void 0;
			else if (n === "attachment") {
				const [o, a] = r;
				i.push({
					filename: o.filename,
					attachmentType: o.attachment_type,
					contentType: o.content_type,
					data: a,
				});
			} else n === "profile" && (s = r[1]);
		}),
		e ? [e, i, s] : void 0
	);
}
var hL = m({
		"out-build/external/sentry/electron/common/envelope.js"() {
			"use strict";
			X();
		},
	}),
	Mg = m({
		"out-build/vs/platform/tracing/common/sentry.js"() {
			"use strict";
			uL(), Ls(), hL(), ug(), tl(), q7(), bg();
		},
	});
function dL(t, e) {
	return e.onProcessConfigUpdate((i) => {
		(Kt().enabled = i.enabled),
			(Kt().loggerSampleRate = i.loggerSampleRate),
			(Kt().tracesSampleRate = i.tracesSampleRate),
			(Kt().profilesSampleRate = i.profilesSampleRate);
	});
}
function fL(t, e, i = G_(64)) {
	const s = {
			flush: (n) => i.drain(n),
			send: (n) =>
				i
					.add(() => e.sendEnvelope(t, n))
					.then(
						(o) => ({ statusCode: 200 }),
						(o) => {
							if (o instanceof lg) return {};
							throw o;
						},
					),
		},
		r = Kt().buffer;
	for (const n of r) s.send(n);
	return (Kt().buffer = []), (Kt().transport = s), j.None;
}
function pL(t, e) {
	if (t === "main") return j.None;
	const i = (s) => {
		const r = {};
		s.breadcrumbs.length > 0 && (r.breadcrumbs = s.breadcrumbs),
			Object.keys(r).length > 0 && e.sendScopeUpdate(t, r);
	};
	return (
		Lr().addScopeListener((s) => {
			i(s.getScopeData()), Lr().clearBreadcrumbs();
		}),
		i(Lr().getScopeData()),
		Lr().clearBreadcrumbs(),
		j.None
	);
}
function mL(t, e) {
	const i = new De();
	return i.add(dL(t, e)), i.add(fL(t, e)), i.add(pL(t, e)), i;
}
var gL = m({
		"out-build/vs/platform/tracing/common/register.js"() {
			"use strict";
			F(), pa(), Mg();
		},
	}),
	f8,
	wL = m({
		"out-build/vs/platform/tracing/node/rateLimiter.js"() {
			"use strict";
			f8 = class {
				constructor(t) {
					(this.c = t), (this.a = new Map()), (this.b = this.d());
				}
				increment(t, e = 1) {
					const i = this.d();
					i !== this.b && (this.a.clear(), (this.b = i));
					const r = (this.a.get(t) ?? 0) + e;
					return this.a.set(t, r), r;
				}
				d() {
					return Math.floor(Date.now() / this.c);
				}
			};
		},
	}),
	Md,
	Fd,
	vL = m({
		"out-build/vs/platform/tracing/electron-main/tracingService.js"() {
			"use strict";
			q(),
				F(),
				Q(),
				pa(),
				gL(),
				Mg(),
				xi(),
				wL(),
				(Fd = class extends j {
					static {
						Md = this;
					}
					static {
						this.a = 64;
					}
					static {
						this.b = 128;
					}
					constructor(e) {
						super(),
							(this.s = e),
							(this.c = []),
							(this.g = null),
							(this.h = null),
							(this.j = null),
							(this.m = null),
							(this.n = new f8(60 * 1e3)),
							(this.q = new $()),
							(this.r = new Ea(100)),
							(this.onProcessConfigUpdate = this.q.event),
							(this.f = {
								globalSampleRate: 1,
								tracesSampleRate: 0.01,
								loggerSampleRate: 1,
								minidumpSampleRate: 1,
								errorRateLimit: 10,
								performanceUnitRateLimit: 100,
								profilesSampleRate: 0,
								jsonStringifySampleRate: 0,
							}),
							this.u()
								.then(() => this.D(mL("main", this)))
								.catch((i) =>
									this.s.error(
										"TracingService: failed to initialize transport",
										i,
									),
								);
					}
					async sendEnvelope(e, i) {
						if (this.g === null) {
							this.c.length < Md.a && this.c.push([e, i]);
							return;
						}
						if (this.g === !1) return e === "main" ? this.y(i) : this.w(e, i);
					}
					async sendScopeUpdate(e, i) {
						if (e === "main") {
							this.s.warn("TracingService: unexpected scope update from main");
							return;
						}
						const s = Lr();
						i.breadcrumbs !== void 0 &&
							i.breadcrumbs.forEach((r) => s?.addBreadcrumb(r));
					}
					async setClientTracingConfig(e) {
						(this.f = {
							globalSampleRate: Math.min(1, Math.max(0, e.globalSampleRate)),
							tracesSampleRate: Math.min(1, Math.max(0, e.tracesSampleRate)),
							loggerSampleRate: Math.min(1, Math.max(0, e.loggerSampleRate)),
							minidumpSampleRate: Math.min(
								1,
								Math.max(0, e.minidumpSampleRate),
							),
							errorRateLimit: Math.max(0, e.errorRateLimit),
							performanceUnitRateLimit: Math.max(0, e.performanceUnitRateLimit),
							profilesSampleRate: Math.min(
								1,
								Math.max(0, e.profilesSampleRate),
							),
							jsonStringifySampleRate: Math.min(
								1,
								Math.max(0, e.jsonStringifySampleRate),
							),
						}),
							this.s.debug(
								`TracingService: set client tracing config to ${JSON.stringify(this.f)}`,
							),
							this.t();
					}
					async setIsPrivacyMode(e) {
						const i = this.g;
						(this.g = e),
							this.c.length > 0 &&
								(this.s.debug(
									`TracingService: flushing buffer with ${this.c.length} items`,
								),
								this.c.forEach(([s, r]) => this.sendEnvelope(s, r)),
								(this.c = [])),
							i !== this.g &&
								(this.s.debug(`TracingService: set is privacy mode to ${e}`),
								this.t());
					}
					async setUser(e, i) {
						const s = this.j,
							r = this.m;
						(this.j = e),
							(this.m = i),
							this.j !== null || this.m !== null
								? Lr().setUser({
										email: this.j ?? void 0,
										id: this.m ?? void 0,
									})
								: Lr().setUser(null),
							(s !== this.j || r !== this.m) &&
								this.s.debug(
									`TracingService: set user to ${JSON.stringify(Lr()?.getUser())}`,
								);
					}
					t() {
						const e = {
							enabled: this.g !== !0 ? this.f.globalSampleRate > 0 : !1,
							loggerSampleRate: this.g !== !0 ? this.f.loggerSampleRate : 0,
							tracesSampleRate: this.g !== !0 ? this.f.tracesSampleRate : 0,
							profilesSampleRate: this.g !== !0 ? this.f.profilesSampleRate : 0,
							jsonStringifySampleRate:
								this.g !== !0 ? this.f.jsonStringifySampleRate : 0,
						};
						this.q.fire(e),
							this.s.debug(
								`TracingService: fired process config update ${JSON.stringify(e)}`,
							);
					}
					async u() {
						if (this.h !== null) return;
						const e = ol()?.getDsn();
						if (e === void 0) {
							this.s.warn("TracingService: no dsn found");
							return;
						}
						const i = Kt().sentry.makeElectronOfflineTransport;
						if (i === void 0 || typeof i != "function") {
							this.s.warn(
								"TracingService: transport constructor is not available",
							);
							return;
						}
						(this.h = i()({
							bufferSize: Md.b,
							url: GR(
								e,
								ol()?.getOptions().tunnel,
								ol()?.getSdkMetadata()?.sdk,
							),
							recordDroppedEvent: (s, r) => {
								this.s.debug(`TracingService: dropped ${r} event due to ${s}`);
							},
						})),
							this.s.debug("TracingService: created transport");
					}
					w(e, i) {
						if (this.g !== !1) return;
						const s = d8(i);
						if (s === void 0) {
							this.s.warn("TracingService: dropping unsupported envelope");
							return;
						}
						const [r, n, o] = s;
						delete r.environment,
							delete r.sdk?.name,
							delete r.sdk?.version,
							delete r.sdk?.packages,
							(r.tags = { ...r.tags, "event.process": e }),
							r.event_id !== void 0 &&
								o !== void 0 &&
								this.r.set(r.event_id, o),
							ea()?.captureEvent(r, { attachments: n });
					}
					y(e) {
						if (this.g !== !1) return;
						const i = d8(e);
						if (i === void 0) return this.H(e);
						const [s, r] = i;
						if (this.z(s, r)) return;
						const n = s.tags?.["event.process"];
						if (
							((n === void 0 || n === "browser") &&
								(s.tags = { ...s.tags, "event.process": "main" }),
							s.event_id !== void 0)
						) {
							const o = this.r.get(s.event_id);
							o !== void 0 &&
								(this.r.remove(s.event_id),
								(e = hR(e, [{ type: "profile" }, o])));
						}
						this.H(e);
					}
					z(e, i) {
						if (e.exception?.values !== void 0) {
							for (const s of e.exception.values) if (this.C(s)) return !0;
						}
						for (const s of i) if (this.F(s)) return !0;
						return this.G(e);
					}
					C(e) {
						return !1;
					}
					F(e) {
						return e.attachmentType === "event.minidump"
							? Math.random() >= this.f.minidumpSampleRate
							: !1;
					}
					G(e) {
						const i = this.f.errorRateLimit,
							s = this.f.performanceUnitRateLimit;
						return e.type === "transaction"
							? this.n.increment("performanceUnit", 1) > s
							: this.n.increment("error", 1) > i;
					}
					H(e) {
						if (this.g !== !1) return;
						const i = this.f.globalSampleRate;
						if (i <= 0 || (i < 1 && Math.random() >= i)) {
							this.s.debug(
								"TracingService: dropping envelope due to global sample rate",
							);
							return;
						}
						this.h?.send(e);
					}
				}),
				(Fd = Md = __decorate([__param(0, G)], Fd));
		},
	}),
	Fg,
	yL = m({
		"out-build/vs/platform/tracing/common/tracingService.js"() {
			"use strict";
			Y(), (Fg = B("tracingService"));
		},
	}),
	Ng,
	bL = m({
		"out-build/vs/platform/abuse/common/abuseService.js"() {
			"use strict";
			Y(), (Ng = B("abuseService"));
		},
	}),
	Nd,
	EL = m({
		"out-build/vs/platform/abuse/node/abuseService.js"() {
			"use strict";
			Ac(),
				St(),
				(Nd = class {
					constructor(e) {
						(this.c = e),
							this.d()
								.then((i) => (this.a = i))
								.catch(() => {}),
							this.e()
								.then((i) => (this.b = i))
								.catch(() => {});
					}
					async getMachineId() {
						return this.a ?? this.c.machineId;
					}
					async getMacMachineId() {
						return this.b ?? this.c.macMachineId;
					}
					async d() {
						let e;
						try {
							e = await g5(!0);
						} catch {
							return;
						}
						try {
							return (await import("crypto"))
								.createHash("sha256")
								.update(e, "utf8")
								.digest("hex");
						} catch {
							return;
						}
					}
					async e() {
						return m5(() => {});
					}
				}),
				(Nd = __decorate([__param(0, It)], Nd));
		},
	}),
	p8,
	Wd,
	SL = m({
		"out-build/vs/platform/extensionManagement/node/extensionSignatureVerificationService.js"() {
			"use strict";
			Ae(),
				Y(),
				Q(),
				St(),
				Nu(),
				(p8 = B("IExtensionSignatureVerificationService")),
				(Wd = class {
					constructor(e, i) {
						(this.b = e), (this.c = i);
					}
					d() {
						return this.a || (this.a = this.f()), this.a;
					}
					async f() {
						return import("@vscode/vsce-sign");
					}
					async verify(e, i, s, r, n) {
						let o;
						try {
							o = await this.d();
						} catch (u) {
							this.b.error("Could not load vsce-sign module", Bi(u)),
								this.b.info(
									`Extension signature verification is not done: ${e}`,
								);
							return;
						}
						const a = new Date().getTime();
						let c;
						try {
							this.b.trace(`Verifying extension signature for ${e}...`),
								(c = await o.verify(s, r, this.b.getLevel() === J.Trace));
						} catch (u) {
							c = { code: f1.UnknownError, didExecute: !1, output: Bi(u) };
						}
						const l = new Date().getTime() - a;
						return (
							this.b.info(
								`Extension signature verification result for ${e}: ${c.code}. Executed: ${c.didExecute}. Duration: ${l}ms.`,
							),
							this.b.trace(`Extension signature verification output for ${e}:
${c.output}`),
							this.c.publicLog2("extensionsignature:verification", {
								extensionId: e,
								extensionVersion: i,
								code: c.code,
								internalCode: c.internalCode,
								duration: l,
								didExecute: c.didExecute,
								clientTargetPlatform: n,
							}),
							{ code: c.code }
						);
					}
				}),
				(Wd = __decorate([__param(0, G), __param(1, It)], Wd));
		},
	});
import {
	app as Ln,
	BrowserWindow as kL,
	protocol as m8,
	session as Mn,
	systemPreferences as g8,
} from "electron";
import { hostname as xL, release as DL } from "os";
var Wg,
	jd,
	PL = m({
		"out-build/vs/code/electron-main/app.js"() {
			"use strict";
			fa(),
				is(),
				Je(),
				Yr(),
				Ae(),
				q(),
				D0(),
				vr(),
				F(),
				Ce(),
				ge(),
				z(),
				Ie(),
				ie(),
				Oi(),
				Tk(),
				Ks(),
				qk(),
				Oy(),
				M4(),
				ve(),
				pc(),
				Qx(),
				Ve(),
				iD(),
				F1(),
				u2(),
				mn(),
				Wy(),
				MD(),
				bt(),
				bc(),
				X1(),
				tP(),
				iP(),
				sP(),
				aP(),
				EP(),
				Be(),
				HP(),
				um(),
				yh(),
				Y(),
				hm(),
				VP(),
				_$(),
				R$(),
				L$(),
				ot(),
				Q(),
				j$(),
				Oc(),
				Ct(),
				vc(),
				Y$(),
				Lm(),
				Li(),
				iA(),
				Hu(),
				B5(),
				St(),
				sA(),
				nA(),
				Dn(),
				Cr(),
				oA(),
				lA(),
				dA(),
				gA(),
				kA(),
				C5(),
				xA(),
				DA(),
				PA(),
				$A(),
				_A(),
				un(),
				si(),
				JA(),
				XA(),
				ti(),
				z1(),
				_h(),
				KA(),
				gn(),
				Rs(),
				YA(),
				an(),
				td(),
				M6(),
				eC(),
				tC(),
				iC(),
				ae(),
				dC(),
				fC(),
				pC(),
				jc(),
				mC(),
				gC(),
				i7(),
				bC(),
				KC(),
				YC(),
				Fa(),
				Dh(),
				i_(),
				Ql(),
				$c(),
				vL(),
				yL(),
				bL(),
				EL(),
				SL(),
				(jd = class extends j {
					static {
						Wg = this;
					}
					static {
						this.a = {
							[R.file]: "security.promptForLocalFileProtocolHandling",
							[R.vscodeRemote]: "security.promptForRemoteFileProtocolHandling",
						};
					}
					constructor(e, i, s, r, n, o, a, c, l, u, d, f) {
						super(),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = n),
							(this.q = o),
							(this.s = a),
							(this.t = c),
							(this.u = l),
							(this.w = u),
							(this.y = d),
							(this.z = f),
							this.C(),
							this.F();
					}
					C() {
						const e = (f) => f?.startsWith(`${R.vscodeFileResource}://${Ua}`),
							i = (f) => f?.startsWith(`${R.vscodeWebview}://`),
							s = new Set(["pointerLock"]),
							r = new Set([
								...s,
								"clipboard-read",
								"clipboard-sanitized-write",
							]),
							n = new Set([...s, "media", "local-fonts"]);
						Mn.defaultSession.setPermissionRequestHandler((f, p, v, g) =>
							i(g.requestingUrl)
								? v(r.has(p))
								: e(g.requestingUrl)
									? v(n.has(p))
									: v(!1),
						),
							Mn.defaultSession.setPermissionCheckHandler((f, p, v, g) =>
								i(g.requestingUrl)
									? r.has(p)
									: e(g.requestingUrl)
										? n.has(p)
										: !1,
							);
						const o = new Set([
								R.file,
								R.vscodeFileResource,
								R.vscodeRemoteResource,
								R.vscodeManagedRemoteResource,
								"devtools",
							]),
							a = (f) => {
								for (let p = f; p; p = p.parent)
									if (p.url.startsWith(`${R.vscodeWebview}://`)) return !0;
								return !1;
							},
							c = (f) => f.resourceType === "xhr" || a(f.frame),
							l = (f) => {
								const p = f.frame;
								if (!p || !this.b) return !1;
								const v = kL.getAllWindows();
								for (const g of v)
									if (p.processId === g.webContents.mainFrame.processId)
										return !0;
								return !1;
							},
							u = (f, p) => {
								if (f.path !== "/index.html") return !0;
								const v = p.frame;
								if (!v || !this.b) return !1;
								for (const g of this.b.getWindows())
									if (
										g.win &&
										v.processId === g.win.webContents.mainFrame.processId
									)
										return !0;
								return !1;
							};
						Mn.defaultSession.webRequest.onBeforeRequest((f, p) => {
							const v = P.parse(f.url);
							return v.scheme === R.vscodeWebview && !u(v, f)
								? (this.m.error("Blocked vscode-webview request", f.url),
									p({ cancel: !0 }))
								: v.scheme === R.vscodeFileResource && !l(f)
									? (this.m.error("Blocked vscode-file request", f.url),
										p({ cancel: !0 }))
									: v.path.endsWith(".svg") && !o.has(v.scheme)
										? p({ cancel: !c(f) })
										: p({ cancel: !1 });
						}),
							Mn.defaultSession.webRequest.onHeadersReceived((f, p) => {
								const v = f.responseHeaders,
									g = v["content-type"] || v["Content-Type"];
								if (g && Array.isArray(g)) {
									const b = P.parse(f.url);
									if (b.path.endsWith(".svg") && o.has(b.scheme))
										return (
											(v["Content-Type"] = ["image/svg+xml"]),
											p({ cancel: !1, responseHeaders: v })
										);
									if (
										!b.path.endsWith(R.vscodeRemoteResource) &&
										g.some((y) => y.toLowerCase().includes("image/svg"))
									)
										return p({ cancel: !c(f) });
								}
								return p({ cancel: !1 });
							}),
							Mn.defaultSession.webRequest.onHeadersReceived((f, p) => {
								if (
									f.url.startsWith(
										"https://vscode.download.prss.microsoft.com/",
									)
								) {
									const v = f.responseHeaders ?? Object.create(null);
									if (v["Access-Control-Allow-Origin"] === void 0)
										return (
											(v["Access-Control-Allow-Origin"] = ["*"]),
											p({ cancel: !1, responseHeaders: v })
										);
								}
								return p({ cancel: !1 });
							}),
							Mn.defaultSession.webRequest.onHeadersReceived((f, p) => {
								if (f.url.endsWith(".html")) {
									const v = f.responseHeaders ?? Object.create(null);
									return (
										(v["Document-Policy"] = ["js-profiling"]),
										p({ cancel: !1, responseHeaders: v })
									);
								}
								return p({ cancel: !1 });
							});
						const d = Mn.defaultSession;
						typeof d.setCodeCachePath == "function" &&
							this.q.codeCachePath &&
							d.setCodeCachePath(M(this.q.codeCachePath, "chrome")),
							T &&
								(this.t.getValue("security.restrictUNCAccess") === !1
									? mE()
									: da(this.t.getValue("security.allowedUNCHosts")));
					}
					F() {
						Q0((s) => this.G(s)),
							process.on("uncaughtException", (s) => {
								$E(s) || Ot(s);
							}),
							process.on("unhandledRejection", (s) => Ot(s)),
							x.once(this.s.onWillShutdown)(() => this.dispose()),
							jk(),
							Ln.on("accessibility-support-changed", (s, r) => {
								this.b?.sendToAll("vscode:accessibilitySupportChanged", r);
							}),
							Ln.on("activate", async (s, r) => {
								this.m.trace("app#activate"),
									r || (await this.b?.openEmptyWindow({ context: 1 }));
							}),
							Ln.on("web-contents-created", (s, r) => {
								r?.opener?.url.startsWith(`${R.vscodeFileResource}://${Ua}/`) &&
									(this.m.trace(
										'[aux window]  app.on("web-contents-created"): Registering auxiliary window',
									),
									this.c?.registerWindow(r)),
									r.on("will-navigate", (n) => {
										this.m.error(
											"webContents#will-navigate: Prevented webcontent navigation",
										),
											n.preventDefault();
									}),
									r.setWindowOpenHandler((n) =>
										n.url === "about:blank"
											? (this.m.trace(
													"[aux window] webContents#setWindowOpenHandler: Allowing auxiliary window to open on about:blank",
												),
												{
													action: "allow",
													overrideBrowserWindowOptions: this.c?.createWindow(n),
												})
											: (this.m.trace(
													`webContents#setWindowOpenHandler: Prevented opening window with URL ${n.url}}`,
												),
												this.f?.openExternal(void 0, n.url),
												{ action: "deny" }),
									);
							});
						let e = [],
							i;
						Ln.on("open-file", (s, r) => {
							(r = eo(r)),
								this.m.trace("app#open-file: ", r),
								s.preventDefault(),
								e.push(
									on(r) ? { workspaceUri: P.file(r) } : { fileUri: P.file(r) },
								),
								i !== void 0 && (clearTimeout(i), (i = void 0)),
								(i = setTimeout(async () => {
									await this.b?.open({
										context: 1,
										cli: this.q.args,
										urisToOpen: e,
										gotoLineMode: !1,
										preferNewWindow: !0,
									}),
										(e = []),
										(i = void 0);
								}, 100));
						}),
							Ln.on("new-window-for-tab", async () => {
								await this.b?.openEmptyWindow({ context: 4 });
							}),
							et.handle("vscode:fetchShellEnv", (s) => {
								const r = this.b?.getWindowByWebContents(s.sender);
								let n, o;
								return (
									r?.config
										? ((n = r.config),
											(o = { ...process.env, ...r.config.userEnv }))
										: ((n = this.q.args), (o = process.env)),
									this.W(n, o, !1)
								);
							}),
							et.on("vscode:toggleDevTools", (s) => s.sender.toggleDevTools()),
							et.on("vscode:openDevTools", (s) => s.sender.openDevTools()),
							et.on("vscode:reloadWindow", (s) => s.sender.reload()),
							et.handle("vscode:notifyZoomLevel", async (s, r) => {
								const n = this.b?.getWindowByWebContents(s.sender);
								n && n.notifyZoomLevel(r);
							});
					}
					G(e) {
						if (e) {
							const i = {
								message: `[uncaught exception in main]: ${e.message}`,
								stack: e.stack,
							};
							this.b?.sendToFocused("vscode:reportError", JSON.stringify(i));
						}
						this.m.error(`[uncaught exception in main]: ${e}`, e);
					}
					async startup() {
						this.m.debug("Starting VS Code"),
							this.m.debug(`from: ${this.q.appRoot}`),
							this.m.debug("args:", this.q.args);
						const e = this.y.win32AppUserModelId;
						T && e && Ln.setAppUserModelId(e);
						try {
							N &&
								this.t.getValue("window.nativeTabs") === !0 &&
								!g8.getUserDefault("NSUseImprovedLayoutPass", "boolean") &&
								g8.setUserDefault("NSUseImprovedLayoutPass", "boolean", !0);
						} catch (f) {
							this.m.error(f);
						}
						const i = new Cy();
						x.once(this.s.onWillShutdown)((f) => {
							f.reason === 2 && i.dispose();
						}),
							this.m.trace("Resolving machine identifier...");
						const [s, r, n, o] = await Promise.all([
							aC(this.u, this.m),
							cC(this.u, this.m),
							lC(this.u, this.m),
							uC(this.u, this.m),
						]);
						this.m.trace(`Resolved machine identifier: ${s}`);
						const { sharedProcessReady: a, sharedProcessClient: c } = this.O(
								s,
								r,
								n,
								o,
							),
							l = await this.P(s, r, n, o, a);
						l.invokeFunction((f) => f.get(Ku)),
							this.D(l.createInstance(rd)),
							l.invokeFunction((f) => this.Q(f, i, c));
						const u = await l.invokeFunction((f) => this.H(f, i));
						this.I(i),
							(this.s.phase = 2),
							await l.invokeFunction((f) => this.R(f, u)),
							(this.s.phase = 3),
							this.S(),
							this.D(
								new bs(() => {
									this.D(
										bp(() => {
											(this.s.phase = 4), this.Y();
										}, 2500),
									);
								}, 2500),
							).schedule();
					}
					async H(e, i) {
						const s = (this.b = e.get(_t)),
							r = e.get(Fc),
							n = (this.f = e.get(Ir)),
							o = e.get(sr),
							a = this;
						r.registerHandler({
							async handleURL(p, v) {
								return a.N(s, o, r, p, v);
							},
						});
						const c = this.D(
								new f6({
									onDidOpenMainWindow: n.onDidOpenMainWindow,
									onDidFocusMainWindow: n.onDidFocusMainWindow,
									getActiveWindowId: () => n.getActiveWindowId(-1),
								}),
							),
							l = new ny((p) => c.getActiveClientId().then((v) => p === v)),
							u = new e6(l, this.m),
							d = i.getChannel("urlHandler", u);
						r.registerHandler(new Z5(d));
						const f = await this.J(s, o);
						return this.D(new s6(f?.urls, r, s, this.q, this.y, this.m)), f;
					}
					I(e) {
						const i = () => ({ statusCode: 404, data: "Not found" }),
							s = new mr(() => e.getChannel(f7, new p7()));
						m8.registerBufferProtocol(R.vscodeManagedRemoteResource, (r, n) => {
							const o = P.parse(r.url);
							if (!o.authority.startsWith("window:")) return n(i());
							s.value.call(sg, [o]).then(
								(a) => n({ ...a, data: Buffer.from(a.body, "base64") }),
								(a) => {
									this.m.warn("error dispatching remote resource call", a),
										n({ statusCode: 500, data: String(a) });
								},
							);
						});
					}
					async J(e, i) {
						const s = this.q.args["open-url"] ? this.q.args._urls || [] : [];
						s.length > 0 &&
							this.m.trace(
								"app#resolveInitialProtocolUrls() protocol urls from command line:",
								s,
							);
						const r = global.getOpenUrls() || [];
						if (
							(r.length > 0 &&
								this.m.trace(
									"app#resolveInitialProtocolUrls() protocol urls from macOS 'open-url' event:",
									r,
								),
							s.length + r.length === 0)
						)
							return;
						const n = [...s, ...r].map((c) => {
								try {
									return { uri: P.parse(c), originalUrl: c };
								} catch {
									this.m.trace(
										"app#resolveInitialProtocolUrls() protocol url failed to parse:",
										c,
									);
									return;
								}
							}),
							o = [],
							a = [];
						for (const c of n) {
							if (!c) continue;
							const l = this.M(c.uri);
							if (l)
								if (await this.L(l, e, i)) {
									this.m.trace(
										"app#resolveInitialProtocolUrls() protocol url was blocked:",
										c.uri.toString(!0),
									);
									continue;
								} else
									this.m.trace(
										"app#resolveInitialProtocolUrls() protocol url will be handled as window to open:",
										c.uri.toString(!0),
										l,
									),
										o.push(l);
							else
								this.m.trace(
									"app#resolveInitialProtocolUrls() protocol url will be passed to active window for handling:",
									c.uri.toString(!0),
								),
									a.push(c);
						}
						return { urls: a, openables: o };
					}
					async L(e, i, s) {
						let r, n;
						if (
							(k1(e)
								? ((r = e.workspaceUri),
									(n = w(
										148,
										null,
										r.scheme === R.file
											? Zn(r, { os: Ri, tildify: this.q })
											: r.toString(!0),
										this.y.nameShort,
									)))
								: y4(e)
									? ((r = e.folderUri),
										(n = w(
											149,
											null,
											r.scheme === R.file
												? Zn(r, { os: Ri, tildify: this.q })
												: r.toString(!0),
											this.y.nameShort,
										)))
									: ((r = e.fileUri),
										(n = w(
											150,
											null,
											r.scheme === R.file
												? Zn(r, { os: Ri, tildify: this.q })
												: r.toString(!0),
											this.y.nameShort,
										))),
							(r.scheme !== R.file && r.scheme !== R.vscodeRemote) ||
								this.t.getValue(Wg.a[r.scheme]) === !1)
						)
							return !1;
						const { response: a, checkboxChecked: c } = await s.showMessageBox({
							type: "warning",
							buttons: [w(151, null), w(152, null)],
							message: n,
							detail: w(153, null),
							checkboxLabel: r.scheme === R.file ? w(154, null) : w(155, null),
							cancelId: 1,
						});
						if (a !== 0) return !0;
						if (c) {
							const l = {
								channel: "vscode:disablePromptForProtocolHandling",
								args: r.scheme === R.file ? "local" : "remote",
							};
							i.sendToFocused(l.channel, l.args),
								i.sendToOpeningWindow(l.channel, l.args);
						}
						return !1;
					}
					M(e) {
						if (e.path) {
							if (e.authority === R.file) {
								const i = P.file(e.fsPath);
								return on(i) ? { workspaceUri: i } : { fileUri: i };
							} else if (e.authority === R.vscodeRemote) {
								const i = e.path.indexOf(oe.sep, 1);
								let s, r;
								i !== -1
									? ((s = e.path.substring(1, i)), (r = e.path.substring(i)))
									: ((s = e.path.substring(1)), (r = "/"));
								let n = e.query;
								const o = new URLSearchParams(e.query);
								o.get("windowId") === "_blank" &&
									(o.delete("windowId"), (n = o.toString()));
								const a = P.from({
									scheme: R.vscodeRemote,
									authority: s,
									path: r,
									query: n,
									fragment: e.fragment,
								});
								return on(r)
									? { workspaceUri: a }
									: /:[\d]+$/.test(r)
										? { fileUri: a }
										: { folderUri: a };
							}
						}
					}
					async N(e, i, s, r, n) {
						this.m.trace("app#handleProtocolUrl():", r.toString(!0), n),
							r.scheme === this.y.urlProtocol &&
								r.path === "workspace" &&
								(r = r.with({
									authority: "file",
									path: P.parse(r.query).path,
									query: "",
								}));
						let o = !1;
						const a = new URLSearchParams(r.query);
						a.get("windowId") === "_blank"
							? (this.m.trace(
									"app#handleProtocolUrl() found 'windowId=_blank' as parameter, setting shouldOpenInNewWindow=true:",
									r.toString(!0),
								),
								a.delete("windowId"),
								(r = r.with({ query: a.toString() })),
								(o = !0))
							: N &&
								e.getWindowCount() === 0 &&
								(this.m.trace(
									"app#handleProtocolUrl() running on macOS with no window open, setting shouldOpenInNewWindow=true:",
									r.toString(!0),
								),
								(o = !0));
						const c = a.get("continueOn");
						c !== null &&
							(this.m.trace(
								"app#handleProtocolUrl() found 'continueOn' as parameter:",
								r.toString(!0),
							),
							a.delete("continueOn"),
							(r = r.with({ query: a.toString() })),
							(this.q.continueOn = c ?? void 0));
						const l = this.M(r);
						return l
							? (await this.L(l, e, i))
								? (this.m.trace(
										"app#handleProtocolUrl() protocol url was blocked:",
										r.toString(!0),
									),
									!0)
								: (this.m.trace(
										"app#handleProtocolUrl() opening protocol url as window:",
										l,
										r.toString(!0),
									),
									(
										await e.open({
											context: 6,
											cli: { ...this.q.args },
											urisToOpen: [l],
											forceNewWindow: o,
											gotoLineMode: !0,
										})
									)
										.at(0)
										?.focus(),
									!0)
							: o
								? (this.m.trace(
										"app#handleProtocolUrl() opening empty window and passing in protocol url:",
										r.toString(!0),
									),
									await (
										await e.open({
											context: 6,
											cli: { ...this.q.args },
											forceNewWindow: !0,
											forceEmpty: !0,
											gotoLineMode: !0,
											remoteAuthority: Po(r),
										})
									)
										.at(0)
										?.ready(),
									s.open(r, n))
								: (this.m.trace(
										"app#handleProtocolUrl(): not handled",
										r.toString(!0),
										n,
									),
									!1);
					}
					O(e, i, s, r) {
						const n = this.D(this.j.createInstance(Nh, e, i, s, r));
						this.D(
							n.onDidCrash(() =>
								this.b?.sendToFocused("vscode:reportSharedProcessCrash"),
							),
						);
						const o = (async () => {
							this.m.trace("Main->SharedProcess#connect");
							const c = await n.connect();
							return (
								this.m.trace(
									"Main->SharedProcess#connect: connection established",
								),
								new Fp(c, "main")
							);
						})();
						return {
							sharedProcessReady: (async () => (await n.whenReady(), o))(),
							sharedProcessClient: o,
						};
					}
					async P(e, i, s, r, n) {
						const o = new bh();
						switch (process.platform) {
							case "win32":
								o.set(Sn, new le(Uc, [e]));
								break;
							case "linux":
								Lf
									? o.set(
											Sn,
											new le(Uh, [process.env.SNAP, process.env.SNAP_REVISION]),
										)
									: o.set(Sn, new le(jh, [e]));
								break;
							case "darwin":
								o.set(Sn, new le(_r, [e]));
								break;
						}
						o.set(_t, new le(Qh, [e, i, s, r, this.h], !1)),
							o.set(Fo, new le(md, void 0, !1));
						const a = new sh(this.m, this.y);
						o.set(sr, a),
							o.set($m, new le(Ih, void 0, !1)),
							o.set(ch, new le(lh, void 0, !1)),
							o.set(
								M1,
								Xe.toService(nu(n.then((f) => f.getChannel("diagnostics")))),
							),
							o.set(dm, new le($h, [this.h])),
							o.set(du, new le(uh)),
							o.set(Pm, new le(Ah)),
							o.set(Ir, new le(Rc, void 0, !1)),
							o.set(Nm, new le(Vh)),
							o.set(Am, new le(Mh)),
							o.set(K1, new le(mh)),
							o.set(wo, new le(Bu)),
							o.set(lc, new le(zu));
						const c = new cd(
								{
									graceTime: 6e4,
									shortGraceTime: 6e3,
									scrollback:
										this.t.getValue(
											"terminal.integrated.persistentSessionScrollback",
										) ?? 100,
								},
								this.t,
								this.q,
								this.s,
								this.m,
							),
							l = new fd(c, this.t, this.m, this.n);
						o.set(Qm, l),
							T
								? o.set(kc, new le(wh))
								: N
									? o.set(kc, new le(S2))
									: Ee && o.set(kc, new le(em));
						const u = new Zu(this.q, this.t, this.y, this.m, this.u);
						o.set(Eo, u);
						const d = new oh(this.q, this.m, this.z, u, a);
						if (
							(o.set(Pr, d),
							o.set(B1, new le(Zh, void 0, !1)),
							o.set(Nc, new le(Ch, void 0, !1)),
							o.set(Fc, new le(Hh, void 0, !1)),
							z5(this.y, this.q))
						) {
							const f = V$(this.y, this.t),
								p = nu(n.then((k) => k.getChannel("telemetryAppender"))),
								v = new K5(p),
								g = z$(
									DL(),
									xL(),
									process.arch,
									this.y.commit,
									this.y.version,
									e,
									i,
									s,
									r,
									f,
								),
								b = G$(this.q),
								y = {
									appenders: [v],
									commonProperties: g,
									piiPaths: b,
									sendErrorTelemetry: !0,
								};
							o.set(It, new le(Wh, [y], !1));
						} else o.set(It, Tc);
						return (
							o.set(Go, new le(nd, void 0, !0)),
							o.set(O6, new le(sd, void 0, !0)),
							o.set(Ym, new le(od, void 0, !0)),
							o.set(Ku, new le(Yu)),
							o.set(Mo, new le(Sh, void 0, !0)),
							o.set(Fg, new le(Fd)),
							o.set(Ng, new le(Nd)),
							this.y.quality !== "stable" && o.set(p8, new le(Wd, void 0, !0)),
							await Nt.settled([u.initialize(), d.initialize()]),
							this.j.createChild(o)
						);
					}
					Q(e, i, s) {
						const r = this.D(new De()),
							n = Xe.fromService(e.get($m), r, { disableMarshalling: !0 });
						this.g.registerChannel("launch", n);
						const o = Xe.fromService(e.get(ch), r, { disableMarshalling: !0 });
						this.g.registerChannel("diagnostics", o);
						const a = Xe.fromService(e.get(Fg), r);
						i.registerChannel("tracing", a),
							s.then((O) => O.registerChannel("tracing", a));
						const c = Xe.fromService(e.get(Ng), r);
						i.registerChannel("abuse", c);
						const l = r.add(new p6(e.get(xn)));
						i.registerChannel("policy", l),
							s.then((O) => O.registerChannel("policy", l));
						const u = this.w.getProvider(R.file);
						HE(u instanceof vh);
						const d = r.add(new n5(u, this.m, this.q));
						i.registerChannel(am, d), s.then((O) => O.registerChannel(am, d));
						const f = Xe.fromService(e.get(Cs), r);
						i.registerChannel("userDataProfiles", f),
							s.then((O) => O.registerChannel("userDataProfiles", f));
						const p = new Y5(e.get(Sn));
						i.registerChannel("update", p);
						const v = Xe.fromService(e.get(dm), r);
						i.registerChannel("process", v);
						const g = Xe.fromService(e.get(du), r);
						i.registerChannel("encryption", g);
						const b = Xe.fromService(e.get(Uo), r);
						i.registerChannel("sign", b);
						const y = Xe.fromService(e.get(Pm), r);
						i.registerChannel("keyboardLayout", y), (this.f = e.get(Ir));
						const k = Xe.fromService(this.f, r);
						i.registerChannel("nativeHost", k),
							s.then((O) => O.registerChannel("nativeHost", k));
						const I = Xe.fromService(e.get(B1), r);
						i.registerChannel("workspaces", I);
						const C = Xe.fromService(e.get(Am), r);
						i.registerChannel("menubar", C);
						const _ = Xe.fromService(e.get(Fc), r);
						i.registerChannel("url", _);
						const K = Xe.fromService(e.get(Nm), r);
						i.registerChannel("webview", K);
						const se = r.add(new X5(this.m, e.get(wo)));
						i.registerChannel("storage", se),
							s.then((O) => O.registerChannel("storage", se));
						const xe = r.add(new F6(e.get(wo), e.get(Cs), this.m));
						s.then((O) => O.registerChannel("profileStorageListener", xe));
						const W = Xe.fromService(e.get(Qm), r);
						i.registerChannel(Xo.LocalPty, W);
						const ye = Xe.fromService(e.get(kc), r);
						i.registerChannel("externalTerminal", ye);
						const at = new W6(e.get(To));
						i.registerChannel("logger", at),
							s.then((O) => O.registerChannel("logger", at));
						const ue = new T4(e.get(_t));
						i.registerChannel("extensionhostdebugservice", ue);
						const Jt = Xe.fromService(e.get(K1), r);
						i.registerChannel(E2, Jt);
						const L = Xe.fromService(e.get(Ym), r);
						i.registerChannel(j6, L);
					}
					async R(e, i) {
						const s = (this.b = e.get(_t));
						this.c = e.get(Fo);
						const r = wn(process.env) ? 0 : 4,
							n = this.q.args;
						if (i) {
							if (i.openables.length > 0)
								return s.open({
									context: r,
									cli: n,
									urisToOpen: i.openables,
									gotoLineMode: !0,
									initialStartup: !0,
								});
							if (i.urls.length > 0)
								for (const g of i.urls) {
									const b = new URLSearchParams(g.uri.query);
									if (b.get("windowId") === "_blank")
										return (
											b.delete("windowId"),
											(g.originalUrl = g.uri.toString(!0)),
											(g.uri = g.uri.with({ query: b.toString() })),
											s.open({
												context: r,
												cli: n,
												forceNewWindow: !0,
												forceEmpty: !0,
												gotoLineMode: !0,
												initialStartup: !0,
											})
										);
								}
						}
						const o = global.macOpenFiles,
							a = n._.length,
							c = !!n["folder-uri"],
							l = !!n["file-uri"],
							u = n["skip-add-to-recently-opened"] === !0,
							d =
								n.wait && n.waitMarkerFilePath
									? P.file(n.waitMarkerFilePath)
									: void 0,
							f = n.remote || void 0,
							p = n.profile,
							v = n["profile-temp"];
						if (!a && !c && !l) {
							if (n["new-window"] || p || v)
								return s.open({
									context: r,
									cli: n,
									forceNewWindow: !0,
									forceEmpty: !0,
									noRecentEntry: u,
									waitMarkerFileURI: d,
									initialStartup: !0,
									remoteAuthority: f,
									forceProfile: p,
									forceTempProfile: v,
								});
							if (o.length)
								return s.open({
									context: 1,
									cli: n,
									urisToOpen: o.map(
										(g) => (
											(g = eo(g)),
											on(g)
												? { workspaceUri: P.file(g) }
												: { fileUri: P.file(g) }
										),
									),
									noRecentEntry: u,
									waitMarkerFileURI: d,
									initialStartup: !0,
								});
						}
						return s.open({
							context: r,
							cli: n,
							forceNewWindow: n["new-window"],
							diffMode: n.diff,
							mergeMode: n.merge,
							noRecentEntry: u,
							waitMarkerFileURI: d,
							gotoLineMode: n.goto,
							initialStartup: !0,
							remoteAuthority: f,
							forceProfile: p,
							forceTempProfile: v,
						});
					}
					S() {
						this.U(),
							m8.registerHttpProtocol(R.vscodeRemoteResource, (e, i) => {
								i({
									url: e.url.replace(/^vscode-remote-resource:/, "http:"),
									method: e.method,
								});
							}),
							this.W(this.q.args, process.env, !0),
							this.X(),
							N &&
								Ln.runningUnderARM64Translation &&
								this.b?.sendToFocused("vscode:showTranslatedBuildWarning");
					}
					async U() {
						const e = this.y.win32MutexName;
						if (T && e)
							try {
								const i = await import("@vscode/windows-mutex"),
									s = new i.Mutex(e);
								x.once(this.s.onWillShutdown)(() => s.release());
							} catch (i) {
								this.m.error(i);
							}
					}
					async W(e, i, s) {
						try {
							return await J1(this.t, this.m, e, i);
						} catch (r) {
							const n = Es(r);
							s
								? this.b?.sendToFocused("vscode:showResolveShellEnvError", n)
								: this.m.error(n);
						}
						return {};
					}
					async X() {
						try {
							const i = (
									await this.w.readFile(this.q.argvResource)
								).value.toString(),
								s = k0(i),
								n = _m(this.t) >= 1;
							if (s["enable-crash-reporter"] === void 0) {
								const o = [
										"",
										"	// Allows to disable crash reporting.",
										"	// Should restart the app if the value is changed.",
										`	"enable-crash-reporter": ${n},`,
										"",
										"	// Unique id used for correlating crash reports sent from this instance.",
										"	// Do not edit this value.",
										`	"crash-reporter-id": "${fi()}"`,
										"}",
									],
									a = i.substring(0, i.length - 2).concat(
										`,
`,
										o.join(`
`),
									);
								await this.w.writeFile(this.q.argvResource, H.fromString(a));
							} else {
								const o = i.replace(
									/"enable-crash-reporter": .*,/,
									`"enable-crash-reporter": ${n},`,
								);
								o !== i &&
									(await this.w.writeFile(
										this.q.argvResource,
										H.fromString(o),
									));
							}
						} catch (e) {
							this.m.error(e),
								this.b?.sendToFocused("vscode:showArgvParseWarning");
						}
					}
					Y() {
						hC(this.u, this.m);
					}
				}),
				(jd = Wg =
					__decorate(
						[
							__param(2, ws),
							__param(3, G),
							__param(4, ec),
							__param(5, ut),
							__param(6, Ne),
							__param(7, He),
							__param(8, Ii),
							__param(9, nt),
							__param(10, tt),
							__param(11, Cs),
						],
						jd,
					));
		},
	});
function cl(t) {
	return Object.isFrozen(t) ? t : rD(t);
}
function Mr(t, e) {
	const {
			added: i,
			removed: s,
			updated: r,
		} = w8(e?.rawConfiguration, t?.rawConfiguration),
		n = [],
		o = t?.getAllOverrideIdentifiers() || [],
		a = e?.getAllOverrideIdentifiers() || [];
	if (e) {
		const c = a.filter((l) => !o.includes(l));
		for (const l of c) n.push([l, e.getKeysForOverrideIdentifier(l)]);
	}
	if (t) {
		const c = o.filter((l) => !a.includes(l));
		for (const l of c) n.push([l, t.getKeysForOverrideIdentifier(l)]);
	}
	if (e && t) {
		for (const c of o)
			if (a.includes(c)) {
				const l = w8(
					{
						contents: t.getOverrideValue(void 0, c) || {},
						keys: t.getKeysForOverrideIdentifier(c),
					},
					{
						contents: e.getOverrideValue(void 0, c) || {},
						keys: e.getKeysForOverrideIdentifier(c),
					},
				);
				n.push([c, [...l.added, ...l.removed, ...l.updated]]);
			}
	}
	return { added: i, removed: s, updated: r, overrides: n };
}
function w8(t, e) {
	const i = t
			? e
				? t.keys.filter((n) => e.keys.indexOf(n) === -1)
				: [...t.keys]
			: [],
		s = e
			? t
				? e.keys.filter((n) => t.keys.indexOf(n) === -1)
				: [...e.keys]
			: [],
		r = [];
	if (t && e) {
		for (const n of e.keys)
			if (t.keys.indexOf(n) !== -1) {
				const o = Vl(e.contents, n),
					a = Vl(t.contents, n);
				_s(o, a) || r.push(n);
			}
	}
	return { added: i, removed: s, updated: r };
}
var ht,
	jg,
	v8,
	y8,
	Td,
	b8,
	E8 = m({
		"out-build/vs/platform/configuration/common/configurationModels.js"() {
			"use strict";
			Ut(),
				q(),
				ir(),
				F(),
				xi(),
				ns(),
				Ie(),
				ie(),
				Ve(),
				Xr(),
				Gs(),
				(ht = class jn {
					static createEmptyModel(e) {
						return new jn({}, [], [], void 0, e);
					}
					constructor(e, i, s, r, n) {
						(this.b = e),
							(this.c = i),
							(this.d = s),
							(this.raw = r),
							(this.f = n),
							(this.a = new Map());
					}
					get rawConfiguration() {
						if (!this.g)
							if (this.raw?.length) {
								const e = this.raw.map((i) => {
									if (i instanceof jn) return i;
									const s = new jg("", this.f);
									return s.parseRaw(i), s.configurationModel;
								});
								this.g = e.reduce((i, s) => (s === i ? s : i.merge(s)), e[0]);
							} else this.g = this;
						return this.g;
					}
					get contents() {
						return this.b;
					}
					get overrides() {
						return this.d;
					}
					get keys() {
						return this.c;
					}
					isEmpty() {
						return (
							this.c.length === 0 &&
							Object.keys(this.b).length === 0 &&
							this.d.length === 0
						);
					}
					getValue(e) {
						return e ? Vl(this.contents, e) : this.contents;
					}
					inspect(e, i) {
						const s = this;
						return {
							get value() {
								return cl(s.rawConfiguration.getValue(e));
							},
							get override() {
								return i
									? cl(s.rawConfiguration.getOverrideValue(e, i))
									: void 0;
							},
							get merged() {
								return cl(
									i
										? s.rawConfiguration.override(i).getValue(e)
										: s.rawConfiguration.getValue(e),
								);
							},
							get overrides() {
								const r = [];
								for (const { contents: n, identifiers: o, keys: a } of s
									.rawConfiguration.overrides) {
									const c = new jn(n, a, [], void 0, s.f).getValue(e);
									c !== void 0 && r.push({ identifiers: o, value: c });
								}
								return r.length ? cl(r) : void 0;
							},
						};
					}
					getOverrideValue(e, i) {
						const s = this.j(i);
						return s ? (e ? Vl(s, e) : s) : void 0;
					}
					getKeysForOverrideIdentifier(e) {
						const i = [];
						for (const s of this.overrides)
							s.identifiers.includes(e) && i.push(...s.keys);
						return Zi(i);
					}
					getAllOverrideIdentifiers() {
						const e = [];
						for (const i of this.overrides) e.push(...i.identifiers);
						return Zi(e);
					}
					override(e) {
						let i = this.a.get(e);
						return i || ((i = this.h(e)), this.a.set(e, i)), i;
					}
					merge(...e) {
						const i = rs(this.contents),
							s = rs(this.overrides),
							r = [...this.keys],
							n = this.raw?.length ? [...this.raw] : [this];
						for (const o of e)
							if ((n.push(...(o.raw?.length ? o.raw : [o])), !o.isEmpty())) {
								this.i(i, o.contents);
								for (const a of o.overrides) {
									const [c] = s.filter((l) => ba(l.identifiers, a.identifiers));
									c
										? (this.i(c.contents, a.contents),
											c.keys.push(...a.keys),
											(c.keys = Zi(c.keys)))
										: s.push(rs(a));
								}
								for (const a of o.keys) r.indexOf(a) === -1 && r.push(a);
							}
						return new jn(
							i,
							r,
							s,
							n.every((o) => o instanceof jn) ? void 0 : n,
							this.f,
						);
					}
					h(e) {
						const i = this.j(e);
						if (!i || typeof i != "object" || !Object.keys(i).length)
							return this;
						const s = {};
						for (const r of Zi([
							...Object.keys(this.contents),
							...Object.keys(i),
						])) {
							let n = this.contents[r];
							const o = i[r];
							o &&
								(typeof n == "object" && typeof o == "object"
									? ((n = rs(n)), this.i(n, o))
									: (n = o)),
								(s[r] = n);
						}
						return new jn(s, this.keys, this.overrides, void 0, this.f);
					}
					i(e, i) {
						for (const s of Object.keys(i)) {
							if (s in e && Lt(e[s]) && Lt(i[s])) {
								this.i(e[s], i[s]);
								continue;
							}
							e[s] = rs(i[s]);
						}
					}
					j(e) {
						let i = null,
							s = null;
						const r = (n) => {
							n && (s ? this.i(s, n) : (s = rs(n)));
						};
						for (const n of this.overrides)
							n.identifiers.length === 1 && n.identifiers[0] === e
								? (i = n.contents)
								: n.identifiers.includes(e) && r(n.contents);
						return r(i), s;
					}
					toJSON() {
						return {
							contents: this.contents,
							overrides: this.overrides,
							keys: this.keys,
						};
					}
					addValue(e, i) {
						this.k(e, i, !0);
					}
					setValue(e, i) {
						this.k(e, i, !1);
					}
					removeValue(e) {
						const i = this.keys.indexOf(e);
						i !== -1 &&
							(this.keys.splice(i, 1),
							sS(this.contents, e),
							vs.test(e) &&
								this.overrides.splice(
									this.overrides.findIndex((s) => ba(s.identifiers, $a(e))),
									1,
								));
					}
					k(e, i, s) {
						if (
							(Gw(this.contents, e, i, (r) => this.f.error(r)),
							(s = s || this.keys.indexOf(e) === -1),
							s && this.keys.push(e),
							vs.test(e))
						) {
							const r = $a(e),
								n = {
									identifiers: r,
									keys: Object.keys(this.contents[e]),
									contents: ep(this.contents[e], (a) => this.f.error(a)),
								},
								o = this.overrides.findIndex((a) => ba(a.identifiers, r));
							o !== -1 ? (this.overrides[o] = n) : this.overrides.push(n);
						}
					}
				}),
				(jg = class {
					constructor(t, e) {
						(this.f = t),
							(this.g = e),
							(this.a = null),
							(this.b = null),
							(this.c = []),
							(this.d = []);
					}
					get configurationModel() {
						return this.b || ht.createEmptyModel(this.g);
					}
					get restrictedConfigurations() {
						return this.c;
					}
					get errors() {
						return this.d;
					}
					parse(t, e) {
						if (!Yt(t)) {
							const i = this.h(t);
							this.parseRaw(i, e);
						}
					}
					reparse(t) {
						this.a && this.parseRaw(this.a, t);
					}
					parseRaw(t, e) {
						this.a = t;
						const {
							contents: i,
							keys: s,
							overrides: r,
							restricted: n,
							hasExcludedProperties: o,
						} = this.i(t, e);
						(this.b = new ht(i, s, r, o ? [t] : void 0, this.g)),
							(this.c = n || []);
					}
					h(t) {
						let e = {},
							i = null,
							s = [];
						const r = [],
							n = [];
						function o(c) {
							Array.isArray(s) ? s.push(c) : i !== null && (s[i] = c);
						}
						const a = {
							onObjectBegin: () => {
								const c = {};
								o(c), r.push(s), (s = c), (i = null);
							},
							onObjectProperty: (c) => {
								i = c;
							},
							onObjectEnd: () => {
								s = r.pop();
							},
							onArrayBegin: () => {
								const c = [];
								o(c), r.push(s), (s = c), (i = null);
							},
							onArrayEnd: () => {
								s = r.pop();
							},
							onLiteralValue: o,
							onError: (c, l, u) => {
								n.push({ error: c, offset: l, length: u });
							},
						};
						if (t)
							try {
								th(t, a), (e = s[0] || {});
							} catch (c) {
								this.g.error(
									`Error while parsing settings file ${this.f}: ${c}`,
								),
									(this.d = [c]);
							}
						return e;
					}
					i(t, e) {
						const i = zt.as(Pi.Configuration).getConfigurationProperties(),
							s = this.j(t, i, !0, e);
						t = s.raw;
						const r = ep(t, (a) =>
								this.g.error(`Conflict in settings file ${this.f}: ${a}`),
							),
							n = Object.keys(t),
							o = this.m(t, (a) =>
								this.g.error(`Conflict in settings file ${this.f}: ${a}`),
							);
						return {
							contents: r,
							keys: n,
							overrides: o,
							restricted: s.restricted,
							hasExcludedProperties: s.hasExcludedProperties,
						};
					}
					j(t, e, i, s) {
						let r = !1;
						if (!s?.scopes && !s?.skipRestricted && !s?.exclude?.length)
							return { raw: t, restricted: [], hasExcludedProperties: r };
						const n = {},
							o = [];
						for (const a in t)
							if (vs.test(a) && i) {
								const c = this.j(t[a], e, !1, s);
								(n[a] = c.raw),
									(r = r || c.hasExcludedProperties),
									o.push(...c.restricted);
							} else {
								const c = e[a];
								c?.restricted && o.push(a),
									this.l(a, c, s) ? (n[a] = t[a]) : (r = !0);
							}
						return { raw: n, restricted: o, hasExcludedProperties: r };
					}
					l(t, e, i) {
						if (i.exclude?.includes(t)) return !1;
						if (i.include?.includes(t)) return !0;
						if (
							(i.skipRestricted && e?.restricted) ||
							(i.skipUnregistered && !e)
						)
							return !1;
						const s = e ? (typeof e.scope < "u" ? e.scope : 3) : void 0;
						return s === void 0 || i.scopes === void 0
							? !0
							: i.scopes.includes(s);
					}
					m(t, e) {
						const i = [];
						for (const s of Object.keys(t))
							if (vs.test(s)) {
								const r = {};
								for (const n in t[s]) r[n] = t[s][n];
								i.push({
									identifiers: $a(s),
									keys: Object.keys(r),
									contents: ep(r, e),
								});
							}
						return i;
					}
				}),
				(v8 = class extends j {
					constructor(t, e, i, s, r) {
						super(),
							(this.c = t),
							(this.f = e),
							(this.g = s),
							(this.h = r),
							(this.b = this.D(new $())),
							(this.onDidChange = this.b.event),
							(this.a = new jg(this.c.toString(), r)),
							this.D(this.g.watch(i.dirname(this.c))),
							this.D(this.g.watch(this.c)),
							this.D(
								x.any(
									x.filter(this.g.onDidFilesChange, (n) => n.contains(this.c)),
									x.filter(
										this.g.onDidRunOperation,
										(n) =>
											(n.isOperation(0) ||
												n.isOperation(3) ||
												n.isOperation(1) ||
												n.isOperation(4)) &&
											i.isEqual(n.resource, t),
									),
								)(() => this.b.fire()),
							);
					}
					async loadConfiguration() {
						try {
							const t = await this.g.readFile(this.c);
							return (
								this.a.parse(t.value.toString() || "{}", this.f),
								this.a.configurationModel
							);
						} catch {
							return ht.createEmptyModel(this.h);
						}
					}
					reparse(t) {
						return (
							t && (this.f = t),
							this.a.reparse(this.f),
							this.a.configurationModel
						);
					}
					getRestrictedSettings() {
						return this.a.restrictedConfigurations;
					}
				}),
				(y8 = class {
					constructor(t, e, i, s, r, n, o, a, c, l, u, d, f) {
						(this.a = t),
							(this.b = e),
							(this.c = i),
							(this.overrideIdentifiers = s),
							(this.d = r),
							(this.f = n),
							(this.g = o),
							(this.h = a),
							(this.i = c),
							(this.j = l),
							(this.k = u),
							(this.l = d),
							(this.m = f);
					}
					get value() {
						return cl(this.c);
					}
					n(t) {
						return t?.value !== void 0 ||
							t?.override !== void 0 ||
							t?.overrides !== void 0
							? t
							: void 0;
					}
					get q() {
						return (
							this.p ||
								(this.p = this.d.inspect(this.a, this.b.overrideIdentifier)),
							this.p
						);
					}
					get defaultValue() {
						return this.q.merged;
					}
					get default() {
						return this.n(this.q);
					}
					get s() {
						return (
							this.r === void 0 &&
								(this.r = this.f ? this.f.inspect(this.a) : null),
							this.r
						);
					}
					get policyValue() {
						return this.s?.merged;
					}
					get policy() {
						return this.s?.value !== void 0 ? { value: this.s.value } : void 0;
					}
					get u() {
						return (
							this.t === void 0 &&
								(this.t = this.g ? this.g.inspect(this.a) : null),
							this.t
						);
					}
					get applicationValue() {
						return this.u?.merged;
					}
					get application() {
						return this.n(this.u);
					}
					get w() {
						return (
							this.v ||
								(this.v = this.h.inspect(this.a, this.b.overrideIdentifier)),
							this.v
						);
					}
					get userValue() {
						return this.w.merged;
					}
					get user() {
						return this.n(this.w);
					}
					get y() {
						return (
							this.x ||
								(this.x = this.i.inspect(this.a, this.b.overrideIdentifier)),
							this.x
						);
					}
					get userLocalValue() {
						return this.y.merged;
					}
					get userLocal() {
						return this.n(this.y);
					}
					get A() {
						return (
							this.z ||
								(this.z = this.j.inspect(this.a, this.b.overrideIdentifier)),
							this.z
						);
					}
					get userRemoteValue() {
						return this.A.merged;
					}
					get userRemote() {
						return this.n(this.A);
					}
					get D() {
						return (
							this.B === void 0 &&
								(this.B = this.k
									? this.k.inspect(this.a, this.b.overrideIdentifier)
									: null),
							this.B
						);
					}
					get workspaceValue() {
						return this.D?.merged;
					}
					get workspace() {
						return this.n(this.D);
					}
					get F() {
						return (
							this.E === void 0 &&
								(this.E = this.l
									? this.l.inspect(this.a, this.b.overrideIdentifier)
									: null),
							this.E
						);
					}
					get workspaceFolderValue() {
						return this.F?.merged;
					}
					get workspaceFolder() {
						return this.n(this.F);
					}
					get H() {
						return (
							this.G === void 0 &&
								(this.G = this.m.inspect(this.a, this.b.overrideIdentifier)),
							this.G
						);
					}
					get memoryValue() {
						return this.H.merged;
					}
					get memory() {
						return this.n(this.H);
					}
				}),
				(Td = class Y3 {
					constructor(e, i, s, r, n, o, a, c, l, u) {
						(this.j = e),
							(this.l = i),
							(this.m = s),
							(this.n = r),
							(this.p = n),
							(this.q = o),
							(this.r = a),
							(this.s = c),
							(this.t = l),
							(this.u = u),
							(this.h = null),
							(this.i = new qt()),
							(this.v = null);
					}
					getValue(e, i, s) {
						return this.w(e, i, s).getValue(e);
					}
					updateValue(e, i, s = {}) {
						let r;
						s.resource
							? ((r = this.t.get(s.resource)),
								r ||
									((r = ht.createEmptyModel(this.u)),
									this.t.set(s.resource, r)))
							: (r = this.s),
							i === void 0 ? r.removeValue(e) : r.setValue(e, i),
							s.resource || (this.h = null);
					}
					inspect(e, i, s) {
						const r = this.w(e, i, s),
							n = this.A(i.resource, s),
							o = i.resource ? this.t.get(i.resource) || this.s : this.s,
							a = new Set();
						for (const c of r.overrides)
							for (const l of c.identifiers)
								r.getOverrideValue(e, l) !== void 0 && a.add(l);
						return new y8(
							e,
							i,
							r.getValue(e),
							a.size ? [...a] : void 0,
							this.j,
							this.l.isEmpty() ? void 0 : this.l,
							this.applicationConfiguration.isEmpty()
								? void 0
								: this.applicationConfiguration,
							this.userConfiguration,
							this.localUserConfiguration,
							this.remoteUserConfiguration,
							s ? this.q : void 0,
							n || void 0,
							o,
						);
					}
					keys(e) {
						const i = this.A(void 0, e);
						return {
							default: this.j.keys.slice(0),
							user: this.userConfiguration.keys.slice(0),
							workspace: this.q.keys.slice(0),
							workspaceFolder: i ? i.keys.slice(0) : [],
						};
					}
					updateDefaultConfiguration(e) {
						(this.j = e), (this.h = null), this.i.clear();
					}
					updatePolicyConfiguration(e) {
						this.l = e;
					}
					updateApplicationConfiguration(e) {
						(this.m = e), (this.h = null), this.i.clear();
					}
					updateLocalUserConfiguration(e) {
						(this.n = e), (this.v = null), (this.h = null), this.i.clear();
					}
					updateRemoteUserConfiguration(e) {
						(this.p = e), (this.v = null), (this.h = null), this.i.clear();
					}
					updateWorkspaceConfiguration(e) {
						(this.q = e), (this.h = null), this.i.clear();
					}
					updateFolderConfiguration(e, i) {
						this.r.set(e, i), this.i.delete(e);
					}
					deleteFolderConfiguration(e) {
						this.folderConfigurations.delete(e), this.i.delete(e);
					}
					compareAndUpdateDefaultConfiguration(e, i) {
						const s = [];
						if (!i) {
							const { added: r, updated: n, removed: o } = Mr(this.j, e);
							i = [...r, ...n, ...o];
						}
						for (const r of i)
							for (const n of $a(r)) {
								const o = this.j.getKeysForOverrideIdentifier(n),
									a = e.getKeysForOverrideIdentifier(n),
									c = [
										...a.filter((l) => o.indexOf(l) === -1),
										...o.filter((l) => a.indexOf(l) === -1),
										...o.filter(
											(l) =>
												!_s(
													this.j.override(n).getValue(l),
													e.override(n).getValue(l),
												),
										),
									];
								s.push([n, c]);
							}
						return (
							this.updateDefaultConfiguration(e), { keys: i, overrides: s }
						);
					}
					compareAndUpdatePolicyConfiguration(e) {
						const { added: i, updated: s, removed: r } = Mr(this.l, e),
							n = [...i, ...s, ...r];
						return (
							n.length && this.updatePolicyConfiguration(e),
							{ keys: n, overrides: [] }
						);
					}
					compareAndUpdateApplicationConfiguration(e) {
						const {
								added: i,
								updated: s,
								removed: r,
								overrides: n,
							} = Mr(this.applicationConfiguration, e),
							o = [...i, ...s, ...r];
						return (
							o.length && this.updateApplicationConfiguration(e),
							{ keys: o, overrides: n }
						);
					}
					compareAndUpdateLocalUserConfiguration(e) {
						const {
								added: i,
								updated: s,
								removed: r,
								overrides: n,
							} = Mr(this.localUserConfiguration, e),
							o = [...i, ...s, ...r];
						return (
							o.length && this.updateLocalUserConfiguration(e),
							{ keys: o, overrides: n }
						);
					}
					compareAndUpdateRemoteUserConfiguration(e) {
						const {
								added: i,
								updated: s,
								removed: r,
								overrides: n,
							} = Mr(this.remoteUserConfiguration, e),
							o = [...i, ...s, ...r];
						return (
							o.length && this.updateRemoteUserConfiguration(e),
							{ keys: o, overrides: n }
						);
					}
					compareAndUpdateWorkspaceConfiguration(e) {
						const {
								added: i,
								updated: s,
								removed: r,
								overrides: n,
							} = Mr(this.workspaceConfiguration, e),
							o = [...i, ...s, ...r];
						return (
							o.length && this.updateWorkspaceConfiguration(e),
							{ keys: o, overrides: n }
						);
					}
					compareAndUpdateFolderConfiguration(e, i) {
						const s = this.folderConfigurations.get(e),
							{ added: r, updated: n, removed: o, overrides: a } = Mr(s, i),
							c = [...r, ...n, ...o];
						return (
							(c.length || !s) && this.updateFolderConfiguration(e, i),
							{ keys: c, overrides: a }
						);
					}
					compareAndDeleteFolderConfiguration(e) {
						const i = this.folderConfigurations.get(e);
						if (!i) throw new Error("Unknown folder");
						this.deleteFolderConfiguration(e);
						const {
							added: s,
							updated: r,
							removed: n,
							overrides: o,
						} = Mr(i, void 0);
						return { keys: [...s, ...r, ...n], overrides: o };
					}
					get defaults() {
						return this.j;
					}
					get applicationConfiguration() {
						return this.m;
					}
					get userConfiguration() {
						return (
							this.v ||
								(this.v = this.p.isEmpty() ? this.n : this.n.merge(this.p)),
							this.v
						);
					}
					get localUserConfiguration() {
						return this.n;
					}
					get remoteUserConfiguration() {
						return this.p;
					}
					get workspaceConfiguration() {
						return this.q;
					}
					get folderConfigurations() {
						return this.r;
					}
					w(e, i, s) {
						let r = this.x(i, s);
						return (
							i.overrideIdentifier && (r = r.override(i.overrideIdentifier)),
							!this.l.isEmpty() &&
								this.l.getValue(e) !== void 0 &&
								(r = r.merge(this.l)),
							r
						);
					}
					x({ resource: e }, i) {
						let s = this.y();
						if (i && e) {
							const r = i.getFolder(e);
							r && (s = this.z(r.uri) || s);
							const n = this.t.get(e);
							n && (s = s.merge(n));
						}
						return s;
					}
					y() {
						return (
							this.h ||
								(this.h = this.j.merge(
									this.applicationConfiguration,
									this.userConfiguration,
									this.q,
									this.s,
								)),
							this.h
						);
					}
					z(e) {
						let i = this.i.get(e);
						if (!i) {
							const s = this.y(),
								r = this.r.get(e);
							r ? ((i = s.merge(r)), this.i.set(e, i)) : (i = s);
						}
						return i;
					}
					A(e, i) {
						if (i && e) {
							const s = i.getFolder(e);
							if (s) return this.r.get(s.uri);
						}
					}
					toData() {
						return {
							defaults: {
								contents: this.j.contents,
								overrides: this.j.overrides,
								keys: this.j.keys,
							},
							policy: {
								contents: this.l.contents,
								overrides: this.l.overrides,
								keys: this.l.keys,
							},
							application: {
								contents: this.applicationConfiguration.contents,
								overrides: this.applicationConfiguration.overrides,
								keys: this.applicationConfiguration.keys,
							},
							user: {
								contents: this.userConfiguration.contents,
								overrides: this.userConfiguration.overrides,
								keys: this.userConfiguration.keys,
							},
							workspace: {
								contents: this.q.contents,
								overrides: this.q.overrides,
								keys: this.q.keys,
							},
							folders: [...this.r.keys()].reduce((e, i) => {
								const { contents: s, overrides: r, keys: n } = this.r.get(i);
								return e.push([i, { contents: s, overrides: r, keys: n }]), e;
							}, []),
						};
					}
					allKeys() {
						const e = new Set();
						return (
							this.j.keys.forEach((i) => e.add(i)),
							this.userConfiguration.keys.forEach((i) => e.add(i)),
							this.q.keys.forEach((i) => e.add(i)),
							this.r.forEach((i) => i.keys.forEach((s) => e.add(s))),
							[...e.values()]
						);
					}
					B() {
						const e = new Set();
						return (
							this.j.getAllOverrideIdentifiers().forEach((i) => e.add(i)),
							this.userConfiguration
								.getAllOverrideIdentifiers()
								.forEach((i) => e.add(i)),
							this.q.getAllOverrideIdentifiers().forEach((i) => e.add(i)),
							this.r.forEach((i) =>
								i.getAllOverrideIdentifiers().forEach((s) => e.add(s)),
							),
							[...e.values()]
						);
					}
					D(e) {
						const i = new Set();
						return (
							this.j.getKeysForOverrideIdentifier(e).forEach((s) => i.add(s)),
							this.userConfiguration
								.getKeysForOverrideIdentifier(e)
								.forEach((s) => i.add(s)),
							this.q.getKeysForOverrideIdentifier(e).forEach((s) => i.add(s)),
							this.r.forEach((s) =>
								s.getKeysForOverrideIdentifier(e).forEach((r) => i.add(r)),
							),
							[...i.values()]
						);
					}
					static parse(e, i) {
						const s = this.E(e.defaults, i),
							r = this.E(e.policy, i),
							n = this.E(e.application, i),
							o = this.E(e.user, i),
							a = this.E(e.workspace, i),
							c = e.folders.reduce(
								(l, u) => (l.set(P.revive(u[0]), this.E(u[1], i)), l),
								new qt(),
							);
						return new Y3(
							s,
							r,
							n,
							o,
							ht.createEmptyModel(i),
							a,
							c,
							ht.createEmptyModel(i),
							new qt(),
							i,
						);
					}
					static E(e, i) {
						return new ht(e.contents, e.keys, e.overrides, void 0, i);
					}
				}),
				(b8 = class {
					constructor(t, e, i, s, r) {
						(this.change = t),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							(this.i = r),
							(this.a = `
`),
							(this.b = this.a.charCodeAt(0)),
							(this.c = 46),
							(this.affectedKeys = new Set()),
							(this.j = void 0);
						for (const n of t.keys) this.affectedKeys.add(n);
						for (const [, n] of t.overrides)
							for (const o of n) this.affectedKeys.add(o);
						this.d = this.a;
						for (const n of this.affectedKeys) this.d += n + this.a;
					}
					get previousConfiguration() {
						return (
							!this.j && this.f && (this.j = Td.parse(this.f.data, this.i)),
							this.j
						);
					}
					affectsConfiguration(t, e) {
						const i = this.a + t,
							s = this.d.indexOf(i);
						if (s < 0) return !1;
						const r = s + i.length;
						if (r >= this.d.length) return !1;
						const n = this.d.charCodeAt(r);
						if (n !== this.b && n !== this.c) return !1;
						if (e) {
							const o = this.previousConfiguration
									? this.previousConfiguration.getValue(t, e, this.f?.workspace)
									: void 0,
								a = this.g.getValue(t, e, this.h);
							return !_s(o, a);
						}
						return !0;
					}
				});
		},
	}),
	S8,
	k8,
	Ud,
	$L = m({
		"out-build/vs/platform/configuration/common/configurations.js"() {
			"use strict";
			Ut(),
				q(),
				F(),
				ns(),
				Ie(),
				E8(),
				Xr(),
				Q(),
				Rs(),
				Gs(),
				Ae(),
				ir(),
				(S8 = class extends j {
					get configurationModel() {
						return this.b;
					}
					constructor(t) {
						super(),
							(this.c = t),
							(this.a = this.D(new $())),
							(this.onDidChangeConfiguration = this.a.event),
							(this.b = ht.createEmptyModel(this.c));
					}
					async initialize() {
						return (
							this.h(),
							this.D(
								zt
									.as(Pi.Configuration)
									.onDidUpdateConfiguration(
										({ properties: t, defaultsOverrides: e }) =>
											this.f(Array.from(t), e),
									),
							),
							this.configurationModel
						);
					}
					reload() {
						return this.h(), this.configurationModel;
					}
					f(t, e) {
						this.j(t, zt.as(Pi.Configuration).getConfigurationProperties()),
							this.a.fire({ defaults: this.configurationModel, properties: t });
					}
					g() {
						return {};
					}
					h() {
						this.b = ht.createEmptyModel(this.c);
						const t = zt.as(Pi.Configuration).getConfigurationProperties();
						this.j(Object.keys(t), t);
					}
					j(t, e) {
						const i = this.g();
						for (const s of t) {
							const r = i[s],
								n = e[s];
							r !== void 0
								? this.b.setValue(s, r)
								: n
									? this.b.setValue(s, n.default)
									: this.b.removeValue(s);
						}
					}
				}),
				(k8 = class {
					constructor() {
						(this.onDidChangeConfiguration = x.None),
							(this.configurationModel = ht.createEmptyModel(new fb()));
					}
					async initialize() {
						return this.configurationModel;
					}
				}),
				(Ud = class extends j {
					get configurationModel() {
						return this.b;
					}
					constructor(e, i, s) {
						super(),
							(this.c = e),
							(this.f = i),
							(this.g = s),
							(this.a = this.D(new $())),
							(this.onDidChangeConfiguration = this.a.event),
							(this.b = ht.createEmptyModel(this.g));
					}
					async initialize() {
						return (
							this.g.trace("PolicyConfiguration#initialize"),
							this.m(await this.h(this.c.configurationModel.keys), !1),
							this.D(this.f.onDidChange((e) => this.j(e))),
							this.D(
								this.c.onDidChangeConfiguration(async ({ properties: e }) =>
									this.m(await this.h(e), !0),
								),
							),
							this.b
						);
					}
					async h(e) {
						this.g.trace("PolicyConfiguration#updatePolicyDefinitions", e);
						const i = {},
							s = [],
							r = zt.as(Pi.Configuration).getConfigurationProperties();
						for (const n of e) {
							const o = r[n];
							if (!o) {
								s.push(n);
								continue;
							}
							if (o.policy) {
								if (
									o.type !== "string" &&
									o.type !== "number" &&
									o.type !== "array" &&
									o.type !== "object"
								) {
									this.g.warn(
										`Policy ${o.policy.name} has unsupported type ${o.type}`,
									);
									continue;
								}
								s.push(n),
									(i[o.policy.name] = {
										type: o.type === "number" ? "number" : "string",
									});
							}
						}
						return Hf(i) || (await this.f.updatePolicyDefinitions(i)), s;
					}
					j(e) {
						this.g.trace("PolicyConfiguration#onDidChangePolicies", e);
						const i = zt.as(Pi.Configuration).getPolicyConfigurations(),
							s = Dt(e.map((r) => i.get(r)));
						this.m(s, !0);
					}
					m(e, i) {
						this.g.trace("PolicyConfiguration#update", e);
						const s = zt.as(Pi.Configuration).getConfigurationProperties(),
							r = [],
							n = this.b.isEmpty();
						for (const o of e) {
							const a = s[o],
								c = a?.policy?.name;
							if (c) {
								let l = this.f.getPolicyValue(c);
								if (mt(l) && a.type !== "string")
									try {
										l = this.n(l);
									} catch (u) {
										this.g.error(`Error parsing policy value ${c}:`, Bi(u));
										continue;
									}
								(n ? l !== void 0 : !_s(this.b.getValue(o), l)) &&
									r.push([o, l]);
							} else this.b.getValue(o) !== void 0 && r.push([o, void 0]);
						}
						if (r.length) {
							this.g.trace("PolicyConfiguration#changed", r);
							const o = this.b;
							this.b = ht.createEmptyModel(this.g);
							for (const a of o.keys) this.b.setValue(a, o.getValue(a));
							for (const [a, c] of r)
								c === void 0 ? this.b.removeValue(a) : this.b.setValue(a, c);
							i && this.a.fire(this.b);
						}
					}
					n(e) {
						let i = {},
							s = null,
							r = [];
						const n = [],
							o = [];
						function a(l) {
							if (Array.isArray(r)) r.push(l);
							else if (s !== null) {
								if (r[s] !== void 0)
									throw new Error(`Duplicate property found: ${s}`);
								r[s] = l;
							}
						}
						if (
							(e &&
								(th(e, {
									onObjectBegin: () => {
										const l = {};
										a(l), n.push(r), (r = l), (s = null);
									},
									onObjectProperty: (l) => {
										s = l;
									},
									onObjectEnd: () => {
										r = n.pop();
									},
									onArrayBegin: () => {
										const l = [];
										a(l), n.push(r), (r = l), (s = null);
									},
									onArrayEnd: () => {
										r = n.pop();
									},
									onLiteralValue: a,
									onError: (l, u, d) => {
										o.push({ error: l, offset: u, length: d });
									},
								}),
								(i = r[0] || {})),
							o.length > 0)
						)
							throw new Error(
								o
									.map((l) => Bi(l.error))
									.join(`
`),
							);
						return i;
					}
				}),
				(Ud = __decorate([__param(1, xn), __param(2, G)], Ud));
		},
	}),
	x8,
	D8,
	AL = m({
		"out-build/vs/platform/configuration/common/configurationService.js"() {
			"use strict";
			Ut(),
				ae(),
				Je(),
				q(),
				ir(),
				Z4(),
				F(),
				xi(),
				ns(),
				z(),
				rt(),
				Ve(),
				E8(),
				Xr(),
				$L(),
				Rs(),
				(x8 = class extends j {
					constructor(t, e, i, s) {
						super(),
							(this.m = t),
							(this.n = s),
							(this.h = this.D(new $())),
							(this.onDidChangeConfiguration = this.h.event),
							(this.b = this.D(new S8(s))),
							(this.c =
								i instanceof Cm ? new k8() : this.D(new Ud(this.b, i, s))),
							(this.f = this.D(new v8(this.m, {}, Ze, e, s))),
							(this.a = new Td(
								this.b.configurationModel,
								this.c.configurationModel,
								ht.createEmptyModel(s),
								ht.createEmptyModel(s),
								ht.createEmptyModel(s),
								ht.createEmptyModel(s),
								new qt(),
								ht.createEmptyModel(s),
								new qt(),
								s,
							)),
							(this.j = new D8(t, e, this)),
							(this.g = this.D(new bs(() => this.reloadConfiguration(), 50))),
							this.D(
								this.b.onDidChangeConfiguration(
									({ defaults: r, properties: n }) => this.r(r, n),
								),
							),
							this.D(this.c.onDidChangeConfiguration((r) => this.s(r))),
							this.D(this.f.onDidChange(() => this.g.schedule()));
					}
					async initialize() {
						const [t, e, i] = await Promise.all([
							this.b.initialize(),
							this.c.initialize(),
							this.f.loadConfiguration(),
						]);
						this.a = new Td(
							t,
							e,
							ht.createEmptyModel(this.n),
							i,
							ht.createEmptyModel(this.n),
							ht.createEmptyModel(this.n),
							new qt(),
							ht.createEmptyModel(this.n),
							new qt(),
							this.n,
						);
					}
					getConfigurationData() {
						return this.a.toData();
					}
					getValue(t, e) {
						const i = typeof t == "string" ? t : void 0,
							s = Zf(t) ? t : Zf(e) ? e : {};
						return this.a.getValue(i, s, void 0);
					}
					async updateValue(t, e, i, s, r) {
						const n = iS(i)
								? i
								: Zf(i)
									? {
											resource: i.resource,
											overrideIdentifiers: i.overrideIdentifier
												? [i.overrideIdentifier]
												: void 0,
										}
									: void 0,
							o = n ? s : i;
						if (o !== void 0 && o !== 3 && o !== 2)
							throw new Error(`Unable to write ${t} to target ${o}.`);
						n?.overrideIdentifiers &&
							((n.overrideIdentifiers = Zi(n.overrideIdentifiers)),
							(n.overrideIdentifiers = n.overrideIdentifiers.length
								? n.overrideIdentifiers
								: void 0));
						const a = this.inspect(t, {
							resource: n?.resource,
							overrideIdentifier: n?.overrideIdentifiers
								? n.overrideIdentifiers[0]
								: void 0,
						});
						if (a.policyValue !== void 0)
							throw new Error(
								`Unable to write ${t} because it is configured in system policy.`,
							);
						if (
							(_s(e, a.defaultValue) && (e = void 0),
							n?.overrideIdentifiers?.length &&
								n.overrideIdentifiers.length > 1)
						) {
							const l = n.overrideIdentifiers.sort(),
								u = this.a.localUserConfiguration.overrides.find((d) =>
									ba([...d.identifiers].sort(), l),
								);
							u && (n.overrideIdentifiers = u.identifiers);
						}
						const c = n?.overrideIdentifiers?.length
							? [hS(n.overrideIdentifiers), t]
							: [t];
						await this.j.write(c, e), await this.reloadConfiguration();
					}
					inspect(t, e = {}) {
						return this.a.inspect(t, e, void 0);
					}
					keys() {
						return this.a.keys(void 0);
					}
					async reloadConfiguration() {
						const t = await this.f.loadConfiguration();
						this.q(t);
					}
					q(t) {
						const e = this.a.toData(),
							i = this.a.compareAndUpdateLocalUserConfiguration(t);
						this.t(i, e, 2);
					}
					r(t, e) {
						const i = this.a.toData(),
							s = this.a.compareAndUpdateDefaultConfiguration(t, e);
						this.t(s, i, 7);
					}
					s(t) {
						const e = this.a.toData(),
							i = this.a.compareAndUpdatePolicyConfiguration(t);
						this.t(i, e, 7);
					}
					t(t, e, i) {
						const s = new b8(t, { data: e }, this.a, void 0, this.n);
						(s.source = i), this.h.fire(s);
					}
				}),
				(D8 = class {
					constructor(t, e, i) {
						(this.b = t), (this.c = e), (this.d = i), (this.a = new Qn());
					}
					write(t, e) {
						return this.a.queue(() => this.e(t, e));
					}
					async e(t, e) {
						let i;
						try {
							i = (await this.c.readFile(this.b)).value.toString();
						} catch (n) {
							if (n.fileOperationResult === 1) i = "{}";
							else throw n;
						}
						const s = [];
						if (
							(fn(i, s, { allowTrailingComma: !0, allowEmptyContent: !0 }),
							s.length > 0)
						)
							throw new Error(
								"Unable to write into the settings file. Please open the file to correct errors/warnings in the file and try again.",
							);
						const r = this.f(i, t, e);
						(i = gD(i, r)), await this.c.writeFile(this.b, H.fromString(i));
					}
					f(t, e, i) {
						const { tabSize: s, insertSpaces: r, eol: n } = this.h;
						if (!e.length) {
							const o = JSON.stringify(i, null, r ? " ".repeat(s) : "	");
							return [{ content: o, length: o.length, offset: 0 }];
						}
						return mD(t, e, i, { tabSize: s, insertSpaces: r, eol: n });
					}
					get h() {
						if (!this.g) {
							let t =
								Ri === 3 || Ri === 2
									? `
`
									: `\r
`;
							const e = this.d.getValue("files.eol", {
								overrideIdentifier: "jsonc",
							});
							e && typeof e == "string" && e !== "auto" && (t = e),
								(this.g = {
									eol: t,
									insertSpaces: !!this.d.getValue("editor.insertSpaces", {
										overrideIdentifier: "jsonc",
									}),
									tabSize: this.d.getValue("editor.tabSize", {
										overrideIdentifier: "jsonc",
									}),
								});
						}
						return this.g;
					}
				});
		},
	});
import * as IL from "fs";
import * as vi from "os";
async function Tg(t, e) {
	const i = `${t}::${e.join(":")}`,
		s = qg.get(i);
	if (s) return s;
	const r = [
			{ tag: "grunt.js", filePattern: /^gruntfile\.js$/i },
			{ tag: "gulp.js", filePattern: /^gulpfile\.js$/i },
			{ tag: "tsconfig.json", filePattern: /^tsconfig\.json$/i },
			{ tag: "package.json", filePattern: /^package\.json$/i },
			{ tag: "jsconfig.json", filePattern: /^jsconfig\.json$/i },
			{ tag: "tslint.json", filePattern: /^tslint\.json$/i },
			{ tag: "eslint.json", filePattern: /^eslint\.json$/i },
			{ tag: "tasks.json", filePattern: /^tasks\.json$/i },
			{ tag: "launch.json", filePattern: /^launch\.json$/i },
			{ tag: "settings.json", filePattern: /^settings\.json$/i },
			{ tag: "webpack.config.js", filePattern: /^webpack\.config\.js$/i },
			{ tag: "project.json", filePattern: /^project\.json$/i },
			{ tag: "makefile", filePattern: /^makefile$/i },
			{ tag: "sln", filePattern: /^.+\.sln$/i },
			{ tag: "csproj", filePattern: /^.+\.csproj$/i },
			{ tag: "cmake", filePattern: /^.+\.cmake$/i },
			{
				tag: "github-actions",
				filePattern: /^.+\.ya?ml$/i,
				relativePathPattern: /^\.github(?:\/|\\)workflows$/i,
			},
			{ tag: "devcontainer.json", filePattern: /^devcontainer\.json$/i },
			{
				tag: "dockerfile",
				filePattern: /^(dockerfile|docker\-compose\.ya?ml)$/i,
			},
			{ tag: "cursorrules", filePattern: /^\.cursorrules$/i },
		],
		n = new Map(),
		o = new Map(),
		a = 2e4;
	function c(u, d, f, p) {
		const v = d.substring(u.length + 1);
		return Nt.withAsyncBody(async (g) => {
			let b;
			p.readdirCount++;
			try {
				b = await ee.readdir(d, { withFileTypes: !0 });
			} catch {
				g();
				return;
			}
			if (p.count >= a) {
				(p.count += b.length), (p.maxReached = !0), g();
				return;
			}
			let y = b.length;
			if (y === 0) {
				g();
				return;
			}
			let k = b;
			p.count + b.length > a &&
				((p.maxReached = !0), (y = a - p.count), (k = b.slice(0, y))),
				(p.count += b.length);
			for (const I of k)
				if (I.isDirectory()) {
					if (
						(f.includes(I.name) || (await c(u, M(d, I.name), f, p)), --y === 0)
					) {
						g();
						return;
					}
				} else {
					const C = I.name.lastIndexOf(".");
					if (C >= 0) {
						const _ = I.name.substring(C + 1);
						_ && n.set(_, (n.get(_) ?? 0) + 1);
					}
					for (const _ of r)
						_.relativePathPattern?.test(v) !== !1 &&
							_.filePattern.test(I.name) &&
							o.set(_.tag, (o.get(_.tag) ?? 0) + 1);
					if (--y === 0) {
						g();
						return;
					}
				}
		});
	}
	const l = Nt.withAsyncBody(async (u) => {
		const d = { count: 0, maxReached: !1, readdirCount: 0 },
			f = new Hr(!0);
		await c(t, t, e, d);
		const p = await _L(t);
		u({
			configFiles: Ug(o),
			fileTypes: Ug(n),
			fileCount: d.count,
			maxFilesReached: d.maxReached,
			launchConfigFiles: p,
			totalScanTime: f.elapsed(),
			totalReaddirCount: d.readdirCount,
		});
	});
	return qg.set(i, l), l;
}
function Ug(t) {
	return Array.from(t.entries(), ([e, i]) => ({ name: e, count: i })).sort(
		(e, i) => i.count - e.count,
	);
}
function CL() {
	const t = {
			os: `${vi.type()} ${vi.arch()} ${vi.release()}`,
			memory: `${(vi.totalmem() / nn.GB).toFixed(2)}GB (${(vi.freemem() / nn.GB).toFixed(2)}GB free)`,
			vmHint: `${Math.round(kh.value() * 100)}%`,
		},
		e = vi.cpus();
	return (
		e &&
			e.length > 0 &&
			(t.cpus = `${e[0].model} (${e.length} x ${e[0].speed})`),
		t
	);
}
async function _L(t) {
	try {
		const e = new Map(),
			i = M(t, ".vscode", "launch.json"),
			s = await IL.promises.readFile(i),
			r = [],
			n = fn(s.toString(), r);
		if (r.length) return console.log(`Unable to parse ${i}`), [];
		if (ko(n) === "object" && n.configurations)
			for (const o of n.configurations) {
				const a = o.type;
				a && (e.has(a) ? e.set(a, e.get(a) + 1) : e.set(a, 1));
			}
		return Ug(e);
	} catch {
		return [];
	}
}
var qg,
	qd,
	RL = m({
		"out-build/vs/platform/diagnostics/node/diagnosticsService.js"() {
			"use strict";
			ae(),
				ir(),
				Ce(),
				ge(),
				z(),
				Gn(),
				ie(),
				Ac(),
				yt(),
				l5(),
				F1(),
				Be(),
				Ct(),
				St(),
				(qg = new Map()),
				(qd = class {
					constructor(e, i) {
						(this.c = e), (this.d = i);
					}
					f(e) {
						const i = [];
						return (
							i.push(`OS Version:       ${e.os}`),
							i.push(`CPUs:             ${e.cpus}`),
							i.push(`Memory (System):  ${e.memory}`),
							i.push(`VM:               ${e.vmHint}`),
							i.join(`
`)
						);
					}
					g(e) {
						const i = [];
						i.push(
							`Version:          ${this.d.nameShort} ${this.d.version} (${this.d.commit || "Commit unknown"}, ${this.d.date || "Date unknown"})`,
						),
							i.push(
								`OS Version:       ${vi.type()} ${vi.arch()} ${vi.release()}`,
							);
						const s = vi.cpus();
						return (
							s &&
								s.length > 0 &&
								i.push(
									`CPUs:             ${s[0].model} (${s.length} x ${s[0].speed})`,
								),
							i.push(
								`Memory (System):  ${(vi.totalmem() / nn.GB).toFixed(2)}GB (${(vi.freemem() / nn.GB).toFixed(2)}GB free)`,
							),
							T ||
								i.push(
									`Load (avg):       ${vi
										.loadavg()
										.map((r) => Math.round(r))
										.join(", ")}`,
								),
							i.push(`VM:               ${Math.round(kh.value() * 100)}%`),
							i.push(`Screen Reader:    ${e.screenReader ? "yes" : "no"}`),
							i.push(`Process Argv:     ${e.mainArguments.join(" ")}`),
							i.push(`GPU Status:       ${this.j(e.gpuFeatureStatus)}`),
							i.join(`
`)
						);
					}
					async getPerformanceInfo(e, i) {
						return Promise.all([fm(e.mainPID), this.k(e)]).then(async (s) => {
							let [r, n] = s,
								o = this.m(e, r);
							return (
								i.forEach((a) => {
									if (L1(a))
										(o += `
${a.errorMessage}`),
											(n += `
${a.errorMessage}`);
									else if (
										((o += `

Remote: ${a.hostName}`),
										a.processes &&
											(o += `
${this.m(e, a.processes)}`),
										a.workspaceMetadata)
									) {
										n += `
|  Remote: ${a.hostName}`;
										for (const c of Object.keys(a.workspaceMetadata)) {
											const l = a.workspaceMetadata[c];
											let u = `${l.fileCount} files`;
											l.maxFilesReached && (u = `more than ${u}`),
												(n += `|    Folder (${c}): ${u}`),
												(n += this.h(l));
										}
									}
								}),
								{ processInfo: o, workspaceInfo: n }
							);
						});
					}
					async getSystemInfo(e, i) {
						const { memory: s, vmHint: r, os: n, cpus: o } = CL(),
							a = {
								os: n,
								memory: s,
								cpus: o,
								vmHint: r,
								processArgs: `${e.mainArguments.join(" ")}`,
								gpuStatus: e.gpuFeatureStatus,
								screenReader: `${e.screenReader ? "yes" : "no"}`,
								remoteData: i,
							};
						return (
							T ||
								(a.load = `${vi
									.loadavg()
									.map((c) => Math.round(c))
									.join(", ")}`),
							Ee &&
								(a.linuxEnv = {
									desktopSession: process.env.DESKTOP_SESSION,
									xdgSessionDesktop: process.env.XDG_SESSION_DESKTOP,
									xdgCurrentDesktop: process.env.XDG_CURRENT_DESKTOP,
									xdgSessionType: process.env.XDG_SESSION_TYPE,
								}),
							Promise.resolve(a)
						);
					}
					async getDiagnostics(e, i) {
						const s = [];
						return fm(e.mainPID).then(
							async (r) => (
								s.push(""),
								s.push(this.g(e)),
								s.push(""),
								s.push(this.m(e, r)),
								e.windows.some(
									(n) =>
										n.folderURIs &&
										n.folderURIs.length > 0 &&
										!n.remoteAuthority,
								) &&
									(s.push(""),
									s.push("Workspace Stats: "),
									s.push(await this.k(e))),
								i.forEach((n) => {
									if (L1(n))
										s.push(`
${n.errorMessage}`);
									else if (
										(s.push(`

`),
										s.push(`Remote:           ${n.hostName}`),
										s.push(this.f(n.machineInfo)),
										n.processes && s.push(this.m(e, n.processes)),
										n.workspaceMetadata)
									)
										for (const o of Object.keys(n.workspaceMetadata)) {
											const a = n.workspaceMetadata[o];
											let c = `${a.fileCount} files`;
											a.maxFilesReached && (c = `more than ${c}`),
												s.push(`Folder (${o}): ${c}`),
												s.push(this.h(a));
										}
								}),
								s.push(""),
								s.push(""),
								s.join(`
`)
							),
						);
					}
					h(e) {
						const i = [];
						let r = 0;
						const n = (l, u) => {
							const d = ` ${l}(${u})`;
							r + d.length > 60
								? (i.push(o), (o = "|                 "), (r = o.length))
								: (r += d.length),
								(o += d);
						};
						let o = "|      File types:";
						const a = 10,
							c = e.fileTypes.length > a ? a : e.fileTypes.length;
						for (let l = 0; l < c; l++) {
							const u = e.fileTypes[l];
							n(u.name, u.count);
						}
						if (
							(i.push(o),
							e.configFiles.length >= 0 &&
								((o = "|      Conf files:"),
								(r = 0),
								e.configFiles.forEach((l) => {
									n(l.name, l.count);
								}),
								i.push(o)),
							e.launchConfigFiles.length > 0)
						) {
							let l = "|      Launch Configs:";
							e.launchConfigFiles.forEach((u) => {
								const d = u.count > 1 ? ` ${u.name}(${u.count})` : ` ${u.name}`;
								l += d;
							}),
								i.push(l);
						}
						return i.join(`
`);
					}
					j(e) {
						const i = Math.max(...Object.keys(e).map((s) => s.length));
						return Object.keys(e)
							.map((s) => `${s}:  ${" ".repeat(i - s.length)}  ${e[s]}`)
							.join(`
                  `);
					}
					k(e) {
						const i = [],
							s = [];
						return (
							e.windows.forEach((r) => {
								r.folderURIs.length === 0 ||
									r.remoteAuthority ||
									(i.push(`|  Window (${r.title})`),
									r.folderURIs.forEach((n) => {
										const o = P.revive(n);
										if (o.scheme === R.file) {
											const a = o.fsPath;
											s.push(
												Tg(a, ["node_modules", ".git"])
													.then((c) => {
														let l = `${c.fileCount} files`;
														c.maxFilesReached && (l = `more than ${l}`),
															i.push(`|    Folder (${Te(a)}): ${l}`),
															i.push(this.h(c));
													})
													.catch((c) => {
														i.push(
															`|      Error: Unable to collect workspace stats for folder ${a} (${c.toString()})`,
														);
													}),
											);
										} else
											i.push(
												`|    Folder (${o.toString()}): Workspace stats not available.`,
											);
									}));
							}),
							Promise.all(s)
								.then((r) =>
									i.join(`
`),
								)
								.catch((r) => `Unable to collect workspace stats: ${r}`)
						);
					}
					m(e, i) {
						const s = new Map();
						e.windows.forEach((n) =>
							s.set(n.pid, `window [${n.id}] (${n.title})`),
						),
							e.pidToNames.forEach(({ pid: n, name: o }) => s.set(n, o));
						const r = [];
						return (
							r.push("CPU %	Mem MB	   PID	Process"),
							i && this.n(e.mainPID, s, r, i, 0),
							r.join(`
`)
						);
					}
					n(e, i, s, r, n) {
						const o = n === 0;
						let a;
						o
							? (a =
									r.pid === e
										? `${this.d.applicationName} main`
										: "remote agent")
							: i.has(r.pid)
								? (a = i.get(r.pid))
								: (a = `${"  ".repeat(n)} ${r.name}`);
						const c =
							process.platform === "win32"
								? r.mem
								: vi.totalmem() * (r.mem / 100);
						s.push(
							`${r.load.toFixed(0).padStart(5, " ")}	${(c / nn.MB).toFixed(0).padStart(6, " ")}	${r.pid.toFixed(0).padStart(6, " ")}	${a}`,
						),
							Array.isArray(r.children) &&
								r.children.forEach((l) => this.n(e, i, s, l, n + 1));
					}
					async getWorkspaceFileExtensions(e) {
						const i = new Set();
						for (const { uri: s } of e.folders) {
							const r = P.revive(s);
							if (r.scheme !== R.file) continue;
							const n = r.fsPath;
							try {
								(await Tg(n, ["node_modules", ".git"])).fileTypes.forEach((a) =>
									i.add(a.name),
								);
							} catch {}
						}
						return { extensions: [...i] };
					}
					async reportWorkspaceStats(e) {
						for (const { uri: i } of e.folders) {
							const s = P.revive(i);
							if (s.scheme !== R.file) continue;
							const r = s.fsPath;
							try {
								const n = await Tg(r, ["node_modules", ".git"]);
								this.c.publicLog2("workspace.stats", {
									"workspace.id": e.telemetryId,
									rendererSessionId: e.rendererSessionId,
								}),
									n.fileTypes.forEach((o) => {
										this.c.publicLog2("workspace.stats.file", {
											rendererSessionId: e.rendererSessionId,
											type: o.name,
											count: o.count,
										});
									}),
									n.launchConfigFiles.forEach((o) => {
										this.c.publicLog2("workspace.stats.launchConfigFile", {
											rendererSessionId: e.rendererSessionId,
											type: o.name,
											count: o.count,
										});
									}),
									n.configFiles.forEach((o) => {
										this.c.publicLog2("workspace.stats.configFiles", {
											rendererSessionId: e.rendererSessionId,
											type: o.name,
											count: o.count,
										});
									}),
									this.c.publicLog2("workspace.stats.metadata", {
										duration: n.totalScanTime,
										reachedLimit: n.maxFilesReached,
										fileCount: n.fileCount,
										readdirCount: n.totalReaddirCount,
									});
							} catch {}
						}
					}
				}),
				(qd = __decorate([__param(0, It), __param(1, tt)], qd));
		},
	});
import { writeFileSync as OL } from "fs";
import { tmpdir as LL } from "os";
function ML(t) {
	const e = Ta(LL());
	try {
		return (
			OL(e, ""), t && console.log(`Marker file for --wait created: ${e}`), e
		);
	} catch (i) {
		t && console.error(`Failed to create marker file for --wait: ${i}`);
		return;
	}
}
var FL = m({
		"out-build/vs/platform/environment/node/wait.js"() {
			"use strict";
			hi();
		},
	}),
	Bg,
	Bd,
	NL = m({
		"out-build/vs/platform/files/common/fileService.js"() {
			"use strict";
			Ut(),
				ae(),
				Je(),
				Mt(),
				q(),
				Qs(),
				Ml(),
				F(),
				ho(),
				Ce(),
				qs(),
				rt(),
				Va(),
				ve(),
				Be(),
				H2(),
				Q(),
				Ae(),
				(Bd = class extends j {
					static {
						Bg = this;
					}
					constructor(e) {
						super(),
							(this.b = e),
							(this.a = 256 * 1024),
							(this.c = this.D(new $())),
							(this.onDidChangeFileSystemProviderRegistrations = this.c.event),
							(this.f = this.D(new $())),
							(this.onWillActivateFileSystemProvider = this.f.event),
							(this.g = this.D(new $())),
							(this.onDidChangeFileSystemProviderCapabilities = this.g.event),
							(this.h = new Map()),
							(this.q = this.D(new $())),
							(this.onDidRunOperation = this.q.event),
							(this.X = this.D(new $())),
							(this.Y = this.D(new $())),
							(this.onDidFilesChange = this.Y.event),
							(this.Z = this.D(new $())),
							(this.onDidWatchError = this.Z.event),
							(this.$ = new Map()),
							(this.cb = this.D(new yp()));
					}
					registerProvider(e, i) {
						if (this.h.has(e))
							throw new Error(
								`A filesystem provider for the scheme '${e}' is already registered.`,
							);
						Fe(`code/registerFilesystem/${e}`);
						const s = new De();
						return (
							this.h.set(e, i),
							this.c.fire({ added: !0, scheme: e, provider: i }),
							s.add(
								i.onDidChangeFile((r) => {
									const n = new Pb(r, !this.S(i));
									this.X.fire(n), n.hasCorrelation() || this.Y.fire(n);
								}),
							),
							typeof i.onDidWatchError == "function" &&
								s.add(i.onDidWatchError((r) => this.Z.fire(new Error(r)))),
							s.add(
								i.onDidChangeCapabilities(() =>
									this.g.fire({ provider: i, scheme: e }),
								),
							),
							ke(() => {
								this.c.fire({ added: !1, scheme: e, provider: i }),
									this.h.delete(e),
									vt(s);
							})
						);
					}
					getProvider(e) {
						return this.h.get(e);
					}
					async activateProvider(e) {
						const i = [];
						this.f.fire({
							scheme: e,
							join(s) {
								i.push(s);
							},
						}),
							!this.h.has(e) && (await Nt.settled(i));
					}
					async canHandleResource(e) {
						return await this.activateProvider(e.scheme), this.hasProvider(e);
					}
					hasProvider(e) {
						return this.h.has(e.scheme);
					}
					hasCapability(e, i) {
						const s = this.h.get(e.scheme);
						return !!(s && s.capabilities & i);
					}
					listCapabilities() {
						return qr.map(this.h, ([e, i]) => ({
							scheme: e,
							capabilities: i.capabilities,
						}));
					}
					async j(e) {
						if (!Dv(e)) throw new ei(w(1922, null, this.sb(e)), 8);
						await this.activateProvider(e.scheme);
						const i = this.h.get(e.scheme);
						if (!i) {
							const s = new Bs();
							throw ((s.message = w(1923, null, e.toString())), s);
						}
						return i;
					}
					async m(e) {
						const i = await this.j(e);
						if (xr(i) || Ji(i) || Qp(i)) return i;
						throw new Error(
							`Filesystem provider for scheme '${e.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`,
						);
					}
					async n(e) {
						const i = await this.j(e);
						if (xr(i) || Ji(i)) return i;
						throw new Error(
							`Filesystem provider for scheme '${e.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`,
						);
					}
					async resolve(e, i) {
						try {
							return await this.r(e, i);
						} catch (s) {
							throw xu(s) === ne.FileNotFound
								? new ei(w(1924, null, this.sb(e)), 1)
								: sn(s);
						}
					}
					async r(e, i) {
						const s = await this.j(e),
							r = this.S(s),
							n = i?.resolveTo,
							o = i?.resolveSingleChildDescendants,
							a = i?.resolveMetadata,
							c = await s.stat(e);
						let l;
						return this.s(
							s,
							e,
							c,
							void 0,
							!!a,
							(u, d) => (
								l ||
									((l = kr.forUris(() => !r)),
									l.set(e, !0),
									n && l.fill(!0, n)),
								l.get(u.resource) ||
								l.findSuperstr(u.resource.with({ query: null, fragment: null }))
									? !0
									: u.isDirectory && o
										? d === 1
										: !1
							),
						);
					}
					async s(e, i, s, r, n, o) {
						const { providerExtUri: a } = this.R(e),
							c = {
								resource: i,
								name: a.basename(i),
								isFile: (s.type & At.File) !== 0,
								isDirectory: (s.type & At.Directory) !== 0,
								isSymbolicLink: (s.type & At.SymbolicLink) !== 0,
								mtime: s.mtime,
								ctime: s.ctime,
								size: s.size,
								readonly:
									!!((s.permissions ?? 0) & po.Readonly) ||
									!!(e.capabilities & 2048),
								locked: !!((s.permissions ?? 0) & po.Locked),
								etag: Eb({ mtime: s.mtime, size: s.size }),
								children: void 0,
							};
						if (c.isDirectory && o(c, r)) {
							try {
								const l = await e.readdir(i),
									u = await Nt.settled(
										l.map(async ([d, f]) => {
											try {
												const p = a.joinPath(i, d),
													v = n ? await e.stat(p) : { type: f };
												return await this.s(e, p, v, l.length, n, o);
											} catch (p) {
												return this.b.trace(p), null;
											}
										}),
									);
								c.children = Dt(u);
							} catch (l) {
								this.b.trace(l), (c.children = []);
							}
							return c;
						}
						return c;
					}
					async resolveAll(e) {
						return Nt.settled(
							e.map(async (i) => {
								try {
									return {
										stat: await this.r(i.resource, i.options),
										success: !0,
									};
								} catch (s) {
									return this.b.trace(s), { stat: void 0, success: !1 };
								}
							}),
						);
					}
					async stat(e) {
						const i = await this.j(e),
							s = await i.stat(e);
						return this.s(i, e, s, void 0, !0, () => !1);
					}
					async exists(e) {
						const i = await this.j(e);
						try {
							return !!(await i.stat(e));
						} catch {
							return !1;
						}
					}
					async canCreateFile(e, i) {
						try {
							await this.t(e, i);
						} catch (s) {
							return s;
						}
						return !0;
					}
					async t(e, i) {
						if (!i?.overwrite && (await this.exists(e)))
							throw new ei(w(1925, null, this.sb(e)), 3, i);
					}
					async createFile(e, i = H.fromString(""), s) {
						await this.t(e, s);
						const r = await this.writeFile(e, i);
						return this.q.fire(new rn(e, 0, r)), r;
					}
					async writeFile(e, i, s) {
						const r = this.qb(await this.n(e), e),
							{ providerExtUri: n } = this.R(r);
						let o = s;
						if (bb(r) && !o?.atomic) {
							const a = r.enforceAtomicWriteFile?.(e);
							a && (o = { ...s, atomic: a });
						}
						try {
							(await this.u(r, e, o)) || (await this.U(r, n.dirname(e)));
							let c;
							if (Ji(r) && !(i instanceof H))
								if (eu(i)) {
									const l = await hk(i, 3);
									l.ended ? (c = H.concat(l.buffer)) : (c = l);
								} else c = uk(i, (l) => H.concat(l), 3);
							else c = i;
							!xr(r) ||
							(Ji(r) && c instanceof H) ||
							(Ji(r) && bb(r) && o?.atomic)
								? await this.hb(r, e, o, c)
								: await this.db(r, e, o, c instanceof H ? Ek(c) : c),
								this.q.fire(new rn(e, 4));
						} catch (a) {
							throw new ei(
								w(1926, null, this.sb(e), sn(a).toString()),
								Ds(a),
								o,
							);
						}
						return this.resolve(e, { resolveMetadata: !0 });
					}
					async u(e, i, s) {
						const r = !!s?.unlock;
						if (r && !(e.capabilities & 8192))
							throw new Error(w(1927, null, this.sb(i)));
						if (!!s?.atomic) {
							if (!(e.capabilities & 32768))
								throw new Error(w(1928, null, this.sb(i)));
							if (!(e.capabilities & 2))
								throw new Error(w(1929, null, this.sb(i)));
							if (r) throw new Error(w(1930, null, this.sb(i)));
						}
						let o;
						try {
							o = await e.stat(i);
						} catch {
							return;
						}
						if (o.type & At.Directory)
							throw new ei(w(1931, null, this.sb(i)), 0, s);
						if (
							(this.rb(i, o),
							typeof s?.mtime == "number" &&
								typeof s.etag == "string" &&
								s.etag !== Iu &&
								typeof o.mtime == "number" &&
								typeof o.size == "number" &&
								s.mtime < o.mtime &&
								s.etag !== Eb({ mtime: s.mtime, size: o.size }))
						)
							throw new ei(w(1932, null), 3, s);
						return o;
					}
					async readFile(e, i, s) {
						const r = await this.m(e);
						return i?.atomic ? this.w(r, e, i, s) : this.z(r, e, i, s);
					}
					async w(e, i, s, r) {
						return new Promise((n, o) => {
							this.cb.queueFor(
								i,
								async () => {
									try {
										const a = await this.z(e, i, s, r);
										n(a);
									} catch (a) {
										o(a);
									}
								},
								this.R(e).providerExtUri,
							);
						});
					}
					async z(e, i, s, r) {
						const n = await this.C(e, i, { ...s, preferUnbuffered: !0 }, r);
						return { ...n, value: await Ga(n.value) };
					}
					async readFileStream(e, i, s) {
						const r = await this.m(e);
						return this.C(r, e, i, s);
					}
					async C(e, i, s, r) {
						const n = new ts(r);
						let o = s;
						Zp(e) && e.enforceAtomicReadFile?.(i) && (o = { ...s, atomic: !0 });
						const a = this.J(i, o).then(
							(l) => l,
							(l) => {
								throw (n.dispose(!0), l);
							},
						);
						let c;
						try {
							return (
								typeof o?.etag == "string" && o.etag !== Iu && (await a),
								(o?.atomic && Zp(e)) ||
								!(xr(e) || Qp(e)) ||
								(Ji(e) && o?.preferUnbuffered)
									? (c = this.I(e, i, o))
									: Qp(e)
										? (c = this.G(e, i, n.token, o))
										: (c = this.H(e, i, n.token, o)),
								c.on("end", () => n.dispose()),
								c.on("error", () => n.dispose()),
								{ ...(await a), value: c }
							);
						} catch (l) {
							throw (c && (await Kv(c)), this.F(l, i, o));
						}
					}
					F(e, i, s) {
						const r = w(1933, null, this.sb(i), sn(e).toString());
						return e instanceof $u
							? new $u(r, e.stat, s)
							: e instanceof Pu
								? new Pu(r, e.fileOperationResult, e.size, e.options)
								: new ei(r, Ds(e), s);
					}
					G(e, i, s, r = Object.create(null)) {
						const n = e.readFileStream(i, r, s);
						return Yv(
							n,
							{
								data: (o) => (o instanceof H ? o : H.wrap(o)),
								error: (o) => this.F(o, i, r),
							},
							(o) => H.concat(o),
						);
					}
					H(e, i, s, r = Object.create(null)) {
						const n = xk();
						return (
							z2(
								e,
								i,
								n,
								(o) => o,
								{
									...r,
									bufferSize: this.a,
									errorTransformer: (o) => this.F(o, i, r),
								},
								s,
							),
							n
						);
					}
					I(e, i, s) {
						const r = tu((n) => H.concat(n));
						return (
							(async () => {
								try {
									let n;
									s?.atomic && Zp(e)
										? (n = await e.readFile(i, { atomic: !0 }))
										: (n = await e.readFile(i)),
										typeof s?.position == "number" && (n = n.slice(s.position)),
										typeof s?.length == "number" && (n = n.slice(0, s.length)),
										this.L(i, n.byteLength, s),
										r.end(H.wrap(n));
								} catch (n) {
									r.error(n), r.end();
								}
							})(),
							r
						);
					}
					async J(e, i) {
						const s = await this.resolve(e, { resolveMetadata: !0 });
						if (s.isDirectory) throw new ei(w(1934, null, this.sb(e)), 0, i);
						if (
							typeof i?.etag == "string" &&
							i.etag !== Iu &&
							i.etag === s.etag
						)
							throw new $u(w(1935, null), s, i);
						return this.L(e, s.size, i), s;
					}
					L(e, i, s) {
						if (typeof s?.limits?.size == "number" && i > s.limits.size)
							throw new Pu(w(1936, null, this.sb(e)), 7, i, s);
					}
					async canMove(e, i, s) {
						return this.M(e, i, "move", s);
					}
					async canCopy(e, i, s) {
						return this.M(e, i, "copy", s);
					}
					async M(e, i, s, r) {
						if (e.toString() !== i.toString())
							try {
								const n =
										s === "move"
											? this.qb(await this.n(e), e)
											: await this.m(e),
									o = this.qb(await this.n(i), i);
								await this.Q(n, e, o, i, s, r);
							} catch (n) {
								return n;
							}
						return !0;
					}
					async move(e, i, s) {
						const r = this.qb(await this.n(e), e),
							n = this.qb(await this.n(i), i),
							o = await this.N(r, e, n, i, "move", !!s),
							a = await this.resolve(i, { resolveMetadata: !0 });
						return this.q.fire(new rn(e, o === "move" ? 2 : 3, a)), a;
					}
					async copy(e, i, s) {
						const r = await this.m(e),
							n = this.qb(await this.n(i), i),
							o = await this.N(r, e, n, i, "copy", !!s),
							a = await this.resolve(i, { resolveMetadata: !0 });
						return this.q.fire(new rn(e, o === "copy" ? 3 : 2, a)), a;
					}
					async N(e, i, s, r, n, o) {
						if (i.toString() === r.toString()) return n;
						const { exists: a, isSameResourceWithDifferentPathCase: c } =
							await this.Q(e, i, s, r, n, o);
						if (
							(a && !c && o && (await this.del(r, { recursive: !0 })),
							await this.U(s, this.R(s).providerExtUri.dirname(r)),
							n === "copy")
						) {
							if (e === s && Yp(e)) await e.copy(i, r, { overwrite: o });
							else {
								const l = await this.resolve(i);
								l.isDirectory
									? await this.P(e, l, s, r)
									: await this.O(e, i, s, r);
							}
							return n;
						} else
							return e === s
								? (await e.rename(i, r, { overwrite: o }), n)
								: (await this.N(e, i, s, r, "copy", o),
									await this.del(i, { recursive: !0 }),
									"copy");
					}
					async O(e, i, s, r) {
						if (xr(e) && xr(s)) return this.jb(e, i, s, r);
						if (xr(e) && Ji(s)) return this.pb(e, i, s, r);
						if (Ji(e) && xr(s)) return this.nb(e, i, s, r);
						if (Ji(e) && Ji(s)) return this.lb(e, i, s, r);
					}
					async P(e, i, s, r) {
						await s.mkdir(r),
							Array.isArray(i.children) &&
								(await Nt.settled(
									i.children.map(async (n) => {
										const o = this.R(s).providerExtUri.joinPath(r, n.name);
										return n.isDirectory
											? this.P(e, await this.resolve(n.resource), s, o)
											: this.O(e, n.resource, s, o);
									}),
								));
					}
					async Q(e, i, s, r, n, o) {
						let a = !1;
						if (e === s) {
							const { providerExtUri: l, isPathCaseSensitive: u } = this.R(e);
							if ((u || (a = l.isEqual(i, r)), a && n === "copy"))
								throw new Error(w(1937, null, this.sb(i), this.sb(r)));
							if (!a && l.isEqualOrParent(r, i))
								throw new Error(w(1938, null, this.sb(i), this.sb(r)));
						}
						const c = await this.exists(r);
						if (c && !a) {
							if (!o) throw new ei(w(1939, null, this.sb(i), this.sb(r)), 4);
							if (e === s) {
								const { providerExtUri: l } = this.R(e);
								if (l.isEqualOrParent(i, r))
									throw new Error(w(1940, null, this.sb(i), this.sb(r)));
							}
						}
						return { exists: c, isSameResourceWithDifferentPathCase: a };
					}
					R(e) {
						const i = this.S(e);
						return { providerExtUri: i ? Se : hp, isPathCaseSensitive: i };
					}
					S(e) {
						return !!(e.capabilities & 1024);
					}
					async createFolder(e) {
						const i = this.qb(await this.j(e), e);
						await this.U(i, e);
						const s = await this.resolve(e, { resolveMetadata: !0 });
						return this.q.fire(new rn(e, 0, s)), s;
					}
					async U(e, i) {
						const s = [],
							{ providerExtUri: r } = this.R(e);
						for (; !r.isEqual(i, r.dirname(i)); )
							try {
								if (!((await e.stat(i)).type & At.Directory))
									throw new Error(w(1941, null, this.sb(i)));
								break;
							} catch (n) {
								if (xu(n) !== ne.FileNotFound) throw n;
								s.push(r.basename(i)), (i = r.dirname(i));
							}
						for (let n = s.length - 1; n >= 0; n--) {
							i = r.joinPath(i, s[n]);
							try {
								await e.mkdir(i);
							} catch (o) {
								if (xu(o) !== ne.FileExists) throw o;
							}
						}
					}
					async canDelete(e, i) {
						try {
							await this.W(e, i);
						} catch (s) {
							return s;
						}
						return !0;
					}
					async W(e, i) {
						const s = this.qb(await this.j(e), e),
							r = !!i?.useTrash;
						if (r && !(s.capabilities & 4096))
							throw new Error(w(1942, null, this.sb(e)));
						const n = i?.atomic;
						if (n && !(s.capabilities & 65536))
							throw new Error(w(1943, null, this.sb(e)));
						if (r && n) throw new Error(w(1944, null, this.sb(e)));
						let o;
						try {
							o = await s.stat(e);
						} catch {}
						if (o) this.rb(e, o);
						else throw new ei(w(1945, null, this.sb(e)), 1);
						if (!!!i?.recursive) {
							const c = await this.resolve(e);
							if (
								c.isDirectory &&
								Array.isArray(c.children) &&
								c.children.length > 0
							)
								throw new Error(w(1946, null, this.sb(e)));
						}
						return s;
					}
					async del(e, i) {
						const s = await this.W(e, i);
						let r = i;
						if (dx(s) && !r?.atomic) {
							const c = s.enforceAtomicDelete?.(e);
							c && (r = { ...i, atomic: c });
						}
						const n = !!r?.useTrash,
							o = !!r?.recursive,
							a = r?.atomic ?? !1;
						await s.delete(e, { recursive: o, useTrash: n, atomic: a }),
							this.q.fire(new rn(e, 1));
					}
					async cloneFile(e, i) {
						const s = await this.j(e),
							r = this.qb(await this.n(i), i);
						if (!(s === r && this.R(s).providerExtUri.isEqual(e, i)))
							return s === r && yb(s)
								? s.cloneFile(e, i)
								: (await this.U(r, this.R(r).providerExtUri.dirname(i)),
									s === r && Yp(s)
										? this.cb.queueFor(
												e,
												() => s.copy(e, i, { overwrite: !0 }),
												this.R(s).providerExtUri,
											)
										: this.cb.queueFor(
												e,
												() => this.O(s, e, r, i),
												this.R(s).providerExtUri,
											));
					}
					static {
						this.ab = 0;
					}
					createWatcher(e, i) {
						return this.watch(e, { ...i, correlationId: Bg.ab++ });
					}
					watch(e, i = { recursive: !1, excludes: [] }) {
						const s = new De();
						let r = !1,
							n = () => {
								r = !0;
							};
						s.add(ke(() => n())),
							(async () => {
								try {
									const a = await this.bb(e, i);
									r ? vt(a) : (n = () => vt(a));
								} catch (a) {
									this.b.error(a);
								}
							})();
						const o = i.correlationId;
						if (typeof o == "number") {
							const a = s.add(new $());
							return (
								s.add(
									this.X.event((l) => {
										l.correlates(o) && a.fire(l);
									}),
								),
								{ onDidChange: a.event, dispose: () => s.dispose() }
							);
						}
						return s;
					}
					async bb(e, i) {
						const s = await this.j(e),
							r = Ss([this.R(s).providerExtUri.getComparisonKey(e), i]);
						let n = this.$.get(r);
						return (
							n ||
								((n = { count: 0, disposable: s.watch(e, i) }),
								this.$.set(r, n)),
							(n.count += 1),
							ke(() => {
								n &&
									(n.count--,
									n.count === 0 && (vt(n.disposable), this.$.delete(r)));
							})
						);
					}
					dispose() {
						super.dispose();
						for (const [, e] of this.$) vt(e.disposable);
						this.$.clear();
					}
					async db(e, i, s, r) {
						return this.cb.queueFor(
							i,
							async () => {
								const n = await e.open(i, {
									create: !0,
									unlock: s?.unlock ?? !1,
								});
								try {
									eu(r) || Pp(r)
										? await this.eb(e, n, r)
										: await this.fb(e, n, r);
								} catch (o) {
									throw sn(o);
								} finally {
									await e.close(n);
								}
							},
							this.R(e).providerExtUri,
						);
					}
					async eb(e, i, s) {
						let r = 0,
							n;
						if (Pp(s)) {
							if (s.buffer.length > 0) {
								const o = H.concat(s.buffer);
								await this.gb(e, i, o, o.byteLength, r, 0), (r += o.byteLength);
							}
							if (s.ended) return;
							n = s.stream;
						} else n = s;
						return new Promise((o, a) => {
							iu(n, {
								onData: async (c) => {
									n.pause();
									try {
										await this.gb(e, i, c, c.byteLength, r, 0);
									} catch (l) {
										return a(l);
									}
									(r += c.byteLength), setTimeout(() => n.resume());
								},
								onError: (c) => a(c),
								onEnd: () => o(),
							});
						});
					}
					async fb(e, i, s) {
						let r = 0,
							n;
						for (; (n = s.read()) !== null; )
							await this.gb(e, i, n, n.byteLength, r, 0), (r += n.byteLength);
					}
					async gb(e, i, s, r, n, o) {
						let a = 0;
						for (; a < r; ) {
							const c = await e.write(i, n + a, s.buffer, o + a, r - a);
							a += c;
						}
					}
					async hb(e, i, s, r) {
						return this.cb.queueFor(
							i,
							() => this.ib(e, i, s, r),
							this.R(e).providerExtUri,
						);
					}
					async ib(e, i, s, r) {
						let n;
						r instanceof H
							? (n = r)
							: eu(r)
								? (n = await Ga(r))
								: Pp(r)
									? (n = await Sk(r))
									: (n = bk(r)),
							await e.writeFile(i, n.buffer, {
								create: !0,
								overwrite: !0,
								unlock: s?.unlock ?? !1,
								atomic: s?.atomic ?? !1,
							});
					}
					async jb(e, i, s, r) {
						return this.cb.queueFor(
							r,
							() => this.kb(e, i, s, r),
							this.R(s).providerExtUri,
						);
					}
					async kb(e, i, s, r) {
						let n, o;
						try {
							(n = await e.open(i, { create: !1 })),
								(o = await s.open(r, { create: !0, unlock: !1 }));
							const a = H.alloc(this.a);
							let c = 0,
								l = 0,
								u = 0;
							do
								(u = await e.read(n, c, a.buffer, l, a.byteLength - l)),
									await this.gb(s, o, a, u, c, l),
									(c += u),
									(l += u),
									l === a.byteLength && (l = 0);
							while (u > 0);
						} catch (a) {
							throw sn(a);
						} finally {
							await Nt.settled([
								typeof n == "number" ? e.close(n) : Promise.resolve(),
								typeof o == "number" ? s.close(o) : Promise.resolve(),
							]);
						}
					}
					async lb(e, i, s, r) {
						return this.cb.queueFor(
							r,
							() => this.mb(e, i, s, r),
							this.R(s).providerExtUri,
						);
					}
					async mb(e, i, s, r) {
						return s.writeFile(r, await e.readFile(i), {
							create: !0,
							overwrite: !0,
							unlock: !1,
							atomic: !1,
						});
					}
					async nb(e, i, s, r) {
						return this.cb.queueFor(
							r,
							() => this.ob(e, i, s, r),
							this.R(s).providerExtUri,
						);
					}
					async ob(e, i, s, r) {
						const n = await s.open(r, { create: !0, unlock: !1 });
						try {
							const o = await e.readFile(i);
							await this.gb(s, n, H.wrap(o), o.byteLength, 0, 0);
						} catch (o) {
							throw sn(o);
						} finally {
							await s.close(n);
						}
					}
					async pb(e, i, s, r) {
						const n = await Ga(this.H(e, i, Ge.None));
						await this.hb(s, r, void 0, n);
					}
					qb(e, i) {
						if (e.capabilities & 2048)
							throw new ei(w(1947, null, this.sb(i)), 6);
						return e;
					}
					rb(e, i) {
						if ((i.permissions ?? 0) & po.Readonly)
							throw new ei(w(1948, null, this.sb(e)), 6);
					}
					sb(e) {
						return e.scheme === R.file ? e.fsPath : e.toString(!0);
					}
				}),
				(Bd = Bg = __decorate([__param(0, G)], Bd));
		},
	}),
	P8,
	zg,
	WL = m({
		"out-build/vs/platform/instantiation/common/graph.js"() {
			"use strict";
			(P8 = class {
				constructor(t, e) {
					(this.key = t),
						(this.data = e),
						(this.incoming = new Map()),
						(this.outgoing = new Map());
				}
			}),
				(zg = class {
					constructor(t) {
						(this.b = t), (this.a = new Map());
					}
					roots() {
						const t = [];
						for (const e of this.a.values()) e.outgoing.size === 0 && t.push(e);
						return t;
					}
					insertEdge(t, e) {
						const i = this.lookupOrInsertNode(t),
							s = this.lookupOrInsertNode(e);
						i.outgoing.set(s.key, s), s.incoming.set(i.key, i);
					}
					removeNode(t) {
						const e = this.b(t);
						this.a.delete(e);
						for (const i of this.a.values())
							i.outgoing.delete(e), i.incoming.delete(e);
					}
					lookupOrInsertNode(t) {
						const e = this.b(t);
						let i = this.a.get(e);
						return i || ((i = new P8(e, t)), this.a.set(e, i)), i;
					}
					lookup(t) {
						return this.a.get(this.b(t));
					}
					isEmpty() {
						return this.a.size === 0;
					}
					toString() {
						const t = [];
						for (const [e, i] of this.a)
							t.push(`${e}
	(-> incoming)[${[...i.incoming.keys()].join(", ")}]
	(outgoing ->)[${[...i.outgoing.keys()].join(",")}]
`);
						return t.join(`
`);
					}
					findCycleSlow() {
						for (const [t, e] of this.a) {
							const i = new Set([t]),
								s = this.c(e, i);
							if (s) return s;
						}
					}
					c(t, e) {
						for (const [i, s] of t.outgoing) {
							if (e.has(i)) return [...e, i].join(" -> ");
							e.add(i);
							const r = this.c(s, e);
							if (r) return r;
							e.delete(i);
						}
					}
				});
		},
	}),
	$8,
	Hg,
	A8,
	I8,
	zd,
	jL = m({
		"out-build/vs/platform/instantiation/common/instantiationService.js"() {
			"use strict";
			ae(),
				Ae(),
				F(),
				yh(),
				WL(),
				Y(),
				hm(),
				gw(),
				($8 = !1),
				(Hg = class extends Error {
					constructor(t, e) {
						super("cyclic dependency between services"),
							(this.message =
								`REASON: ${e}
` +
								(t.findCycleSlow() ??
									`UNABLE to detect cycle, dumping graph: 
${t.toString()}`));
					}
				}),
				(A8 = class p0 {
					constructor(e = new bh(), i = !1, s, r = $8) {
						(this.i = e),
							(this.j = i),
							(this.k = s),
							(this.l = r),
							(this.f = !1),
							(this.g = new Set()),
							(this.h = new Set()),
							(this.t = new Set()),
							this.i.set(ws, this),
							(this._globalGraph = r
								? (s?._globalGraph ?? new zg((n) => n))
								: void 0);
					}
					dispose() {
						if (!this.f) {
							(this.f = !0), vt(this.h), this.h.clear();
							for (const e of this.g) UE(e) && e.dispose();
							this.g.clear();
						}
					}
					m() {
						if (this.f)
							throw new Error("InstantiationService has been disposed");
					}
					createChild(e, i) {
						this.m();
						const s = this,
							r = new (class extends p0 {
								dispose() {
									s.h.delete(r), super.dispose();
								}
							})(e, this.j, this, this.l);
						return this.h.add(r), i?.add(r), r;
					}
					invokeFunction(e, ...i) {
						this.m();
						const s = zd.traceInvocation(this.l, e);
						let r = !1;
						try {
							return e(
								{
									get: (o) => {
										if (r)
											throw Z0(
												"service accessor is only valid during the invocation of its target method",
											);
										const a = this.s(o, s);
										if (!a)
											throw new Error(
												`[invokeFunction] unknown service '${o}'`,
											);
										return a;
									},
								},
								...i,
							);
						} finally {
							(r = !0), s.stop();
						}
					}
					createInstance(e, ...i) {
						this.m();
						let s, r;
						return (
							e instanceof le
								? ((s = zd.traceCreation(this.l, e.ctor)),
									(r = this.o(e.ctor, e.staticArguments.concat(i), s)))
								: ((s = zd.traceCreation(this.l, e)), (r = this.o(e, i, s))),
							s.stop(),
							r
						);
					}
					o(e, i = [], s) {
						const r = es
								.getServiceDependencies(e)
								.sort((a, c) => a.index - c.index),
							n = [];
						for (const a of r) {
							const c = this.s(a.id, s);
							c ||
								this.y(
									`[createInstance] ${e.name} depends on UNKNOWN service ${a.id}.`,
									!1,
								),
								n.push(c);
						}
						const o = r.length > 0 ? r[0].index : i.length;
						if (i.length !== o) {
							console.trace(
								`[createInstance] First service dependency of ${e.name} at position ${o + 1} conflicts with ${i.length} static arguments`,
							);
							const a = o - i.length;
							a > 0 ? (i = i.concat(new Array(a))) : (i = i.slice(0, o));
						}
						return Reflect.construct(e, i.concat(n));
					}
					q(e, i) {
						if (this.i.get(e) instanceof le) this.i.set(e, i);
						else if (this.k) this.k.q(e, i);
						else
							throw new Error(
								"illegalState - setting UNKNOWN service instance",
							);
					}
					r(e) {
						const i = this.i.get(e);
						return !i && this.k ? this.k.r(e) : i;
					}
					s(e, i) {
						this._globalGraph &&
							this.c &&
							this._globalGraph.insertEdge(this.c, String(e));
						const s = this.r(e);
						return s instanceof le
							? this.u(e, s, i.branch(e, !0))
							: (i.branch(e, !1), s);
					}
					u(e, i, s) {
						if (this.t.has(e))
							throw new Error(
								`illegal state - RECURSIVELY instantiating service '${e}'`,
							);
						this.t.add(e);
						try {
							return this.v(e, i, s);
						} finally {
							this.t.delete(e);
						}
					}
					v(e, i, s) {
						const r = new zg((c) => c.id.toString());
						let n = 0;
						const o = [{ id: e, desc: i, _trace: s }],
							a = new Set();
						for (; o.length; ) {
							const c = o.pop();
							if (!a.has(String(c.id))) {
								if ((a.add(String(c.id)), r.lookupOrInsertNode(c), n++ > 1e4))
									throw new Hg(r, "cycle count more than 1000");
								for (const l of es.getServiceDependencies(c.desc.ctor)) {
									const u = this.r(l.id);
									if (
										(u ||
											this.y(
												`[createInstance] ${e} depends on ${l.id} which is NOT registered.`,
												!0,
											),
										this._globalGraph?.insertEdge(String(c.id), String(l.id)),
										u instanceof le)
									) {
										const d = {
											id: l.id,
											desc: u,
											_trace: c._trace.branch(l.id, !0),
										};
										r.insertEdge(c, d), o.push(d);
									}
								}
							}
						}
						for (;;) {
							const c = r.roots();
							if (c.length === 0) {
								if (!r.isEmpty())
									throw new Hg(r, "no more roots but still nodes in the graph");
								break;
							}
							for (const { data: l } of c) {
								if (this.r(l.id) instanceof le) {
									const d = this.w(
										l.id,
										l.desc.ctor,
										l.desc.staticArguments,
										l.desc.supportsDelayedInstantiation,
										l._trace,
									);
									this.q(l.id, d);
								}
								r.removeNode(l);
							}
						}
						return this.r(e);
					}
					w(e, i, s = [], r, n) {
						if (this.i.get(e) instanceof le)
							return this.x(e, i, s, r, n, this.g);
						if (this.k) return this.k.w(e, i, s, r, n);
						throw new Error(
							`illegalState - creating UNKNOWN service instance ${i.name}`,
						);
					}
					x(e, i, s = [], r, n, o) {
						if (r) {
							const a = new p0(void 0, this.j, this, this.l);
							a.c = String(e);
							const c = new Map(),
								l = new Mv(() => {
									const u = a.o(i, s, n);
									for (const [d, f] of c) {
										const p = u[d];
										if (typeof p == "function")
											for (const v of f) v.disposable = p.apply(u, v.listener);
									}
									return c.clear(), o.add(u), u;
								});
							return new Proxy(Object.create(null), {
								get(u, d) {
									if (
										!l.isInitialized &&
										typeof d == "string" &&
										(d.startsWith("onDid") || d.startsWith("onWill"))
									) {
										let v = c.get(d);
										return (
											v || ((v = new Uf()), c.set(d, v)),
											(b, y, k) => {
												if (l.isInitialized) return l.value[d](b, y, k);
												{
													const I = { listener: [b, y, k], disposable: void 0 },
														C = v.push(I);
													return ke(() => {
														C(), I.disposable?.dispose();
													});
												}
											}
										);
									}
									if (d in u) return u[d];
									const f = l.value;
									let p = f[d];
									return (
										typeof p != "function" || ((p = p.bind(f)), (u[d] = p)), p
									);
								},
								set(u, d, f) {
									return (l.value[d] = f), !0;
								},
								getPrototypeOf(u) {
									return i.prototype;
								},
							});
						} else {
							const a = this.o(i, s, n);
							return o.add(a), a;
						}
					}
					y(e, i) {
						if ((i && console.warn(e), this.j)) throw new Error(e);
					}
				}),
				(function (t) {
					(t[(t.None = 0)] = "None"),
						(t[(t.Creation = 1)] = "Creation"),
						(t[(t.Invocation = 2)] = "Invocation"),
						(t[(t.Branch = 3)] = "Branch");
				})(I8 || (I8 = {})),
				(zd = class Ws {
					static {
						this.all = new Set();
					}
					static {
						this.c = new (class extends Ws {
							constructor() {
								super(0, null);
							}
							stop() {}
							branch() {
								return this;
							}
						})();
					}
					static traceInvocation(e, i) {
						return e
							? new Ws(
									2,
									i.name ||
										new Error().stack
											.split(`
`)
											.slice(3, 4)
											.join(`
`),
								)
							: Ws.c;
					}
					static traceCreation(e, i) {
						return e ? new Ws(1, i.name) : Ws.c;
					}
					static {
						this.f = 0;
					}
					constructor(e, i) {
						(this.type = e),
							(this.name = i),
							(this.g = Date.now()),
							(this.h = []);
					}
					branch(e, i) {
						const s = new Ws(3, e.toString());
						return this.h.push([e, i, s]), s;
					}
					stop() {
						const e = Date.now() - this.g;
						Ws.f += e;
						let i = !1;
						function s(n, o) {
							const a = [],
								c = new Array(n + 1).join("	");
							for (const [l, u, d] of o.h)
								if (u && d) {
									(i = !0), a.push(`${c}CREATES -> ${l}`);
									const f = s(n + 1, d);
									f && a.push(f);
								} else a.push(`${c}uses -> ${l}`);
							return a.join(`
`);
						}
						const r = [
							`${this.type === 1 ? "CREATE" : "CALL"} ${this.name}`,
							`${s(1, this)}`,
							`DONE, took ${e.toFixed(2)}ms (grand total ${Ws.f.toFixed(2)}ms)`,
						];
						(e > 2 || i) &&
							Ws.all.add(
								r.join(`
`),
							);
					}
				});
		},
	}),
	C8,
	TL = m({
		"out-build/vs/platform/log/common/bufferLog.js"() {
			"use strict";
			F(),
				Q(),
				(C8 = class extends Xp {
					constructor(t = tc) {
						super(),
							(this.n = []),
							(this.q = void 0),
							(this.r = this.D(new zr())),
							this.setLevel(t);
					}
					set logger(t) {
						(this.q = t),
							this.setLevel(t.getLevel()),
							(this.r.value = t.onDidChangeLogLevel(this.setLevel, this));
						for (const { level: e, message: i } of this.n) Jp(t, e, i);
						this.n = [];
					}
					m(t, e) {
						this.q
							? Jp(this.q, t, e)
							: this.getLevel() <= t && this.n.push({ level: t, message: e });
					}
					dispose() {
						this.q?.dispose(), super.dispose();
					}
					flush() {
						this.q?.flush();
					}
				});
		},
	});
import { session as UL } from "electron";
var Hd,
	qL = m({
		"out-build/vs/platform/protocol/electron-main/protocolMainService.js"() {
			"use strict";
			F(),
				Ce(),
				ge(),
				z(),
				ho(),
				ie(),
				Oi(),
				is(),
				Gi(),
				Q(),
				Is(),
				(Hd = class extends j {
					constructor(e, i, s) {
						super(),
							(this.c = e),
							(this.f = s),
							(this.a = kr.forPaths(!Ee)),
							(this.b = new Set([
								".svg",
								".png",
								".jpg",
								".jpeg",
								".gif",
								".bmp",
								".webp",
								".mp4",
								".otf",
								".ttf",
							])),
							this.addValidFileRoot(e.appRoot),
							this.addValidFileRoot(e.extensionsPath),
							this.addValidFileRoot(
								i.defaultProfile.globalStorageHome.with({ scheme: R.file })
									.fsPath,
							),
							this.addValidFileRoot(
								e.workspaceStorageHome.with({ scheme: R.file }).fsPath,
							),
							this.g();
					}
					g() {
						const { defaultSession: e } = UL;
						e.protocol.registerFileProtocol(R.vscodeFileResource, (i, s) =>
							this.j(i, s),
						),
							e.protocol.interceptFileProtocol(R.file, (i, s) => this.h(i, s)),
							this.D(
								ke(() => {
									e.protocol.unregisterProtocol(R.vscodeFileResource),
										e.protocol.uninterceptProtocol(R.file);
								}),
							);
					}
					addValidFileRoot(e) {
						const i = ui(e);
						return this.a.get(i)
							? j.None
							: (this.a.set(i, !0), ke(() => this.a.delete(i)));
					}
					h(e, i) {
						const s = P.parse(e.url);
						return (
							this.f.error(
								`Refused to load resource ${s.fsPath} from ${R.file}: protocol (original URL: ${e.url})`,
							),
							i({ error: -3 })
						);
					}
					j(e, i) {
						const s = this.m(e);
						let r;
						if (this.c.crossOriginIsolated) {
							const n = Te(s);
							n === "workbench.html" || n === "workbench-dev.html"
								? (r = qa.CoopAndCoep)
								: (r = qa.getHeadersFromQuery(e.url));
						}
						return this.a.findSubstr(s)
							? i({ path: s, headers: r })
							: this.b.has(ql(s).toLowerCase())
								? i({ path: s })
								: (this.f.error(
										`${R.vscodeFileResource}: Refused to load resource ${s} from ${R.vscodeFileResource}: protocol (original URL: ${e.url})`,
									),
									i({ error: -3 }));
					}
					m(e) {
						const i = P.parse(e.url),
							s = $t.uriToFileUri(i);
						return ui(s.fsPath);
					}
					createIPCObjectUrl() {
						let e;
						const i = P.from({ scheme: "vscode", path: fi() }),
							s = i.toString(),
							r = async () => e;
						return (
							et.handle(s, r),
							this.f.trace(`IPC Object URL: Registered new channel ${s}.`),
							{
								resource: i,
								update: (n) => (e = n),
								dispose: () => {
									this.f.trace(`IPC Object URL: Removed channel ${s}.`),
										et.removeHandler(s);
								},
							}
						);
					}
				}),
				(Hd = __decorate([__param(0, Zs), __param(1, As), __param(2, G)], Hd));
		},
	});
function BL(t) {
	return !!t.forwardPort;
}
function zL(t) {
	if (t.scheme !== "http" && t.scheme !== "https") return;
	const e = /^(localhost|127\.0\.0\.1|0\.0\.0\.0):(\d+)$/.exec(t.authority);
	if (e) return { address: e[1], port: +e[2] };
}
function Vg(t) {
	return Gd.indexOf(t) >= 0;
}
function ll(t) {
	return Jd.indexOf(t) >= 0;
}
function HL(t, e, i, s) {
	if (i === 1) return !1;
	if (i === 2 && ll(e)) {
		const r = /(\d+)\.(\d+)\.(\d+)/g.exec(s);
		if (r?.length === 4 && parseInt(r[1]) >= 18) return !1;
	}
	return t < 1024;
}
var _8,
	VL,
	R8,
	Vd,
	O8,
	Gd,
	Jd,
	Xd,
	L8 = m({
		"out-build/vs/platform/tunnel/common/tunnel.js"() {
			"use strict";
			q(),
				F(),
				ie(),
				Ve(),
				Y(),
				Q(),
				(_8 = B("tunnelService")),
				(VL = B("sharedTunnelsService")),
				(function (t) {
					(t.Http = "http"), (t.Https = "https");
				})(R8 || (R8 = {})),
				(function (t) {
					(t.ConstantPrivate = "constantPrivate"),
						(t.Private = "private"),
						(t.Public = "public");
				})(Vd || (Vd = {})),
				(function (t) {
					(t[(t.Notify = 1)] = "Notify"),
						(t[(t.OpenBrowser = 2)] = "OpenBrowser"),
						(t[(t.OpenPreview = 3)] = "OpenPreview"),
						(t[(t.Silent = 4)] = "Silent"),
						(t[(t.Ignore = 5)] = "Ignore"),
						(t[(t.OpenBrowserOnce = 6)] = "OpenBrowserOnce");
				})(O8 || (O8 = {})),
				(Gd = ["localhost", "127.0.0.1", "0:0:0:0:0:0:0:1", "::1"]),
				(Jd = ["0.0.0.0", "0:0:0:0:0:0:0:0", "::"]),
				(Xd = class extends j {
					constructor(e, i) {
						super(),
							(this.q = e),
							(this.r = i),
							(this.a = new $()),
							(this.onTunnelOpened = this.a.event),
							(this.b = new $()),
							(this.onTunnelClosed = this.b.event),
							(this.c = new $()),
							(this.onAddedTunnelProvider = this.c.event),
							(this.f = new Map()),
							(this.h = !1),
							(this.j = !0),
							(this.m = []),
							(this.n = new Set());
					}
					get hasTunnelProvider() {
						return !!this.g;
					}
					get s() {
						const e = this.r.getValue("remote.localPortHost");
						return !e || e === "localhost" ? "127.0.0.1" : "0.0.0.0";
					}
					setTunnelProvider(e) {
						return (
							(this.g = e),
							e
								? (this.c.fire(),
									{
										dispose: () => {
											(this.g = void 0), (this.h = !1), (this.m = []);
										},
									})
								: ((this.h = !1),
									(this.m = []),
									this.c.fire(),
									{ dispose: () => {} })
						);
					}
					setTunnelFeatures(e) {
						(this.h = e.elevation),
							(this.m = e.privacyOptions),
							(this.j = e.protocol);
					}
					get canChangeProtocol() {
						return this.j;
					}
					get canElevate() {
						return this.h;
					}
					get canChangePrivacy() {
						return this.m.length > 0;
					}
					get privacyOptions() {
						return this.m;
					}
					get tunnels() {
						return this.t();
					}
					async t() {
						const e = [],
							i = Array.from(this.f.values());
						for (const s of i) {
							const r = Array.from(s.values());
							for (const n of r) {
								const o = await n.value;
								o && typeof o != "string" && e.push(o);
							}
						}
						return e;
					}
					async dispose() {
						super.dispose();
						for (const e of this.f.values()) {
							for (const { value: i } of e.values())
								await i.then((s) =>
									typeof s != "string" ? s?.dispose() : void 0,
								);
							e.clear();
						}
						this.f.clear();
					}
					setEnvironmentTunnel(e, i, s, r, n) {
						this.y(
							e,
							i,
							Promise.resolve({
								tunnelRemoteHost: e,
								tunnelRemotePort: i,
								localAddress: s,
								privacy: r,
								protocol: n,
								dispose: () => Promise.resolve(),
							}),
						);
					}
					async getExistingTunnel(e, i) {
						(ll(e) || Vg(e)) && (e = Gd[0]);
						const s = this.C(e, i);
						if (s) return ++s.refcount, s.value;
					}
					openTunnel(e, i, s, r, n, o = !1, a, c) {
						this.q.trace(
							`ForwardedPorts: (TunnelService) openTunnel request for ${i}:${s} on local port ${n}.`,
						);
						const l = this.g ?? e;
						if (!l) return;
						if (
							(i || (i = "localhost"),
							r || (r = this.s),
							this.g && this.n.has(s))
						) {
							this.q.debug(
								"ForwardedPorts: (TunnelService) Another call to create a tunnel with the same address has occurred before the last one completed. This call will be ignored.",
							);
							return;
						}
						const u = this.F(l, i, s, r, n, o, a, c);
						return u
							? u.then((d) => {
									if (d) {
										if (typeof d == "string")
											return (
												this.q.trace(
													"ForwardedPorts: (TunnelService) The tunnel provider returned an error when creating the tunnel.",
												),
												this.z(i, s),
												d
											);
									} else {
										this.q.trace(
											"ForwardedPorts: (TunnelService) New tunnel is undefined.",
										),
											this.z(i, s);
										return;
									}
									this.q.trace(
										"ForwardedPorts: (TunnelService) New tunnel established.",
									);
									const f = this.u(d);
									return (
										(d.tunnelRemoteHost !== i || d.tunnelRemotePort !== s) &&
											this.q.warn(
												"ForwardedPorts: (TunnelService) Created tunnel does not match requirements of requested tunnel. Host or port mismatch.",
											),
										a &&
											d.privacy !== a &&
											this.q.warn(
												"ForwardedPorts: (TunnelService) Created tunnel does not match requirements of requested tunnel. Privacy mismatch.",
											),
										this.a.fire(f),
										f
									);
								})
							: (this.q.trace(
									"ForwardedPorts: (TunnelService) Tunnel was not created.",
								),
								u);
					}
					u(e) {
						return {
							tunnelRemotePort: e.tunnelRemotePort,
							tunnelRemoteHost: e.tunnelRemoteHost,
							tunnelLocalPort: e.tunnelLocalPort,
							localAddress: e.localAddress,
							privacy: e.privacy,
							protocol: e.protocol,
							dispose: async () => {
								this.q.trace(
									`ForwardedPorts: (TunnelService) dispose request for ${e.tunnelRemoteHost}:${e.tunnelRemotePort} `,
								);
								const i = this.f.get(e.tunnelRemoteHost);
								if (i) {
									const s = i.get(e.tunnelRemotePort);
									s &&
										(s.refcount--,
										await this.w(e.tunnelRemoteHost, e.tunnelRemotePort, s));
								}
							},
						};
					}
					async w(e, i, s) {
						if (s.refcount <= 0) {
							this.q.trace(
								`ForwardedPorts: (TunnelService) Tunnel is being disposed ${e}:${i}.`,
							);
							const r = s.value.then(async (n) => {
								n &&
									typeof n != "string" &&
									(await n.dispose(!0),
									this.b.fire({
										host: n.tunnelRemoteHost,
										port: n.tunnelRemotePort,
									}));
							});
							return this.f.has(e) && this.f.get(e).delete(i), r;
						}
					}
					async closeTunnel(e, i) {
						this.q.trace(
							`ForwardedPorts: (TunnelService) close request for ${e}:${i} `,
						);
						const s = this.f.get(e);
						if (s && s.has(i)) {
							const r = s.get(i);
							(r.refcount = 0), await this.w(e, i, r);
						}
					}
					y(e, i, s) {
						this.f.has(e) || this.f.set(e, new Map()),
							this.f.get(e).set(i, { refcount: 1, value: s });
					}
					async z(e, i) {
						const s = this.f.get(e);
						if (s) {
							const r = s.get(i),
								n = r ? await r.value : void 0;
							(!n || typeof n == "string") && s.delete(i),
								s.size === 0 && this.f.delete(e);
						}
					}
					C(e, i) {
						const s = [e];
						Vg(e) ? (s.push(...Gd), s.push(...Jd)) : ll(e) && s.push(...Jd);
						const r = s.map((n) => this.f.get(n));
						for (const n of r) {
							const o = n?.get(i);
							if (o) return o;
						}
					}
					canTunnel(e) {
						return !!zL(e);
					}
					G(e, i, s, r, n, o, a) {
						this.q.trace(
							`ForwardedPorts: (TunnelService) Creating tunnel with provider ${i}:${s} on local port ${r}.`,
						);
						const c = s;
						this.n.add(c);
						const l = r === void 0 ? s : r,
							u = { elevationRequired: n ? this.isPortPrivileged(l) : !1 },
							d = {
								remoteAddress: { host: i, port: s },
								localAddressPort: r,
								privacy: o,
								public: o ? o !== Vd.Private : void 0,
								protocol: a,
							},
							f = e.forwardPort(d, u);
						return (
							f
								? (this.y(i, s, f),
									f.finally(() => {
										this.q.trace(
											"ForwardedPorts: (TunnelService) Tunnel created by provider.",
										),
											this.n.delete(c);
									}))
								: this.n.delete(c),
							f
						);
					}
				}),
				(Xd = __decorate([__param(0, G), __param(1, He)], Xd));
		},
	}),
	GL,
	M8,
	Fr,
	Kd,
	JL = m({
		"out-build/vs/platform/remote/common/remoteAuthorityResolver.js"() {
			"use strict";
			Ae(),
				Y(),
				(GL = B("remoteAuthorityResolverService")),
				(function (t) {
					(t[(t.WebSocket = 0)] = "WebSocket"),
						(t[(t.Managed = 1)] = "Managed");
				})(M8 || (M8 = {})),
				(function (t) {
					(t.Unknown = "Unknown"),
						(t.NotAvailable = "NotAvailable"),
						(t.TemporarilyNotAvailable = "TemporarilyNotAvailable"),
						(t.NoResolverFound = "NoResolverFound"),
						(t.InvalidAuthority = "InvalidAuthority");
				})(Fr || (Fr = {})),
				(Kd = class Tn extends Bs {
					static isNotAvailable(e) {
						return e instanceof Tn && e._code === Fr.NotAvailable;
					}
					static isTemporarilyNotAvailable(e) {
						return e instanceof Tn && e._code === Fr.TemporarilyNotAvailable;
					}
					static isNoResolverFound(e) {
						return e instanceof Tn && e._code === Fr.NoResolverFound;
					}
					static isInvalidAuthority(e) {
						return e instanceof Tn && e._code === Fr.InvalidAuthority;
					}
					static isHandled(e) {
						return e instanceof Tn && e.isHandled;
					}
					constructor(e, i = Fr.Unknown, s) {
						super(e),
							(this._message = e),
							(this._code = i),
							(this._detail = s),
							(this.isHandled = i === Fr.NotAvailable && s === !0),
							Object.setPrototypeOf(this, Tn.prototype);
					}
				});
		},
	});
function Gg(t) {
	switch (t) {
		case 1:
			return "Management";
		case 2:
			return "ExtensionHost";
		case 3:
			return "Tunnel";
	}
}
function F8(t) {
	const e = new ts();
	return setTimeout(() => e.cancel(), t), e.token;
}
function XL(t, e) {
	if (t.isCancellationRequested || e.isCancellationRequested)
		return Ge.Cancelled;
	const i = new ts();
	return (
		t.onCancellationRequested(() => i.cancel()),
		e.onCancellationRequested(() => i.cancel()),
		i.token
	);
}
function KL(t, e) {
	const i = new Qd(e);
	return (
		i.registerDisposable(
			t.onControlMessage((s) => {
				const r = JSON.parse(s.toString()),
					n = iM(r);
				n ? i.reject(n) : i.resolve(r);
			}),
		),
		i.promise
	);
}
function YL(t, e, i, s, r, n, o, a) {
	const c = new Qd(a),
		l = Hr.create(!1);
	return (
		t.info(`Creating a socket (${o})...`),
		Fe(`code/willCreateSocket/${n}`),
		e.connect(i, s, r, o).then(
			(u) => {
				c.didTimeout
					? (Fe(`code/didCreateSocketError/${n}`),
						t.info(
							`Creating a socket (${o}) finished after ${l.elapsed()} ms, but this is too late and has timed out already.`,
						),
						u?.dispose())
					: (Fe(`code/didCreateSocketOK/${n}`),
						t.info(
							`Creating a socket (${o}) was successful after ${l.elapsed()} ms.`,
						),
						c.resolve(u));
			},
			(u) => {
				Fe(`code/didCreateSocketError/${n}`),
					t.info(
						`Creating a socket (${o}) returned an error after ${l.elapsed()} ms.`,
					),
					t.error(u),
					c.reject(u);
			},
		),
		c.promise
	);
}
function Jg(t, e) {
	const i = new Qd(e);
	return (
		t.then(
			(s) => {
				i.didTimeout || i.resolve(s);
			},
			(s) => {
				i.didTimeout || i.reject(s);
			},
		),
		i.promise
	);
}
async function QL(t, e, i, s) {
	const r = j8(t, e);
	t.logService.trace(`${r} 1/6. invoking socketFactory.connect().`);
	let n;
	try {
		n = await YL(
			t.logService,
			t.remoteSocketFactoryService,
			t.connectTo,
			up.getServerRootPath(),
			`reconnectionToken=${t.reconnectionToken}&reconnection=${t.reconnectionProtocol ? "true" : "false"}`,
			Gg(e),
			`renderer-${Gg(e)}-${t.reconnectionToken}`,
			s,
		);
	} catch (u) {
		throw (
			(t.logService.error(
				`${r} socketFactory.connect() failed or timed out. Error:`,
			),
			t.logService.error(u),
			u)
		);
	}
	t.logService.trace(`${r} 2/6. socketFactory.connect() was successful.`);
	let o, a;
	t.reconnectionProtocol
		? (t.reconnectionProtocol.beginAcceptReconnection(n, null),
			(o = t.reconnectionProtocol),
			(a = !1))
		: ((o = new wy({ socket: n })), (a = !0)),
		t.logService.trace(`${r} 3/6. sending AuthRequest control message.`);
	const c = await Jg(t.signService.createNewMessage(fi()), s),
		l = {
			type: "auth",
			auth: t.connectionToken || "00000000000000000000",
			data: c.data,
		};
	o.sendControl(H.fromString(JSON.stringify(l)));
	try {
		const u = await KL(o, XL(s, F8(1e4)));
		if (u.type !== "sign" || typeof u.data != "string") {
			const v = new Error("Unexpected handshake message");
			throw ((v.code = "VSCODE_CONNECTION_ERROR"), v);
		}
		if (
			(t.logService.trace(`${r} 4/6. received SignRequest control message.`),
			!(await Jg(t.signService.validate(c, u.signedData), s)))
		) {
			const v = new Error("Refused to connect to unsupported server");
			throw ((v.code = "VSCODE_CONNECTION_ERROR"), v);
		}
		const f = await Jg(t.signService.sign(u.data), s),
			p = {
				type: "connectionType",
				commit: t.commit,
				signedData: f,
				desiredConnectionType: e,
			};
		return (
			i && (p.args = i),
			t.logService.trace(
				`${r} 5/6. sending ConnectionTypeRequest control message.`,
			),
			o.sendControl(H.fromString(JSON.stringify(p))),
			{ protocol: o, ownsProtocol: a }
		);
	} catch (u) {
		throw (
			(u &&
				u.code === "ETIMEDOUT" &&
				(t.logService.error(`${r} the handshake timed out. Error:`),
				t.logService.error(u)),
			u &&
				u.code === "VSCODE_CONNECTION_ERROR" &&
				(t.logService.error(
					`${r} received error control message when negotiating connection. Error:`,
				),
				t.logService.error(u)),
			a && W8(o),
			u)
		);
	}
}
async function ZL(t, e, i) {
	const s = Date.now(),
		r = j8(t, 3),
		{ protocol: n } = await QL(t, 3, e, i);
	return (
		t.logService.trace(
			`${r} 6/6. handshake finished, connection is up and running after ${nM(s)}!`,
		),
		n
	);
}
async function N8(t, e, i) {
	const { connectTo: s, connectionToken: r } =
		await t.addressProvider.getAddress();
	return {
		commit: t.commit,
		quality: t.quality,
		connectTo: s,
		connectionToken: r,
		reconnectionToken: e,
		reconnectionProtocol: i,
		remoteSocketFactoryService: t.remoteSocketFactoryService,
		signService: t.signService,
		logService: t.logService,
	};
}
async function eM(t, e, i) {
	const s = await N8(t, fi(), null);
	return await ZL(s, { host: e, port: i }, Ge.None);
}
function tM(t) {
	return Yn(
		(e) =>
			new Promise((i, s) => {
				const r = setTimeout(i, t * 1e3);
				e.onCancellationRequested(() => {
					clearTimeout(r), i();
				});
			}),
	);
}
function W8(t) {
	try {
		t.acceptDisconnect();
		const e = t.getSocket();
		t.dispose(), e.dispose();
	} catch (e) {
		Ot(e);
	}
}
function iM(t) {
	if (t && t.type === "error") {
		const e = new Error(`Connection error: ${t.reason}`);
		return (e.code = "VSCODE_CONNECTION_ERROR"), e;
	}
	return null;
}
function sM(t, e) {
	for (; t.length < e; ) t += " ";
	return t;
}
function rM(t, e) {
	return `[remote-connection][${sM(Gg(t), 13)}][${e.substr(0, 5)}\u2026]`;
}
function Yd(t, e, i) {
	return `${rM(t, e)}[${i ? "reconnect" : "initial"}]`;
}
function j8(t, e) {
	return `${Yd(e, t.reconnectionToken, !!t.reconnectionProtocol)}[${t.connectTo}]`;
}
function nM(t) {
	return `${Date.now() - t} ms`;
}
var T8,
	U8,
	Qd,
	q8,
	B8,
	z8,
	H8,
	Xg,
	V8,
	oM,
	aM = m({
		"out-build/vs/platform/remote/common/remoteAgentConnection.js"() {
			"use strict";
			ae(),
				Je(),
				Mt(),
				Ae(),
				q(),
				F(),
				Ce(),
				qs(),
				Gn(),
				Oi(),
				vy(),
				JL(),
				(T8 = 30 * 1e3),
				(function (t) {
					(t[(t.Management = 1)] = "Management"),
						(t[(t.ExtensionHost = 2)] = "ExtensionHost"),
						(t[(t.Tunnel = 3)] = "Tunnel");
				})(U8 || (U8 = {})),
				(Qd = class {
					get didTimeout() {
						return this.c === "timedout";
					}
					constructor(t) {
						(this.c = "pending"),
							(this.d = new De()),
							({
								promise: this.promise,
								resolve: this.f,
								reject: this.g,
							} = WS()),
							t.isCancellationRequested
								? this.h()
								: this.d.add(t.onCancellationRequested(() => this.h()));
					}
					registerDisposable(t) {
						this.c === "pending" ? this.d.add(t) : t.dispose();
					}
					h() {
						this.c === "pending" &&
							(this.d.dispose(), (this.c = "timedout"), this.g(this.i()));
					}
					i() {
						const t = new Error("Time limit reached");
						return (t.code = "ETIMEDOUT"), (t.syscall = "connect"), t;
					}
					resolve(t) {
						this.c === "pending" &&
							(this.d.dispose(), (this.c = "resolved"), this.f(t));
					}
					reject(t) {
						this.c === "pending" &&
							(this.d.dispose(), (this.c = "rejected"), this.g(t));
					}
				}),
				(function (t) {
					(t[(t.ConnectionLost = 0)] = "ConnectionLost"),
						(t[(t.ReconnectionWait = 1)] = "ReconnectionWait"),
						(t[(t.ReconnectionRunning = 2)] = "ReconnectionRunning"),
						(t[(t.ReconnectionPermanentFailure = 3)] =
							"ReconnectionPermanentFailure"),
						(t[(t.ConnectionGain = 4)] = "ConnectionGain");
				})(q8 || (q8 = {})),
				(B8 = class {
					constructor(t, e) {
						(this.reconnectionToken = t),
							(this.millisSinceLastIncomingData = e),
							(this.type = 0);
					}
				}),
				(z8 = class {
					constructor(t, e, i, s) {
						(this.reconnectionToken = t),
							(this.millisSinceLastIncomingData = e),
							(this.durationSeconds = i),
							(this.c = s),
							(this.type = 1);
					}
					skipWait() {
						this.c.cancel();
					}
				}),
				(H8 = class {
					constructor(t, e, i) {
						(this.reconnectionToken = t),
							(this.millisSinceLastIncomingData = e),
							(this.attempt = i),
							(this.type = 2);
					}
				}),
				(Xg = class {
					constructor(t, e, i) {
						(this.reconnectionToken = t),
							(this.millisSinceLastIncomingData = e),
							(this.attempt = i),
							(this.type = 4);
					}
				}),
				(V8 = class {
					constructor(t, e, i, s) {
						(this.reconnectionToken = t),
							(this.millisSinceLastIncomingData = e),
							(this.attempt = i),
							(this.handled = s),
							(this.type = 3);
					}
				}),
				(oM = class lr extends j {
					static triggerPermanentFailure(e, i, s) {
						(this._permanentFailure = !0),
							(this.f = e),
							(this.g = i),
							(this.h = s),
							this.j.forEach((r) => r.C(this.f, this.g, this.h));
					}
					static debugTriggerReconnection() {
						this.j.forEach((e) => e.w());
					}
					static debugPauseSocketWriting() {
						this.j.forEach((e) => e.F());
					}
					static {
						this._permanentFailure = !1;
					}
					static {
						this.f = 0;
					}
					static {
						this.g = 0;
					}
					static {
						this.h = !1;
					}
					static {
						this.j = [];
					}
					get n() {
						return this.c || lr._permanentFailure;
					}
					constructor(e, i, s, r, n) {
						super(),
							(this.s = e),
							(this.t = i),
							(this.reconnectionToken = s),
							(this.protocol = r),
							(this.u = n),
							(this.m = this.D(new $())),
							(this.onDidStateChange = this.m.event),
							(this.c = !1),
							(this.q = !1),
							(this.r = !1),
							this.m.fire(new Xg(this.reconnectionToken, 0, 0)),
							this.D(
								r.onSocketClose((o) => {
									const a = Yd(this.s, this.reconnectionToken, !0);
									o
										? o.type === 0
											? (this.t.logService.info(
													`${a} received socket close event (hadError: ${o.hadError}).`,
												),
												o.error && this.t.logService.error(o.error))
											: (this.t.logService.info(
													`${a} received socket close event (wasClean: ${o.wasClean}, code: ${o.code}, reason: ${o.reason}).`,
												),
												o.event && this.t.logService.error(o.event))
										: this.t.logService.info(
												`${a} received socket close event.`,
											),
										this.w();
								}),
							),
							this.D(
								r.onSocketTimeout((o) => {
									const a = Yd(this.s, this.reconnectionToken, !0);
									this.t.logService.info(
										`${a} received socket timeout event (unacknowledgedMsgCount: ${o.unacknowledgedMsgCount}, timeSinceOldestUnacknowledgedMsg: ${o.timeSinceOldestUnacknowledgedMsg}, timeSinceLastReceivedSomeData: ${o.timeSinceLastReceivedSomeData}).`,
									),
										this.w();
								}),
							),
							lr.j.push(this),
							this.D(
								ke(() => {
									const o = lr.j.indexOf(this);
									o >= 0 && lr.j.splice(o, 1);
								}),
							),
							this.n && this.C(lr.f, lr.g, lr.h);
					}
					dispose() {
						super.dispose(), (this.r = !0);
					}
					async w() {
						if (!this.q)
							try {
								(this.q = !0), await this.y();
							} finally {
								this.q = !1;
							}
					}
					async y() {
						if (this.n || this.r) return;
						const e = Yd(this.s, this.reconnectionToken, !0);
						this.t.logService.info(
							`${e} starting reconnecting loop. You can get more information with the trace log level.`,
						),
							this.m.fire(
								new B8(
									this.reconnectionToken,
									this.protocol.getMillisSinceLastIncomingData(),
								),
							);
						const i = [0, 5, 5, 10, 10, 10, 10, 10, 30];
						let s = -1;
						do {
							s++;
							const r = s < i.length ? i[s] : i[i.length - 1];
							try {
								if (r > 0) {
									const o = tM(r);
									this.m.fire(
										new z8(
											this.reconnectionToken,
											this.protocol.getMillisSinceLastIncomingData(),
											r,
											o,
										),
									),
										this.t.logService.info(
											`${e} waiting for ${r} seconds before reconnecting...`,
										);
									try {
										await o;
									} catch {}
								}
								if (this.n) {
									this.t.logService.error(
										`${e} permanent failure occurred while running the reconnecting loop.`,
									);
									break;
								}
								this.m.fire(
									new H8(
										this.reconnectionToken,
										this.protocol.getMillisSinceLastIncomingData(),
										s + 1,
									),
								),
									this.t.logService.info(`${e} resolving connection...`);
								const n = await N8(
									this.t,
									this.reconnectionToken,
									this.protocol,
								);
								this.t.logService.info(`${e} connecting to ${n.connectTo}...`),
									await this.G(n, F8(T8)),
									this.t.logService.info(`${e} reconnected!`),
									this.m.fire(
										new Xg(
											this.reconnectionToken,
											this.protocol.getMillisSinceLastIncomingData(),
											s + 1,
										),
									);
								break;
							} catch (n) {
								if (n.code === "VSCODE_CONNECTION_ERROR") {
									this.t.logService.error(
										`${e} A permanent error occurred in the reconnecting loop! Will give up now! Error:`,
									),
										this.t.logService.error(n),
										this.z(
											this.protocol.getMillisSinceLastIncomingData(),
											s + 1,
											!1,
										);
									break;
								}
								if (s > 360) {
									this.t.logService.error(
										`${e} An error occurred while reconnecting, but it will be treated as a permanent error because the reconnection grace time has expired! Will give up now! Error:`,
									),
										this.t.logService.error(n),
										this.z(
											this.protocol.getMillisSinceLastIncomingData(),
											s + 1,
											!1,
										);
									break;
								}
								if (Kd.isTemporarilyNotAvailable(n)) {
									this.t.logService.info(
										`${e} A temporarily not available error occurred while trying to reconnect, will try again...`,
									),
										this.t.logService.trace(n);
									continue;
								}
								if (
									(n.code === "ETIMEDOUT" ||
										n.code === "ENETUNREACH" ||
										n.code === "ECONNREFUSED" ||
										n.code === "ECONNRESET") &&
									n.syscall === "connect"
								) {
									this.t.logService.info(
										`${e} A network error occurred while trying to reconnect, will try again...`,
									),
										this.t.logService.trace(n);
									continue;
								}
								if (_l(n)) {
									this.t.logService.info(
										`${e} A promise cancelation error occurred while trying to reconnect, will try again...`,
									),
										this.t.logService.trace(n);
									continue;
								}
								if (n instanceof Kd) {
									this.t.logService.error(
										`${e} A RemoteAuthorityResolverError occurred while trying to reconnect. Will give up now! Error:`,
									),
										this.t.logService.error(n),
										this.z(
											this.protocol.getMillisSinceLastIncomingData(),
											s + 1,
											Kd.isHandled(n),
										);
									break;
								}
								this.t.logService.error(
									`${e} An unknown error occurred while trying to reconnect, since this is an unknown case, it will be treated as a permanent error! Will give up now! Error:`,
								),
									this.t.logService.error(n),
									this.z(
										this.protocol.getMillisSinceLastIncomingData(),
										s + 1,
										!1,
									);
								break;
							}
						} while (!this.n && !this.r);
					}
					z(e, i, s) {
						this.u ? lr.triggerPermanentFailure(e, i, s) : this.C(e, i, s);
					}
					C(e, i, s) {
						this.m.fire(new V8(this.reconnectionToken, e, i, s)),
							W8(this.protocol);
					}
					F() {
						this.protocol.pauseSocketWriting();
					}
				});
		},
	}),
	Zd,
	cM = m({
		"out-build/vs/platform/remote/common/remoteSocketFactoryService.js"() {
			"use strict";
			F(), Y(), (Zd = B("remoteSocketFactoryService"));
		},
	});
import * as lM from "net";
import * as uM from "os";
async function hM(t, e, i, s, r) {
	let n;
	for (
		let o = 3;
		o &&
		(n?.dispose(),
		(n = await new G8(t, e, i, s, r).waitForReady()),
		!((r && wm[r]) || !wm[n.tunnelLocalPort]));
		o--
	);
	return n;
}
var G8,
	ef,
	ul,
	Kg,
	dM = m({
		"out-build/vs/platform/tunnel/node/tunnelService.js"() {
			"use strict";
			k5(),
				Lp(),
				ae(),
				F(),
				z(),
				Ve(),
				Q(),
				Ct(),
				aM(),
				cM(),
				Lm(),
				L8(),
				Je(),
				(G8 = class extends j {
					constructor(t, e, i, s, r) {
						super(),
							(this.m = e),
							(this.n = r),
							(this.privacy = Vd.Private),
							(this.j = new Map()),
							(this.a = t),
							(this.b = lM.createServer()),
							(this.c = new za()),
							(this.f = () => this.c.open()),
							this.b.on("listening", this.f),
							(this.g = (n) => this.q(n)),
							this.b.on("connection", this.g),
							(this.h = () => {}),
							this.b.on("error", this.h),
							(this.tunnelRemotePort = s),
							(this.tunnelRemoteHost = i);
					}
					async dispose() {
						super.dispose(),
							this.b.removeListener("listening", this.f),
							this.b.removeListener("connection", this.g),
							this.b.removeListener("error", this.h),
							this.b.close(),
							Array.from(this.j.values()).forEach((e) => {
								e();
							});
					}
					async waitForReady() {
						const t = this.n ?? this.tunnelRemotePort,
							e = ll(this.m) ? "0.0.0.0" : "127.0.0.1";
						let i = await n$(t, 2, 1e3, e),
							s = null;
						return (
							this.b.listen(i, this.m),
							await this.c.wait(),
							(s = this.b.address()),
							s ||
								((i = 0),
								this.b.listen(i, this.m),
								await this.c.wait(),
								(s = this.b.address())),
							(this.tunnelLocalPort = s.port),
							(this.localAddress = `${this.tunnelRemoteHost === "127.0.0.1" ? "127.0.0.1" : "localhost"}:${s.port}`),
							this
						);
					}
					async q(t) {
						t.pause();
						const e =
								Vg(this.tunnelRemoteHost) || ll(this.tunnelRemoteHost)
									? "localhost"
									: this.tunnelRemoteHost,
							i = await eM(this.a, e, this.tunnelRemotePort),
							s = i.getSocket(),
							r = i.readEntireBuffer();
						i.dispose(),
							r.byteLength > 0 && t.write(r.buffer),
							t.on("end", () => {
								t.localAddress && this.j.delete(t.localAddress), s.end();
							}),
							t.on("close", () => s.end()),
							t.on("error", () => {
								t.localAddress && this.j.delete(t.localAddress),
									s instanceof Ka ? s.socket.destroy() : s.end();
							}),
							s instanceof Ka ? this.s(t, s) : this.r(t, s),
							t.localAddress &&
								this.j.set(t.localAddress, () => {
									t.end(), s.end();
								});
					}
					r(t, e) {
						e.onClose(() => t.destroy()),
							e.onEnd(() => t.end()),
							e.onData((i) => t.write(i.buffer)),
							t.on("data", (i) => e.write(H.wrap(i))),
							t.resume();
					}
					s(t, e) {
						const i = e.socket;
						i.on("end", () => t.end()),
							i.on("close", () => t.end()),
							i.on("error", () => {
								t.destroy();
							}),
							i.pipe(t),
							t.pipe(i);
					}
				}),
				(ef = class extends Xd {
					constructor(e, i, s, r, n) {
						super(i, n), (this.H = e), (this.I = s), (this.J = r);
					}
					isPortPrivileged(e) {
						return HL(e, this.s, Ri, uM.release());
					}
					F(e, i, s, r, n, o, a, c) {
						const l = this.C(i, s);
						if (l) return ++l.refcount, l.value;
						if (BL(e)) return this.G(e, i, s, n, o, a, c);
						{
							this.q.trace(
								`ForwardedPorts: (TunnelService) Creating tunnel without provider ${i}:${s} on local port ${n}.`,
							);
							const u = {
									commit: this.J.commit,
									quality: this.J.quality,
									addressProvider: e,
									remoteSocketFactoryService: this.H,
									signService: this.I,
									logService: this.q,
									ipcLogger: null,
								},
								d = hM(u, r, i, s, n);
							return (
								this.q.trace(
									"ForwardedPorts: (TunnelService) Tunnel created without provider.",
								),
								this.y(i, s, d),
								d
							);
						}
					}
				}),
				(ef = __decorate(
					[
						__param(0, Zd),
						__param(1, G),
						__param(2, Uo),
						__param(3, tt),
						__param(4, He),
					],
					ef,
				)),
				(ul = class extends ef {
					constructor(e, i, s, r, n) {
						super(e, i, s, r, n);
					}
				}),
				(ul = __decorate(
					[
						__param(0, Zd),
						__param(1, G),
						__param(2, Uo),
						__param(3, tt),
						__param(4, He),
					],
					ul,
				)),
				(Kg = class extends j {
					constructor(e, i, s, r, n) {
						super(),
							(this.b = e),
							(this.c = i),
							(this.f = s),
							(this.g = r),
							(this.h = n),
							(this.a = new Map());
					}
					async openTunnel(e, i, s, r, n, o, a, c, l) {
						if (
							(this.c.trace(
								`ForwardedPorts: (SharedTunnelService) openTunnel request for ${s}:${r} on local port ${o}.`,
							),
							!this.a.has(e))
						) {
							const u = new ul(this.b, this.c, this.g, this.f, this.h);
							this.D(u),
								this.a.set(e, u),
								u.onTunnelClosed(async () => {
									(await u.tunnels).length === 0 &&
										(u.dispose(), this.a.delete(e));
								});
						}
						return this.a.get(e).openTunnel(i, s, r, n, o, a, c, l);
					}
				}),
				(Kg = __decorate(
					[
						__param(0, Zd),
						__param(1, G),
						__param(2, tt),
						__param(3, Uo),
						__param(4, He),
					],
					Kg,
				));
		},
	});
import { parse as J8 } from "url";
function fM(t, e) {
	return t.protocol === "http:"
		? e.HTTP_PROXY || e.http_proxy || null
		: (t.protocol === "https:" &&
				(e.HTTPS_PROXY || e.https_proxy || e.HTTP_PROXY || e.http_proxy)) ||
				null;
}
async function pM(t, e, i = {}) {
	const s = J8(t),
		r = i.proxyUrl || fM(s, e);
	if (!r) return null;
	const n = J8(r);
	if (!/^https?:$/.test(n.protocol || "")) return null;
	const o = {
		host: n.hostname || "",
		port: (n.port ? +n.port : 0) || (n.protocol === "https" ? 443 : 80),
		auth: n.auth,
		rejectUnauthorized: Iw(i.strictSSL) ? i.strictSSL : !0,
	};
	if (s.protocol === "http:") {
		const { default: a } = await import("http-proxy-agent");
		return new a.HttpProxyAgent(r, o);
	} else {
		const { default: a } = await import("https-proxy-agent");
		return new a.HttpsProxyAgent(r, o);
	}
}
var mM = m({
	"out-build/vs/platform/request/node/proxy.js"() {
		"use strict";
		Ie();
	},
});
import { parse as X8 } from "url";
import { createGunzip as gM } from "zlib";
async function wM(t, e, i, s) {
	const r = await import("kerberos"),
		n = r.default || r,
		o = new URL(t),
		a =
			e ||
			(process.platform === "win32"
				? `HTTP/${o.hostname}`
				: `HTTP@${o.hostname}`);
	return (
		i.debug(`${s} Kerberos authentication lookup`, `proxyURL:${o}`, `spn:${a}`),
		(await n.initializeClient(a)).step("")
	);
}
async function vM(t) {
	return (
		X8(t.url).protocol === "https:"
			? await import("https")
			: await import("http")
	).request;
}
async function Yg(t, e) {
	return Nt.withAsyncBody(async (i, s) => {
		const r = X8(t.url),
			n = t.getRawRequest ? t.getRawRequest(t) : await vM(t),
			o = {
				hostname: r.hostname,
				port: r.port ? parseInt(r.port) : r.protocol === "https:" ? 443 : 80,
				protocol: r.protocol,
				path: r.path,
				method: t.type || "GET",
				headers: t.headers,
				agent: t.agent,
				rejectUnauthorized: Iw(t.strictSSL) ? t.strictSSL : !0,
			};
		t.user && t.password && (o.auth = t.user + ":" + t.password);
		const a = n(o, (c) => {
			const l = jl(t.followRedirects) ? t.followRedirects : 3;
			if (
				c.statusCode &&
				c.statusCode >= 300 &&
				c.statusCode < 400 &&
				l > 0 &&
				c.headers.location
			)
				c.statusCode === 303
					? Yg(
							{
								...t,
								url: c.headers.location,
								type: "GET",
								followRedirects: l - 1,
							},
							e,
						).then(i, s)
					: Yg(
							{ ...t, url: c.headers.location, followRedirects: l - 1 },
							e,
						).then(i, s);
			else {
				let u = c;
				!t.isChromiumNetwork &&
					c.headers["content-encoding"] === "gzip" &&
					(u = c.pipe(gM())),
					i({ res: c, stream: kk(u) });
			}
		});
		a.on("error", s),
			t.timeout && a.setTimeout(t.timeout),
			t.isChromiumNetwork && a.removeHeader("Content-Length"),
			t.data && typeof t.data == "string" && a.write(t.data),
			a.end(),
			e.onCancellationRequested(() => {
				a.abort(), s(new ai());
			});
	});
}
var tf,
	yM = m({
		"out-build/vs/platform/request/node/requestService.js"() {
			"use strict";
			ae(),
				Je(),
				Ae(),
				Ie(),
				Ve(),
				Gi(),
				X1(),
				Q(),
				bn(),
				mM(),
				(tf = class extends A5 {
					constructor(e, i, s) {
						super(s),
							(this.m = e),
							(this.n = i),
							this.q(),
							this.D(
								e.onDidChangeConfiguration((r) => {
									r.affectsConfiguration("http") && this.q();
								}),
							);
					}
					q() {
						const e = this.m.getValue("http");
						(this.f = e?.proxy),
							(this.g = !!e?.proxyStrictSSL),
							(this.h = e?.proxyAuthorization);
					}
					async request(e, i) {
						const { f: s, g: r } = this;
						let n;
						try {
							n = await J1(this.m, this.b, this.n.args, process.env);
						} catch (c) {
							this.j ||
								((this.j = !0),
								this.b.error("resolving shell environment failed", Bi(c)));
						}
						const o = { ...process.env, ...n },
							a = e.agent
								? e.agent
								: await pM(e.url || "", o, { proxyUrl: s, strictSSL: r });
						return (
							(e.agent = a),
							(e.strictSSL = r),
							this.h &&
								(e.headers = {
									...(e.headers || {}),
									"Proxy-Authorization": this.h,
								}),
							this.c(e, () => Yg(e, i))
						);
					}
					async resolveProxy(e) {}
					async lookupAuthorization(e) {}
					async lookupKerberosAuthorization(e) {
						try {
							const i = this.m.getValue("http.proxyKerberosServicePrincipal");
							return (
								"Negotiate " +
								(await wM(
									e,
									i,
									this.b,
									"RequestService#lookupKerberosAuthorization",
								))
							);
						} catch (i) {
							this.b.debug(
								"RequestService#lookupKerberosAuthorization Kerberos authentication failed",
								i,
							);
							return;
						}
					}
					async loadCertificates() {
						return (await import("@vscode/proxy-agent")).loadSystemCertificates(
							{ log: this.b },
						);
					}
				}),
				(tf = __decorate([__param(0, He), __param(1, Zs), __param(2, G)], tf));
		},
	});
import { net as bM } from "electron";
function EM(t) {
	return bM.request;
}
var K8,
	SM = m({
		"out-build/vs/platform/request/electron-utility/requestService.js"() {
			"use strict";
			yM(),
				(K8 = class extends tf {
					request(t, e) {
						return super.request(
							{ ...(t || {}), getRawRequest: EM, isChromiumNetwork: !0 },
							e,
						);
					}
				});
		},
	}),
	Y8,
	kM = m({
		"out-build/vs/platform/sign/common/abstractSignService.js"() {
			"use strict";
			Y8 = class Q3 {
				constructor() {
					this.b = new Map();
				}
				static {
					this.a = 1;
				}
				async createNewMessage(e) {
					try {
						const i = await this.c();
						if (i) {
							const s = String(Q3.a++);
							return this.b.set(s, i), { id: s, data: i.createNewMessage(e) };
						}
					} catch {}
					return { id: "", data: e };
				}
				async validate(e, i) {
					if (!e.id) return !0;
					const s = this.b.get(e.id);
					if (!s) return !1;
					this.b.delete(e.id);
					try {
						return s.validate(i) === "ok";
					} catch {
						return !1;
					} finally {
						s.dispose?.();
					}
				}
				async sign(e) {
					try {
						return await this.d(e);
					} catch {}
					return e;
				}
			};
		},
	}),
	Q8,
	xM = m({
		"out-build/vs/platform/sign/node/signService.js"() {
			"use strict";
			kM(),
				(Q8 = class extends Y8 {
					c() {
						return this.h().then((t) => new t.validator());
					}
					d(t) {
						return this.h().then((e) => new e.signer().sign(t));
					}
					async h() {
						const t = "vsda",
							{ default: e } = await import(t);
						return e;
					}
				});
		},
	}),
	sf,
	DM = m({
		"out-build/vs/platform/policy/node/nativePolicyService.js"() {
			"use strict";
			Rs(),
				ae(),
				F(),
				Q(),
				(sf = class extends Im {
					constructor(e, i) {
						super(),
							(this.m = e),
							(this.n = i),
							(this.a = new wp()),
							(this.b = this.D(new zr()));
					}
					async j(e) {
						this.m.trace(
							`NativePolicyService#_updatePolicyDefinitions - Found ${Object.keys(e).length} policy definitions`,
						);
						const { createWatcher: i } = await import("@vscode/policy-watcher");
						await this.a.queue(
							() =>
								new Promise((s, r) => {
									try {
										this.b.value = i(this.n, e, (n) => {
											this.s(n), s();
										});
									} catch (n) {
										this.m.error(
											"NativePolicyService#_updatePolicyDefinitions - Error creating watcher:",
											n,
										),
											r(n);
									}
								}),
						);
					}
					s(e) {
						this.m.trace(
							`NativePolicyService#_onDidPolicyChange - Updated policy values: ${JSON.stringify(e)}`,
						);
						for (const i in e) {
							const s = e[i];
							s === void 0 ? this.g.delete(i) : this.g.set(i, s);
						}
						this.h.fire(Object.keys(e));
					}
				}),
				(sf = __decorate([__param(0, G)], sf));
		},
	});
function PM(t, e) {
	const i = [];
	for (const s of new Set(qr.concat(t.keys(), e.keys())))
		t.get(s) !== e.get(s) && i.push(s);
	return i;
}
var rf,
	$M = m({
		"out-build/vs/platform/policy/common/filePolicyService.js"() {
			"use strict";
			ae(),
				q(),
				Ml(),
				Ie(),
				Be(),
				Q(),
				Rs(),
				(rf = class extends Im {
					constructor(e, i, s) {
						super(),
							(this.m = e),
							(this.n = i),
							(this.q = s),
							(this.c = this.D(new Js(500)));
						const r = x.filter(i.onDidFilesChange, (n) => n.affects(e));
						this.D(i.watch(e)), this.D(r(() => this.c.trigger(() => this.u())));
					}
					async j() {
						await this.u();
					}
					async t() {
						const e = new Map();
						try {
							const i = await this.n.readFile(this.m),
								s = JSON.parse(i.value.toString());
							if (!Lt(s)) throw new Error("Policy file isn't a JSON object");
							for (const r of Object.keys(s)) this.f[r] && e.set(r, s[r]);
						} catch (i) {
							i.fileOperationResult !== 1 &&
								this.q.error("[FilePolicyService] Failed to read policies", i);
						}
						return e;
					}
					async u() {
						const e = await this.t(),
							i = PM(this.g, e);
						(this.g = e), i.length > 0 && this.h.fire(i);
					}
				}),
				(rf = __decorate([__param(1, nt), __param(2, G)], rf));
		},
	});
function AM(t, e, i) {
	e instanceof le || (e = new le(e, [], !!i)), Z8.push([t, e]);
}
var Z8,
	e3,
	IM = m({
		"out-build/vs/platform/instantiation/common/extensions.js"() {
			"use strict";
			yh(),
				(Z8 = []),
				(function (t) {
					(t[(t.Eager = 0)] = "Eager"), (t[(t.Delayed = 1)] = "Delayed");
				})(e3 || (e3 = {}));
		},
	}),
	t3,
	nf,
	na,
	i3,
	CM = m({
		"out-build/vs/base/common/skipList.js"() {
			"use strict";
			(nf = class {
				constructor(t, e, i) {
					(this.level = t),
						(this.key = e),
						(this.value = i),
						(this.forward = []);
				}
			}),
				(na = void 0),
				(i3 = class ca {
					constructor(e, i = 2 ** 16) {
						(this.comparator = e),
							(this[t3] = "SkipList"),
							(this.d = 0),
							(this.f = 0),
							(this.c = Math.max(1, Math.log2(i) | 0)),
							(this.e = new nf(this.c, na, na));
					}
					get size() {
						return this.f;
					}
					clear() {
						(this.e = new nf(this.c, na, na)), (this.f = 0);
					}
					has(e) {
						return !!ca.g(this, e, this.comparator);
					}
					get(e) {
						return ca.g(this, e, this.comparator)?.value;
					}
					set(e, i) {
						return ca.h(this, e, i, this.comparator) && (this.f += 1), this;
					}
					delete(e) {
						const i = ca.k(this, e, this.comparator);
						return i && (this.f -= 1), i;
					}
					forEach(e, i) {
						let s = this.e.forward[0];
						for (; s; ) e.call(i, s.value, s.key, this), (s = s.forward[0]);
					}
					[((t3 = Symbol.toStringTag), Symbol.iterator)]() {
						return this.entries();
					}
					*entries() {
						let e = this.e.forward[0];
						for (; e; ) yield [e.key, e.value], (e = e.forward[0]);
					}
					*keys() {
						let e = this.e.forward[0];
						for (; e; ) yield e.key, (e = e.forward[0]);
					}
					*values() {
						let e = this.e.forward[0];
						for (; e; ) yield e.value, (e = e.forward[0]);
					}
					toString() {
						let e = "[SkipList]:",
							i = this.e.forward[0];
						for (; i; )
							(e += `node(${i.key}, ${i.value}, lvl:${i.level})`),
								(i = i.forward[0]);
						return e;
					}
					static g(e, i, s) {
						let r = e.e;
						for (let n = e.d - 1; n >= 0; n--)
							for (; r.forward[n] && s(r.forward[n].key, i) < 0; )
								r = r.forward[n];
						if (((r = r.forward[0]), r && s(r.key, i) === 0)) return r;
					}
					static h(e, i, s, r) {
						const n = [];
						let o = e.e;
						for (let a = e.d - 1; a >= 0; a--) {
							for (; o.forward[a] && r(o.forward[a].key, i) < 0; )
								o = o.forward[a];
							n[a] = o;
						}
						if (((o = o.forward[0]), o && r(o.key, i) === 0))
							return (o.value = s), !1;
						{
							const a = ca.j(e);
							if (a > e.d) {
								for (let c = e.d; c < a; c++) n[c] = e.e;
								e.d = a;
							}
							o = new nf(a, i, s);
							for (let c = 0; c < a; c++)
								(o.forward[c] = n[c].forward[c]), (n[c].forward[c] = o);
							return !0;
						}
					}
					static j(e, i = 0.5) {
						let s = 1;
						for (; Math.random() < i && s < e.c; ) s += 1;
						return s;
					}
					static k(e, i, s) {
						const r = [];
						let n = e.e;
						for (let o = e.d - 1; o >= 0; o--) {
							for (; n.forward[o] && s(n.forward[o].key, i) < 0; )
								n = n.forward[o];
							r[o] = n;
						}
						if (((n = n.forward[0]), !n || s(n.key, i) !== 0)) return !1;
						for (let o = 0; o < e.d && r[o].forward[o] === n; o++)
							r[o].forward[o] = n.forward[o];
						for (; e.d > 0 && e.e.forward[e.d - 1] === na; ) e.d -= 1;
						return !0;
					}
				});
		},
	}),
	Qg,
	hl,
	_M = m({
		"out-build/vs/platform/uriIdentity/common/uriIdentityService.js"() {
			"use strict";
			$s(),
				IM(),
				Be(),
				rt(),
				CM(),
				q(),
				F(),
				(Qg = class m0 {
					static {
						this._clock = 0;
					}
					constructor(e) {
						(this.uri = e), (this.time = m0._clock++);
					}
					touch() {
						return (this.time = m0._clock++), this;
					}
				}),
				(hl = class {
					constructor(e) {
						(this.g = e), (this.c = new De()), (this.f = 2 ** 16);
						const i = new Map(),
							s = (r) => {
								let n = i.get(r.scheme);
								return (
									n === void 0 &&
										((n = e.hasProvider(r) && !this.g.hasCapability(r, 1024)),
										i.set(r.scheme, n)),
									n
								);
							};
						this.c.add(
							x.any(
								e.onDidChangeFileSystemProviderRegistrations,
								e.onDidChangeFileSystemProviderCapabilities,
							)((r) => {
								i.delete(r.scheme);
							}),
						),
							(this.extUri = new Ba(s)),
							(this.d = new i3(
								(r, n) => this.extUri.compare(r, n, !0),
								this.f,
							));
					}
					dispose() {
						this.c.dispose(), this.d.clear();
					}
					asCanonicalUri(e) {
						this.g.hasProvider(e) && (e = pp(e));
						const i = this.d.get(e);
						return i
							? i.touch().uri.with({ fragment: e.fragment })
							: (this.d.set(e, new Qg(e)), this.h(), e);
					}
					h() {
						if (this.d.size < this.f) return;
						const e = [...this.d.entries()].sort((s, r) =>
							s[1].time < r[1].time ? 1 : s[1].time > r[1].time ? -1 : 0,
						);
						(Qg._clock = 0), this.d.clear();
						const i = this.f * 0.5;
						for (let s = 0; s < i; s++) this.d.set(e[s][0], e[s][1].touch());
					}
				}),
				(hl = __decorate([__param(0, nt)], hl)),
				AM(gi, hl, 1);
		},
	}),
	s3,
	RM = m({
		"out-build/vs/platform/log/common/logService.js"() {
			"use strict";
			F(),
				Q(),
				(s3 = class extends j {
					constructor(t, e = []) {
						super(),
							(this.a = new ub([t, ...e])),
							this.D(t.onDidChangeLogLevel((i) => this.setLevel(i)));
					}
					get onDidChangeLogLevel() {
						return this.a.onDidChangeLogLevel;
					}
					setLevel(t) {
						this.a.setLevel(t);
					}
					getLevel() {
						return this.a.getLevel();
					}
					trace(t, ...e) {
						this.a.trace(t, ...e);
					}
					debug(t, ...e) {
						this.a.debug(t, ...e);
					}
					info(t, ...e) {
						this.a.info(t, ...e);
					}
					warn(t, ...e) {
						this.a.warn(t, ...e);
					}
					error(t, ...e) {
						this.a.error(t, ...e);
					}
					flush() {
						this.a.flush();
					}
				});
		},
	}),
	r3,
	OM = m({
		"out-build/vs/platform/userData/common/fileUserDataProvider.js"() {
			"use strict";
			q(),
				F(),
				Be(),
				ho(),
				xi(),
				(r3 = class extends j {
					constructor(t, e, i, s, r, n) {
						super(),
							(this.f = t),
							(this.g = e),
							(this.h = i),
							(this.j = s),
							(this.m = r),
							(this.n = n),
							(this.capabilities = this.g.capabilities),
							(this.onDidChangeCapabilities = this.g.onDidChangeCapabilities),
							(this.a = this.D(new $())),
							(this.onDidChangeFile = this.a.event),
							(this.b = kr.forUris(() => !(this.capabilities & 1024))),
							(this.c = new uw((o) =>
								this.m.extUri.getComparisonKey(this.s(o)),
							)),
							this.q(),
							this.D(s.onDidChangeProfiles(() => this.q())),
							this.D(this.g.onDidChangeFile((o) => this.r(o)));
					}
					q() {
						this.c.clear();
						for (const t of this.j.profiles)
							this.c.add(t.settingsResource),
								this.c.add(t.keybindingsResource),
								this.c.add(t.tasksResource),
								this.c.add(t.extensionsResource);
					}
					open(t, e) {
						return this.g.open(this.s(t), e);
					}
					close(t) {
						return this.g.close(t);
					}
					read(t, e, i, s, r) {
						return this.g.read(t, e, i, s, r);
					}
					write(t, e, i, s, r) {
						return this.g.write(t, e, i, s, r);
					}
					watch(t, e) {
						this.b.set(t, t);
						const i = this.g.watch(this.s(t), e);
						return ke(() => {
							this.b.delete(t), i.dispose();
						});
					}
					stat(t) {
						return this.g.stat(this.s(t));
					}
					mkdir(t) {
						return this.g.mkdir(this.s(t));
					}
					rename(t, e, i) {
						return this.g.rename(this.s(t), this.s(e), i);
					}
					readFile(t, e) {
						return this.g.readFile(this.s(t), e);
					}
					readFileStream(t, e, i) {
						return this.g.readFileStream(this.s(t), e, i);
					}
					readdir(t) {
						return this.g.readdir(this.s(t));
					}
					enforceAtomicReadFile(t) {
						return this.c.has(t);
					}
					writeFile(t, e, i) {
						return this.g.writeFile(this.s(t), e, i);
					}
					enforceAtomicWriteFile(t) {
						return this.c.has(t) ? { postfix: ".vsctmp" } : !1;
					}
					delete(t, e) {
						return this.g.delete(this.s(t), e);
					}
					copy(t, e, i) {
						if (Yp(this.g)) return this.g.copy(this.s(t), this.s(e), i);
						throw new Error("copy not supported");
					}
					cloneFile(t, e) {
						if (yb(this.g)) return this.g.cloneFile(this.s(t), this.s(e));
						throw new Error("clone not supported");
					}
					r(t) {
						const e = [];
						for (const i of t) {
							if (i.resource.scheme !== this.f) continue;
							const s = this.t(i.resource);
							this.b.findSubstr(s) &&
								e.push({ resource: s, type: i.type, cId: i.cId });
						}
						e.length && (this.n.debug("User data changed"), this.a.fire(e));
					}
					s(t) {
						return t.with({ scheme: this.f });
					}
					t(t) {
						return t.with({ scheme: this.h });
					}
				});
		},
	});
function LM() {
	return !Kt().enabled;
}
function n3(t) {
	LM() || _l(t) || Bs.isErrorNoTelemetry(t) || ea().captureException(t);
}
var MM = m({
		"out-build/vs/platform/tracing/common/tracing.js"() {
			"use strict";
			ae(),
				Ae(),
				pa(),
				Mg(),
				typeof Symbol.dispose != "symbol" &&
					Object.defineProperty(Symbol, "dispose", {
						value: Symbol("Symbol.dispose"),
					}),
				typeof Symbol.asyncDispose != "symbol" &&
					Object.defineProperty(Symbol, "asyncDispose", {
						value: Symbol("Symbol.asyncDispose"),
					});
		},
	}),
	o3,
	FM = m({
		"out-build/vs/platform/tracing/common/logger.js"() {
			"use strict";
			pa(),
				MM(),
				(o3 = class {
					constructor(t) {
						(this.a = t),
							(this.onDidChangeLogLevel = this.a.onDidChangeLogLevel);
					}
					getLevel() {
						return this.a.getLevel();
					}
					setLevel(t) {
						this.a.setLevel(t);
					}
					trace(t, ...e) {
						this.a.trace(t, ...e);
					}
					debug(t, ...e) {
						this.a.debug(t, ...e);
					}
					info(t, ...e) {
						this.a.info(t, ...e);
					}
					warn(t, ...e) {
						this.a.warn(t, ...e);
					}
					error(t, ...e) {
						if (
							(this.a.error(t, ...e),
							!(!Kt().enabled || Math.random() >= Kt().loggerSampleRate))
						) {
							if (t instanceof Error) {
								n3(t);
								return;
							}
							for (const i of e)
								if (i instanceof Error) {
									n3(i);
									return;
								}
						}
					}
					flush() {
						this.a.flush();
					}
					dispose() {
						this.a.dispose();
					}
				});
		},
	}),
	NM = {};
import { app as WM, dialog as jM } from "electron";
import { unlinkSync as TM, promises as a3 } from "fs";
var c3,
	l3,
	UM = m({
		"out-build/vs/code/electron-main/main.js"() {
			"use strict";
			pS(),
				ie(),
				Ut(),
				ae(),
				Yr(),
				Ae(),
				hi(),
				q(),
				vr(),
				Ce(),
				ge(),
				qs(),
				z(),
				gs(),
				Ft(),
				yt(),
				Ks(),
				Lp(),
				PL(),
				ve(),
				Ve(),
				AL(),
				RL(),
				bt(),
				bc(),
				FL(),
				Be(),
				NL(),
				um(),
				yh(),
				jL(),
				hm(),
				ot(),
				TL(),
				Q(),
				dc(),
				Ct(),
				Ph(),
				qL(),
				L8(),
				dM(),
				bn(),
				SM(),
				Lm(),
				xM(),
				Li(),
				Dn(),
				hc(),
				an(),
				Rs(),
				DM(),
				$M(),
				F(),
				$s(),
				_M(),
				jc(),
				RM(),
				Y4(),
				g4(),
				OM(),
				fa(),
				FM(),
				(c3 = class {
					main() {
						try {
							this.a();
						} catch (t) {
							console.error(t.message), WM.exit(1);
						}
					}
					async a() {
						Q0((c) => console.error(c));
						const [t, e, i, s, r, n, o, a] = this.b();
						try {
							try {
								await this.d(i, a, s, r, o);
							} catch (c) {
								throw (this.g(i, o, c), c);
							}
							await t.invokeFunction(async (c) => {
								const l = c.get(G),
									u = c.get(Ne),
									d = c.get(nt),
									f = c.get(ec),
									p = await this.f(l, i, u, t, o, !0);
								ee.writeFile(i.mainLockfile, String(process.pid)).catch((g) => {
									l.warn(
										`app#startup(): Error writing main lockfile: ${g.stack}`,
									);
								});
								const v = f.createLogger("main", { name: w(156, null) });
								return (
									(n.logger = new o3(v)),
									x.once(u.onWillShutdown)((g) => {
										d.dispose(),
											s.dispose(),
											g.join(
												"instanceLockfile",
												a3.unlink(i.mainLockfile).catch(() => {}),
											);
									}),
									t.createInstance(jd, p, e).startup()
								);
							});
						} catch (c) {
							t.invokeFunction(this.j, c);
						}
					}
					b() {
						const t = new bh(),
							e = new De();
						process.once("exit", () => e.dispose());
						const i = { _serviceBrand: void 0, ...bo };
						t.set(tt, i);
						const s = new er(this.k(), i),
							r = this.c(s);
						t.set(ut, s);
						const n = new q5(cx(s), s.logsHome);
						t.set(To, n);
						const o = new C8(n.getLogLevel()),
							a = e.add(new s3(o, [new lb(n.getLogLevel())]));
						t.set(G, a);
						const c = new Bd(a);
						t.set(nt, c);
						const l = new vh(a);
						c.registerProvider(R.file, l);
						const u = new hl(c);
						t.set(gi, u);
						const d = new g1(1, s, a, c);
						t.set(e1, d), t.set(Ii, d);
						const f = new qu(d, u, s, c, a);
						t.set(Cs, f),
							c.registerProvider(
								R.vscodeUserData,
								new r3(R.file, l, R.vscodeUserData, f, u, a),
							);
						const p =
							T && i.win32RegValueName
								? e.add(new sf(a, i.win32RegValueName))
								: s.policyFile
									? e.add(new rf(s.policyFile, c, a))
									: new Cm();
						t.set(xn, p);
						const v = new x8(f.defaultProfile.settingsResource, c, p, a);
						return (
							t.set(He, v),
							t.set(Ne, new le(Cu, void 0, !1)),
							t.set(yn, new le(K8, void 0, !0)),
							t.set(yo, new le(Gu)),
							t.set(Uo, new le(Q8, void 0, !1)),
							t.set(_8, new le(ul)),
							t.set(Lc, new Hd(s, f, a)),
							[new A8(t, !0), r, s, v, d, o, i, f]
						);
					}
					c(t) {
						const e = { VSCODE_IPC_HOOK: t.mainIPCHandle };
						return (
							["VSCODE_NLS_CONFIG", "VSCODE_PORTABLE"].forEach((i) => {
								const s = process.env[i];
								typeof s == "string" && (e[i] = s);
							}),
							Object.assign(process.env, e),
							e
						);
					}
					async d(t, e, i, s, r) {
						await Nt.settled([
							Promise.all(
								[
									this.e(t.extensionsPath),
									t.codeCachePath,
									t.logsHome.with({ scheme: R.file }).fsPath,
									e.defaultProfile.globalStorageHome.with({ scheme: R.file })
										.fsPath,
									t.workspaceStorageHome.with({ scheme: R.file }).fsPath,
									t.localHistoryHome.with({ scheme: R.file }).fsPath,
									t.backupHome,
								].map((n) => (n ? a3.mkdir(n, { recursive: !0 }) : void 0)),
							),
							s.init(),
							i.initialize(),
						]),
							e.init();
					}
					e(t) {
						if (T) {
							const e = _0(t);
							e && da(e);
						}
						return t;
					}
					async f(t, e, i, s, r, n) {
						let o;
						try {
							Fe("code/willStartMainServer"),
								(o = await Mk(e.mainIPCHandle)),
								Fe("code/didStartMainServer"),
								x.once(i.onWillShutdown)(() => o.dispose());
						} catch (a) {
							if (a.code !== "EADDRINUSE") throw (this.g(e, r, a), a);
							let c;
							try {
								c = await Fk(e.mainIPCHandle, "main");
							} catch (f) {
								if (!n || T || f.code !== "ECONNREFUSED")
									throw (
										(f.code === "EPERM" &&
											this.h(w(157, null, r.nameShort), w(158, null), r),
										f)
									);
								try {
									TM(e.mainIPCHandle);
								} catch (p) {
									throw (
										(t.warn("Could not delete obsolete instance handle", p), p)
									);
								}
								return this.f(t, e, i, s, r, !1);
							}
							if (e.extensionTestsLocationURI && !e.debugExtensionHost.break) {
								const f = `Running extension tests from the command line is currently only supported if no other instance of ${r.nameShort} is running.`;
								throw (t.error(f), c.dispose(), new Error(f));
							}
							let l;
							!e.args.wait &&
								!e.args.status &&
								(l = setTimeout(() => {
									this.h(w(159, null, r.nameShort), w(160, null), r);
								}, 1e4));
							const u = Xe.toService(c.getChannel("launch"), {
									disableMarshalling: !0,
								}),
								d = Xe.toService(c.getChannel("diagnostics"), {
									disableMarshalling: !0,
								});
							if (e.args.status)
								return s.invokeFunction(async () => {
									const f = new qd(Tc, r),
										p = await d.getMainDiagnostics(),
										v = await d.getRemoteDiagnostics({
											includeProcesses: !0,
											includeWorkspaceMetadata: !0,
										}),
										g = await f.getDiagnostics(p, v);
									throw (console.log(g), new Rl());
								});
							throw (
								(T && (await this.i(u, t)),
								t.trace("Sending env to running instance..."),
								await u.start(e.args, process.env),
								c.dispose(),
								l && clearTimeout(l),
								new Rl("Sent env to running instance. Terminating..."))
							);
						}
						if (e.args.status)
							throw (
								(console.log(w(161, null, r.nameShort)),
								new Rl("Terminating..."))
							);
						return (process.env.VSCODE_PID = String(process.pid)), o;
					}
					g(t, e, i) {
						if (i.code === "EACCES" || i.code === "EPERM") {
							const s = Dt([t.userDataPath, t.extensionsPath, hu]).map((r) =>
								Zn(P.file(r), { os: Ri, tildify: t }),
							);
							this.h(
								w(162, null),
								w(
									163,
									null,
									Es(i),
									s.join(`
`),
								),
								e,
							);
						}
					}
					h(t, e, i) {
						jM.showMessageBoxSync(
							J4(
								{
									type: "warning",
									buttons: [w(164, null)],
									message: t,
									detail: e,
								},
								i,
							).options,
						);
					}
					async i(t, e) {
						if (T) {
							const i = await t.getMainProcessId();
							e.trace(
								"Sending some foreground love to the running instance:",
								i,
							);
							try {
								(
									await import("windows-foreground-love")
								).allowSetForegroundWindow(i);
							} catch (s) {
								e.error(s);
							}
						}
					}
					j(t, e) {
						const i = t.get(G),
							s = t.get(Ne);
						let r = 0;
						e &&
							(e.isExpected
								? e.message && i.trace(e.message)
								: ((r = 1),
									e.stack
										? i.error(e.stack)
										: i.error(`Startup error: ${e.toString()}`))),
							s.kill(r);
					}
					k() {
						const t = this.l(jD(process.argv));
						if (t.wait && !t.waitMarkerFilePath) {
							const e = ML(t.verbose);
							e &&
								(TD(process.argv, "--waitMarkerFilePath", e),
								(t.waitMarkerFilePath = e));
						}
						return t;
					}
					l(t) {
						if ((t["open-url"] && ((t._urls = t._), (t._ = [])), !t.remote)) {
							const e = this.m(t._, t.goto);
							t._ = e;
						}
						return t;
					}
					m(t, e) {
						const i = ms(),
							s = t.map((o) => {
								let a = String(o),
									c;
								e && ((c = Xl(a)), (a = c.path)), a && (a = this.n(i, a));
								const l = dv(a, i),
									u = Te(l);
								return u && !$S(u)
									? null
									: e && c
										? ((c.path = l), this.o(c))
										: l;
							}),
							r = T || N,
							n = Zi(s, (o) => (o && r ? o.toLowerCase() : o || ""));
						return Dt(n);
					}
					n(t, e) {
						return (
							T && (e = Kr(e, '"')),
							(e = rv(rv(e, " "), "	")),
							T && ((e = zi(t, e)), (e = Kr(e, "."))),
							e
						);
					}
					o(t) {
						const e = [t.path];
						return (
							typeof t.line == "number" && e.push(String(t.line)),
							typeof t.column == "number" && e.push(String(t.column)),
							e.join(":")
						);
					}
				}),
				(l3 = new c3()),
				l3.main();
		},
	});
import * as ar from "path";
import * as Fn from "original-fs";
import * as qM from "os";
import { performance as BM } from "perf_hooks";
import * as Xi from "path";
import * as u3 from "fs";
import { fileURLToPath as zM } from "url";
import { createRequire as HM } from "node:module";
var Wj = HM(import.meta.url),
	VM = Xi.dirname(zM(import.meta.url));
if (((Error.stackTraceLimit = 100), !process.env.VSCODE_HANDLES_SIGPIPE)) {
	let t = !1;
	process.on("SIGPIPE", () => {
		t || ((t = !0), console.error(new Error("Unexpected SIGPIPE")));
	});
}
function GM() {
	try {
		typeof process.env.VSCODE_CWD != "string" &&
			(process.env.VSCODE_CWD = process.cwd()),
			process.platform === "win32" &&
				process.chdir(Xi.dirname(process.execPath));
	} catch (t) {
		console.error(t);
	}
}
GM();
function JM(t) {
	const e = Xi.dirname(VM);
	function i() {
		return process.env.VSCODE_DEV
			? e
			: process.platform === "darwin"
				? Xi.dirname(Xi.dirname(Xi.dirname(e)))
				: Xi.dirname(Xi.dirname(e));
	}
	function s() {
		if (process.env.VSCODE_PORTABLE) return process.env.VSCODE_PORTABLE;
		if (process.platform === "win32" || process.platform === "linux")
			return Xi.join(i(), "data");
		const c = t.portable || `${t.applicationName}-portable-data`;
		return Xi.join(Xi.dirname(i()), c);
	}
	const r = s(),
		n = !("target" in t) && u3.existsSync(r),
		o = Xi.join(r, "tmp"),
		a = n && u3.existsSync(o);
	return (
		n ? (process.env.VSCODE_PORTABLE = r) : delete process.env.VSCODE_PORTABLE,
		a &&
			(process.platform === "win32"
				? ((process.env.TMP = o), (process.env.TEMP = o))
				: (process.env.TMPDIR = o)),
		{ portableDataPath: r, isPortable: n }
	);
}
import * as XM from "path";
import * as Zg from "fs";
import { fileURLToPath as KM } from "url";
import { createRequire as YM, register as QM } from "node:module";
import { createRequire as ZM } from "node:module";
var h3 = ZM(import.meta.url),
	e0 = {
		BUILD_INSERT_PRODUCT_CONFIGURATION: "BUILD_INSERT_PRODUCT_CONFIGURATION",
	};
e0.BUILD_INSERT_PRODUCT_CONFIGURATION && (e0 = h3("../product.json"));
var t0 = {
	name: "Cursor",
	version: "0.46.10",
	distro: "c883c91dadf5f063b26c86ffe01851acee3747c6",
	author: { name: "Anysphere, Inc." },
	engines: {
		pnpm: "please-use-npm",
		yarn: "please-use-npm",
		node: ">= 20.11.0 < 21.0.0",
	},
	main: "./out/main.js",
	type: "module",
	private: true,
	scripts: {
		test: "echo Please run any of the test scripts from the scripts folder.",
		"test-browser": "npx playwright install && node test/unit/browser/index.js",
		"test-browser-amd":
			"npx playwright install && node test/unit/browser/index.amd.js",
		"test-browser-no-install": "node test/unit/browser/index.js",
		"test-browser-amd-no-install": "node test/unit/browser/index.amd.js",
		"test-node":
			"mocha test/unit/node/index.mjs --delay --ui=tdd --timeout=5000 --exit",
		"test-node-amd":
			"mocha test/unit/node/index.amd.js --delay --ui=tdd --timeout=5000 --exit",
		"test-extension": "vscode-test",
		preinstall: "node build/npm/preinstall.js",
		postinstall: "patch-package && node build/npm/postinstall.js",
		"ravi-build-linux-arm64":
			"cross-env VSCODE_MANGLE_DISABLE=true node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-arm64-min",
		"ravi-build-linux-arm64-deb":
			"cross-env VSCODE_MANGLE_DISABLE=true node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-arm64-prepare-deb && node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-arm64-build-deb",
		"ravi-build-linux-x64":
			"cross-env VSCODE_MANGLE_DISABLE=true node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-x64-min",
		"ravi-build-linux-x64-deb":
			"cross-env VSCODE_MANGLE_DISABLE=true node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-x64-prepare-deb && node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js vscode-linux-x64-build-deb",
		compile:
			"node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js compile",
		"compile-extensions":
			"node --max-old-space-size=4095 ./node_modules/gulp/bin/gulp.js compile-extensions",
		"compile-retrieval":
			"node --max-old-space-size=4095 ./node_modules/gulp/bin/gulp.js compile-extension:cursor-retrieval",
		watch:
			"bash ./configure-product-json.sh products/product-debug.jsonc && cross-env VSCODE_DEV_CACHE=1 NODE_OPTIONS=--inspect-port=0 npm run watch-without-configuring-product-json",
		"watch-trace":
			"bash ./configure-product-json.sh products/product-debug.jsonc && cross-env VSCODE_DEV_CACHE=trace NODE_OPTIONS=--inspect-port=0 npm run watch-without-configuring-product-json",
		"watch-clean": "rm -rf out out-ts",
		"watch-nocache":
			"bash ./configure-product-json.sh products/product-debug.jsonc && cross-env NODE_OPTIONS=--inspect-port=0 npm run watch-without-configuring-product-json",
		"watch-esm":
			"bash ./configure-product-json.sh products/product-debug.jsonc && cross-env NODE_OPTIONS=--inspect-port=0 npm run watch-without-configuring-product-json-esm",
		"watch-nightly":
			"bash ./configure-product-json.sh products/product-nightly-todesktop.jsonc && cross-env VSCODE_DEV_CACHE=1 npm run watch-without-configuring-product-json",
		"watch-prod":
			"bash ./configure-product-json.sh products/product-prod-todesktop.jsonc && cross-env VSCODE_DEV_CACHE=1 npm run watch-without-configuring-product-json",
		"watch-prod-ssh":
			"bash ./configure-product-json.sh products/product-prod-sshfuzz.jsonc && cross-env VSCODE_DEV_CACHE=1 npm run watch-without-configuring-product-json",
		"watch-debug-ssh":
			"bash ./configure-product-json.sh products/product-debug-ssh.jsonc && cross-env VSCODE_DEV_CACHE=1 npm run watch-without-configuring-product-json",
		"watch-debug-ssh-swc":
			"bash ./configure-product-json.sh products/product-debug-ssh.jsonc && npm run watch-without-configuring-product-json-swc",
		"watch-prod-swc":
			"bash ./configure-product-json.sh products/product-prod-todesktop.jsonc && npm run watch-without-configuring-product-json-swc",
		"watch-swc":
			"echo 'watch-swc is banned for now because it is causing bugs that we are confusing with real bugs. it also dies more often.' && exit 1 && bash ./configure-product-json.sh products/product-debug.jsonc && npm run watch-without-configuring-product-json-swc",
		"sualeh:watch-swc":
			"bash ./configure-product-json.sh products/product-debug.jsonc && npm run watch-without-configuring-product-json-swc",
		"watch-windows":
			"cross-env VSCODE_DEV_CACHE=1 npm run buf:generate && cross-env VSCODE_DEV_CACHE=1 npm run compile-extensions && cross-env VSCODE_DEV_CACHE=1 npm-run-all -lp buf:generate watch-client watch-extensions watch-cpp-utils copy-cpp-utils watch-proto-windows",
		"watch-without-configuring-product-json":
			"(npm run buf:generate || echo 'failed to generate proto') && npm-run-all -lp watch-client watch-extensions watch-proto watch-rust watch-cpp-utils copy-cpp-utils",
		"watch-without-configuring-product-json-esm":
			"(npm run buf:generate || echo 'failed to generate proto') && npm-run-all -lp watch-client-esm watch-extensions watch-proto watch-rust watch-cpp-utils copy-cpp-utils",
		"watch-without-configuring-product-json-swc":
			"(npm run buf:generate || echo 'failed to generate proto') && npm-run-all -lp watch-client-swc watch-extensions-swc watch-proto watch-rust watch-cpp-utils copy-cpp-utils",
		"watch-just-cursor-retrieval":
			"(npm run buf:generate || echo 'failed to generate proto') && npm-run-all -lp 'gulp watch-extension:cursor-retrieval' watch-proto",
		"watch-just-client":
			"(npm run buf:generate || echo 'failed to generate proto') && npm-run-all -lp 'gulp watch-just-client' watch-proto",
		"watch-proto":
			"nodemon --on-change-only --watch '../schema/**/*' --ext proto --exec 'bash ./scripts/buf-generate-with-error-handling.sh'",
		"watch-proto-windows":
			"nodemon --on-change-only --watch '../schema/**/*' --ext proto --exec 'npm run buf:generate'",
		"watch-cpp-utils":
			"nodemon --on-change-only --watch 'extensions/cursor-always-local/src/commands/cppUtils/**/*.ts' --ext ts --exec 'npm run copy-cpp-utils'",
		"copy-cpp-utils":
			"npm run copy-cpp-utils-to-renderer && npm run copy-cpp-utils-to-backend",
		"copy-cpp-utils-to-renderer":
			"node ../backend/server/scripts/copyCppUtils.js ./src/vs/base/common/cppUtils ./extensions/cursor-always-local/src/commands/cppUtils src/proto true",
		"copy-cpp-utils-to-backend":
			"node ../backend/server/scripts/copyCppUtils.js ../backend/server/src/cppUtils ./extensions/cursor-always-local/src/commands/cppUtils false true",
		"watch-rust": "cd extensions/cursor-retrieval && npm run watch:rust",
		watchd: "deemon npm run watch",
		"watch-webd": "deemon npm run watch-web",
		"kill-watchd": "deemon --kill npm run watch",
		"kill-watch-webd": "deemon --kill npm run watch-web",
		"restart-watchd": "deemon --restart npm run watch",
		"restart-watch-webd": "deemon --restart npm run watch-web",
		"watch-client":
			"node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js watch-client",
		"watch-client-bun": "bun ./node_modules/gulp/bin/gulp.js watch-client",
		"watch-client-swc":
			"node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js watch-client-swc",
		"watch-client-amd":
			"node --max-old-space-size=4095 ./node_modules/gulp/bin/gulp.js watch-client-amd",
		"watch-clientd": "deemon npm run watch-client",
		"kill-watch-clientd": "deemon --kill npm run watch-client",
		"watch-extensions":
			"node --max-old-space-size=8192 ./node_modules/gulp/bin/gulp.js watch-extensions watch-extension-media",
		"watch-extensions-bun":
			"bun ./node_modules/gulp/bin/gulp.js watch-extensions watch-extension-media",
		"watch-extensions-swc":
			"node --max-old-space-size=8192 -- ./node_modules/gulp/bin/gulp.js watch-extensions-swc watch-extension-media",
		"watch-extensionsd": "deemon npm run watch-extensions",
		"kill-watch-extensionsd": "deemon --kill npm run watch-extensions",
		gulp: "node --max-old-space-size=10000 ./node_modules/gulp/bin/gulp.js",
		precommit: "node build/hygiene.js",
		electron: "node build/lib/electron",
		"7z": "7z",
		"update-grammars": "node build/npm/update-all-grammars.mjs",
		"update-localization-extension":
			"node build/npm/update-localization-extension.js",
		smoketest:
			"node build/lib/preLaunch.js && cd test/smoke && npm run compile && node test/index.js",
		"smoketest-no-compile": "cd test/smoke && node test/index.js",
		"download-builtin-extensions": "node build/lib/builtInExtensions.js",
		"download-builtin-extensions-cg": "node build/lib/builtInExtensionsCG.js",
		"monaco-compile-check": "tsc -p src/tsconfig.monaco.json --noEmit",
		"tsec-compile-check":
			"node --max-old-space-size=8192 node_modules/tsec/bin/tsec -p src/tsconfig.tsec.json",
		"tsec-compile-post-compile-ts":
			"npm run gulp precompile-tsx-only && node --max-old-space-size=8192 node_modules/tsec/bin/tsec -p out-ts2/tsconfig.tsec.json",
		"vscode-dts-compile-check":
			"tsc -p src/tsconfig.vscode-dts.json && tsc -p src/tsconfig.vscode-proposed-dts.json",
		"valid-layers-check":
			"node --max-old-space-size=4096 build/lib/layersChecker.js",
		"update-distro": "node build/npm/update-distro.mjs",
		web: "echo 'npm run web' is replaced by './scripts/code-server' or './scripts/code-web'",
		"compile-cli": "gulp compile-cli",
		"compile-web": "node ./node_modules/gulp/bin/gulp.js compile-web",
		"watch-web": "node ./node_modules/gulp/bin/gulp.js watch-web",
		"watch-cli": "node ./node_modules/gulp/bin/gulp.js watch-cli",
		eslint: "node build/eslint",
		stylelint: "node build/stylelint",
		"playwright-install": "npm exec playwright install",
		"compile-build": "node ./node_modules/gulp/bin/gulp.js compile-build",
		"compile-extensions-build":
			"node ./node_modules/gulp/bin/gulp.js compile-extensions-build",
		"minify-vscode": "node ./node_modules/gulp/bin/gulp.js minify-vscode",
		"minify-vscode-reh":
			"node ./node_modules/gulp/bin/gulp.js minify-vscode-reh",
		"minify-vscode-reh-web":
			"node ./node_modules/gulp/bin/gulp.js minify-vscode-reh-web",
		hygiene: "node ./node_modules/gulp/bin/gulp.js hygiene",
		"core-ci": "node ./node_modules/gulp/bin/gulp.js core-ci",
		"core-ci-pr": "node ./node_modules/gulp/bin/gulp.js core-ci-pr",
		"extensions-ci": "node ./node_modules/gulp/bin/gulp.js extensions-ci",
		"extensions-ci-pr": "node ./node_modules/gulp/bin/gulp.js extensions-ci-pr",
		perf: "node scripts/code-perf.js",
		"webview-generate-csp-hash":
			"npx github:apaatsio/csp-hash-from-html csp-hash ./src/vs/workbench/contrib/webview/browser/pre/index.html",
		"buf:onlygenerate": "buf generate ../schema",
		"buf:generate:schema": "buf generate ../schema",
		"buf:generate:vscode":
			"npm run buf:generate:schema && npm run buf:cleanpaths",
		"buf:generate:retrieval":
			"cd extensions/cursor-retrieval && npm run buf:generate",
		"buf:generate:experiments":
			"cd extensions/cursor-experiments && npm run buf:generate",
		"buf:generate:always-local":
			"cd extensions/cursor-always-local && npm run buf:generate",
		"buf:generate:browser":
			"cd extensions/cursor-browser && npm run buf:generate",
		"buf:generate:shadow-workspace":
			"cd extensions/cursor-shadow-workspace && npm run buf:generate",
		"buf:generate": "nx --skip-nx-cache buf:generate",
		"buf:cleanpaths": "node build/lib/cleanpaths.js src/proto",
		"update-build-ts-version":
			"npm install typescript@next && tsc -p ./build/tsconfig.build.json",
	},
	dependencies: {
		"@anysphere/file-service": "^0.0.0-03f3cb37",
		"@electron/asar": "^3.2.3",
		"@microsoft/1ds-core-js": "^3.2.13",
		"@microsoft/1ds-post-js": "^3.2.13",
		"@parcel/watcher": "2.5.0",
		"@sentry/electron": "5.7.0",
		"@sentry/node": "8.35.0",
		"@todesktop/runtime": "^1.6.1",
		"@types/semver": "^7.5.8",
		"@vscode/deviceid": "^0.1.1",
		"@vscode/iconv-lite-umd": "0.7.0",
		"@vscode/policy-watcher": "^1.1.8",
		"@vscode/proxy-agent": "^0.27.0",
		"@vscode/ripgrep": "^1.15.10",
		"@vscode/spdlog": "^0.15.1",
		"@vscode/sqlite3": "5.1.8-vscode",
		"@vscode/sudo-prompt": "9.3.1",
		"@vscode/tree-sitter-wasm": "^0.0.4",
		"@vscode/vscode-languagedetection": "1.0.21",
		"@vscode/windows-mutex": "^0.5.0",
		"@vscode/windows-process-tree": "^0.6.0",
		"@vscode/windows-registry": "^1.1.0",
		"@xterm/addon-clipboard": "^0.2.0-beta.53",
		"@xterm/addon-image": "^0.9.0-beta.70",
		"@xterm/addon-ligatures": "^0.10.0-beta.70",
		"@xterm/addon-search": "^0.16.0-beta.70",
		"@xterm/addon-serialize": "^0.14.0-beta.70",
		"@xterm/addon-unicode11": "^0.9.0-beta.70",
		"@xterm/addon-webgl": "^0.19.0-beta.70",
		"@xterm/headless": "^5.6.0-beta.70",
		"@xterm/xterm": "^5.6.0-beta.70",
		"http-proxy-agent": "^7.0.0",
		"https-proxy-agent": "^7.0.2",
		jschardet: "3.1.4",
		kerberos: "2.1.1",
		minimist: "^1.2.6",
		multiformats: "^13.3.1",
		"native-is-elevated": "0.7.0",
		"native-keymap": "^3.3.5",
		"native-watchdog": "^1.4.1",
		"node-fetch": "2.7.0",
		"node-pty": "1.1.0-beta22",
		open: "^8.4.2",
		"tas-client-umd": "0.2.0",
		"v8-inspect-profiler": "^0.1.1",
		"vscode-oniguruma": "1.7.0",
		"vscode-regexpp": "^3.1.0",
		"vscode-textmate": "9.1.0",
		yauzl: "^3.0.0",
		yazl: "^2.4.3",
	},
	devDependencies: {
		"@babel/plugin-proposal-decorators": "^7.21.0",
		"@babel/plugin-proposal-explicit-resource-management": "^7.25.9",
		"@babel/plugin-syntax-decorators": "^7.21.0",
		"@babel/plugin-syntax-explicit-resource-management": "^7.25.9",
		"@babel/plugin-syntax-jsx": "^7.18.6",
		"@babel/plugin-syntax-typescript": "^7.20.0",
		"@bufbuild/buf": "^1.47.2",
		"@bufbuild/protoc-gen-connect-web": "^0.11.0",
		"@bufbuild/protoc-gen-es": "^1.10.0",
		"@playwright/test": "^1.46.1",
		"@sentry/cli": "^2.39.1",
		"@solid-devtools/overlay": "^0.33.0",
		"@stylistic/eslint-plugin-ts": "^2.8.0",
		"@swc/core": "^1.3.85",
		"@types/cookie": "^0.3.3",
		"@types/debug": "^4.1.5",
		"@types/eslint": "^9.6.1",
		"@types/gulp-svgmin": "^1.2.1",
		"@types/http-proxy-agent": "^2.0.1",
		"@types/kerberos": "^1.1.2",
		"@types/minimist": "^1.2.1",
		"@types/mocha": "^9.1.1",
		"@types/node": "20.x",
		"@types/sinon": "^10.0.2",
		"@types/sinon-test": "^2.4.2",
		"@types/tmp": "^0.2.3",
		"@types/trusted-types": "^1.0.6",
		"@types/vscode-notebook-renderer": "^1.72.0",
		"@types/webpack": "^5.28.5",
		"@types/wicg-file-system-access": "^2020.9.6",
		"@types/windows-foreground-love": "^0.3.0",
		"@types/winreg": "^1.2.30",
		"@types/yauzl": "^2.10.0",
		"@types/yazl": "^2.4.2",
		"@typescript-eslint/typescript-estree": "^8.19.0",
		"@typescript-eslint/utils": "^8.8.0",
		"@vscode/gulp-electron": "^1.36.0",
		"@vscode/l10n-dev": "0.0.35",
		"@vscode/telemetry-extractor": "^1.10.2",
		"@vscode/test-cli": "^0.0.6",
		"@vscode/test-electron": "^2.4.0",
		"@vscode/test-web": "^0.0.62",
		"@vscode/v8-heap-parser": "^0.1.0",
		"@vscode/vscode-perf": "^0.0.19",
		"@webgpu/types": "^0.1.44",
		"ansi-colors": "^3.2.3",
		asar: "^3.0.3",
		autoprefixer: "^10.4.20",
		"babel-plugin-parameter-decorator": "^1.0.16",
		"babel-preset-solid": "^1.7.4",
		"chokidar-cli": "^3.0.0",
		"chromium-pickle-js": "^0.2.0",
		cookie: "^0.7.2",
		"copy-webpack-plugin": "^11.0.0",
		"cross-env": "^7.0.3",
		"css-loader": "^6.9.1",
		cssnano: "^6.0.3",
		debounce: "^1.0.0",
		deemon: "^1.8.0",
		electron: "32.2.6",
		eslint: "^9.17.0",
		"eslint-config-prettier": "^6.15.0",
		"eslint-formatter-compact": "^8.40.0",
		"eslint-plugin-header": "3.1.1",
		"eslint-plugin-import": "^2.31.0",
		"eslint-plugin-jsdoc": "^50.3.1",
		"eslint-plugin-local": "^6.0.0",
		"eslint-plugin-no-null": "^1.0.2",
		"eslint-plugin-no-only-tests": "^2.6.0",
		"eslint-plugin-prefer-arrow": "^1.2.2",
		"eslint-plugin-prettier": "^3.1.2",
		"eslint-plugin-react": "^7.37.3",
		"eslint-plugin-react-hooks": "^5.1.0",
		"eslint-plugin-solid": "^0.14.5",
		"event-stream": "3.3.4",
		"fancy-log": "^1.3.3",
		"fast-glob": "^3.3.2",
		"file-loader": "^6.2.0",
		glob: "^5.0.13",
		gulp: "^4.0.0",
		"gulp-azure-storage": "^0.12.1",
		"gulp-bom": "^3.0.0",
		"gulp-buffer": "0.0.2",
		"gulp-clone": "^2.0.1",
		"gulp-concat": "^2.6.1",
		"gulp-filter": "^5.1.0",
		"gulp-flatmap": "^1.0.2",
		"gulp-gunzip": "^1.0.0",
		"gulp-gzip": "^1.4.2",
		"gulp-json-editor": "^2.5.0",
		"gulp-plumber": "^1.2.0",
		"gulp-rename": "^1.2.0",
		"gulp-replace": "^1.1.4",
		"gulp-sourcemaps": "^3.0.0",
		"gulp-svgmin": "^4.1.0",
		"gulp-untar": "^0.0.7",
		"gulp-vinyl-zip": "^2.1.2",
		"http-server": "^14.1.1",
		innosetup: "6.0.5",
		"istanbul-lib-coverage": "^3.2.0",
		"istanbul-lib-instrument": "^6.0.1",
		"istanbul-lib-report": "^3.0.0",
		"istanbul-lib-source-maps": "^4.0.1",
		"istanbul-reports": "^3.1.5",
		"lazy.js": "^0.4.2",
		"merge-options": "^1.0.1",
		mime: "^1.4.1",
		minimatch: "^3.0.4",
		minimist: "^1.2.6",
		mocha: "^10.2.0",
		"mocha-junit-reporter": "^2.2.1",
		"mocha-multi-reporters": "^1.5.1",
		nodemon: "^2.0.22",
		"npm-run-all": "^4.1.5",
		nx: "^20.3.0",
		opn: "^6.0.0",
		"os-browserify": "^0.3.0",
		"p-all": "^1.0.0",
		"patch-package": "^8.0.0",
		"path-browserify": "^1.0.1",
		postcss: "^8.4.33",
		"postcss-nesting": "^12.0.2",
		prettier: "^3.3.3",
		pump: "^1.0.1",
		rcedit: "^1.1.0",
		rimraf: "^2.2.8",
		sinon: "^12.0.1",
		"sinon-test": "^3.1.3",
		"solid-devtools": "^0.33.0",
		"solid-refresh": "^0.7.5",
		"source-map": "0.6.1",
		"source-map-support": "^0.3.2",
		"strip-json-comments-cli": "^3.0.0",
		"style-loader": "^3.3.2",
		tailwindcss: "^3.4.17",
		"ts-loader": "^9.5.1",
		"ts-node": "^10.9.1",
		tsec: "0.2.7",
		tslib: "^2.6.3",
		typescript: "5.8.0-dev.20241202",
		"typescript-eslint": "^8.8.0",
		util: "^0.12.4",
		vite: "^6.0.7",
		webpack: "^5.94.0",
		"webpack-cli": "^5.1.4",
		"webpack-stream": "^7.0.0",
		xml2js: "^0.5.0",
		yaserver: "^0.4.0",
	},
	overrides: {
		"typescript-eslint": { typescript: "$typescript" },
		"@typescript-eslint/typescript-estree": { typescript: "$typescript" },
		"@typescript-eslint/utils": { typescript: "$typescript" },
		tsec: { typescript: "$typescript" },
		"eslint-config-airbnb": { eslint: "$eslint" },
		"ts-node": { typescript: "$typescript" },
		"eslint-plugin-solid": { typescript: "$typescript" },
		"node-gyp-build": "4.8.4",
		diff: "^5.2.0",
		"@parcel/watcher": "2.5.0",
		"kerberos@2.1.1": { "node-addon-api": "7.1.0" },
		"@parcel/watcher@2.5.0": { "node-addon-api": "7.1.0" },
	},
	repository: { type: "git", url: "https://github.com/microsoft/vscode.git" },
	bugs: { url: "https://github.com/microsoft/vscode/issues" },
	optionalDependencies: {
		"@vscode/windows-ca-certs": "^0.3.3",
		"windows-foreground-love": "0.5.0",
	},
};
t0.BUILD_INSERT_PACKAGE_CONFIGURATION && (t0 = h3("../package.json"));
var yi = e0,
	eF = t0;
qs();
var tF = YM(import.meta.url),
	iF = XM.dirname(KM(import.meta.url));
if (
	((process.env.ELECTRON_RUN_AS_NODE || process.versions.electron) &&
		QM(
			`data:text/javascript;base64,${Buffer.from(`
	export async function resolve(specifier, context, nextResolve) {
		if (specifier === 'fs') {
			return {
				format: 'builtin',
				shortCircuit: true,
				url: 'node:original-fs'
			};
		}

		// Defer to the next hook in the chain, which would be the
		// Node.js default resolve if this is the last user-specified loader.
		return nextResolve(specifier, context);
	}`).toString("base64")}`,
			import.meta.url,
		),
	(globalThis._VSCODE_PRODUCT_JSON = { ...yi }),
	process.env.VSCODE_DEV)
)
	try {
		const t = tF("../product.overrides.json");
		globalThis._VSCODE_PRODUCT_JSON = Object.assign(
			globalThis._VSCODE_PRODUCT_JSON,
			t,
		);
	} catch {}
(globalThis._VSCODE_PACKAGE_JSON = { ...eF }),
	(globalThis._VSCODE_FILE_ROOT = iF);
var i0 = void 0;
function sF() {
	return i0 || (i0 = rF()), i0;
}
async function rF() {
	Fe("code/willLoadNls");
	let t, e;
	if (process.env.VSCODE_NLS_CONFIG)
		try {
			(t = JSON.parse(process.env.VSCODE_NLS_CONFIG)),
				t?.languagePack?.messagesFile
					? (e = t.languagePack.messagesFile)
					: t?.defaultMessagesFile && (e = t.defaultMessagesFile),
				(globalThis._VSCODE_NLS_LANGUAGE = t?.resolvedLanguage);
		} catch (i) {
			console.error(`Error reading VSCODE_NLS_CONFIG from environment: ${i}`);
		}
	if (!(process.env.VSCODE_DEV || !e)) {
		try {
			globalThis._VSCODE_NLS_MESSAGES = JSON.parse(
				(await Zg.promises.readFile(e)).toString(),
			);
		} catch (i) {
			if (
				(console.error(`Error reading NLS messages file ${e}: ${i}`),
				t?.languagePack?.corruptMarkerFile)
			)
				try {
					await Zg.promises.writeFile(
						t.languagePack.corruptMarkerFile,
						"corrupted",
					);
				} catch (s) {
					console.error(`Error writing corrupted NLS marker file: ${s}`);
				}
			if (t?.defaultMessagesFile && t.defaultMessagesFile !== e)
				try {
					globalThis._VSCODE_NLS_MESSAGES = JSON.parse(
						(await Zg.promises.readFile(t.defaultMessagesFile)).toString(),
					);
				} catch (s) {
					console.error(
						`Error reading default NLS messages file ${t.defaultMessagesFile}: ${s}`,
					);
				}
		}
		return Fe("code/didLoadNls"), t;
	}
}
async function nF() {
	await sF();
}
var oF = E0(S0(), 1);
import { fileURLToPath as aF } from "url";
import {
	app as We,
	protocol as cF,
	crashReporter as lF,
	Menu as uF,
	contentTracing as hF,
} from "electron";
import { networkInterfaces as dF } from "os";
import { createHash as fF, randomUUID as pF } from "crypto";
import "node-fetch";
var mF = new Set([
	"00:00:00:00:00:00",
	"ff:ff:ff:ff:ff:ff",
	"ac:de:48:00:11:22",
]);
function gF(t) {
	const e = t.replace(/\-/g, ":").toLowerCase();
	return !mF.has(e);
}
function wF() {
	const t = dF();
	for (const e in t) {
		const i = t[e];
		if (i) {
			for (const { mac: s } of i) if (gF(s)) return s;
		}
	}
	throw new Error("Unable to retrieve mac address (unexpected format)");
}
function vF(t) {
	try {
		const e = wF();
		return fF("sha256").update(e, "utf8").digest("hex");
	} catch (e) {
		return t(e), pF();
	}
}
D0(), I0(), qs(), qs();
import * as Ms from "path";
import * as Fs from "fs";
async function d3({
	userLocale: t,
	osLocale: e,
	userDataPath: i,
	commit: s,
	nlsMetadataPath: r,
}) {
	if (
		(Fe("code/willGenerateNls"),
		process.env.VSCODE_DEV || t === "pseudo" || t.startsWith("en") || !s || !i)
	)
		return dl(t, e, r);
	try {
		const n = await yF(i);
		if (!n) return dl(t, e, r);
		const o = bF(n, t);
		if (!o) return dl(t, e, r);
		const a = n[o],
			c = a?.translations?.vscode;
		if (
			!a ||
			typeof a.hash != "string" ||
			!a.translations ||
			typeof c != "string" ||
			!(await s0(c))
		)
			return dl(t, e, r);
		const l = `${a.hash}.${o}`,
			u = Ms.join(i, "clp", l),
			d = Ms.join(u, s),
			f = Ms.join(d, "nls.messages.json"),
			p = Ms.join(u, "tcf.json"),
			v = Ms.join(u, "corrupted.info");
		(await s0(v)) &&
			(await Fs.promises.rm(u, { recursive: !0, force: !0, maxRetries: 3 }));
		const g = {
			userLocale: t,
			osLocale: e,
			resolvedLanguage: o,
			defaultMessagesFile: Ms.join(r, "nls.messages.json"),
			languagePack: {
				translationsConfigFile: p,
				messagesFile: f,
				corruptMarkerFile: v,
			},
			locale: t,
			availableLanguages: { "*": o },
			_languagePackId: l,
			_languagePackSupport: !0,
			_translationsConfigFile: p,
			_cacheRoot: u,
			_resolvedLanguagePackCoreLocation: d,
			_corruptedFile: v,
		};
		if (await s0(d)) return EF(d).catch(() => {}), Fe("code/didGenerateNls"), g;
		const [, b, y, k] = await Promise.all([
				Fs.promises.mkdir(d, { recursive: !0 }),
				JSON.parse(
					await Fs.promises.readFile(Ms.join(r, "nls.keys.json"), "utf-8"),
				),
				JSON.parse(
					await Fs.promises.readFile(Ms.join(r, "nls.messages.json"), "utf-8"),
				),
				JSON.parse(await Fs.promises.readFile(c, "utf-8")),
			]),
			I = [];
		let C = 0;
		for (const [_, K] of b) {
			const se = k.contents[_];
			for (const xe of K) I.push(se?.[xe] || y[C]), C++;
		}
		return (
			await Promise.all([
				Fs.promises.writeFile(f, JSON.stringify(I), "utf-8"),
				Fs.promises.writeFile(p, JSON.stringify(a.translations), "utf-8"),
			]),
			Fe("code/didGenerateNls"),
			g
		);
	} catch (n) {
		console.error("Generating translation files failed.", n);
	}
	return dl(t, e, r);
}
async function yF(t) {
	const e = Ms.join(t, "languagepacks.json");
	try {
		return JSON.parse(await Fs.promises.readFile(e, "utf-8"));
	} catch {
		return;
	}
}
function bF(t, e) {
	try {
		for (; e; ) {
			if (t[e]) return e;
			const i = e.lastIndexOf("-");
			if (i > 0) e = e.substring(0, i);
			else return;
		}
	} catch (i) {
		console.error("Resolving language pack configuration failed.", i);
	}
}
function dl(t, e, i) {
	return (
		Fe("code/didGenerateNls"),
		{
			userLocale: t,
			osLocale: e,
			resolvedLanguage: "en",
			defaultMessagesFile: Ms.join(i, "nls.messages.json"),
			locale: t,
			availableLanguages: {},
		}
	);
}
async function s0(t) {
	try {
		return await Fs.promises.access(t), !0;
	} catch {
		return !1;
	}
}
function EF(t) {
	const e = new Date();
	return Fs.promises.utimes(t, e, e);
}
fa();
import { createRequire as SF } from "module";
pa();
import * as ji from "@sentry/electron/main";
import kF from "electron";
function xF() {
	try {
		ji.init({
			...bE(),
			environment: kF.app.isPackaged
				? globalThis._VSCODE_PRODUCT_JSON.applicationName
				: "development",
			integrations: [
				ji.sentryMinidumpIntegration(),
				ji.electronContextIntegration(),
				ji.normalizePathsIntegration(),
				ji.additionalContextIntegration(),
				ji.inboundFiltersIntegration(),
				ji.functionToStringIntegration(),
				ji.linkedErrorsIntegration(),
				ji.dedupeIntegration(),
				ji.nodeContextIntegration({ cloudResource: !1 }),
				ji.mainProcessSessionIntegration({ sendOnCreate: !0 }),
			],
		}),
			(Kt().sentry = ji),
			(process.env.CURSOR_TRACE_ID = ji
				.getCurrentScope()
				.getPropagationContext().traceId);
	} catch (t) {
		console.error("Failed to initialize tracing in main process", t);
	}
}
xF();
var Kj = SF(import.meta.url),
	r0 = ar.dirname(aF(import.meta.url));
Fe("code/didStartMain"),
	Fe("code/willLoadMainBundle", { startTime: Math.floor(BM.timeOrigin) }),
	Fe("code/didLoadMainBundle");
var f3 = JM(yi),
	Yj = vF(console.error),
	Qj = yi.dataFolderName ?? ".cursor",
	us = RF(),
	of = PF(us);
us.sandbox && !us["disable-chromium-sandbox"] && !of["disable-chromium-sandbox"]
	? We.enableSandbox()
	: We.commandLine.hasSwitch("no-sandbox") &&
			!We.commandLine.hasSwitch("disable-gpu-sandbox")
		? We.commandLine.appendSwitch("disable-gpu-sandbox")
		: (We.commandLine.appendSwitch("no-sandbox"),
			We.commandLine.appendSwitch("disable-gpu-sandbox")),
	We.commandLine.appendSwitch("force-gpu-mem-available-mb", "1024");
var oa = $0(us, yi.nameShort ?? "code-oss-dev");
if (process.platform === "win32") {
	const t = _0(oa);
	t && da(t);
}
We.setPath("userData", oa);
var p3 = LF();
uF.setApplicationMenu(null),
	Fe("code/willStartCrashReporter"),
	(us["crash-reporter-directory"] ||
		(of["enable-crash-reporter"] && !us["disable-crash-reporter"])) &&
		CF(),
	Fe("code/didStartCrashReporter"),
	f3 && f3.isPortable && We.setAppLogsPath(ar.join(oa, "logs")),
	cF.registerSchemesAsPrivileged([
		{
			scheme: "vscode-webview",
			privileges: {
				standard: !0,
				secure: !0,
				supportFetchAPI: !0,
				corsEnabled: !0,
				allowServiceWorkers: !0,
				codeCache: !0,
			},
		},
		{
			scheme: "vscode-file",
			privileges: {
				secure: !0,
				standard: !0,
				supportFetchAPI: !0,
				corsEnabled: !0,
				codeCache: !0,
			},
		},
	]),
	OF();
var n0 = void 0,
	o0 = g3((We.getPreferredSystemLanguages()?.[0] ?? "en").toLowerCase()),
	fl = NF(of);
if (
	(fl &&
		(n0 = d3({
			userLocale: fl,
			osLocale: o0,
			commit: yi.commit,
			userDataPath: oa,
			nlsMetadataPath: r0,
		})),
	process.platform === "win32" || process.platform === "linux")
) {
	const t = !fl || fl === "qps-ploc" ? "en" : fl;
	We.commandLine.appendSwitch("lang", t);
}
We.once("ready", function () {
	if (us.trace) {
		const t = {
			categoryFilter: us["trace-category-filter"] || "*",
			traceOptions: us["trace-options"] || "record-until-full,enable-sampling",
		};
		hF.startRecording(t).finally(() => m3());
	} else m3();
});
async function m3() {
	Fe("code/mainAppReady");
	try {
		const [, t] = await Promise.all([MF(p3), FF()]);
		await DF(p3, t);
	} catch (t) {
		console.error(t);
	}
}
async function DF(t, e) {
	(process.env.VSCODE_NLS_CONFIG = JSON.stringify(e)),
		(process.env.VSCODE_CODE_CACHE_PATH = t || ""),
		await nF(),
		await Promise.resolve().then(() => (UM(), NM)),
		Fe("code/didRunMainBundle");
}
function PF(t) {
	const e = [
		"disable-hardware-acceleration",
		"force-color-profile",
		"disable-lcd-text",
		"proxy-bypass-list",
	];
	process.platform === "linux" &&
		(e.push("force-renderer-accessibility"), e.push("password-store"));
	const i = ["enable-proposed-api", "log-level", "use-inmemory-secretstorage"],
		s = $F();
	Object.keys(s).forEach((a) => {
		const c = s[a];
		if (e.indexOf(a) !== -1) {
			if (c === !0 || c === "true")
				a === "disable-hardware-acceleration"
					? We.disableHardwareAcceleration()
					: We.commandLine.appendSwitch(a);
			else if (typeof c == "string" && c)
				if (a === "password-store") {
					let l = c;
					(c === "gnome" || c === "gnome-keyring") && (l = "gnome-libsecret"),
						We.commandLine.appendSwitch(a, l);
				} else We.commandLine.appendSwitch(a, c);
		} else if (i.indexOf(a) !== -1)
			switch (a) {
				case "enable-proposed-api":
					Array.isArray(c)
						? c.forEach(
								(l) =>
									l &&
									typeof l == "string" &&
									process.argv.push("--enable-proposed-api", l),
							)
						: console.error(
								"Unexpected value for `enable-proposed-api` in argv.json. Expected array of extension ids.",
							);
					break;
				case "log-level":
					if (typeof c == "string") process.argv.push("--log", c);
					else if (Array.isArray(c))
						for (const l of c) process.argv.push("--log", l);
					break;
				case "use-inmemory-secretstorage":
					c && process.argv.push("--use-inmemory-secretstorage");
					break;
			}
	});
	const r = `CalculateNativeWinOcclusion,PlzDedicatedWorker,${We.commandLine.getSwitchValue("disable-features")}`;
	We.commandLine.appendSwitch("disable-features", r);
	const n = `FontMatchingCTMigration,StandardizedBrowserZoom,${We.commandLine.getSwitchValue("disable-blink-features")}`;
	We.commandLine.appendSwitch("disable-blink-features", n);
	const o = _F(t);
	return o && We.commandLine.appendSwitch("js-flags", o), s;
}
function $F() {
	const t = IF();
	let e;
	try {
		e = k0(Fn.readFileSync(t).toString());
	} catch (i) {
		i && i.code === "ENOENT"
			? AF(t)
			: console.warn(
					`Unable to read argv.json configuration file in ${t}, falling back to defaults (${i})`,
				);
	}
	return e || (e = {}), e;
}
function AF(t) {
	try {
		const e = ar.dirname(t);
		Fn.existsSync(e) || Fn.mkdirSync(e);
		const i = [
			"// This configuration file allows you to pass permanent command line arguments to VS Code.",
			"// Only a subset of arguments is currently supported to reduce the likelihood of breaking",
			"// the installation.",
			"//",
			"// PLEASE DO NOT CHANGE WITHOUT UNDERSTANDING THE IMPACT",
			"//",
			"// NOTE: Changing this file requires a restart of VS Code.",
			"{",
			"	// Use software rendering instead of hardware accelerated rendering.",
			"	// This can help in cases where you see rendering issues in VS Code.",
			'	// "disable-hardware-acceleration": true',
			"}",
		];
		Fn.writeFileSync(
			t,
			i.join(`
`),
		);
	} catch (e) {
		console.error(
			`Unable to create argv.json configuration file in ${t}, falling back to defaults (${e})`,
		);
	}
}
function IF() {
	const t = process.env.VSCODE_PORTABLE;
	if (t) return ar.join(t, "argv.json");
	let e = yi.dataFolderName;
	return (
		process.env.VSCODE_DEV && (e = `${e}-dev`),
		ar.join(qM.homedir(), e, "argv.json")
	);
}
function CF() {
	let t = us["crash-reporter-directory"],
		e = "";
	if (t) {
		if (
			((t = ar.normalize(t)),
			ar.isAbsolute(t) ||
				(console.error(
					`The path '${t}' specified for --crash-reporter-directory must be absolute.`,
				),
				We.exit(1)),
			!Fn.existsSync(t))
		)
			try {
				Fn.mkdirSync(t, { recursive: !0 });
			} catch {
				console.error(
					`The path '${t}' specified for --crash-reporter-directory does not seem to exist or cannot be created.`,
				),
					We.exit(1);
			}
		console.log(
			`Found --crash-reporter-directory argument. Setting crashDumps directory to be '${t}'`,
		),
			We.setPath("crashDumps", t);
	} else {
		const r = yi.appCenter;
		if (r) {
			const n = process.platform === "win32",
				o = process.platform === "linux",
				a = process.platform === "darwin",
				c = of["crash-reporter-id"];
			if (
				c &&
				/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(
					c,
				)
			) {
				if (n)
					switch (process.arch) {
						case "x64":
							e = r["win32-x64"];
							break;
						case "arm64":
							e = r["win32-arm64"];
							break;
					}
				else if (a)
					if (yi.darwinUniversalAssetId) e = r["darwin-universal"];
					else
						switch (process.arch) {
							case "x64":
								e = r.darwin;
								break;
							case "arm64":
								e = r["darwin-arm64"];
								break;
						}
				else o && (e = r["linux-x64"]);
				e = e.concat("&uid=", c, "&iid=", c, "&sid=", c);
				const u = process.argv,
					d = u.indexOf("--");
				d === -1
					? u.push("--crash-reporter-id", c)
					: u.splice(d, 0, "--crash-reporter-id", c);
			}
		}
	}
	const i =
			(yi.crashReporter ? yi.crashReporter.productName : void 0) ||
			yi.nameShort,
		s =
			(yi.crashReporter ? yi.crashReporter.companyName : void 0) || "Anysphere";
	lF.start({
		companyName: s,
		productName: process.env.VSCODE_DEV ? `${i} Dev` : i,
		submitURL: e,
		uploadToServer: !1,
		ignoreSystemCrashHandler: !1,
		extra: { platform: process.platform },
		compress: !0,
	});
}
function _F(t) {
	const e = [];
	return (
		t["js-flags"] && e.push(t["js-flags"]), e.length > 0 ? e.join(" ") : null
	);
}
function RF() {
	return (0, oF.default)(process.argv, {
		string: ["user-data-dir", "locale", "js-flags", "crash-reporter-directory"],
		boolean: ["disable-chromium-sandbox"],
		default: { sandbox: !0 },
		alias: { "no-sandbox": "sandbox" },
	});
}
function OF() {
	const t = [];
	(globalThis.macOpenFiles = t),
		We.on("open-file", function (s, r) {
			t.push(r);
		});
	const e = [],
		i = function (s, r) {
			s.preventDefault(), e.push(r);
		};
	We.on("will-finish-launching", function () {
		We.on("open-url", i);
	}),
		(globalThis.getOpenUrls = function () {
			return We.removeListener("open-url", i), e;
		});
}
function LF() {
	if (process.argv.indexOf("--no-cached-data") > 0 || process.env.VSCODE_DEV)
		return;
	const t = yi.commit;
	if (t) return ar.join(oa, "CachedData", t);
}
async function MF(t) {
	if (typeof t == "string")
		try {
			return await Fn.promises.mkdir(t, { recursive: !0 }), t;
		} catch {}
}
function g3(t) {
	if (t.startsWith("zh")) {
		const e = t.split("-")[1];
		return ["hans", "cn", "sg", "my"].includes(e) ? "zh-cn" : "zh-tw";
	}
	return t;
}
async function FF() {
	const t = n0 ? await n0 : void 0;
	if (t) return t;
	let e = We.getLocale();
	return e
		? ((e = g3(e.toLowerCase())),
			d3({
				userLocale: e,
				osLocale: o0,
				commit: yi.commit,
				userDataPath: oa,
				nlsMetadataPath: r0,
			}))
		: {
				userLocale: "en",
				osLocale: o0,
				resolvedLanguage: "en",
				defaultMessagesFile: ar.join(r0, "nls.messages.json"),
				locale: "en",
				availableLanguages: {},
			};
}
function NF(t) {
	const e = us.locale;
	return e
		? e.toLowerCase()
		: typeof t?.locale == "string"
			? t.locale.toLowerCase()
			: void 0;
}

//# sourceMappingURL=https://cursor-sourcemaps.s3.amazonaws.com/sourcemaps/7b3e0d45d4f952938dbd8e1e29c1b17003198480/core/main.js.map
